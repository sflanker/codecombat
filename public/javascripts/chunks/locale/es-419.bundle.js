/*! hash:ae6a15474fa7d9a1f9f8, chunkhash:feadac42b2f7e7f496d4, name:locale/es-419, filebase:es-419.bundle.js, query:, file:javascripts/chunks/locale/es-419.bundle.js */
webpackJsonp([60],{

/***/ 225:
/***/ (function(module, exports) {

eval("module.exports = {\n  nativeDescription: \"Español (América Latina)\",\n  englishDescription: \"Spanish (Latin America)\",\n  translation: {\n    new_home: {\n      slogan: \"El juego más interesante para aprender programación.\",\n      classroom_edition: \"Versión para el Aula:\",\n      learn_to_code: \"Aprende a programar:\",\n      play_now: \"Jugar Ahora\",\n      im_a_teacher: \"Soy un Maestro\",\n      im_a_student: \"Soy un Estudiante\",\n      learn_more: \"Aprender más\",\n      classroom_in_a_box: \"Un aula prediseñada para enseñar informática.\",\n      codecombat_is: \"CodeCombat es una plataforma para que los estudiantes aprendan informática mientras están jugando un juego de verdad.\",\n      our_courses: \"Nuestros cursos fueron probados especificamente para destacarse en el aula, incluso con maestros con poca o ninguna experiencia previa en programación.\",\n      watch_how: \"Observa como CodeCombat está transformando la manera en que la gente aprende informática.\",\n      top_screenshots_hint: \"Los estudiantes escriben código y ven sus cambios actualizarse en tiempo real\",\n      designed_with: \"Diseñado teniendo en cuenta a los maestros\",\n      real_code: \"Escritura real de código\",\n      from_the_first_level: \"desde el primer nivel\",\n      getting_students: \"Conseguir que los estudiantes escriban código lo más pronto posible es fundamental para que aprendan la sintaxis y la estructura apropiada.\",\n      educator_resources: \"Recursos para el educador\",\n      course_guides: \"y guías de curso\",\n      teaching_computer_science: \"Enseñar informática no requiere un título costoso, porque proporcionamos herramientas para ayudar a educadores con cualquier conocimiento previo.\",\n      accessible_to: \"Comprensible para\",\n      everyone: \"todos\",\n      democratizing: \"Democratizar el proceso de aprender a programar es la esencia de nuestra filosofía. Todos deberían poder aprender a programar\",\n      forgot_learning: \"Creo que ellos en realidad olvidaron de que estaban aprendiendo algo.\",\n      wanted_to_do: \"Programar es algo que siempre quise hacer, y que nunca pensé que sería capaz de aprenderlo en la escuela .\",\n      why_games: \"¿Por qué el aprendizaje mediante juegos es importante?\",\n      games_reward: \"Los juegos recompensan el esfuerzo productivo.\",\n      encourage: \"El juego es un medio que incentiva la interacción, el descubrimiento, y la prueba-error. Un buen juego desafía al jugador a dominar habilidades con el paso del tiempo, que es un proceso crítico similar al que los estudiantes atraviesan mientran aprenden\",\n      excel: \"Los juegos se destacan en recompensar el\",\n      struggle: \"esfuerzo productivo\",\n      kind_of_struggle: \"el tipo de esfuerzo que se traduce en aprendizaje que interesa y \",\n      motivating: \"que motiva\",\n      not_tedious: \"no tedioso.\",\n      gaming_is_good: \"Los estudios sugieren que jugar es bueno para el cerebro de los niños (¡es verdad!)\",\n      game_based: \"Cuando los sistemas de aprendizaje basados en juegos son\",\n      compared: \"comparados\",\n      conventional: \"con los métodos de evaluación convencionales, la diferencia es clara: los juegos son mejores al ayudar a los estudiantes a retener el conocimiento, a concentrarse y\",\n      perform_at_higher_level: \"a desempeñarse con un mayor nivel de éxito\",\n      feedback: \"Los juegos también proveen retroalimentación en tiempo real que permite a los estudiantes ajustar su camino a la solución y entender conceptos de forma más holística, en lugar de estar limitados solamente a respuestas 'correctas' e 'incorrectas'\",\n      real_game: \"Un juego de verdad, jugado con código auténtico.\",\n      great_game: \"Un gran juego es más que solo medallas y logros - se trata sobre una travesía del jugador, acertijos bien diseñados, y la habilidad de abordar desafios con voluntad y confianza.\",\n      agency: \"CodeCombat es un juego que ofrece a los jugadores esa voluntad y confianza mediante nuestro motor de código robusto, que ayuda tanto a principiantes como a estudiantes avanzados por igual a escribir código correcto y válido.\",\n      request_demo_title: \"Invita a tus estudiantes hoy!\",\n      request_demo_subtitle: \"Solicitar una demostración y empieza a jugar con tus estudiantes en menos de una hora.\",\n      get_started_title: \"Configure su clase hoy\",\n      get_started_subtitle: \"Prepare su clase, agregue cuentas de estudiantes y siga su progreso a medida que aprenden a programar.\",\n      request_demo: \"Solicitar un Demo\",\n      setup_a_class: \"Configurar una Clase\",\n      have_an_account: \"¿Ya tienes una cuenta?\",\n      logged_in_as: \"Estás actualmente conectado como\",\n      computer_science: \"Cursos de informática para todas las edades\",\n      ffa: \"Gratis para todos los estudiantes\",\n      coming_soon: \"¡Proximamente!\",\n      courses_available_in: \"Los cursos están disponibles en JavaScript, Python, y Java (¡proximamente!)\",\n      boast: \"Cuenta con acertijos lo suficiente complejos como para fascinar a jugadores y programadores por igual.\",\n      winning: \"Una combinación ganadora entre un juego de rol y una tarea sobre programación que consigue hacer de la educación amigable y disfrutable para los niños.\",\n      run_class: \"Todo lo que necesitas para organizar una clase de informática en tu escuela hoy mismo, sin necesidad de ningún conocimiento previo de informática.\",\n      goto_classes: \"Ir a mis clases\",\n      view_profile: \"Ver mi perfíl\",\n      view_progress: \"Ver mi progreso\",\n      go_to_courses: \"Ir a mis cursos\",\n      want_coco: \"¿Quisiera CodeCombat en su escuela?\"\n    },\n    nav: {\n      map: \"Mapa\",\n      play: \"Jugar\",\n      community: \"Comunidad\",\n      courses: \"Cursos\",\n      blog: \"Blog\",\n      forum: \"Foro\",\n      account: \"Cuenta\",\n      my_account: \"Mi Cuenta\",\n      profile: \"Perfil\",\n      home: \"Inicio\",\n      contribute: \"Contribuir\",\n      legal: \"Legal\",\n      privacy: \"Privacidad\",\n      about: \"Acerca\",\n      contact: \"Contacto\",\n      twitter_follow: \"Seguir\",\n      my_classrooms: \"Clases Mías\",\n      my_courses: \"Cursos Mías\",\n      careers: \"Carreras\",\n      facebook: \"Facebook\",\n      twitter: \"Twitter\",\n      create_a_class: \"Crear una Clase\",\n      other: \"Otro\",\n      learn_to_code: \"¡Aprender a programar!\",\n      toggle_nav: \"Cambia navigación\",\n      schools: \"Escuelas\",\n      get_involved: \"Participa\",\n      open_source: \"Código Libre (GitHub)\",\n      support: \"Soporte\",\n      faqs: \"FAQs\",\n      help_pref: \"¿Necesitas ayuda? Envianos un correó electronico!\",\n      help_suff: \"y te contactaremos pronto\",\n      resource_hub: \"Centro de recursos\"\n    },\n    modal: {\n      close: \"Cerrar\",\n      okay: \"OK\"\n    },\n    not_found: {\n      page_not_found: \"Página no encontrada\"\n    },\n    diplomat_suggestion: {\n      title: \"¡Ayuda a traducir CodeCombat!\",\n      sub_heading: \"Necesitamos tus habilidades de idioma.\",\n      pitch_body: \"Desarrollamos CodeCombat en inglés, pero ya tenemos jugadores de todo el mundo. Muchos de ellos quieren jugar en español pero no hablan inglés, así que si puedes hablar ambos, por favor considera registrarte pare ser un Diplomático y ayudar a traducir tanto el sitio de CodeCombat como todos los niveles al español.\",\n      missing_translations: \"Hasta que podamos traducir todo al español, verás inglés cuando el español no esté disponible.\",\n      learn_more: \"Aprende más sobre ser un Diplomático\",\n      subscribe_as_diplomat: \"Suscríbete como un Diplomático\"\n    },\n    play: {\n      play_as: \"Jugar Como \",\n      compete: \"¡Competir!\",\n      spectate: \"Observar\",\n      players: \"Jugadores\",\n      hours_played: \"horas jugadas\",\n      items: \"Objetos\",\n      unlock: \"Desbloquear\",\n      confirm: \"Confirmar\",\n      owned: \"Adquirido\",\n      locked: \"Bloqueado\",\n      available: \"Disponible\",\n      skills_granted: \"Habilidades concedidas\",\n      heroes: \"Héroes\",\n      achievements: \"Logros\",\n      settings: \"Configuración\",\n      poll: \"Encuestas\",\n      next: \"Próximo\",\n      change_hero: \"Cambiar héroe\",\n      buy_gems: \"Comprar gemas\",\n      subscribers_only: \"¡Solo para suscriptores!\",\n      subscribe_unlock: \"¡Suscríbete para desbloquear!\",\n      subscriber_heroes: \"¡Suscríbete ahora para debloquear inmediatamente a Amara, Hushbaum y Hattori!\",\n      subscriber_gems: \"¡Suscríbete ahora para comprar este héroe con gemas!\",\n      anonymous: \"Jugador Anónimo\",\n      level_difficulty: \"Dificultad: \",\n      awaiting_levels_adventurer_prefix: \"Nosotros libreamos nuevos niveles cada semana\",\n      awaiting_levels_adventurer: \"Registrate como un aventurero\",\n      awaiting_levels_adventurer_suffix: \"para ser el primero en jugar nuevos niveles.\",\n      adjust_volume: \"Ajustar el volumen\",\n      campaign_multiplayer: \"Arenas Multijugador\",\n      campaign_multiplayer_description: \"... en las que programas cara a cara contra otros jugadores.\",\n      brain_pop_done: \"!Has derrotado a los Ogros programando! ¡Ganaste!\",\n      brain_pop_challenge: \"¡Desafiate a jugar de nuevo usando otro lenguaje de programación!\",\n      replay: \"Repetir\",\n      back_to_classroom: \"Volver al aula\"\n    },\n    code: {\n      \"if\": \"si\",\n      \"else\": \"de lo contrario\",\n      elif: \"o si\",\n      \"while\": \"mientras\",\n      loop: \"ciclo\",\n      \"for\": \"para\",\n      \"break\": \"interrumpir\",\n      \"continue\": \"continuar\",\n      pass: \"pasar\",\n      \"return\": \"regresar\",\n      then: \"entonces\",\n      \"do\": \"hacer\",\n      end: \"fin\",\n      \"function\": \"función\",\n      def: \"define\",\n      \"var\": \"variable\",\n      self: \"sí mismo\",\n      hero: \"héroe\",\n      \"this\": \"este\",\n      or: \"o\",\n      \"||\": \"o\",\n      and: \"y\",\n      \"&&\": \"y\",\n      not: \"no\",\n      \"!\": \"no\",\n      \"=\": \"asignar\",\n      \"==\": \"igual a\",\n      \"===\": \"estrictamente igual a\",\n      \"!=\": \"no igual a\",\n      \"!==\": \"no estrictamente igual a\",\n      \">\": \"mayor que\",\n      \">=\": \"mayor o igual a\",\n      \"<\": \"menor que\",\n      \"<=\": \"menor o igual a\",\n      \"*\": \"multiplicado por\",\n      \"/\": \"dividido por\",\n      \"+\": \"más\",\n      \"-\": \"menos\",\n      \"+=\": \"añade y asigna\",\n      \"-=\": \"substrae y asigna\",\n      True: \"Verdadero\",\n      \"true\": \"verdadero\",\n      False: \"Falso\",\n      \"false\": \"falso\",\n      undefined: \"indefinido\",\n      \"null\": \"nulo\",\n      nil: \"nada\",\n      None: \"Ninguno\"\n    },\n    share_progress_modal: {\n      blurb: \"¡Estás haciendo un gran progreso! Cuéntale a tus padres cuánto has aprendido con CodeCombat.\",\n      email_invalid: \"Dirección de Email inválida.\",\n      form_blurb: \"¡Escribe su email debajo y les enseñaremos!\",\n      form_label: \"Dirección de Email\",\n      placeholder: \"dirección de email\",\n      title: \"Excelente Trabajo, Aprendiz\"\n    },\n    login: {\n      sign_up: \"Crear Cuenta\",\n      email_or_username: \"Email o Nombre de usuario\",\n      log_in: \"Entrar\",\n      logging_in: \"Entrando\",\n      log_out: \"Salir\",\n      forgot_password: \"¿Olvidaste la contraseña?\",\n      finishing: \"Finalizando\",\n      sign_in_with_facebook: \"Registrarse con Facebook\",\n      sign_in_with_gplus: \"Registrarse con G+\",\n      signup_switch: \"¿Quieres crear una cuenta?\"\n    },\n    signup: {\n      create_student_header: \"Crear Cuenta de Estudiante\",\n      create_teacher_header: \"Crear Cuenta de Maestro\",\n      create_individual_header: \"Crear Cuenta Individual\",\n      email_announcements: \"Recibe noticias por email\",\n      creating: \"Creando Cuenta...\",\n      sign_up: \"Registrarse\",\n      log_in: \"Inicia sesión con tu contraseña\",\n      required: \"Necesitas entrar a tu cuenta antes de continuar.\",\n      login_switch: \"¿Ya tienes una cuenta?\",\n      optional: \"opcional\",\n      connected_gplus_header: \"Te has conectado exitosamente a travez de Google+!\",\n      connected_gplus_p: \"Termina el registro para que inicies sesión con tu cuenta de Google+.\",\n      connected_facebook_header: \"Te has conectado exitosamente a travez de Facebook!\",\n      connected_facebook_p: \"Termina el registro para que inicies sesión con tu cuenta de Facebook.\",\n      hey_students: \"Estudiante, ingresa el coódigo de clase de tu maestro.\",\n      birthday: \"Cumpleaños\",\n      account_exists: \"Este email ya esta en uso:\",\n      sign_in: \"Iniciar Sesión\",\n      email_good: \"Tu email se ve bien!\",\n      name_taken: \"Ese nombre de usuario ya esta en uso! Intenta {{suggestedName}}?\",\n      name_available: \"Nombre de usuario disponible!\",\n      name_is_email: \"Tu email no puede ser tu nombre de usuario\",\n      choose_type: \"Elige el tipo de cuenta:\",\n      teacher_type_1: \"Enseña a como programar con CodeCombat!\",\n      signup_as_teacher: \"Iniciar sesión como Maestro\",\n      signup_as_student: \"Iniciar sesión como Estudiante\"\n    },\n    recover: {\n      recover_account_title: \"recuperar cuenta\",\n      send_password: \"Enviar contraseña de recuperación\",\n      recovery_sent: \"Correo de recuperación enviado.\"\n    },\n    items: {\n      primary: \"Primario\",\n      secondary: \"Secundario\",\n      armor: \"Armadura\",\n      accessories: \"Accesorios\",\n      misc: \"Misceláneo\",\n      books: \"Libros\"\n    },\n    common: {\n      back: \"Atrás\",\n      coming_soon: \"¡Próximamente!\",\n      \"continue\": \"Continuar\",\n      next: \"Siguiente\",\n      default_code: \"Código predeterminado\",\n      loading: \"Cargando...\",\n      overview: \"Vista global\",\n      processing: \"Procesando...\",\n      solution: \"Solución\",\n      table_of_contents: \"Tabla de contenidos\",\n      intro: \"Intro\",\n      saving: \"Guardando...\",\n      sending: \"Enviando...\",\n      send: \"Enviar\",\n      sent: \"Enviado\",\n      cancel: \"Cancelar\",\n      save: \"Guardar\",\n      publish: \"Publicar\",\n      create: \"Crear\",\n      fork: \"Bifurcar\",\n      play: \"Jugar\",\n      retry: \"Reintentar\",\n      actions: \"Acciones\",\n      info: \"Info\",\n      help: \"Ayuda\",\n      watch: \"Seguir\",\n      unwatch: \"No seguir\",\n      submit_patch: \"Enviar Parche\",\n      submit_changes: \"Enviar cambios\",\n      save_changes: \"Guardar cambios\",\n      required_field: \"Requisito necesario\"\n    },\n    general: {\n      and: \"y\",\n      name: \"Nombre\",\n      date: \"Fecha\",\n      body: \"Cuerpo\",\n      version: \"Versión\",\n      pending: \"Pendiente\",\n      accepted: \"Aceptado\",\n      rejected: \"Rechazado\",\n      withdrawn: \"Retirado\",\n      accept: \"Aceptar\",\n      reject: \"Rechazar\",\n      withdraw: \"Retirar\",\n      submitter: \"Emisor\",\n      submitted: \"Enviado\",\n      commit_msg: \"Enviar mensaje\",\n      version_history: \"Historial de Versiones\",\n      version_history_for: \"Historial de Versiones para: \",\n      select_changes: \"Selcciona dos cambios abajo para ver la diferencia\",\n      undo_prefix: \"Deshacer\",\n      undo_shortcut: \"(Ctrl+Z)\",\n      redo_prefix: \"Rehacer\",\n      redo_shortcut: \"(Ctrl+Shift+Z)\",\n      play_preview: \"Mira el avance del nivel\",\n      result: \"Resultado\",\n      results: \"Resultados\",\n      description: \"Descripción\",\n      or: \"o\",\n      subject: \"Asunto\",\n      email: \"Email\",\n      password: \"Contraseña\",\n      confirm_password: \"Confirme Contraseña\",\n      message: \"Mensaje\",\n      code: \"Código\",\n      ladder: \"Escalera\",\n      when: \"Cuando\",\n      opponent: \"Oponente\",\n      rank: \"Posición\",\n      score: \"Puntuación\",\n      win: \"Ganada\",\n      loss: \"Perdida\",\n      tie: \"Empate\",\n      easy: \"Fácil\",\n      medium: \"Medio\",\n      hard: \"Difícil\",\n      player: \"Jugador\",\n      player_level: \"Nivel\",\n      warrior: \"Guerrero\",\n      ranger: \"Guardabosques\",\n      wizard: \"Mago\",\n      first_name: \" Nombre de pila\",\n      last_name: \"Apellido\",\n      username: \"Nombre de usuario\",\n      contact_us: \"Contáctenos\",\n      learn_more: \"Aprende Más\"\n    },\n    units: {\n      second: \"segundo\",\n      seconds: \"segundos\",\n      minute: \"minuto\",\n      minutes: \"minutos\",\n      hour: \"hora\",\n      hours: \"horas\",\n      day: \"día\",\n      days: \"días\",\n      week: \"semana\",\n      weeks: \"semanas\",\n      month: \"mes\",\n      months: \"meses\",\n      year: \"año\",\n      years: \"años\"\n    },\n    play_level: {\n      back_to_map: \"Volver al Mapa\",\n      directions: \"Instrucciones\",\n      edit_level: \"Editar Nivel\",\n      explore_codecombat: \"Explorar CodeCombat\",\n      finished_hoc: \"He terminado con mi Hora of Código\",\n      get_certificate: \"¡Obtén tu certificado!\",\n      level_complete: \"Nivel completo\",\n      completed_level: \"Nivel Completado:\",\n      course: \"Curso:\",\n      done: \"Listo\",\n      next_level: \"Siguiente Nivel\",\n      next_game: \"Siguiente juego\",\n      languages: \"Lenguajes\",\n      programming_language: \"Lenguajes de programación\",\n      show_menu: \"Mostrar menú de juego\",\n      home: \"Inicio\",\n      level: \"Nivel\",\n      skip: \"Omitir\",\n      game_menu: \"Menú del Juego\",\n      restart: \"Reiniciar\",\n      goals: \"Objetivos\",\n      goal: \"Objetivo\",\n      running: \"Andando...\",\n      success: \"¡Éxito!\",\n      incomplete: \"Incompleto\",\n      timed_out: \"Acabó el tiempo\",\n      failing: \"Fallando\",\n      reload: \"Recargar\",\n      reload_title: \"¿Recargar Todo el Código?\",\n      reload_really: \"¿Estás seguro de que quieres empezar este nivel desde el principio?\",\n      reload_confirm: \"Recargar Todo\",\n      test_level: \"Probar Nivel\",\n      victory: \"Victoria\",\n      victory_title_prefix: \"¡\",\n      victory_title_suffix: \"¡Completo!\",\n      victory_sign_up: \"Regístrate para recibir actualizaciones\",\n      victory_sign_up_poke: \"¿Quieres recibir las ultimas noticias por correo? ¡Crea una cuenta gratuita y te mantendremos informado!\",\n      victory_rate_the_level: \"¿Cómo de divertido estuvo este nivel?\",\n      victory_return_to_ladder: \"Volver a la escalera\",\n      victory_saving_progress: \"Guardando Progreso\",\n      victory_go_home: \"Ir al Inicio\",\n      victory_review: \"¡Cuéntanos más!\",\n      victory_review_placeholder: \"¿Cómo estuvo el nivel?\",\n      victory_hour_of_code_done: \"¿Has acabado?\",\n      victory_hour_of_code_done_yes: \"¡Si, he terminado con mi Hora de Código!\",\n      victory_experience_gained: \"XP Ganada\",\n      victory_gems_gained: \"Gemas Ganadas\",\n      victory_new_item: \"Objeto Nuevo\",\n      victory_new_hero: \"Nuevo Héroe\",\n      victory_viking_code_school: \"¡Changos macacos!, el nivel que acabas de pasar era dificil! Si todavía no eres un desarrollador de software, deberías serlo. Acabas de conseguir una aceptación por vía rápida con la Escuela Vikinga de Có, donde tú puedes llevar tus habilidades al siguiente nivel y convertirteen un desarrollador web profesional en 14 semanas.\",\n      victory_become_a_viking: \"Conviértete en un Vikingo\",\n      victory_no_progress_for_teachers: \"El progreso no es guardado para maestros. Pero puede añadir cuenta de estudiante a su aula, por su mismo.\",\n      tome_cast_button_run: \"Ejecutar\",\n      tome_cast_button_running: \"Ejecutando\",\n      tome_cast_button_ran: \"Ejecutado\",\n      tome_submit_button: \"Enviar\",\n      tome_reload_method: \"Recargar código original para este método\",\n      tome_available_spells: \"Hechizos Disponibles\",\n      tome_your_skills: \"Tus habilidades\",\n      hints: \"Pistas\",\n      hints_title: \"Pistas {{number}}\",\n      code_saved: \"Código Guardado\",\n      skip_tutorial: \"Saltar (esc)\",\n      keyboard_shortcuts: \"Atajos de teclado\",\n      loading_start: \"Iniciar nivel\",\n      problem_alert_title: \"Revisa tu código\",\n      time_current: \"Ahora:\",\n      time_total: \"Max:\",\n      time_goto: \"Ir a:\",\n      non_user_code_problem_title: \"No se puede cargar el nivel\",\n      infinite_loop_title: \"Ciclo infinito detectado\",\n      infinite_loop_description: \"El código inicial para construir el mundo no terminó de ejecutarse. Probablemente es muy lento o tiene un loop infinito. O puede ser un bug. Puedes tratar ejecutando este código nuevamente o reiniciar el código a su estado por defecto. Si eso no lo arregla, haznos saber.\",\n      check_dev_console: \"Tú puedes también abrir la consola de desarrollo para ver que puede salir mal.\",\n      check_dev_console_link: \"(instrucciones)\",\n      infinite_loop_try_again: \"Intentar nuevamente\",\n      infinite_loop_reset_level: \"Reiniciar Nivel\",\n      infinite_loop_comment_out: \"Comenta Mi Código\",\n      tip_toggle_play: \"Activa jugar/pausa con Ctrl+P.\",\n      tip_scrub_shortcut: \"Ctrl+[ y Ctrl+] para rebobinar y avanzar rápido.\",\n      tip_guide_exists: \"Haga click en la guía en la parte superior de la página para obtener información útil\",\n      tip_open_source: \"¡CodeCombat es 100% código abierto!\",\n      tip_tell_friends: \"¿Disfrutando de CodeCombat? ¡Cuéntale a tus amigos acerca de nosotros!\",\n      tip_beta_launch: \"CodeCombat lanzó su beta en Octubre del 2013.\",\n      tip_think_solution: \"Piensa en la solución, no en el problema.\",\n      tip_theory_practice: \"En teoría, no hay diferencia entre la teoría y la práctica. Pero en la práctica, si la hay. - Yogi Berra\",\n      tip_error_free: \"Hay dos formas de escribir programas libres de errores; sólo la tercera funciona. - Alan Perlis\",\n      tip_debugging_program: \"Si depurar es el proceso de remover errores, entonces programar debe ser el proceso de colocarlos. - Edsger W. Dijkstra\",\n      tip_forums: \"¡Dirígite a los foros y dinos lo que piensas!\",\n      tip_baby_coders: \"En el futuro, incluso los bebés serán Archimagos.\",\n      tip_morale_improves: \"La carga continuará hasta que la moral mejore.\",\n      tip_all_species: \"Creemos en la igualdad de oportunidades para aprender a programar para todas las especies.\",\n      tip_reticulating: \"Espinas reticulantes.\",\n      tip_harry: \"Eres un Hechicero, \",\n      tip_great_responsibility: \"Con una gran habilidad de hacer código viene una gran responsabilidad de depuración.\",\n      tip_munchkin: \"Si no comes tus verduras, un enano vendrá por ti mientras estés dormido.\",\n      tip_binary: \"Sólo hay 10 tipos de personas en el mundo: aquellas que entienden binario y las que no.\",\n      tip_commitment_yoda: \"Un programador debe tener el compromiso más profundo, la mente más seria. ~ Yoda\",\n      tip_no_try: \"Haz. O no hagas. No hay intento. - Yoda\",\n      tip_patience: \"Paciencia debes tener, joven Padawan. - Yoda\",\n      tip_documented_bug: \"Un error documentado no es un error; es una característica.\",\n      tip_impossible: \"Siempre parece imposible hasta que se hace. - Nelson Mandela\",\n      tip_talk_is_cheap: \"Hablar es barato. Muéstrame el código. - Linus Torvalds\",\n      tip_first_language: \"La cosa más desastrosa que puedes aprender es tu primer lenguaje de programación. - Alan Kay\",\n      tip_hardware_problem: \"P: ¿Cuántos programadores son necesarios para cambiar una bombilla eléctrica?  R: Ninguno, es un problema de hardware.\",\n      tip_hofstadters_law: \"Ley de Hofstadter: Siempre toma más tiempo del que esperas, incluso cuando tienes en cuenta la ley de Hofstadter.\",\n      tip_premature_optimization: \"La optimización prematura es la raíz de la maldad. - Donald Knuth\",\n      tip_brute_force: \"Cuando tengas duda, usa la fuerza bruta. - Ken Thompson\",\n      tip_extrapolation: \"Solo hay dos tipos de personas: Esas que pueden extrapolar desde información incompleta...\",\n      tip_superpower: \"Programar es lo más cercano que tenemos a superpoderes.\",\n      tip_control_destiny: \"En el Open Source real, tú tienes el derecho de controlar tu propio destino. - Linus Torvalds\",\n      tip_no_code: \"Ningún código es más rápido que nada de código.\",\n      tip_code_never_lies: \"El código nunca miente, los comentarios a veces sí. — Ron Jeffries\",\n      tip_reusable_software: \"Antes de que el software sea reusable, primero tiene que ser usable.\",\n      tip_optimization_operator: \"Cada lenguaje tiene un operador de optimización. En la mayoría de ellos, ese operador es ‘//’\",\n      tip_lines_of_code: \"Medir el progreso en la programación en líneas de código es como medir el progreso de construcción de una aeronave por su peso. — Bill Gates\",\n      tip_source_code: \"Quisiera cambiar el mundo, pero no me dan el código fuente.\",\n      tip_javascript_java: \"Java es a Javascript lo mismo que Comer es a Comercial. - Chris Heilmann\",\n      tip_move_forward: \"Hagas lo que hagas, siempre sigue hacia delante. - Martin Luther King Jr.\",\n      tip_google: \"¿Tienes un problema que no puedes resolver? ¡Googléalo!\",\n      tip_adding_evil: \"Agregando una pizca de maldad.\",\n      tip_hate_computers: \"Esa es la razón por la cual la gente piensa que odia las computadoras. Lo que ellos odian de verdad, es los pesimos programadores. - Larry Niven\",\n      tip_open_source_contribute: \"¡Tú puedes ayudar a CodeCombat a mejorar!\",\n      tip_recurse: \"Iterar es humano, recursar es divino. - L. Peter Deutsch\",\n      tip_free_your_mind: \"Tienes que dejar ir todo, Neo. Miedo, duda, e incredulidad. Libera tu mente. - Morpheus\",\n      tip_strong_opponents: \"Hasta los oponentes mas fuertes siempre tienen una debilidad. - Itachi Uchiha\",\n      tip_paper_and_pen: \"Antes de comenzar a codificar, siempre puedes planear con una hoja de papel y un lapicero.\",\n      tip_solve_then_write: \"Primero, resuelve el problema. Entonces, escribe el código. - John Johnson\",\n      tip_compiler_ignores_comments: \"A veces pienso que el compilador ignora mis comentarios.\",\n      tip_understand_recursion: \"La única manera de entender la recursividad es entender la recursividad.\",\n      tip_life_and_polymorphism: \"El Open Source es como una estructura heterogénea totalmente polimórfica: Todos los tipos son bienvenidos.\",\n      tip_mistakes_proof_of_trying: \"Errores en tu código son solo evidencia de que estas intentando.\",\n      tip_adding_orgres: \"Redondendo ogres.\",\n      tip_sharpening_swords: \"Afilando las espadas.\",\n      tip_ratatouille: \"No debes dejar que nadie defina tus límites a causa de donde venas. Tu único límite es tu alma. - Gusteau, Ratatouille\",\n      tip_nemo: \"¿Cuando huye la suerte, sabes que hay que hacer? Sigue nadando, sigue nadando. - Dory, Finding Nemo\",\n      tip_internet_weather: \"Debes moverte al intenet, es genial aquí. Tenemos la oportunidad de vivir dentro donde el clima es siempre sorprendente. - John Green\",\n      tip_nerds: \"A los Nerds se les permite amor cosas, como saltar-arriba-y-abajo-en-la-silla-no-te-puedes-controlar-tu-mismo quiérelo. - John Green\",\n      tip_self_taught: \"Me enseñé a mí mismo el 90% de lo que he aprendido. ¡Y eso es normal! - Hank Green\",\n      tip_luna_lovegood: \"No te preocupes, estas tan cuerdo como yo. - Luna Lovegood\",\n      tip_good_idea: \"La mejor forma de tener una buena idea es tener un montón de ideas. - Linus Pauling\",\n      tip_programming_not_about_computers: \"En las Ciencias de la Computación no es más acerca de computadoras que la astronomía acerca de telescopios. - Edsger Dijkstra\",\n      tip_mulan: \"Si crees que puedes, entonces lo harás. - Mulan\",\n      project_complete: \"¡Proyecto completo!\",\n      share_this_project: \"Comparte este proyecto con familia y amigos:\",\n      ready_to_share: \"¿Listo para publicar tu proyecto?\",\n      click_publish: \"Haz click en \\\"Publicar\\\" para que aparezca en la galería de la clase, a continuación ¡echa un vistazo a lo que construyeron tus compañeros! Puedes volver y seguir trabajando en este proyecto. Cualquier cambio adicional se guardará automáticamente y se compartirá con tus compañeros.\",\n      already_published_prefix: \"Tus cambios se han publicado en la galería de la clase.\",\n      already_published_suffix: \"¡Sigue experimentando y haciendo este proyecto aún mejor, o mira lo que el resto de la clase ha construido! Tus cambios se guardarán automáticamente y se compartirán con tus compañeros.\",\n      view_gallery: \"Ver Galería\",\n      project_published_noty: \"¡Tu nivel ha sido publicado!\",\n      keep_editing: \"Continuar editando\"\n    },\n    game_menu: {\n      inventory_tab: \"Inventario\",\n      save_load_tab: \"Guardar/Cargar\",\n      options_tab: \"Opciones\",\n      guide_tab: \"Guía\",\n      guide_video_tutorial: \"Guía en video\",\n      guide_tips: \"Pistas\",\n      multiplayer_tab: \"Multijugador\",\n      auth_tab: \"Entrar\",\n      inventory_caption: \"Equipar a tu héroe\",\n      choose_hero_caption: \"Elegir héroe, lenguaje\",\n      options_caption: \"Hacer ajustes\",\n      guide_caption: \"Documentos y consejos\",\n      multiplayer_caption: \"¡Jugar con amigos!\",\n      auth_caption: \"Guarda tu progreso.\"\n    },\n    leaderboard: {\n      view_other_solutions: \"Ver la Tabla de Posiciones\",\n      scores: \"Puntajes\",\n      top_players: \"Mejores jugadores\",\n      day: \"Hoy\",\n      week: \"Esta Semana\",\n      all: \"Siempre\",\n      latest: \"Mas reciente\",\n      time: \"Tiempo\",\n      damage_taken: \"Daño Recibido\",\n      damage_dealt: \"Daño Infligido\",\n      difficulty: \"Dificultad\",\n      gold_collected: \"Oro Recolectado\"\n    },\n    inventory: {\n      equipped_item: \"Equipado\",\n      required_purchase_title: \"Requerido\",\n      available_item: \"Disponible\",\n      restricted_title: \"Restringido\",\n      should_equip: \"(doble-click para equipar)\",\n      equipped: \"(equipado)\",\n      locked: \"(bloqueado)\",\n      restricted: \"(restringido en este nivel)\",\n      equip: \"Equipar\",\n      unequip: \"Sacar\"\n    },\n    buy_gems: {\n      few_gems: \"Pocas gemas\",\n      pile_gems: \"Pila de gemas\",\n      chest_gems: \"Cofre de gemas\",\n      purchasing: \"Comprando...\",\n      declined: \"Su tarjeta fue rechazada\",\n      retrying: \"Error del servidor, recargando.\",\n      prompt_title: \"Gemas insuficientes\",\n      prompt_body: \"¿Quieres obtener más?\",\n      prompt_button: \"Entrar al mercado\",\n      recovered: \"Se recuperaron las anteriores compras de gemas. Por favor recarga la página\",\n      price: \"x{{gems}} / mes\",\n      buy_premium: \"Comprar Premium\",\n      purchase: \"Compra\",\n      purchased: \"Comprado\"\n    },\n    earn_gems: {\n      prompt_title: \"Gemas Insuficientes\",\n      prompt_body: \"¡Sigue jugando para ganar más!\"\n    },\n    subscribe: {\n      comparison_blurb: \"Agudiza tus habilidades con la suscripción a CodeCombat!\",\n      must_be_logged: \"Debes iniciar sesión primero. Por favor crea una cuenta o inicia sesión desde el menú superior.\",\n      subscribe_title: \"Suscribirse\",\n      unsubscribe: \"Des-suscribirse\",\n      confirm_unsubscribe: \"Confirmar cancelacion de suscripción\",\n      never_mind: \"Olvidalo, Te sigo queriendo\",\n      thank_you_months_prefix: \"Gracias por tu apoyo en estos ultimos\",\n      thank_you_months_suffix: \"meses.\",\n      thank_you: \"Gracias por apoyar CodeCombat.\",\n      sorry_to_see_you_go: \"¡Sentimos que te vayas! Por favor, haznos saber lo que podríamos haber hecho mejor.\",\n      unsubscribe_feedback_placeholder: \"¿Pero qué hemos hecho?\",\n      stripe_description: \"Suscripción Mensual\",\n      subscription_required_to_play: \"Necesitas una suscripción para jugar este nivel.\",\n      unlock_help_videos: \"Suscríbete para desbloquear todos los video tutoriales.\",\n      personal_sub: \"Suscripción Personal\",\n      loading_info: \"Cargando información de suscripción...\",\n      managed_by: \"Administrado por\",\n      will_be_cancelled: \"Será cancelado en\",\n      currently_free: \"Actualmente tienes una suscripción gratuita\",\n      currently_free_until: \"Actualmente tienes una suscripción gratuita hasta\",\n      was_free_until: \"Tuviste una suscripción gratuita hasta\",\n      managed_subs: \"Suscripciones administradas\",\n      subscribing: \"Suscribiendo...\",\n      current_recipients: \"Recipientes actuales\",\n      unsubscribing: \"Dando de baja...\",\n      subscribe_prepaid: \"Click en suscribirse para utlizar un código prepago\",\n      using_prepaid: \"Usar código prepago para una suscribción mensual\"\n    },\n    choose_hero: {\n      choose_hero: \"Elige tu héroe\",\n      programming_language: \"Lenguaje de programación\",\n      programming_language_description: \"¿Qué lenguaje de programación vas a elegir?\",\n      \"default\": \"por Defecto\",\n      experimental: \"Experimental\",\n      python_blurb: \"Simple pero poderoso.\",\n      javascript_blurb: \"El lenguaje de la web (no es Java).\",\n      coffeescript_blurb: \"JavaScript pero más bonito.\",\n      lua_blurb: \"Lenguaje para Juegos.\",\n      status: \"Estado\",\n      weapons: \"Armas\",\n      weapons_warrior: \"Espada - Corto Alcance, Sin Magia\",\n      weapons_ranger: \"Ballestas, Armas - Largo Alcance, Sin Magia\",\n      weapons_wizard: \"Barita,  - Largo Alcance, Mágico\",\n      attack: \"Daño\",\n      health: \"Salud\",\n      speed: \"Velocidad\",\n      regeneration: \"Regeneración\",\n      range: \"Rango\",\n      blocks: \"Bloqueo\",\n      backstab: \"Apuñala\",\n      skills: \"Habilidades\",\n      attack_1: \"Ofertas\",\n      attack_2: \"de la lista\",\n      attack_3: \"daño de arma.\",\n      health_1: \"Gana\",\n      health_2: \"de la lista\",\n      health_3: \"salud de la armadura.\",\n      speed_1: \"Se mueve a\",\n      speed_2: \"metros por segundo.\",\n      available_for_purchase: \"Disponible para Comprar\",\n      level_to_unlock: \"Nivel para desbloquear:\",\n      restricted_to_certain_heroes: \"Sólo ciertos héroes pueden jugar este nivel.\"\n    },\n    skill_docs: {\n      \"function\": \"función\",\n      method: \"método\",\n      snippet: \"fragmento\",\n      number: \"número\",\n      array: \"arreglo\",\n      object: \"objeto\",\n      string: \"cadena\",\n      writable: \"escribible\",\n      read_only: \"Sólo Lectura\",\n      action: \"Acción\",\n      spell: \"Conjuro\",\n      action_name: \"nombre\",\n      action_cooldown: \"Toma\",\n      action_specific_cooldown: \"Enfriamiento\",\n      action_damage: \"Daño\",\n      action_range: \"Rango\",\n      action_radius: \"Radio\",\n      action_duration: \"Duración\",\n      example: \"Ejemplo\",\n      ex: \"ej\",\n      current_value: \"Valor actual\",\n      default_value: \"Valor por defecto\",\n      parameters: \"Parámetros\",\n      required_parameters: \"Parámetros Requeridos\",\n      optional_parameters: \"Parámetros Opcionales\",\n      returns: \"Devoluciones\",\n      granted_by: \"Concedido por\"\n    },\n    save_load: {\n      granularity_saved_games: \"Guardado\",\n      granularity_change_history: \"Historia\"\n    },\n    options: {\n      general_options: \"Opciones Generales\",\n      volume_label: \"Volúmen\",\n      music_label: \"Música\",\n      music_description: \"Música encendida/apagada.\",\n      editor_config_title: \"Configuración del Editor\",\n      editor_config_livecompletion_label: \"Autocompletado automático\",\n      editor_config_livecompletion_description: \"Despliega sugerencias de autocompletado mientras escribes.\",\n      editor_config_invisibles_label: \"Mostrar Invisibles\",\n      editor_config_invisibles_description: \"Visualiza invisibles tales como espacios o tabulaciones.\",\n      editor_config_indentguides_label: \"Mostrar guías de indentación\",\n      editor_config_indentguides_description: \"Visualiza líneas verticales para ver mejor la indentación.\",\n      editor_config_behaviors_label: \"Comportamientos Inteligentes\",\n      editor_config_behaviors_description: \"Autocompleta corchetes, llaves y comillas.\"\n    },\n    about: {\n      main_title: \"Si queres aprender a programar, necesitas escribir (un montón de) código.\",\n      main_description: \"En CodeCombat, nuestro trabajo es asegurarnos que estás haciendo eso con una sonrisa en tu cara.\",\n      mission_link: \"Misión\",\n      team_link: \"Equipo\",\n      story_link: \"Historia\",\n      press_link: \"Prensa\",\n      mission_title: \"Nuestra misión: hacer accesible la programación para cada estudiante en la Tierra.\",\n      mission_description_1: \"<strong>La programación es mágica</strong>. Es la habilidad de crear cosas desde la pura imaginación. Empezamos CodeCombat para dar a los estudiantes la sensación de poder de la magia en la punta de sus dedos mediante el <strong>tipeo de código</strong>.\",\n      mission_description_2: \"Como resultado, eso les permite tambien aprender más rápido. De una FORMA más rápida. Es como tener una conversación en vez de leer un manual. Queremos llevar esa conversación a todas las escuelas y a <strong>cada estudiante</strong>, porque todos deberían tener la oportunidad de aprender la magia de la programación\",\n      team_title: \"Conoce al equipo de CodeCombat\",\n      team_values: \"Valoramos el diálogo abierto y respetuoso, donde gana la mejor idea. Nuestras decisiones se basan en la investigación del cliente y nuestro método se centra en obtener resultados tangibles para ellas. Todos están echando una mano, desde nuestro CEO hasta nuestros contribuidores en GitHub, porque en nuestro equipo valoramos el crecimiento y el aprendizaje. \",\n      nick_title: \"Cofundador, CEO\",\n      matt_title: \"Cofundador, CTO\",\n      cat_title: \"Diseñadora de Juegos\",\n      scott_title: \"Cofundador, Ingeniero de Software\",\n      maka_title: \"Defensor del Consumidor\",\n      robin_title: \"Diseñadora de UX & Investigadora\",\n      nolan_title: \"Administrador de territorio\",\n      retrostyle_title: \"Ilustración\",\n      retrostyle_blurb: \"Juegos con estilo Retro\",\n      community_title: \"...y nuestra comunidad open-source\",\n      community_subtitle: \"¡Más de 450 contribuidores que ayudaron a contruir CodeCombat, y más uniendose cada semana!\",\n      community_description_1: \"CodeCombat es un proyecto comunitario, con cientos de jugadores haciendo trabajo voluntario al crear niveles, contribuir a nuestro código para añadir características, arreglar bugs, testear, e incluso traducir el juego a 50 idiomas hasta ahora. Empleados, contribuidores y la página ganan al compartir las ideas Echa un vistazo a nuestra\",\n      community_description_link: \"página de contribución\",\n      community_description_2: \"para más información.\",\n      number_contributors: \"Más de 450 contribuidores dieron su apoyo y tiempo a este proyecto.\",\n      story_title: \"Nuestra historia hasta ahora\",\n      story_subtitle: \"Desde 2013, CodeCombat creció desde un mero conjunto de bocetos hasta un juego próspero, vivo.\",\n      story_statistic_1a: \"+5,000,000\",\n      story_statistic_1b: \"jugadores totales\",\n      story_statistic_1c: \"comenzaron su viaje en la programación mediante CodeCombat\",\n      story_statistic_2a: \"We’ve been translated into over 50 languages — nuestros jugadores son de\",\n      story_statistic_2b: \"+200 países\",\n      story_statistic_3a: \"Juntos, escribieron\",\n      story_statistic_3b: \"1 mil millones de líneas de código, y contando\",\n      story_statistic_3c: \"en seis lenguajes de programación distintos\",\n      story_long_way_1: \"Aunque hemos recorrido un largo camino...\",\n      story_sketch_caption: \"El primer boceto de Nick representando un juego de programación en acción.\",\n      story_long_way_2: \"todavía nos queda mucho por hacer antes de que completemos nuestra misión, asi que...\",\n      jobs_title: \"¡Ven a trabajar con nosotros y ayuda a escribir la historia de CodeCombat!\",\n      jobs_subtitle: \"¿No encontras una buena opción pero estás interesado en mantener el  contacto? Mirá nuestra entrada \\\"Crear Tu Propio\\\".\",\n      jobs_benefits: \"Beneficios del empleado\",\n      jobs_benefit_4: \"Días personales/enfermo ilimitados\",\n      jobs_benefit_5: \"Desarrollo profesional y soporte de formación continua\",\n      jobs_benefit_6: \"Seguro médico/dental/vista\",\n      jobs_custom_title: \"Crear Tu Propio\",\n      jobs_custom_description: \"¿Te apasiona CodeCombat pero nos ves un puesto de trabajo que coincida con tus cualificaciones? Escríbenos y muestrenos como cree que puede contribuir a nuestro equipo. ¡Nos encantaría saber de vos!\",\n      jobs_custom_contact_1: \"¡Envíanos una nota a\",\n      jobs_custom_contact_2: \"presentándote y podremos estar en contacto en el futuro!\",\n      contact_title: \"Prensa & Contacto\",\n      contact_subtitle: \"¿Necesitas más información? Contáctanos en\",\n      screenshots_title: \"Capturas de pantalla del Juego\",\n      screenshots_hint: \"(click para ver en tamaño completo)\",\n      downloads_title: \"Descargar Recursos & Información\",\n      about_codecombat: \"Acerca de CodeCombat\",\n      logo: \"Logo\",\n      screenshots: \"Capturas de pantalla\",\n      character_art: \"Arte de Personajes\",\n      download_all: \"Descargar Todo\",\n      previous: \"Anterior\",\n      location_title: \"Nos encontramos en el centro de SF:\"\n    },\n    teachers: {\n      licenses_needed: \"Licencias necesarias\"\n    },\n    teachers_quote: {\n      subtitle: \"¡Obtén CodeCombat en tu clase, club, escuela o distrito!\",\n      email_exists: \"Existe un usuario con este email.\",\n      phone_number: \"Teléfono\",\n      phone_number_help: \"¿Dónde podemos contactarte durante el horario de trabajo ?\",\n      primary_role_label: \"Tu Rol Primario\",\n      role_default: \"Seleccione Rol\",\n      primary_role_default: \"Seleccione Rol Primario\",\n      purchaser_role_default: \"Seleccione Rol de Comprador\",\n      tech_coordinator: \"Coordinador de tecnología\",\n      advisor: \"Tutor\",\n      principal: \"Director\",\n      superintendent: \"Supervisor\",\n      parent: \"Padre\",\n      purchaser_role_label: \"Tu Rol de Comprador\",\n      influence_advocate: \"Influencia/Partidario\",\n      evaluate_recommend: \"Evaluar/Recomendar\",\n      approve_funds: \"Aprobar Fondos\",\n      organization_label: \"Escuela / Distrito\",\n      city: \"Ciudad\",\n      state: \"Estado\",\n      country: \"País\",\n      num_students_help: \"¿Cuántos prevees inscribir en CodeCombat?\",\n      num_students_default: \"Seleccionar Rango\",\n      education_level_label: \"Nivel Educativo de los Estudiantes\",\n      education_level_help: \"Elegí todas las que correspondan.\",\n      elementary_school: \"Escuela Primaria\",\n      high_school: \"Escuela Secundaria\",\n      please_explain: \"(describa, por favor)\",\n      middle_school: \"Escuela Intermedia\",\n      college_plus: \"Universidad o superior\",\n      anything_else: \"¿Algo más que deberíamos saber?\",\n      thanks_header: \"¡Gracias por solicitar un presupuesto!\",\n      thanks_sub_header: \"Gracias por el interés de su institución en CodeCombat\",\n      thanks_p: \"Estaremos en contacto pronto. ¿Preguntas? Escríbenos:\",\n      back_to_classes: \"Volver a las clases\",\n      finish_signup: \"Termine la creación de su cuenta de maestro:\",\n      finish_signup_p: \"Crear una cuenta para configurar la clase, agregar estudiante y monitorear su progreso a medida que aprenden programacioón\",\n      signup_with: \"Registrarse con:\",\n      connect_with: \"Conectar con:\",\n      conversion_warning: \"ADVERTENCIA: Su cuenta actual es de tipo <em>Estudiante</em>. Una vez que envie este formulario, su cuenta será actualizada como cuenta de Profesor.\",\n      learn_more_modal: \"Cuentas de Profesor en CodeCombat tienen la ventaja de monitorear el progreso del estudiante, asignar inscripciónes y administrar salones de clases. Cuentas de Profesor no pueden ser parte de los salones de clases. Si usted está registrado en una clase utilizando una cuenta de estudiante, no podrá acceder hasta que tenga una Cuenta de Profesor.\",\n      create_account: \"Crear una Cuenta de maestro\",\n      create_account_subtitle: \"Obtenga acceso a herramientas exclusivas para profesores de CodeCombat. <strong>Configurar una clase</strong>, agregar estudiantes, y <strong>monitorear su progreso</strong>!\",\n      convert_account_title: \"Actualizar mi perfil a Cuenta de Profesor\",\n      not: \"No\"\n    },\n    versions: {\n      save_version_title: \"Guardar nueva versión\",\n      new_major_version: \"Nueva Gran Versión\",\n      submitting_patch: \"Publicando Parche...\",\n      cla_prefix: \"Para guardar los cambios, primero debes estar de acuerdo con nuestro\",\n      cla_url: \"CLA\",\n      cla_suffix: \".\",\n      cla_agree: \"ACEPTO\",\n      owner_approve: \"Necesita la aprobación de un propietario para que los cambios sean visibles.\"\n    },\n    contact: {\n      contact_us: \"Contacta a CodeCombat\",\n      welcome: \"¡Qué bueno es escuchar algo de ti! Usa este formulario para enviarnos un mensaje\",\n      forum_prefix: \"Para cualquier cosa pública, por favor prueba \",\n      forum_page: \"nuestro foro \",\n      forum_suffix: \"en su lugar.\",\n      faq_prefix: \"También hay un\",\n      faq: \"FAQ\",\n      subscribe_prefix: \"Si necesitas ayuda para resolver un nivel, por favor\",\n      subscribe: \"compra una suscripción de CodeCombat\",\n      subscribe_suffix: \"y nosotros estaremos felices de ayudarte con tu código.\",\n      subscriber_support: \"Como estás suscrito a CodeCombat, tu email tendrá prioridad.\",\n      screenshot_included: \"Captura de pantalla incluida.\",\n      where_reply: \"¿A dónde deberíamos responder?\",\n      send: \"Enviar Comentario\"\n    },\n    account_settings: {\n      title: \"Configuración de la Cuenta\",\n      not_logged_in: \"Inicia sesión o crea una cuenta para cambiar tu configuración.\",\n      me_tab: \"Yo\",\n      picture_tab: \"Imagen\",\n      delete_account_tab: \"Borra tu cuenta\",\n      wrong_email: \"Mail Incorrecto\",\n      wrong_password: \"Contraseña incorrecta\",\n      use_gravatar: \"Cambia tu foto de perfil iniciando sesión en Gravatar\",\n      delete_this_account: \"Borrar esta cuenta permanentemente\",\n      reset_progress_tab: \"Reiniciar Todo Progreso\",\n      reset_your_progress: \"Limpiar todo tu progreso y comenzar de nuevo\",\n      god_mode: \"Modo Dios\",\n      emails_tab: \"Correos\",\n      admin: \"Admin\",\n      manage_subscription: \"Click aquí para administrar tu subscripción\",\n      new_password: \"Nueva Contraseña\",\n      new_password_verify: \"Verificar\",\n      type_in_email: \"Ingrese su correo electrónico para confirmar la eliminación de su cuenta.\",\n      type_in_email_progress: \"Ingrese su correo para confirmar la eliminación de su progreso.\",\n      type_in_password: \"Asimismo, ingrese su contraseña.\",\n      email_subscriptions: \"Suscripciones de Email\",\n      email_subscriptions_none: \"No tienes suscripciones.\",\n      email_announcements: \"Noticias\",\n      email_announcements_description: \"Recibe correos electrónicos con las últimas noticias y desarrollos de CodeCombat.\",\n      email_notifications: \"Notificaciones\",\n      email_notifications_summary: \"Controles para tus notificaciones por correo electrónico automáticas y personalizadas relativas a tu actividad en CodeCombat.\",\n      email_any_notes: \"Algunas notificaciones\",\n      email_any_notes_description: \"Desactiva para detener toda la actividad de correos de notificaciones.\",\n      email_news: \"Noticias\",\n      email_recruit_notes: \"Oportunidades Laborales\",\n      email_recruit_notes_description: \"Si juegas realmente bien podríamos contactarte para ofrecerte un (mejor) trabajo.\",\n      contributor_emails: \"Emails Clase Contribuyente\",\n      contribute_prefix: \"¡Estamos buscando gente que se una a nuestro grupo! Echa un vistazo a la \",\n      contribute_page: \"página de contribución\",\n      contribute_suffix: \"para averiguar más.\",\n      email_toggle: \"Activar Todo\",\n      error_saving: \"Error al Guardar\",\n      saved: \"Cambios Guardados\",\n      password_mismatch: \"La contraseña no coincide.\",\n      password_repeat: \"Por favor repita su contraseña.\"\n    },\n    keyboard_shortcuts: {\n      keyboard_shortcuts: \"Atajos de teclado\",\n      space: \"Barra espaciadora\",\n      enter: \"Enter\",\n      press_enter: \"Toca enter\",\n      escape: \"Escape\",\n      shift: \"Shift\",\n      run_code: \"Ejecutar el código.\",\n      run_real_time: \"Ejecutar en tiempo real.\",\n      continue_script: \"Continuar hasta finalizado el script.\",\n      skip_scripts: \"Omitir todos los scripts omitibles.\",\n      toggle_playback: \"Aplicar ejecutar/pausar.\",\n      scrub_playback: \"Devolverse y avanzar en el tiempo.\",\n      single_scrub_playback: \"Devolverse y avanzar en el tiempo de a un cuadro.\",\n      scrub_execution: \"Scrub through la ejecución del hechizo actual.\",\n      toggle_debug: \"Mostrar/ocultar depuración.\",\n      toggle_grid: \"Mostrar/ocultar rejilla.\",\n      toggle_pathfinding: \"Mostrar/ocultar buscador de rutas.\",\n      beautify: \"Hacer bello tu código estandarizando formato.\",\n      maximize_editor: \"Maximizar/minimizar editor de código.\"\n    },\n    community: {\n      main_title: \"Comunidad CodeCombat\",\n      introduction: \"Mira las maneras en las que puedes involucrarte adelante y decide qué es más divertido. ¡Queremos trabajar contigo!\",\n      level_editor_prefix: \"Usar CodeCombat\",\n      level_editor_suffix: \"para crear y editar niveles. Los han creado niveles para sus clases, amigos, hackatones, estudiantes, familiares. Si crear un nuevo juego luce intimidante puedes ¡comenzar con base en uno nuestro!\",\n      thang_editor_prefix: \"Nosotros llamamos a las unidades del juego 'Tiliches'. Usa el\",\n      thang_editor_suffix: \"para modificar el arte de CodeCombat. Permite a las unidades lanzar proyectiles, altera la dirección de una animación, cambia los puntos de vida de una unidad o sube tu propio sprite de vectores.\",\n      article_editor_prefix: \"¿Ves algún error en nuestros documentos? ¿Quieres hacer algunas instrucciones para tus propias creaciones? Revisa el\",\n      article_editor_suffix: \"y ayuda a los jugadores de CodeCombat conseguir lo más posible de su tiempo jugando.\",\n      find_us: \"Encuentranos en etsos sitios\",\n      social_github: \"Revisa todo nuestro código en GitHub\",\n      social_blog: \"Lee el blog de CodeCombat en Sett\",\n      social_discource: \"Únete a la discusión en nuestro foro\",\n      social_facebook: \"Me Gusta CodeCombat en Facebook\",\n      social_twitter: \"Sigue a CodeCombat en Twitter\",\n      social_gplus: \"Únete a CodeCombat con Google+\",\n      social_slack: \"Conversa con nosotros en nuestro canal de Slack\",\n      contribute_to_the_project: \"Contribuir al proyecto\"\n    },\n    clans: {\n      clan: \"Clan\",\n      clans: \"Clanes\",\n      new_name: \"Nuevo nombre de clan\",\n      new_description: \"descripción del clan\",\n      make_private: \"Hacer clan privado\",\n      subs_only: \"solo suscriptores\",\n      create_clan: \"Crear nuevo clan\",\n      private_preview: \"Vista previa\",\n      private_clans: \"Clanes Privados\",\n      public_clans: \"Clanes publicos\",\n      my_clans: \"Mis Clanes\",\n      clan_name: \"Nombre del clan\",\n      name: \"Nombre\",\n      chieftain: \"Líder del Clan\",\n      edit_clan_name: \"Editar el nombre del Clan\",\n      edit_clan_description: \"Editar descripción del clan\",\n      edit_name: \"editar nombre\",\n      edit_description: \"editar descripción\",\n      \"private\": \"(privado)\",\n      summary: \"Resumen\",\n      average_level: \"Nivel Promedio\",\n      average_achievements: \"Logros Promedio\",\n      delete_clan: \"Borrar Clan\",\n      leave_clan: \"Abandonar Clan\",\n      join_clan: \"Ingresar Clan\",\n      invite_1: \"Invitar:\",\n      invite_2: \"*Invitar jugadores al clan, mandandoles este link.\",\n      members: \"Miembros\",\n      progress: \"Progreso\",\n      not_started_1: \"no iniciado\",\n      started_1: \"iniciado\",\n      complete_1: \"completo\",\n      exp_levels: \"Expand levels\",\n      rem_hero: \"Remover Heróe\",\n      status: \"Stado\",\n      complete_2: \"Completo\",\n      started_2: \"Iniciado\",\n      not_started_2: \"No inciiado\",\n      view_solution: \"Click para ver la solución.\",\n      view_attempt: \"Click para ver intento.\",\n      latest_achievement: \"último logro\",\n      playtime: \"Tiempo de juego\",\n      last_played: \"Último jugado\",\n      leagues_explanation: \"Juega en una liga contra otros miembros del clan en estas instancias de arena multijugador.\",\n      track_concepts1: \"Haga un seguimiento de los conceptos\",\n      track_concepts2a: \"aprendidos por cada estudiante\",\n      track_concepts2b: \"aprendidos por cada miembro\",\n      track_concepts3a: \"Haga un seguimiento de los niveles completados por cada estudiante\",\n      track_concepts3b: \"Haga un seguimiento de los niveles completados por cada miembro\",\n      track_concepts4a: \"Ve a tus estudiantes'\",\n      track_concepts4b: \"Ve a tus miembros'\",\n      track_concepts5: \"soluciones\",\n      track_concepts6a: \"Ordene a sus estudiantes por nombre o progreso\",\n      track_concepts6b: \"Ordene a sus miembros por nombre o progreso\",\n      track_concepts7: \"Requiere invitación\",\n      track_concepts8: \"para unirse\",\n      private_require_sub: \"Los clanes privados requieren una suscripción para crearlos o unírseles.\"\n    },\n    courses: {\n      create_new_class: \"Crear Nueva Clase\",\n      unnamed_class: \"Grupo Anónimo\",\n      edit_settings1: \"Editar Configuraciónes de Grupos\",\n      add_students: \"Agregar Estudiantes\",\n      stats: \"Estadísticas\",\n      total_students: \"Total de Estudiantes:\",\n      average_time: \"Tiempo Promedio de juego por nivel:\",\n      total_time: \"Tiempo total de juego:\",\n      average_levels: \"Niveles Promedio completados:\",\n      total_levels: \"Total de niveles completados:\",\n      students: \"Estudiantes\",\n      concepts: \"Conceptos\",\n      play_time: \"Tiempo de Juego:\",\n      completed: \"Completados:\",\n      enter_emails: \"Introducir los emails de los estudiantes a invitar, uno por línea\",\n      send_invites: \"¿Mandar Invitaciones?\",\n      number_programming_students: \"Número de Estudiantes\",\n      number_total_students: \"Total de Estudiantes en Escuela/Distrito/Facultad\",\n      enroll: \"Inscribirse\",\n      enroll_paid: \"Anotar estudiantes en cursos pagos.\",\n      get_enrollments: \"Obtener Más Matrículas\",\n      change_language: \"Cambiar idioma del curso\",\n      keep_using: \"Seguir Usando\",\n      switch_to: \"Cambiar a\",\n      greetings: \"Saludos!\",\n      back_classrooms: \"Volver a mis aulas\",\n      back_courses: \"Volver a mis cursos\",\n      edit_details: \"Editar detalles de clase\",\n      purchase_enrollments: \"Comprar Matrículas\",\n      remove_student: \"Quitar alumno\",\n      assign: \"Asignar\",\n      to_assign: \"para asignar cursos pagos.\",\n      student: \"Estudiante\",\n      teacher: \"Maestro\",\n      arena: \"Arena\",\n      available_levels: \"Niveles Disponibles\",\n      welcome_to_courses: \"Aventureros, Bienvenidos a los Cursos!\",\n      ready_to_play: \"Estas listo?\",\n      start_new_game: \"Iniciar un Nuevo Juego\",\n      play_now_learn_header: \"Juega y Aprende\",\n      play_now_learn_1: \"Sintaxis básica para controlar a tu personaje\",\n      play_now_learn_2: \"bucles while para resolver rompecabezas molestos\",\n      play_now_learn_3: \"cadenas & variables para personalizar acciones\",\n      play_now_learn_4: \"como vencer a un ogro (habilidades importantes en la vida!)\",\n      welcome_to_page: \"¡Bienvenido a tu página de cursose!\",\n      my_classes: \"Mis Clases\",\n      class_added: \"Clase añadida satisfactoriamente!\",\n      view_levels: \"ver niveles\",\n      join_class: \"Unirse a clase\",\n      ask_teacher_for_code: \"Preguntalé a tu profesor si tu tienes un código de CodeCombat! Si lo tiene, ingresalo debajo:\",\n      enter_c_code: \"<Ingresar Código de la Clase>\",\n      join: \"Unirse\",\n      joining: \"Uniendose a claseJoining class\",\n      course_complete: \"Curso completo\",\n      play_arena: \"Jugar Arena\",\n      start: \"Iniciar\",\n      last_level: \"Último nivel\",\n      not_you: \"No eres tú?\",\n      continue_playing: \"Seguir jugando\",\n      option1_header: \"Opción 1: Invitar estudiantes vía email\",\n      remove_student1: \"Quitar alumno\",\n      are_you_sure: \"¿Estás seguro que quieres quitar este alumno de tu clase?\",\n      remove_description1: \"El estudiante perderá acceso a esta aula y a sus clases asignadas. El progreso y la experiencia del juego NO se pierde, y el estudiante puede ser agregado de vuelta al aula en cualquier momento.\",\n      remove_description2: \"La matrícula paga activada no será devuelta.\",\n      keep_student: \"Mantener alumno\",\n      removing_user: \"Removiendo usuario\",\n      subtitle: \"Revisar guías del curso, soluciones y niveles.\",\n      changelog: \"Ver los últimos cambios en los niveles del curso.\",\n      select_language: \"Seleccione lenguaje\",\n      select_level: \"Seleccione nivel\",\n      play_level: \"Juga Nivel\",\n      concepts_covered: \"Conceptos Cubiertos\",\n      view_guide_online: \"Ver Guía En Línea(PDF)\",\n      grants_lifetime_access: \"Otorgar derecho de acceso a todos los cursos.\",\n      enrollment_credits_available: \"Créditos de Inscripción Disponibles :\",\n      language_select: \"Seleccionar Lenguaje\",\n      language_cannot_change: \"El lenguaje no puede ser cambiado una vez que el estudiante ingreso a la clase.\",\n      avg_student_exp_label: \"Promedio de la experiencia en programación del estudiante\",\n      avg_student_exp_desc: \"Esto nos ayudará a entender como llevar el ritmo de los cursos.\",\n      avg_student_exp_select: \"Selecciona la mejor opción\",\n      avg_student_exp_none: \"Sin experiencia - poca o ninguna experiencia\",\n      avg_student_exp_beginner: \"Principiante - cierto grado de exposición o basado en bloque\",\n      avg_student_exp_intermediate: \"Intermedio - un poco de experiencia con código tipeado\",\n      avg_student_exp_advanced: \"Avanzado - amplia experiencia con código tipeado\",\n      avg_student_exp_varied: \"Niveles Variados de Experiencia\",\n      student_age_range_label: \"Rango de Edad del Estudiante\",\n      student_age_range_younger: \"Menor que 6\",\n      student_age_range_older: \"Mayor que 18\",\n      student_age_range_to: \"a\",\n      create_class: \"Crear Grupo\",\n      class_name: \"Nombre de clase\",\n      teacher_account_restricted: \"Tu cuenta es una cuenta de maestro, y no puedes acceder al contenido del estudiante.\",\n      account_restricted: \"Necesitas una cuenta de Estudiante para acceder a esta pagina.\"\n    },\n    teacher: {\n      teacher_dashboard: \"Tablero del maestro\",\n      my_classes: \"Mis Clases\",\n      courses: \"Cursos\",\n      enrollments: \"Recursos\",\n      resources: \"Resources\",\n      help: \"Ayuda\",\n      language: \"Lenguaje\",\n      edit_class_settings: \"editar configuración de la clase\",\n      access_restricted: \"Se requiere Actualización de la Cuenta\",\n      teacher_account_required: \"Una cuenta de Maestro es requerida para acceder a este contenido.\",\n      create_teacher_account: \"Crear Cuenta de Maestro\",\n      what_is_a_teacher_account: \"Qué es una Cuenta de Maestro?\",\n      teacher_account_explanation: \"Una Cuenta de Maestro en CodeCombat da permiso a crear salones de clases, monitorear el progreso de los estudiantes mientras ellos trabajan a través de los cursos, manejar inscripciones y acceder a recursos para la creación de su plan de estudio.\",\n      current_classes: \"Clases Recientes\",\n      archived_classes: \"Clases Archivadas\",\n      archived_classes_blurb: \"Las Clases pueden ser archivadas para futuras referencias. Desarchiva una Clase para verla en la lista de Clases Recientes de nuevo.\",\n      view_class: \"ver clase\",\n      archive_class: \"almacenar clase\",\n      unarchive_class: \"desarchivar clase\",\n      unarchive_this_class: \"desarchivar esta clase\",\n      no_students_yet: \"Esta clase no tienes estudiantes todavía.\",\n      create_new_class: \"Crear una Nueva Clase\",\n      class_overview: \"Resumen de la Clase\",\n      avg_playtime: \"Nivel medio de tiempo de juego\",\n      total_playtime: \"Tiempo Total de juego\",\n      avg_completed: \"Promedio de niveles completados\",\n      total_completed: \"Total de niveles completados\",\n      created: \"Creado\",\n      concepts_covered: \"Conceptos cubiertos\",\n      earliest_incomplete: \"Nivel incompleto más Reciente\",\n      latest_complete: \"Último nivel completado\",\n      enroll_student: \"Inscribir estudiante\",\n      course_progress: \"Progreso del curso\",\n      edit: \"editar\",\n      remove: \"eliminar\",\n      latest_completed: \"Último Completado\",\n      sort_by: \"Ordenado por\",\n      progress: \"Progreso\",\n      completed: \"Completado\",\n      started: \"Iniciado\",\n      no_progress: \"Sin progreso\",\n      not_required: \"No requerido\",\n      select_course: \"Selecciona el curso a ver\",\n      course_overview: \"Resumen del Curso\",\n      copy_class_code: \"Copiar código de la Clase\",\n      class_code_blurb: \"Nuevos estudiantes pueden entrar a este código de la clase en su tablero o visitar codecombat.com/courses para unirse a la clase.\",\n      copy_class_url: \"Copia la URL de la Clase\",\n      class_join_url_blurb: \"Nuevos estudiantes pueden visitar esta URL mientras esten logeados para unirse a la clase.\",\n      add_students_manually: \"Agregar Estudiantes Manualmente\",\n      bulk_assign: \"Mayor a asignar\",\n      assigned: \"Asignado\",\n      enroll_selected_students: \"Inscribir Estudiantes Seleccionados\",\n      no_students_selected: \"No fueron seleccionados estudiantes.\",\n      show_students_from: \"Muestra estudiantes de\",\n      all_students: \"Todos los estudiantes\",\n      not_enough_enrollments: \"No tienes suficientes Inscripciones disponibles.\",\n      export_student_progress: \"Exportar el Progreso del Estudiante(CSV)\",\n      full_license: \"Licencia full\",\n      select_students: \"Seleccionar Estudiantes\",\n      choose_course: \"Elegir curso\"\n    },\n    game_dev: {\n      creator: \"Creador\"\n    },\n    classes: {\n      archmage_title: \"Archimago\",\n      archmage_title_description: \"(Desarrollador)\",\n      archmage_summary: \"Si eres un programador interesado en juegos educativos, conviértete en un archimago y ayúdanos a construir CodeCombat!\",\n      artisan_title: \"Artesano\",\n      artisan_title_description: \"(Constructor de Niveles)\",\n      artisan_summary: \"Construye y comparte niveles para que tú y tus amigos jueguen. Conviértete en un Artesano y aprende el arte the enseñar a los demás a programar.\",\n      adventurer_title: \"Aventurero\",\n      adventurer_title_description: \"(Probador de Niveles)\",\n      adventurer_summary: \"Consigue nuestros nuevos niveles| (even our subscriber content) for free one week early and help us work out bugs before our public release.\",\n      scribe_title: \"Escriba\",\n      scribe_title_description: \"(Editor de Artículos)\",\n      scribe_summary: \"Buen código necesita buena documentación. Escribe, edita y mejora los documentos leídos por millones de jugadores en el mundo.\",\n      diplomat_title: \"Diplomático\",\n      diplomat_title_description: \"(Traductor)\",\n      diplomat_summary: \"CodeCombat está traducido a más de 45 idiomas por nuestros diplomáticos. Ayúdanos y contribuye con las traducciones.\",\n      ambassador_title: \"Embajador\",\n      ambassador_title_description: \"(Soporte)\",\n      ambassador_summary: \"Ayuda a responder las preguntas de los usuarios del foro. Nuestros Embajadores representan CodeCombat en todo el mundo.\",\n      teacher_title: \"Maestro\"\n    },\n    editor: {\n      main_title: \"Editor de CodeCombat\",\n      article_title: \"Editor de Artículo\",\n      thang_title: \"Editor de Tiliches\",\n      level_title: \"Editor de Nivel\",\n      course_title: \"Editor de Curso\",\n      achievement_title: \"Editor de logros\",\n      poll_title: \"Editor de Encuesta\",\n      back: \"Atrás\",\n      revert: \"Revertir\",\n      revert_models: \"Revertir Modelos\",\n      pick_a_terrain: \"Elije un Terreno\",\n      dungeon: \"Calabozo\",\n      indoor: \"Interior\",\n      desert: \"Desierto\",\n      grassy: \"Herboso\",\n      mountain: \"Montaña\",\n      glacier: \"Glaciar\",\n      small: \"Pequeño\",\n      large: \"Grande\",\n      fork_title: \"Fork de Nueva Versión\",\n      fork_creating: \"Creando Fork...\",\n      generate_terrain: \"Generar terreno\",\n      more: \"Más\",\n      wiki: \"Wiki\",\n      live_chat: \"Chat en vivo\",\n      thang_main: \"Principal\",\n      thang_spritesheets: \"Hojas de figuras( para animaciones )\",\n      thang_colors: \"Colores\",\n      level_some_options: \"¿Algunas opciones?\",\n      level_tab_thangs: \"Tiliches\",\n      level_tab_scripts: \"Scripts\",\n      level_tab_components: \"Componentes\",\n      level_tab_systems: \"Sistemas\",\n      level_tab_docs: \"Documentación\",\n      level_tab_thangs_title: \"Tiliches Actuales\",\n      level_tab_thangs_all: \"Todo\",\n      level_tab_thangs_conditions: \"Condiciones Iniciales\",\n      level_tab_thangs_add: \"Agregar Thangs\",\n      level_tab_thangs_search: \"Buscar Thangs\",\n      add_components: \"Agregar Componentes\",\n      component_configs: \"Configuraciones del Componente\",\n      config_thang: \"Doble clic para configurar un Tiliche\",\n      \"delete\": \"Borrar\",\n      duplicate: \"Duplicar\",\n      stop_duplicate: \"Parar de Duplicar\",\n      rotate: \"Rotar\",\n      level_component_tab_title: \"Componentes Actuales\",\n      level_component_btn_new: \"Crear Nuevo Componente\",\n      level_systems_tab_title: \"Sistemas Actuales\",\n      level_systems_btn_new: \"Crear Nuevo Sistema\",\n      level_systems_btn_add: \"Agregar Sistema\",\n      level_components_title: \"Regresar a todos los Tiliches\",\n      level_components_type: \"Tipo\",\n      level_component_edit_title: \"Editar Componente\",\n      level_component_config_schema: \"Config Schema\",\n      level_system_edit_title: \"Editar Sistema\",\n      create_system_title: \"Crear Nuevo Sistema\",\n      new_component_title: \"Crear Nuevo Componente\",\n      new_component_field_system: \"Sistema\",\n      new_article_title: \"Crear un Nuevo Artículo\",\n      new_thang_title: \"Crear un Nuevo tipo de Tiliche\",\n      new_level_title: \"Crear un Nuevo Nivel\",\n      new_article_title_login: \"Ingresa para Crear un Nuevo Artículo\",\n      new_thang_title_login: \"Ingresa para crear un nuevo tipo de Tiliche\",\n      new_level_title_login: \"Ingresa para Crear un Nuevo Nivel\",\n      new_achievement_title: \"Crear un Nuevo Logro\",\n      new_achievement_title_login: \"Ingresa para Crear un Nuevo Logro\",\n      new_poll_title: \"Crear una nueva encuesta\",\n      new_poll_title_login: \"Ingresa para crear una nueva encuesta\",\n      article_search_title: \"Buscar Artículos aquí\",\n      thang_search_title: \"Buscar tipos de Tiliche aquí\",\n      level_search_title: \"Buscar Niveles aquí\",\n      achievement_search_title: \"Buscar logros\",\n      poll_search_title: \"Buscar Encuesta\",\n      read_only_warning2: \"Nota: no puedes guardar ediciones aquí, porque no estas logueado.\",\n      no_achievements: \"No hay logros agregados en este nivel por ahora.\",\n      achievement_query_misc: \"Objetivo clave de misceláneo\",\n      achievement_query_goals: \"Objetivo clave de los objetivos de nivel\",\n      level_completion: \"Nivel Completado\",\n      pop_i18n: \"Poblar I18N\",\n      tasks: \"Tareas\",\n      clear_storage: \"Borrar tus cambios locales\",\n      add_system_title: \"Agregar Sistemas al Nivel\",\n      done_adding: \"Finalizar\"\n    },\n    article: {\n      edit_btn_preview: \"Vista previa\",\n      edit_article_title: \"Editar Artículo\"\n    },\n    polls: {\n      priority: \"Prioridad\"\n    },\n    contribute: {\n      page_title: \"Contribuyendo\",\n      intro_blurb: \"CodeCombat es 100% open source! Cientos de jugadores dedicados nos han ayudado a contruir el juego. Únete y escribe el siguiente capítulo de la misión de CodeCombat de enseñar al mundo a programar!\",\n      alert_account_message_intro: \"¡Hola!\",\n      alert_account_message: \"Para suscribirte para los correos, necesitas ingresar primero.\",\n      archmage_introduction: \"Una de las mejores partes de hacer juegos es que sintetizan muchas cosas diferentes. Gráficas, sonido, redes, redes sociales y muchos aspectos comunes de programación, desde manejo de bases de datos y administración de servidores, hasta trabajar en el diseño y construcción de interfaces. Hay mucho para hacer, y si eres un programador con experiencia con el deseo de ingresar en el meollo del asunto de CodeCombat, esta clase puede ser para ti. Nos encantaría contar con tu ayuda para construir el mejor juego de programación.\",\n      class_attributes: \"Atributos de Clase\",\n      archmage_attribute_1_pref: \"Conocimiento en \",\n      archmage_attribute_1_suf: \", o un deseo de aprender. La mayor parte de nuestro código está en este lenguaje. Si eres un fan de Python o Ruby, te sentirás en casa. Es Javascript, pero con un mejor syntax.\",\n      archmage_attribute_2: \"Alguna experiencia programando e iniciativa personal. Te ayudaremos a orientarte, pero no podemos perder mucho tiempo entrenando.\",\n      how_to_join: \"Unirse:\",\n      join_desc_1: \"¡Cualquiera puede unirse! Sólo checa nuestro  \",\n      join_desc_2: \"para comenzar, y pon un check abajo para marcarte como un valiente Archimago y conseguir las últimas noticias por email. ¿Quieres chatear sobre qué hacer o cómo involucrarte más? \",\n      join_desc_3: \", o encuéntranos en \",\n      join_desc_4: \"y ahí empezaremos!\",\n      join_url_email: \"Escríbenos\",\n      join_url_slack: \"Canal de Slack\",\n      archmage_subscribe_desc: \"Obten correos de nuevas oportunidades y anuncios.\",\n      artisan_introduction_pref: \"¡Debemos construir niveles adicionales! La gente ruega por más contenido, y podemos hacer tanto por nosotros mismos. De momento tu estación de trabajo es nivel 1 ; Nuestro editor de niveles es apenas útil incluso para sus creadores, así que sea cauteloso. Si tuviera visiones de campañas apareciendo para ciclos for\",\n      artisan_introduction_suf: \", entonces esta lase es ideal para ti.\",\n      artisan_attribute_1: \"Cualquier experiencia creando contenido similar estaría bien, como por ejemplo el editor de niveles de Blizzard. ¡Aunque no es necesaria!\",\n      artisan_attribute_2: \"Un anhelo de hacer un montón de pruebas e iteraciones. Para hacer buenos niveles necesitas mostrárselos a otros y mirar como juegan, además de estar preparado para encontrar los fallos a reparar.\",\n      artisan_attribute_3: \"Por el momento, la resistencia va a la par con el Aventurero. Nuestro editor de niveles está a un nivel de desarrollo temprano y puede ser muy frustrante usarlo. ¡Estás advertido!\",\n      artisan_join_desc: \"Sigue las siguientes indicaciones para usar el editor de niveles. Tómalo o déjalo:\",\n      artisan_join_step1: \"Lee la documentación.\",\n      artisan_join_step2: \"Crea un nuevo nivel y explora los niveles existentes.\",\n      artisan_join_step3: \"Busca nuestra sala pública de Slack en busca de ayuda.\",\n      artisan_join_step4: \"Publica tus niveles en el foro para recibir comentarios críticos.\",\n      artisan_subscribe_desc: \"Recibe correos sobre actualizaciones del editor de niveles y anuncios.\",\n      adventurer_introduction: \"Hablemos claro sobre tu papel: eres el tanque. Vas a recibir fuertes daños. Necesitamos gente para probar nuestros flamantes niveles y ayudar a mejorarlos. El dolor será enorme; hacer buenos juegos es un proceso largo y nadie lo consigue a la primera. Si puedes resistir y tener una puntuación alta en resistencia, entonces esta clase es para ti.\",\n      adventurer_attribute_1: \"Estar sediento de conocimientos. Quieres aprender a programar y nosotros queremos enseñarte a hacerlo. Aunque en este caso es más probable que seas tú el que esté haciendo la mayor parte de la enseñanza.\",\n      adventurer_attribute_2: \"Carismático. Se amable pero claro a la hora de desglosar qué necesita ser mejorado y sugiere de qué formas podría hacerse.\",\n      adventurer_join_pref: \"Reúnete con (¡o recluta!) un Artesano y trabaja con ellos, o marca la casilla de abajo para recibir un correo cuando haya nuevos niveles para probar. También publicaremos en nuestras redes nuevos niveles para revisar\",\n      adventurer_forum_url: \"nuestro foro\",\n      adventurer_join_suf: \"así que si prefieres estar informado en esa forma, ¡crea una cuenta allí!\",\n      adventurer_subscribe_desc: \"Recibe correos cuando haya nuevos niveles para testar.\",\n      scribe_introduction_pref: \"CodeCombat no será solo un montón de niveles. También será una fuente de conocimientos, una wiki de conceptos de programación a la que los niveles se engancharan. De esa forma, en lugar de que cada Artesano tenga que describir en detalle qué es un operador de comparación, podrá simplemente enlazar el nivel al Artículo que los describe y que ya ha sido escrito para edificación del jugador. Algo en la línea de lo que la \",\n      scribe_introduction_url_mozilla: \"Mozilla Developer Network\",\n      scribe_introduction_suf: \" ha construido. Si tu idea de diversión es articular los conceptos de la programación de una forma sencilla, entonces esta clase es para ti.\",\n      scribe_attribute_1: \"Habilidad a la hora de escribir es casi todo lo que necesitas. No solo dominar la gramática y la ortografía sino también expresar ideas complicadas a los demás de forma sencilla.\",\n      contact_us_url: \"Escribenos un correo electrónico\",\n      scribe_join_description: \"cuéntanos más sobre ti, tu experiencia en el mundo de la programación y sobre qué cosas te gustaría escribir. ¡Y continuaremos a partir de ahí!\",\n      scribe_subscribe_desc: \"Recibe correos sobre anuncios de redacción de Artículos.\",\n      diplomat_introduction_pref: \"Así, si hemos aprendido algo desde el \",\n      diplomat_launch_url: \"lanzamiento en octubre\",\n      diplomat_introduction_suf: \"hay un interés considerable en CodeCombat en otros paises, ¡especialmente Brasil! Estamos formando un cuerpo de traductores con ganas de traducir un grupo de palabras tras otro para hacer CodeCombat tan accesible para todo el mundo como sea posible. Si quieres recibir avances de próximos contenidos y quieres poner esos niveles a disposición de los que comparten tu idioma tan pronto como sea posible, entonces esta Clase es para ti.\",\n      diplomat_attribute_1: \"Fluidez con el ingles y el lenguaje al que quieras traducir. Cuando de transmitir ideas complejas se trata, ¡es importante tener grandes conocimientos de ambas!\",\n      diplomat_i18n_page_prefix: \"Puedes traducir nuestros niveles yendo a nuestra\",\n      diplomat_i18n_page: \"página de traducciones\",\n      diplomat_i18n_page_suffix: \", o en nuestra interfaz y sitio web en GitHub.\",\n      diplomat_join_pref_github: \"Encuentra el fichero local de tu idioma \",\n      diplomat_github_url: \"en GitHub\",\n      diplomat_join_suf_github: \", edítalo online, y solicita que sea revisado. Además, marca la casilla de abajo para mantenerte informado en nuevos progresos en Internacionalización.\",\n      diplomat_subscribe_desc: \"Recibe correos sobre nuevos niveles y desarrollos para traducir.\",\n      ambassador_introduction: \"Esta es una comunidad en construcción y tú eres parte de las conexiones. Tenemos chat Olark, correos electrónicos y las redes sociales con una gran cantidad de personas con quienes hablar, ayudar a familiarizarse con el juego y aprender. Si quieres ayudar a la gente a que se involucre, se divierta, y tenga buenas sensaciones sobre CodeCombat y hacia dónde vamos, entonces esta clase es para ti.\",\n      ambassador_attribute_1: \"Habilidades de comunicación. Ser capaz de identificar los problemas que los jugadores están teniendo y ayudarles a resolverlos. Además, mantener al resto de nosotros informados sobre lo que los jugadores están diciendo, lo que les gusta, lo que no ¡y de lo que quieren más!\",\n      ambassador_join_desc: \"cuéntanos más sobre ti, que has hecho y qué estarías interesado en hacer. ¡Y continuaremos a partir de ahí!\",\n      ambassador_join_note_strong: \"Nota\",\n      ambassador_join_note_desc: \"Una de nuestras principales prioridades es construir un modo multijugador donde los jugadores con mayores dificultades a la hora de resolver un nivel, puedan invocar a los magos más avanzados para que les ayuden. Será una buena manera de que los Embajadores puedan hacer su trabajo. ¡Te mantendremos informado!\",\n      ambassador_subscribe_desc: \"Recibe correos sobre actualizaciones de soporte y desarrollo del multijugador.\",\n      teacher_subscribe_desc: \"Obtener actulizaciones y anuncios para maestros en su correo electrónico.\",\n      changes_auto_save: \"Los cambios son guardados automáticamente cuando marcas las casillas de verificación.\",\n      diligent_scribes: \"Nuestros diligentes Escribas:\",\n      powerful_archmages: \"Nuestros poderosos Archimagos:\",\n      creative_artisans: \"Nuestros creativos Artesanos:\",\n      brave_adventurers: \"Nuestros bravos Aventureros:\",\n      translating_diplomats: \"Nuestros políglotas Diplomáticos:\",\n      helpful_ambassadors: \"Nuestros amables Embajadores:\"\n    },\n    ladder: {\n      my_matches: \"Mis Partidas\",\n      simulate: \"Simular\",\n      simulation_explanation: \"¡Simulando tus juegos puedes mejorar tu posición más rápido!\",\n      simulation_explanation_leagues: \"Principalmente ayudarás a simular juegos para jugadores aliados en tus clanes y cursos.\",\n      simulate_games: \"¡Simular Juegos!\",\n      games_simulated_by: \"Juegos simulados por ti:\",\n      games_simulated_for: \"Juegos simulados para ti:\",\n      games_in_queue: \"Juegos actualmente en cola:\",\n      games_simulated: \"Juegos simulados\",\n      games_played: \"Juegos jugados\",\n      ratio: \"Proporción\",\n      leaderboard: \"Tabla de Posiciones\",\n      battle_as: \"Combate como \",\n      summary_your: \"Tus \",\n      summary_matches: \"Partidas - \",\n      summary_wins: \" Ganadas, \",\n      summary_losses: \" Perdidas\",\n      rank_no_code: \"Sin Código Nuevo para Clasificar\",\n      rank_my_game: \"¡Clasifica Mi Juego!\",\n      rank_submitting: \"Enviando...\",\n      rank_submitted: \"Enviado para Clasificación\",\n      rank_failed: \"Fallo al Clasificar\",\n      rank_being_ranked: \"Juego Siendo Clasificado\",\n      rank_last_submitted: \"Presentado\",\n      help_simulate: \"¿Ayudar simulando juego?\",\n      code_being_simulated: \"Tu nuevo código está siendo simulado por otros jugadores para clasificación. Esto se refrescará a medida que vengan nuevas partidas.\",\n      no_ranked_matches_pre: \"Sin partidas clasificadas para el \",\n      no_ranked_matches_post: \" equipo! Juega en contra de algunos competidores y luego vuelve aquí para ver tu juego clasificado.\",\n      choose_opponent: \"Escoge un Oponente\",\n      select_your_language: \"Selecciona tu idioma\",\n      tutorial_play: \"Juega el Tutorial\",\n      tutorial_recommended: \"Recomendado si nunca has jugado antes\",\n      tutorial_skip: \"Saltar Tutorial\",\n      tutorial_not_sure: \"¿No estás seguro de que sucede?\",\n      tutorial_play_first: \"Juega el Tutorial primero.\",\n      simple_ai: \"IA Simple\",\n      warmup: \"Calentamiento\",\n      friends_playing: \"Amigos Jugando\",\n      log_in_for_friends: \"Ingresa para jugar con tus amigos!\",\n      social_connect_blurb: \"Conectate y juega contra tus amigos!\",\n      invite_friends_to_battle: \"Invita a tus amigos para que se unan a la Batalla!\",\n      fight: \"Pelea!\",\n      watch_victory: \"Observa tu Victoria\",\n      defeat_the: \"Derrota a\",\n      watch_battle: \"Mirar la batalla\",\n      tournament_started: \", iniciado\",\n      tournament_ends: \"Final de Torneo\",\n      tournament_ended: \"Finalizó el Torneo\",\n      tournament_rules: \"Reglas del Torneo\",\n      tournament_blurb: \"Escribe código, recolecta oro, arma ejercitos, aplasta adversarios, gana premios, y asciende en tu carrera por $40,000 en el Torneo Codicia! Echa un vistazo a los detalles\",\n      tournament_blurb_criss_cross: \"Gana apuestas, construye caminos, burla tus oponentes, agarra gemas, y asciende tu perfil en nuestro torneo Cruzado! Echa un vistazo a los detalles\",\n      tournament_blurb_zero_sum: \"Suelta tus habilidades de código en recolección de oro y tácticas de batalla en este partido espejo alpino entre el hechicero rojo y el hechicero azul. El torneo comenzó el Viernes, 27 de Marzo y se extenderá hasta el Lunes, 6 de Abril a las 5PM PDT. Compite por la diversión y la gloria ! Echa un vistazo a los detalles:\",\n      tournament_blurb_ace_of_coders: \"¡Lucha en el glaciar congelado en este encuentro con estilo dominación en espejo! El torneo comienza el Miércoles 16 de Septiembre, y se ejecutará hasta el Miércoles 14 de Octubre hasta las 5PM PDT. Revisa los detalles\",\n      tournament_blurb_blog: \"en nuestro blog\",\n      rules: \"Reglas\",\n      winners: \"Ganadores\",\n      league: \"Liga\",\n      red_ai: \"IA Roja\",\n      blue_ai: \"IA Azul\",\n      wins: \"Gana\",\n      humans: \"Rojo\",\n      ogres: \"Azul\"\n    },\n    user: {\n      stats: \"Estados\",\n      singleplayer_title: \"Nivel un jugador\",\n      multiplayer_title: \"Niveles multijugador\",\n      achievements_title: \"Logros\",\n      last_played: \"Último jugado\",\n      status: \"Estado\",\n      status_completed: \"Completo\",\n      status_unfinished: \"Incompleto\",\n      no_singleplayer: \"No hay juegos para un jugador todavía.\",\n      no_multiplayer: \"No hay juegos multijugador todavía.\",\n      no_achievements: \"Sin Logros todavía.\",\n      favorite_prefix: \"Idioma favorito \",\n      favorite_postfix: \".\",\n      not_member_of_clans: \"No eres miembro de ningún clan todavía.\"\n    },\n    achievements: {\n      last_earned: \"Último Ganado\",\n      amount_achieved: \"Cantidad\",\n      achievement: \"Logros\",\n      current_xp_prefix: \"\",\n      current_xp_postfix: \" en total\",\n      new_xp_prefix: \"\",\n      new_xp_postfix: \" ganado\",\n      left_xp_prefix: \"\",\n      left_xp_infix: \" hasta el nivel \",\n      left_xp_postfix: \"\"\n    },\n    account: {\n      payments: \"Pagos\",\n      prepaid_codes: \"Códigos Prepagados\",\n      purchased: \"Comprado\",\n      subscription: \"Suscripción\",\n      invoices: \"Facturas\",\n      service_apple: \"Apple\",\n      service_web: \"Web\",\n      paid_on: \"Pagado en\",\n      service: \"Servicio\",\n      price: \"Precio\",\n      gems: \"Gemas\",\n      active: \"Activo\",\n      subscribed: \"Suscrito\",\n      unsubscribed: \"Desuscrito\",\n      active_until: \"Activo Hasta\",\n      cost: \"Costo\",\n      next_payment: \"Próximo Pago\",\n      card: \"Tarjeta\",\n      status_unsubscribed_active: \"No estas suscrito y no se te cobrará, pero tu cuenta está activa por ahora.\",\n      status_unsubscribed: \"¡Obtén acceso a nuevos niveles, héroes, items y gemas extras con la suscripción a CodeCombat!\",\n      not_yet_verified: \"No verificado todavía.\",\n      resend_email: \"Reenviar email\",\n      email_sent: \"¡Email enviado! Revisa tu casilla.\",\n      verifying_email: \"Verificando tu email...\",\n      successfully_verified: \"¡Has verificado tu email con exito!\",\n      verify_error: \"Algo salio mal al verificar tu email :(\"\n    },\n    account_invoices: {\n      amount: \"Cantidad en dólares.\",\n      declined: \"La tarjeta fue rechazada.\",\n      invalid_amount: \"Por favor ingrese cantidad en dólares.\",\n      not_logged_in: \"Ingresate o crea una cuenta para acceder a las facturas.\",\n      pay: \"Pagar Factura\",\n      purchasing: \"Comprando...\",\n      retrying: \"Error de Servidor, reintentando...\",\n      success: \"Listo, fue cobrado. Gracias!\"\n    },\n    account_prepaid: {\n      purchase_code: \"Adquirir un Código de Suscripción\",\n      purchase_code1: \"Los códigos de suscripción pueden ser canjeados para agregar tiempo de suscripción premium para una o más cuentas CodeCombat.\",\n      purchase_code2: \"Cada cuenta CodeCombat puede canjear una sola vez un Código de Suscripción en particular.\",\n      purchase_code3: \"Los meses del Código de Suscripción serán agregados al final de la suscripción existente de la cuenta.\",\n      users: \"Usuarios\",\n      months: \"Meses\",\n      purchase_total: \"Total\",\n      purchase_button: \"Enviar Adquisición\",\n      your_codes: \"Tus Códigos:\",\n      redeem_codes: \"Reclamar un Código de Suscripción\",\n      prepaid_code: \"Código Prepagado\",\n      lookup_code: \"Buscar código prepagado\",\n      apply_account: \"Aplicara tu cuenta\",\n      copy_link: \"Puedes copiarl el enlace del código y enviarlo a alguien.\",\n      quantity: \"Cantidad\",\n      redeemed: \"Reclamado\",\n      no_codes: \"¡Aún sin códigos!\",\n      you_can1: \"Puedes\",\n      you_can2: \"comprar un código prepagado\",\n      you_can3: \"que puede ser aplicado a tu propia cuenta o regalado a otros.\"\n    },\n    loading_error: {\n      could_not_load: \"Error cargando del servidor\",\n      connection_failure: \"Fallo de conexión.\",\n      connection_failure_desc: \"Al parecer no estás conectado a internet! Revisa tu conección de red y actualiza la página.\",\n      login_required: \"Login Requerido\",\n      login_required_desc: \"Necesitas iniciar sesión para acceder a esta página.\",\n      unauthorized: \"Necesitas acceder. ¿Tienes desabilitadas las cookies?\",\n      forbidden: \"No tienes los permisos.\",\n      forbidden_desc: \"Oh no, no hay nada que podemos mostrarte aquí! Asegurate que has iniciado sesión en la cuenta correcta, o visita uno de los siguientes enlaces para regresar a programar!\",\n      not_found: \"No encontrado.\",\n      not_found_desc: \"Mmm, no hay nada aquí. Visita uno de los siguientes enlaces para regresar a programar!\",\n      not_allowed: \"Método no permitido.\",\n      timeout: \"Expiró el tiempo del servidor.\",\n      conflict: \"Conflicto de recurso.\",\n      bad_input: \"Mala entrada.\",\n      server_error: \"Error de servidor.\",\n      unknown: \"Error desconocido.\",\n      error: \"ERROR\",\n      general_desc: \"Ocurrió un errór, probablemente es tu culpa. Espera un poco y luego refresca la página, o visíta uno de los siguientes enlaces para regresar a programar!\"\n    },\n    resources: {\n      level: \"Nivel\",\n      patch: \"Parche\",\n      patches: \"Parches\",\n      system: \"Sistema\",\n      systems: \"Sistemas\",\n      component: \"Componente\",\n      components: \"Componentes\",\n      hero: \"Heróe\",\n      campaigns: \"Campañas\"\n    },\n    concepts: {\n      advanced_css_rules: \"Reglas CSS Avanzadas\",\n      advanced_css_selectors: \"Selectores CSS Avanzados\",\n      advanced_html_attributes: \"Atributos HTML Avanzados\",\n      advanced_html_tags: \"Etiquetas HTML Avanzados\",\n      algorithm_average: \"Algoritmo Promedio\",\n      algorithm_find_minmax: \"Algoritmo Buscar Min/Max\",\n      algorithm_search_binary: \"Algoritmo Búsqueda Binaria\",\n      algorithm_search_graph: \"Algoritmo Búsqueda Grafica\",\n      algorithm_sort: \"Algoritmo Ordenar\",\n      algorithm_sum: \"Algoritmo Suma\",\n      \"arguments\": \"Argumentos\",\n      arithmetic: \"Aritmética\",\n      array_2d: \"Matrices Bidimencionales\",\n      array_index: \"Indexando Matrices\",\n      array_iterating: \"Iterando Sobre Matrices\",\n      array_literals: \"Matrices Literales\",\n      array_searching: \"Buscando en Matrices\",\n      array_sorting: \"Array Sorting\",\n      arrays: \"Arreglos\",\n      basic_css_rules: \"Reglas CSS Básicas\",\n      basic_css_selectors: \"Selectores CSS Básicos\",\n      basic_html_attributes: \"Atributos HTML Básicos\",\n      basic_html_tags: \"Etiquetas HTML Básicas\",\n      basic_syntax: \"Sintaxis Básica\",\n      binary: \"Binario\",\n      boolean_and: \"Booleanos Y\",\n      boolean_equality: \"Booleano Equidad\",\n      boolean_greater_less: \"Booleano Mayor/Menor que\",\n      boolean_logic_shortcircuit: \"Booleano Cortocircuito Lógico\",\n      boolean_not: \"Booleano Negación\",\n      boolean_operator_precedence: \"Booleano Precedencia de Operadores\",\n      boolean_or: \"Booleano O\",\n      bootstrap: \"Bootstrap\",\n      break_statements: \"Sentencias Break\",\n      classes: \"Clases\",\n      continue_statements: \"Sentencias Continue\",\n      dom_events: \"Eventos de DOM\",\n      dynamic_styling: \"Estilos Dinámicos\",\n      event_concurrency: \"Concurrencia de Eventos\",\n      event_data: \"Datos de Evento\",\n      event_handlers: \"Manejadores de Evento\",\n      for_loops: \"Bucle For\",\n      for_loops_nested: \"Bucles For Anidados\",\n      for_loops_range: \"Bucle For en Rangos\",\n      functions: \"Funciones\",\n      game_ai: \"IA de Juego\",\n      game_goals: \"Objetivos del Juego\",\n      game_spawn: \"Generador del Juego\",\n      graphics: \"Gráficos\",\n      graphs: \"Gráfico\",\n      heaps: \"Montículos\",\n      if_else_statements: \"Sentencias If/Else\",\n      if_statements: \"Sentencias If\",\n      if_statements_nested: \"Sentencias If Anidadas\",\n      indexing: \"Indizado de Arreglos\",\n      input_handling_flags: \"Manejo de Entradas - Flags\",\n      input_handling_keyboard: \"Manejo de Entradas - Keyboard\",\n      input_handling_mouse: \"Manejo de Entradas - Mouse\",\n      intermediate_css_rules: \"Reglas CSS Intermedias\",\n      intermediate_css_selectors: \"Selectores CSS Intermedios\",\n      intermediate_html_attributes: \"Atributos HTML Intermedios\",\n      intermediate_html_tags: \"Etiquetas HTML Intermedias\",\n      jquery: \"jQuery\",\n      jquery_animations: \"Animaciones jQuery\",\n      jquery_filtering: \"Filtrado de Elementos jQuery\",\n      jquery_selectors: \"Selectores jQuery\",\n      length: \"Longitud de Matrices\",\n      math_geometry: \"Geometría\",\n      math_operations: \"Operaciones Matemáticas\",\n      math_trigonometry: \"Trigonometría\",\n      object_literals: \"Objetos Literales\",\n      parameters: \"Parámetros\",\n      property_access: \"Acceso a Propiedades\",\n      property_assignment: \"Asignación de Propiedades\",\n      queues: \"Estructuras de Datos - Colas\",\n      reading_docs: \"Leyendo Documentos\",\n      recursion: \"Recursividad\",\n      return_statements: \"Sentencias de Return\",\n      stacks: \"Estructuras de Datos - Pilas\",\n      strings: \"Cadenas\",\n      strings_concatenation: \"Concatenación de Cadenas\",\n      strings_substrings: \"Subcadenas\",\n      trees: \"Estructuras de Datos - Arboles\",\n      variables: \"Variables\",\n      vectors: \"Vectores\",\n      while_condition_loops: \"Bucles While con Condicionales\",\n      while_loops_simple: \"Bucles While\",\n      while_loops_nested: \"Bucles While Anidados\",\n      xy_coordinates: \"Coordenadas Cartesianas\",\n      advanced_strings: \"Cadenas - Avanzado\",\n      algorithms: \"Algoritmos\",\n      boolean_logic: \"Lógica Booleana\",\n      basic_html: \"HTML Básico\",\n      basic_css: \"CSS Básico\",\n      basic_web_scripting: \"Web Scripting Básico\",\n      intermediate_html: \"HTML Intermedio\",\n      intermediate_css: \"CSS Intermedio\",\n      intermediate_web_scripting: \"Web Scripting Intermedio\",\n      advanced_html: \"HTML Avanzado\",\n      advanced_css: \"CSS Avanzado\",\n      advanced_web_scripting: \"Web Scripting Avanzado\",\n      input_handling: \"Manejo de Entradas\",\n      while_loops: \"Bucles\",\n      place_game_objects: \"Poner objetos en el juego\",\n      construct_mazes: \"Construir laberintos\",\n      create_playable_game: \"Crear un proyecto de juego jugable y compartible\",\n      alter_existing_web_pages: \"Editar página web existente\",\n      create_sharable_web_page: \"Crear página web compartible\",\n      basic_input_handling: \"Manejo de Entradas Básico\",\n      basic_game_ai: \"IA de Juego Básico\",\n      basic_javascript: \"JavaScript Básico\",\n      basic_event_handling: \"Manejo de Eventos Básico\",\n      create_sharable_interactive_web_page: \"Crear página web interactiva compartible\"\n    },\n    delta: {\n      added: \"Agregado\",\n      modified: \"Modificado\",\n      not_modified: \"No Modificado\",\n      deleted: \"Borrado\",\n      moved_index: \"Índice movido\",\n      text_diff: \"Diferir Texto\",\n      merge_conflict_with: \"UNIR CONFLICTO CON\",\n      no_changes: \"Sin cambios\"\n    },\n    legal: {\n      page_title: \"Información legal\",\n      opensource_intro: \"CodeCombat es completamente open source.\",\n      opensource_description_prefix: \"Echa un vistazo a \",\n      github_url: \"nuestro GitHub\",\n      opensource_description_center: \"y ayudanos si quieres! CodeCombat esta construido por docenas de proyectos open source, y los amamos. Mira \",\n      archmage_wiki_url: \"nuestra wiki de Archimago\",\n      opensource_description_suffix: \"Para la lista de softwares que hacen al juego posible.\",\n      practices_title: \"Mejores prácticas respetuosas\",\n      practices_description: \"Estas son nuestras promesas hacia ti, el jugador, en términos menos legales.\",\n      privacy_title: \"Privacidad\",\n      privacy_description: \"No vederemos nada sobre tu información personalWe will not sell any of your personal information.\",\n      security_title: \"Seguridad\",\n      security_description: \"Queremos mantener tu información personal privada. Como un proyecto open source, cualquiera puede revisar y mejorar nuestros sistemas de seguridad.\",\n      email_title: \"Mail\",\n      email_description_prefix: \"No te vamos a inundar de Spam. Mediante\",\n      email_settings_url: \"tus opciones de mail\",\n      email_description_suffix: \"o mediante links en los mails que mandamos, tu puedas cambiar tus preferencias y fácilmente desuscribirte en cualquier momento.\",\n      cost_title: \"Costo\",\n      cost_description: \"CodeCombat es gratuito para todos sus niveles principales, con una suscripción de ${{price}} USD/mes con acceso a niveles adicionales y un bonus de {{gems}} gemas cada mes. Puedes cancelar con un click y ofrecemos una garantía del 100%.\",\n      copyrights_title: \"Derechos y Licencias\",\n      contributor_title: \"Contributor License Agreement\",\n      contributor_description_prefix: \"Todas las Contribuciones, tanto en el website como en nuestro Repositorio GitHub, estan sujetos a nuestra aprobación.\",\n      cla_url: \"CLA\",\n      contributor_description_suffix: \"A lo que debes de estar de acuerdo antes de contribuir.\",\n      code_title: \"Código - MIT\",\n      code_description_prefix: \"Todo el código pertenece a CodeCombat u hospedado en codecombat.com, sea en el repositorio GitHub o en la base de datos en codecombat.com, está bajo licencia\",\n      mit_license_url: \"Licencia MIT\",\n      code_description_suffix: \"Esto incluye todo el código en Systems and Components that are made available by CodeCombat for the purpose of creating levels.\",\n      art_title: \"Arte/Música - Comunas Creativas \",\n      art_description_prefix: \"Todo el Contenido Comunal está disponible bajo la\",\n      cc_license_url: \"Licencia Internacional de Atribución Comunas Creativas (CC) 4.0\",\n      art_description_suffix: \"Contenido Comunal es cualquiera hecho por CodeCombat y disponile con el propósito de crear niveles. Esto incluye:\",\n      art_music: \"Música\",\n      art_sound: \"Sonido\",\n      art_artwork: \"Trabajo Artístico\",\n      art_sprites: \"Sprites\",\n      art_other: \"Cualquier otro trabajo creativo (no necesariamente código) que están disponibles cuando se crean niveles.\",\n      art_access: \"Actualmente no hay un sistema fácil y universal para obtener estos activos. En general, obtenlos de los URLs tal y como son usados por el sitio, contáctanos si necesitas ayuda, o ayúdanos extendiendo el sitio para hacer estos activos accesibles más fácilmente.\",\n      art_paragraph_1: \"Para atribución, por favor nombre y enlace a codecombat.com cerca de donde esta fuente sea usada o donde sea apropiado en el medio usado. Por ejemplo:\",\n      use_list_1: \"Si es usado en una película o en otro juego, incluya codecombat.com en los créditos.\",\n      use_list_2: \"Si es usado en un website, incluya un link cerca donde es usado, por ejemplo debajo de una imagen, o en las atribuciones generales de la página, donde pueda mencionar también otros trabajos bajo Creative Commons o de código abierto que sean usados en el sitio web. Cualquier otro website que haga clara referencia a CodeCombat, tal como un blog post mencionando a CodeCombat, no necesita una atribución separada.\",\n      art_paragraph_2: \"Si el contenido usado no fue creado por CodeCombat, sino por un usuario de codecombat.com, atribuya al usuario y siga las directivas de atribución provistas en la descripción del recurso, en caso las haya.\",\n      rights_title: \"Derechos Reservados\",\n      rights_desc: \"Todos los derechos estan reservados para los niveles mismos. Esto incluye.\",\n      rights_scripts: \"Scripts\",\n      rights_unit: \"Configuración de la unidad\",\n      rights_writings: \"Escritos\",\n      rights_media: \"Media (sonidos, música) y cualquier otro contenido creativo hecho específicamente para un nivel y que no haya sido hecho disponible al público cuando se crearon los niveles.\",\n      rights_clarification: \"Aclarando, todo contenido puesto a disposición en el Editor de Niveles con el propósito de hacer más niveles se encuentra bajo licencia CC, mientras todo contenido creado con el Editor de Niveles o cargado durante la creación de Niveles no lo está.\",\n      nutshell_title: \"En una palabra\",\n      nutshell_description: \"Cualquier recurso que te proveamos en el Editor de Niveles es gratis de usar como te plazca para la creación de Niveles. Sin embargo, nos reservamos el derecho de restringir la distribución de los niveles por sí mismos (aquellos creados en codecombat.com) para así poder cobrar por ellos en el futuro, si es que eso es lo que termina pasando.\",\n      canonical: \"La versión en inglés de este documento es la versión canónica y definitiva. Si hay alguna discrepancia entre las traducciones, la versión en inglés toma precedencia.\",\n      third_party_title: \"Servicios de Terceros\",\n      third_party_description: \"CodeCombat utiliza los siguientes servicios de terceros (entre otros):\"\n    },\n    ladder_prizes: {\n      title: \"Premios de Torneos\",\n      blurb_1: \"Estos premios seran dados de acuerdo a \",\n      blurb_2: \"las reglas del torneo\",\n      blurb_3: \"a los mejores jugadores humanos y ogros.\",\n      blurb_4: \"Dos equipos significan el doble de premios!\",\n      blurb_5: \"(Habrán dos ganadores en el primer puesto, dos en el segundo puesto, etc.)\",\n      rank: \"Ranking\",\n      prizes: \"Premios\",\n      total_value: \"Valor Total\",\n      in_cash: \"en dinero\",\n      custom_wizard: \"CodeCombat Mago Personalizado\",\n      custom_avatar: \" CodeCombat Avatar Personalizado\",\n      heap: \"Por seis meses acceso \\\"Startup\\\".\",\n      credits: \"creditos\",\n      one_month_coupon: \"Cupón: elige entre Rails o HTML.\",\n      one_month_discount: \"descuento del 30%: elige entre Rails o HTML\",\n      license: \"licencia\",\n      oreilly: \"ebook de su elección\"\n    },\n    calendar: {\n      year: \"Año\",\n      day: \"Día\",\n      month: \"Mes\",\n      january: \"Enero\",\n      february: \"Febrero\",\n      march: \"Marzo\",\n      april: \"Abril\",\n      may: \"Mayo\",\n      june: \"Junio\",\n      july: \"Julio\",\n      august: \"Agosto\",\n      september: \"Septiembre\",\n      october: \"Octubre\",\n      november: \"Noviembre\",\n      december: \"Diciembre\"\n    },\n    code_play_create_account_modal: {\n      title: \"¡LO LOGRASTE!\",\n      body: \"Pronto serás un programador experto. Regístrate para recibir <strong>100 GEMAS</strong> adicionales y participar en un sorteo donde podrás <strong>GANAR $50,000 Y OTROS PREMIOS DE LENOVO</strong>.\",\n      sign_up: \"REGÍSTRATE Y SIGUE PROGRAMANDO ▶\",\n      victory_sign_up_poke: \"¡ABRE UNA CUENTA GRATUITA PARA GUARDAR TU CÓDIGO Y PARTICIPAR EN UN SORTEO DONDE PODRÁS GANAR PREAMIOS!\",\n      victory_sign_up: \"REGÍSTRATE PARA PODER <strong>GANAR $50,000</strong>\"\n    },\n    server_error: {\n      email_taken: \"Email ya utilizado\",\n      username_taken: \"El nombre de usuario ya existe\"\n    },\n    esper: {\n      line_no: \"Linea $1: \",\n      uncaught: \"$1 no detectado\",\n      reference_error: \"ReferenciaErronea: \",\n      argument_error: \"ArgumentoErroneo: \",\n      type_error: \"TipoErroneo: \",\n      syntax_error: \"SintaxisErronea: \",\n      error: \"Error: \",\n      x_not_a_function: \"$1 no es una función\",\n      x_not_defined: \"$1 no está definido\",\n      spelling_issues: \"Corrige la ortografía: ¿quisiste decir `$1` en lugar de `$2`?\",\n      capitalization_issues: \"Cuidado con las mayúsculas: `$1` debe ser `$2`.\",\n      py_empty_block: \"$1 vacío. Adelanta 4 espacios las declaraciones dentro del bloque $2.\",\n      fx_missing_paren: \"Si deseas llamar `$1` como función, pon paréntesis `()` al final\",\n      unmatched_token: \"`$1` no coincide. Cada apertura de `$2` necesita un cierre de `$3` para coincidir.\",\n      unterminated_string: \"Cadena sin terminar. Agrega `\\\"` al final de la cadena.\",\n      missing_semicolon: \"Falta punto y coma.\",\n      missing_quotes: \"Faltan comillas. Intenta `$1`\",\n      target_a_unit: \"Apuntar a una unidad.\",\n      attack_capitalization: \"Ataca a $1, no a $2. (Mayúsculas son importantes.)\",\n      empty_while: \"Sentencia while vacía. Adelanta 4 espacios las declaraciones dentro del bloque while.\",\n      need_a_after_while: \"Necesitas un `$1` después de `$2`.\",\n      too_much_indentation: \"Demasiada indentación al inicio de esta línea.\",\n      missing_hero: \"Falta la palabra clave `$1`; debe ser `$2`.\",\n      takes_no_arguments: \"`$1` no acepta argumentos.\",\n      no_one_named: \"No se puede apuntar a \\\"$1\\\" porque nadie se llama así.\",\n      separated_by_comma: \"Al llamar una función los parámetros deben estar separados con `,`\",\n      protected_property: \"No se puede leer propiedad protegida: $1\",\n      need_parens_to_call: \"Si deseas llamar `$1` como función, pon paréntesis `()` al final\",\n      expected_an_identifier: \"Se esperaba un identificador y en su lugar se recibió '$1'.\",\n      unexpected_identifier: \"Identificador inesperado\",\n      unexpected_end_of: \"Fin de entrada inesperado\",\n      unnecessary_semicolon: \"Punto y coma innecesario.\",\n      unexpected_token_expected: \"Símbolo inesperado: se esperaba $1 pero se encontró $2 mientras se analizaba $3\",\n      unexpected_token: \"Símbolo $1 inesperado\",\n      unexpected_token2: \"Símbolo inesperado\",\n      unexpected_number: \"Número inesperado\",\n      unexpected: \"No se esperaba '$1'.\",\n      escape_pressed_code: \"Escape presionado; código anulado.\",\n      target_an_enemy: \"Apunta a un enemigo por su nombre, como `$1`, no la cadena `$2`.\",\n      target_an_enemy_2: \"Apunta a un enemigo por su nombre, como $1.\",\n      cannot_read_property: \"No se puede leer la propiedad '$1' de indefinido\",\n      attempted_to_assign: \"Se intentó asignar una propiedad de solo lectura.\",\n      unexpected_early_end: \"Fin del programa antes de lo esperado.\",\n      you_need_a_string: \"Necesitas una cadena para construir; una de $1\",\n      unable_to_get_property: \"No se puede obtener la propiedad '$1' de una referencia nula o indefinida\",\n      code_never_finished_its: \"El código no finalizo. Es demasiado lento o tiene un bucle infinito.\",\n      unclosed_string: \"Cadena sin cerrar.\",\n      unmatched: \"No coincide '$1'.\",\n      error_you_said_achoo: \"Dijiste: $1, pero la contraseña es: $2. (Mayúsculas y minúsculas son importantes.)\",\n      indentation_error_unindent_does: \"Error de Indentación: no coincide con ningun nivel de indentación\",\n      indentation_error: \"Error de Indentación.\",\n      need_a_on_the: \"Necesitas un `:` al final de la linea seguido de `$1`.\",\n      attempt_to_call_undefined: \"se intento llamar '$1' (un valor nulo)\",\n      unterminated: \"`$1` sin terminar\",\n      target_an_enemy_variable: \"Apunta a la variable $1, y no al string $2. (Intenta usar $3.)\",\n      error_use_the_variable: \"Usa el nombre de la variable como `$1` en lugar de la cadena como `$2`\",\n      indentation_unindent_does_not: \"Desindentación no coincide con ningún nivel de indentación\",\n      unclosed_paren_in_function_arguments: \"No se cerró $1 en los argumentos de la función.\",\n      unexpected_end_of_input: \"Fin de entrada inesperado\",\n      there_is_no_enemy: \"No hay `$1`. Primero utiliza `$2`.\",\n      try_herofindnearestenemy: \"Intenta `$1`\",\n      there_is_no_function: \"No hay ninguna función `$1`, pero `$2` tiene el método `$3`.\",\n      is_there_an_enemy: \"¿Aún hay algún enemigo en tu linea de visión?\",\n      target_is_null_is: \"El objetivo es $1. ¿Siempre hay un blanco para atacar? (Usa $2?)\",\n      hero_has_no_method: \"`$1` no tiene el método `$2`.\",\n      there_is_a_problem: \"Hay un problema con tu código.\",\n      did_you_mean: \"¿Quisiste decir $1? No tienes equipado un item con esa habilidad.\",\n      missing_a_quotation_mark: \"Falta una commilla. \",\n      missing_var_use_var: \"Falta `$1`. Utiliza `$2` para hacer una nueva variable.\",\n      you_do_not_have: \"No tienes equipado un item con la habilidad $1.\",\n      put_each_command_on: \"Pon cada comando en lineas separadas\",\n      are_you_missing_a: \"¿Te falta un '$1' despues de '$2'? \",\n      your_parentheses_must_match: \"Los paréntesis deben coincidir.\"\n    }\n  }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///225\n");

/***/ })

});