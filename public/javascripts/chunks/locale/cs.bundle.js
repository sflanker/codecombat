/*! hash:ae6a15474fa7d9a1f9f8, chunkhash:d6bfab4fd0394bc9a772, name:locale/cs, filebase:cs.bundle.js, query:, file:javascripts/chunks/locale/cs.bundle.js */
webpackJsonp([68],{

/***/ 217:
/***/ (function(module, exports) {

eval("module.exports = {\n  nativeDescription: \"čeština\",\n  englishDescription: \"Czech\",\n  translation: {\n    nav: {\n      map: \"Mapa\",\n      play: \"Úrovně\",\n      community: \"Komunita\",\n      courses: \"Kurzy\",\n      blog: \"Blog\",\n      forum: \"Fórum\",\n      account: \"Účet\",\n      my_account: \"Můj Účet\",\n      profile: \"Profil\",\n      home: \"Domů\",\n      contribute: \"Přispívat\",\n      legal: \"Licence\",\n      privacy: \"Soukromí\",\n      about: \"O stránkách\",\n      contact: \"Kontakt\",\n      twitter_follow: \"Sledovat na Twitteru\",\n      my_classrooms: \"Moje Třídy\",\n      my_courses: \"Moje Kurzy\",\n      careers: \"Kariéry\",\n      facebook: \"Facebook\",\n      twitter: \"Twitter\",\n      create_a_class: \"Vytvořit Třídu\",\n      other: \"Jiné\",\n      learn_to_code: \"Nauč se kódit!\",\n      toggle_nav: \"Přepnout navigaci\",\n      schools: \"Školy\",\n      get_involved: \"Zapojit se\",\n      open_source: \"Open source (GitHub)\",\n      support: \"Podpora\",\n      faqs: \"FAQ\",\n      help_pref: \"Potřebujete pomoc? Email\",\n      help_suff: \"a my se ozveme!\",\n      resource_hub: \"Resource Hub\"\n    },\n    modal: {\n      close: \"Zavřít\",\n      okay: \"Budiž\"\n    },\n    not_found: {\n      page_not_found: \"Stránka nenalezena\"\n    },\n    diplomat_suggestion: {\n      title: \"Pomozte přeložit CodeCombat!\",\n      sub_heading: \"Potřebujeme vaše dovednosti.\",\n      pitch_body: \"Přestože vyvíjíme CodeCombat v angličtině, máme spoustu hráčů z celého světa a mnozí z nich by si rádi zahráli česky, neboť anglicky neumí. Pokud anglicky umíte, přihlaste se prosím jako Diplomat a pomozte nám v překladu webu i jednotlivých úrovní.\",\n      missing_translations: \"Dokud nebude vše přeloženo, bude se vám na zatím nepřeložených místech zobrazovat text anglicky.\",\n      learn_more: \"Dozvědět se více o Diplomatech\",\n      subscribe_as_diplomat: \"Přihlásit se jako Diplomat\"\n    },\n    play: {\n      play_as: \"Hrát jako\",\n      get_course_for_class: \"Přiřaď Herní Vývoj a jiné do svých tříd!\",\n      request_licenses: \"Kontaktujte specialisty naší školy pro více detailů.\",\n      compete: \"Soupeřit!\",\n      spectate: \"Dívat se\",\n      players: \"hráči\",\n      hours_played: \"hodin nahráno\",\n      items: \"Předměty\",\n      unlock: \"Odemknout\",\n      confirm: \"Potvrdit\",\n      owned: \"Vlastněné\",\n      locked: \"Zamčené\",\n      available: \"Dostupné\",\n      skills_granted: \"Nabyté dovednosti\",\n      heroes: \"Hrdinové\",\n      achievements: \"Úspěchy\",\n      settings: \"Nastavení\",\n      poll: \"Hlasování\",\n      next: \"Další\",\n      change_hero: \"Změnit hrdinu\",\n      buy_gems: \"Zakoupit drahokamy\",\n      subscribers_only: \"Pouze předplatitelé!\",\n      subscribe_unlock: \"Předplaťte si pro odemknutí!\",\n      subscriber_heroes: \"Předplaťte si dnes pro okamžité odemčení Amary, Hushbauma a Hattoriho!\",\n      subscriber_gems: \"Předplaťte si dnes pro nákup tohoto hrdiny za drahokamy!\",\n      anonymous: \"Anonymní hráč\",\n      level_difficulty: \"Obtížnost: \",\n      awaiting_levels_adventurer_prefix: \"Vypouštíme pět úrovní každý týden.\",\n      awaiting_levels_adventurer: \"Přihlašte se jako Dobrodruh\",\n      awaiting_levels_adventurer_suffix: \"abyste jako první hráli nejnovější úrovně.\",\n      adjust_volume: \"Nastavení hlasitosti\",\n      campaign_multiplayer: \"Multiplayer Aréna\",\n      campaign_multiplayer_description: \"...ve které programujete proti jiným hráčům.\"\n    },\n    share_progress_modal: {\n      blurb: \"Děláš velké pokroky!  Řekni někomu, co jsi se už naučil s CodeCombat.\",\n      email_invalid: \"Neplatná e-mailová adresa.\",\n      form_blurb: \"Vložte jejich e-mail níže a my už je kontaktujeme!\",\n      form_label: \"E-mailová adresa\",\n      placeholder: \"e-mailová adresa\",\n      title: \"Výborná práce, učni\"\n    },\n    login: {\n      sign_up: \"Vytvořit účet\",\n      log_in: \"Přihlásit\",\n      logging_in: \"Přihlašování\",\n      log_out: \"Odhlásit\",\n      forgot_password: \"Zapomenuté heslo?\",\n      finishing: \"Dokončování\",\n      sign_in_with_facebook: \"Přihlásit přes Facebook\",\n      sign_in_with_gplus: \"Přihlásit přes Google+\",\n      signup_switch: \"Chcete si založit účet?\"\n    },\n    signup: {\n      create_student_header: \"Vytvořit účet pro studenta\",\n      create_teacher_header: \"Vytvořit účet pro učitele\",\n      create_individual_header: \"Vytvořit účet pro jednotlivce\",\n      email_announcements: \"Dostávat novinky emailem\",\n      creating: \"Vytvářím účet...\",\n      sign_up: \"Přihlášení\",\n      log_in: \"zadejte vaše heslo\",\n      required: \"Nejprve se musíte přihlásit.\",\n      login_switch: \"Máte již účet?\",\n      birthday: \"Datum narození\",\n      checking: \"Kontroluji...\",\n      account_exists: \"Tento email se již používá:\",\n      sign_in: \"Přihlašte se\",\n      email_good: \"Email se zdá být v pořádku!\",\n      name_taken: \"Uživatelské jméno je zabrané! Co tak {{suggestedName}}?\",\n      name_available: \"Uživatelské jméno je k dispozici!\",\n      name_is_email: \"Uživatelské jméno nesmí být email\",\n      choose_type: \"Zvolte si typ účtu:\",\n      teacher_type_1: \"Vyučujte programování s CodeCombatem!\",\n      teacher_type_2: \"Nastavte si svou třídu\",\n      teacher_type_4: \"Prohlížejte si pokroky studentů\",\n      signup_as_teacher: \"Založit účet jako učitel\",\n      student_type_1: \"Nauč se programovat při hraní zajímavé hry!\",\n      student_type_2: \"Hrej si se svou třídou\",\n      student_type_3: \"Soutěž v arénach\",\n      student_type_4: \"Vyber si svého hrdinu!\",\n      student_type_5: \"Připrav si svůj třídní kód!\",\n      signup_as_student: \"Založit účet jako student\",\n      individuals_or_parents: \"Jednotlivci a rodiče\",\n      individual_type: \"Pro hráče, kteří se učí programovat samostatně. Rodiče by si měli založit účet zde.\",\n      signup_as_individual: \"Založit účet jako jednotlivec\",\n      enter_class_code: \"Zadej svůj třídní kód\",\n      enter_birthdate: \"Zadejte datum narození:\",\n      parent_use_birthdate: \"Rodiče, použijte své vlastní datum narození.\",\n      ask_teacher_1: \"Požádej svého učitele o třídní kód.\",\n      ask_teacher_2: \"Nejste součástí žádné třídy? Vytvořte si \",\n      ask_teacher_3: \"účet pro jednotlivce\",\n      ask_teacher_4: \".\",\n      account_created: \"Účet vytvořen!\",\n      confirm_individual_blurb: \"Zapište si přihlašovací údaje, budete je později potřebovat. Ověřte svůj email, abyste si mohl/a obnovit účet v případě, že zapomenete heslo - zkontrolujte si příchozí poštu!\",\n      write_this_down: \"Zapište si:\",\n      start_playing: \"Začít hrát!\",\n      select_your_starting_hero: \"Vyber si svého výchozího hrdinu:\",\n      you_can_always_change_your_hero_later: \"Hrdinu si můžeš kdykoli změnit.\"\n    },\n    recover: {\n      recover_account_title: \"Obnovení účtu\",\n      send_password: \"Zaslat nové heslo\",\n      recovery_sent: \"Email s obnovením byl zaslán.\"\n    },\n    items: {\n      primary: \"Hlavní\",\n      secondary: \"Vedlejší\",\n      armor: \"Zbroj\",\n      accessories: \"Doplňky\",\n      misc: \"Různé\",\n      books: \"Spisy\"\n    },\n    common: {\n      back: \"Zpět\",\n      coming_soon: \"Již brzy!\",\n      \"continue\": \"Pokračovat\",\n      loading: \"Načítání...\",\n      solution: \"Řešení\",\n      intro: \"Intro\",\n      saving: \"Ukládání...\",\n      sending: \"Odesílání...\",\n      send: \"Odeslat\",\n      sent: \"Odeslané\",\n      cancel: \"Zrušit\",\n      save: \"Uložit\",\n      publish: \"Publikovat\",\n      create: \"Vytvořit\",\n      fork: \"Klonovat\",\n      play: \"Hrát\",\n      retry: \"Znovu\",\n      actions: \"Akce\",\n      info: \"Info\",\n      help: \"Pomoc\",\n      watch: \"Sledovat\",\n      unwatch: \"Odsledovat\",\n      submit_patch: \"Odeslat opravu\",\n      submit_changes: \"Odeslat změny\",\n      save_changes: \"Uložit změny\",\n      required_field: \"povinné pole\"\n    },\n    general: {\n      and: \"a\",\n      name: \"Jméno\",\n      date: \"Datum\",\n      body: \"Tělo\",\n      version: \"Verze\",\n      pending: \"Nevyřízeno\",\n      accepted: \"Přijato\",\n      rejected: \"Odmítnuto\",\n      withdrawn: \"Uzavřeno\",\n      submitter: \"Odesílatel\",\n      submitted: \"Odesláno\",\n      commit_msg: \"Popisek ukládání\",\n      version_history: \"Seznam změn\",\n      version_history_for: \"Seznam změn pro: \",\n      select_changes: \"Vyberte dvě změny pro porovnání.\",\n      undo_prefix: \"Zpět\",\n      undo_shortcut: \"(Ctrl+Z)\",\n      redo_prefix: \"Znovu dopředu\",\n      redo_shortcut: \"(Ctrl+Shift+Z)\",\n      play_preview: \"Přehrát náhled současné úrovně\",\n      result: \"Výsledek\",\n      results: \"Výsledky\",\n      description: \"Popis\",\n      or: \"nebo\",\n      subject: \"Předmět\",\n      email: \"Email\",\n      password: \"Heslo\",\n      message: \"Zpráva\",\n      code: \"Kód\",\n      ladder: \"Žebříček\",\n      when: \"Když\",\n      opponent: \"Protivník\",\n      rank: \"Pořadí\",\n      score: \"Skóre\",\n      win: \"Vyhrané\",\n      loss: \"Prohrané\",\n      tie: \"Remízy\",\n      easy: \"Jednoduché\",\n      medium: \"Střední\",\n      hard: \"Těžké\",\n      player: \"Hráč\",\n      player_level: \"Úroveň\",\n      warrior: \"Válečník\",\n      ranger: \"Odstřelovač\",\n      wizard: \"Kouzelník\",\n      first_name: \"Jméno\",\n      last_name: \"Příjmení\",\n      last_initial: \"Střední iniciála\",\n      username: \"Uživatelské jméno\",\n      contact_us: \"Kontaktujte nás\",\n      close_window: \"Zavřít okno\",\n      learn_more: \"Víc informací\"\n    },\n    units: {\n      second: \"sekunda\",\n      seconds: \"sekund\",\n      minute: \"minuta\",\n      minutes: \"minut\",\n      hour: \"hodina\",\n      hours: \"hodin\",\n      day: \"den\",\n      days: \"dní\",\n      week: \"týden\",\n      weeks: \"týdnů\",\n      month: \"měsíc\",\n      months: \"měsíců\",\n      year: \"rok\",\n      years: \"roků\"\n    },\n    play_level: {\n      done: \"Hotovo\",\n      next_level: \"Další úroveň\",\n      next_game: \"Další hra\",\n      languages: \"Jazyky\",\n      home: \"Domů\",\n      level: \"Úroveň\",\n      skip: \"Přeskočit\",\n      game_menu: \"Herní menu\",\n      restart: \"Restartovat\",\n      goals: \"Cíle\",\n      goal: \"Cíl\",\n      running: \"Běžící...\",\n      success: \"Úspěch!\",\n      incomplete: \"Nedokončený\",\n      timed_out: \"Vypršel čas\",\n      failing: \"Selhání\",\n      reload: \"Znovu načíst\",\n      reload_title: \"Znovu načíst veškerý kód?\",\n      reload_really: \"Opravdu chcete resetovat tuto úroveň do počátečního stavu?\",\n      reload_confirm: \"Znovu načíst vše\",\n      victory: \"Vítězství\",\n      victory_title_prefix: \"\",\n      victory_title_suffix: \" Hotovo\",\n      victory_sign_up: \"Přihlásit se pro uložení postupu\",\n      victory_sign_up_poke: \"Chcete uložit váš kód? Vytvořte si účet zdarma!\",\n      victory_rate_the_level: \"Ohodnoťte tuto úroveň: \",\n      victory_return_to_ladder: \"Vrátit se na Žebříček\",\n      victory_saving_progress: \"Ukládání postupu\",\n      victory_go_home: \"Přejít domů\",\n      victory_review: \"Připomínky!\",\n      victory_hour_of_code_done: \"Skončili jste?\",\n      victory_hour_of_code_done_yes: \"Ano, pro dnešek jsem skončil!\",\n      victory_experience_gained: \"Získáno zkušeností\",\n      victory_gems_gained: \"Získáno drahokamů\",\n      tome_cast_button_run: \"Spustit\",\n      tome_cast_button_running: \"Spuštěné\",\n      tome_cast_button_ran: \"Spuštěno\",\n      tome_submit_button: \"Odeslat\",\n      tome_reload_method: \"Znovu načíst původní kód pro tuto metodu\",\n      tome_available_spells: \"Dostupná kouzla\",\n      tome_your_skills: \"Vaše dovednosti\",\n      hints: \"Nápověda\",\n      hints_title: \"Nápověda č. {{number}}\",\n      code_saved: \"Kód uložen\",\n      skip_tutorial: \"Přeskočit (esc)\",\n      keyboard_shortcuts: \"Klávesové zkratky\",\n      loading_start: \"Začít úroveň\",\n      problem_alert_title: \"Oprav si kód\",\n      time_current: \"Nyní:\",\n      time_total: \"Max:\",\n      time_goto: \"Jít na:\",\n      infinite_loop_title: \"Detekován nekonečný cyklus\",\n      infinite_loop_try_again: \"Zkusit znovu\",\n      infinite_loop_reset_level: \"Resetovat úroveň\",\n      infinite_loop_comment_out: \"Zakomentovat můj kód\",\n      tip_toggle_play: \"Přepněte přehrávání/pauzu pomocí Ctrl+P.\",\n      tip_scrub_shortcut: \"Ctrl+[ a Ctrl+] pro přetočení a rychlý přesun.\",\n      tip_guide_exists: \"Klikněte na průvode uvnitř herního menu (nahoře na stránce), pro užitečné informace.\",\n      tip_open_source: \"CodeCombat je 100% open source!\",\n      tip_beta_launch: \"CodeCombat spustil svoji beta verzi v Říjnu, 2013.\",\n      tip_think_solution: \"Myslete na řešení, ne na problém.\",\n      tip_theory_practice: \"Teoreticky není žádný rozdíl mezi teorií a praxí. Ale v praxi ten rozdíl je. - Yogi Berra\",\n      tip_error_free: \"Jsou dva způsoby jak psát programy bez chyb; jenom ten třetí funguje. - Alan Perlis\",\n      tip_debugging_program: \"Pokud je ladění proces, při kterém se odstraňují chyby, programování tedy musí být proces, kterým se chyby přidávají. - Edsger W. Dijkstra\",\n      tip_forums: \"Jděte na naše fóra a řekněte nám, co si myslíte!\",\n      tip_baby_coders: \"V budoucnu budou i mimina Arcikouzelníky.\",\n      tip_morale_improves: \"Načítání bude probíhat, dokud se nezlepší morálka.\",\n      tip_all_species: \"Věříme ve stejné možnosti učení se programovat pro všechny druhy.\",\n      tip_reticulating: \"Síťování páteří.\",\n      tip_harry: \"Hej kouzelníku, \",\n      tip_great_responsibility: \"S velkými dovednosti v programování přichází velká odpovědnost ladění.\",\n      tip_munchkin: \"Pokud nebudeš jíst zeleninu, munchkin půjde po tobě mezitím co budeš spát.\",\n      tip_binary: \"Je jenom 10 typů lidí na tomto světě: ti, kteří rozumí binání soustavě a ti, kteří jí nerozumí.\",\n      tip_commitment_yoda: \"Programátor musí mít nejhlubší oddanost, nejvážnější mysl. - Yoda\",\n      tip_no_try: \"Dělej. Nebo nedělej. Avšak nikdy nezkoušej. - Yoda\",\n      tip_patience: \"Trpělivost musíš mít, mladý Padawan. - Yoda\",\n      tip_documented_bug: \"Zadokumentovaná chyba není chyba; je to funkce.\",\n      tip_impossible: \"Vždy se to zdá nemožné dokud to není dokončeno. - Nelson Mandela\",\n      tip_talk_is_cheap: \"Mluvení je pro slabé. Ukaž mi kód. - Linus Torvalds\",\n      tip_first_language: \"Nejvíce zničující věc, kterou se můžeš naučit je tvůj první programovací jazyk. - Alan Kay\",\n      tip_hardware_problem: \"Q: Kolik programátorů je potřeba k výměně žárovky? Žádný. To je problém hardwaru.\",\n      tip_hofstadters_law: \"Hofstadterův zákon: Vše vždy trvá déle, než očekáváme, a to i když bereme v úvahu Hofstadterův zákon.\",\n      tip_premature_optimization: \"Předčasná optimalizace je původce všeho zla. - Donald Knuth\",\n      tip_brute_force: \"V případě pochybností, použijte brute force. - Ken Thompson\",\n      tip_extrapolation: \"Jsou jenom dva druhy lidí: ti, kteří mohou extrapolovat z nekompletních dat...\",\n      tip_superpower: \"Kódování by se téměř dalo srovnávat se superschopnostmi.\",\n      tip_control_destiny: \"V opravdovém open source máte právo řídit svůj osud. - Linus Torvalds\",\n      tip_no_code: \"Žádný kód není rychlejší než žádný kód.\",\n      tip_code_never_lies: \"Kód nikdy nelže, komentáře někdy ano. — Ron Jeffries\",\n      tip_reusable_software: \"Předtím, než může být software znovu použitelný, musí být nejprve použitelný.\",\n      tip_optimization_operator: \"Každý jazyk má své optimalizace. Ve většině jazyku to je \\\"//\\\"\",\n      tip_lines_of_code: \"Měření postupu v programování podle počtu řádků je jako měření postupu stavby letadla podle váhy. — Bill Gates\",\n      tip_source_code: \"Chci změnit svět, ale nechtějí mě dát k němu zdrojový kód.\",\n      tip_javascript_java: \"Porovnávat Javu a JavaScript je stejné, jako porovnávat auto a autoritu. - Chris Heilmann\",\n      tip_move_forward: \"Ať už děláš cokoliv, vždy jdi dopředu. - Martin Luther King Jr.\",\n      tip_google: \"Máš problém, který nemůžeš vyřešit? Vygoogluj to!\",\n      tip_adding_evil: \"Přidávání špetky zla.\",\n      tip_open_source_contribute: \"Můžeš nám pomoct zlepšit CodeCombat!\",\n      tip_compiler_ignores_comments: \"Někdy mám pocit, že kompilátor ignoruje moje komentáře.\",\n      tip_understand_recursion: \"Jediný způsob, jak pochopit rekurzi, je pochopit rekurzi.\"\n    },\n    game_menu: {\n      inventory_tab: \"Inventář\",\n      save_load_tab: \"Uložit/Načíst\",\n      options_tab: \"Možnosti\",\n      guide_tab: \"Průvodce\",\n      guide_video_tutorial: \"Video Tutoriál\",\n      guide_tips: \"Tipy\",\n      multiplayer_tab: \"Multiplayer\",\n      auth_tab: \"Registrovat se\",\n      inventory_caption: \"Vybavte svého hrdinu\",\n      choose_hero_caption: \"Vyberte hrdinu, jazyk\",\n      options_caption: \"Konfigurace nastavení\",\n      guide_caption: \"Dokumentace a tipy\",\n      multiplayer_caption: \"Hrajte s přáteli!\",\n      auth_caption: \"Uložte váš postup.\"\n    },\n    leaderboard: {\n      view_other_solutions: \"Zobrazit jiné řešení\",\n      scores: \"Skóre\",\n      top_players: \"Nejlepší hráči\",\n      day: \"Dnes\",\n      week: \"Tento týden\",\n      all: \"Celkově\",\n      time: \"Čas\",\n      damage_taken: \"Obdrženo zranění\",\n      damage_dealt: \"Uděleno zranění\",\n      difficulty: \"Obtížnost\",\n      gold_collected: \"Sebráno zlata\"\n    },\n    inventory: {\n      equipped_item: \"Nasazeno\",\n      required_purchase_title: \"Vyžadováno\",\n      available_item: \"Dostupné\",\n      restricted_title: \"Omezeno\",\n      should_equip: \"(dvojklik pro nasazení)\",\n      equipped: \"(nasazeno)\",\n      locked: \"(zamčeno)\",\n      restricted: \"(omezeno v této úrovni)\",\n      equip: \"Nasadit\",\n      unequip: \"Sundat\"\n    },\n    buy_gems: {\n      few_gems: \"Pár drahokamů\",\n      pile_gems: \"Hromada drahokamů\",\n      chest_gems: \"Truhlice drahokamů\",\n      purchasing: \"Probíhá nákup...\",\n      declined: \"Vaše karta byla odmítnuta\",\n      retrying: \"Chyba serveru, obnovování.\",\n      prompt_title: \"Nedostatek drahokamů\",\n      prompt_body: \"Chcete získat více?\",\n      prompt_button: \"Vstoupit do obchodu\",\n      recovered: \"Obnovení již zakoupených drahokamů proběhlo úspěšně. Aktualizujte stránku prosím.\",\n      price: \"x{{gems}} / měs.\"\n    },\n    subscribe: {\n      subscribe_modal_title: \"CodeCombat Premium\",\n      comparison_blurb: \"Sharpen your skills with a CodeCombat subscription!\",\n      must_be_logged: \"Musíte se nejdříve přihlásit. Prosím vytvořte si účet nebo se přihlaste z menu nahoře.\",\n      subscribe_title: \"Předplatné\",\n      unsubscribe: \"Zrušit předplatné\",\n      confirm_unsubscribe: \"Potvrdit zrušení\",\n      never_mind: \"To nevadí, pořád tě miluji\",\n      thank_you_months_prefix: \"Děkujeme za vaši podporu v posledních\",\n      thank_you_months_suffix: \"měsících.\",\n      thank_you: \"Děkujeme za podporu CodeCombatu.\",\n      sorry_to_see_you_go: \"To je škoda! Dejte nám prosím vědět, co můžeme udělat lépe.\",\n      unsubscribe_feedback_placeholder: \"Co jsme spolu dokázali?\",\n      stripe_description: \"Měsíční předplatné\",\n      subscription_required_to_play: \"Pro hraní této úrovně potřebujete předplatné.\",\n      unlock_help_videos: \"Kupte si předplatné pro odemčení všech tutoriálových videí.\"\n    },\n    choose_hero: {\n      choose_hero: \"Vyberte vašeho hrdinu\",\n      programming_language: \"Programovací jazyk\",\n      programming_language_description: \"Jaký programovací jazyk chcete použít?\",\n      \"default\": \"Výchozí\",\n      experimental: \"Pokusný\",\n      python_blurb: \"Jednoduchý byť silný, dobrý pro začátečníky i pokročilé.\",\n      javascript_blurb: \"Jazyk webových stránek. (Není stejný jako Java.)\",\n      coffeescript_blurb: \"Hezčí JavaScript syntaxe.\",\n      lua_blurb: \"Jazyk pro skriptování her.\",\n      status: \"Stav\",\n      weapons: \"Zbraně\",\n      weapons_warrior: \"Meče - Krátká vzdálenost, Žádná magie\",\n      weapons_ranger: \"Kuše, Zbraně - Dlouhá vzdálenost, Žádná magie\",\n      weapons_wizard: \"Hole, Tyče - Dlouhá vzdálenost, Magie\",\n      attack: \"Poškození\",\n      health: \"Zdraví\",\n      speed: \"Rychlost\",\n      regeneration: \"Regenerace\",\n      range: \"Vzdálenost\",\n      blocks: \"Blokuje\",\n      backstab: \"Zapíchnutí do zad\",\n      skills: \"Dovednosti\",\n      available_for_purchase: \"Dostupné pro zakoupení\",\n      level_to_unlock: \"Úrovně pro odemknutí:\",\n      restricted_to_certain_heroes: \"Pouze určití hrdinové mohou hrát tuto úroveň.\"\n    },\n    skill_docs: {\n      writable: \"zapisovatelná\",\n      read_only: \"jen pro čtení\",\n      spell: \"Kouzlo\",\n      action_name: \"název\",\n      action_cooldown: \"Zabere\",\n      action_specific_cooldown: \"Cooldown\",\n      action_damage: \"Poškození\",\n      action_range: \"Vzdálenost\",\n      action_radius: \"Dosah\",\n      action_duration: \"Trvání\",\n      example: \"Příklad\",\n      ex: \"př.\",\n      current_value: \"Aktuální hodnota\",\n      default_value: \"Výchozí hodnota\",\n      parameters: \"Parametry\",\n      returns: \"Vrací\",\n      granted_by: \"Poskytnutné od\"\n    },\n    save_load: {\n      granularity_saved_games: \"Uložené\",\n      granularity_change_history: \"Historie\"\n    },\n    options: {\n      general_options: \"Obecné nastavení\",\n      volume_label: \"Hlasitost\",\n      music_label: \"Hudba\",\n      music_description: \"Vypnout/zapnout hudbu v pozadí.\",\n      editor_config_title: \"Konfigurace editoru\",\n      editor_config_livecompletion_label: \"Živé automatické dokončování\",\n      editor_config_livecompletion_description: \"Ukáže návrhy automatického doplňování během psaní.\",\n      editor_config_invisibles_label: \"Zobrazit neviditelné\",\n      editor_config_invisibles_description: \"Ukáže neviditelné jako mezery atd.\",\n      editor_config_indentguides_label: \"Zobrazit odsazení\",\n      editor_config_indentguides_description: \"Ukáže vertikální čáry pro jednoduché vidění odsazení.\",\n      editor_config_behaviors_label: \"Chytré chování\",\n      editor_config_behaviors_description: \"Automaticky doplňovat závorky a uvozovky.\"\n    },\n    about: {\n      nick_title: \"Programátor\",\n      matt_title: \"Programátor\",\n      scott_title: \"Programátor\",\n      retrostyle_blurb: \"RetroStyle Games\"\n    },\n    versions: {\n      save_version_title: \"Uložit novou verzi\",\n      new_major_version: \"Nová hlavní verze\",\n      submitting_patch: \"Odesílání opravy...\",\n      cla_prefix: \"Před uložením musíte souhlasit s\",\n      cla_url: \"licencí\",\n      cla_suffix: \".\",\n      cla_agree: \"SOUHLASÍM\",\n      owner_approve: \"Než se vaše změny projeví, bude je muset schválit vlastník.\"\n    },\n    contact: {\n      contact_us: \"Konktujte CodeCombat\",\n      welcome: \"Rádi od vás uslyšíme. Použijte tento formulář pro odeslání emailu. \",\n      forum_prefix: \"Pro ostatní veřejné věci, prosím zkuste \",\n      forum_page: \"naše fórum\",\n      forum_suffix: \".\",\n      faq_prefix: \"Také máme \",\n      faq: \"FAQ\",\n      subscribe_prefix: \"Pokud potřebujete pomoc s nějakou úrovní, prosím\",\n      subscribe: \"zakupte si CodeCombat předplatné\",\n      subscribe_suffix: \"a rádi vám pomůžeme s vaším kódem.\",\n      subscriber_support: \"Již jste CodeCombat předplatitel, takže vaše emaily budou vyřízeny dříve.\",\n      screenshot_included: \"Snímek obrazovky zahrnut.\",\n      where_reply: \"Kam máme odpovědět?\",\n      send: \"Odeslat připomínku\"\n    },\n    account_settings: {\n      title: \"Nastavení účtu\",\n      not_logged_in: \"Přihlaste se, nebo vytvořte si účet pro uložení nastavení.\",\n      me_tab: \"O mne\",\n      picture_tab: \"Obrázek\",\n      delete_account_tab: \"Smazat váš účet\",\n      wrong_email: \"Špatný email\",\n      wrong_password: \"Neplatné heslo\",\n      delete_this_account: \"Smazat tento účet natrvalo\",\n      reset_progress_tab: \"Resetovat všechen postup\",\n      reset_your_progress: \"Smazat všechen postup a začít znovu\",\n      emails_tab: \"Emaily\",\n      admin: \"Admin\",\n      manage_subscription: \"Klikněte zde ke správě vašeho předplatného.\",\n      new_password: \"Nové heslo\",\n      new_password_verify: \"Potvrdit\",\n      type_in_email: \"Zadejte svůj email nebo uživatelské jméno pro potvrzení smazání účtu.\",\n      type_in_email_progress: \"Zadejte svůj email pro potvrzení smazání vašeho postupu.\",\n      type_in_password: \"A taky zadejte své heslo.\",\n      email_subscriptions: \"Odebírat emailem\",\n      email_subscriptions_none: \"Žádné odebírání emailem.\",\n      email_announcements: \"Oznámení\",\n      email_announcements_description: \"Zasílat emaily o posledních novinkách a o postupu ve vývoji CodeCombat.\",\n      email_notifications: \"Upozornění\",\n      email_notifications_summary: \"Ovládání osobních, automatických emailových upozornění o vaší CodeCombat aktivitě.\",\n      email_any_notes: \"Jakékoliv upozornění\",\n      email_any_notes_description: \"Vypněte pro zastavení všech emailů spojených s upozorněními o aktivitě.\",\n      email_news: \"Novinky\",\n      email_recruit_notes: \"Pracovní příležitosti\",\n      email_recruit_notes_description: \"Pokud budete hrát velmi dobře, můžeme vás kontaktovat a nabídnou vám (lepší) práci.\",\n      contributor_emails: \"Emaily pro přispívatele\",\n      contribute_prefix: \"Hledáme další přispívatele! Čtěte prosím \",\n      contribute_page: \"stránku přispívatelům\",\n      contribute_suffix: \" pro více informací.\",\n      email_toggle: \"Zvolit vše\",\n      error_saving: \"Chyba při ukládání\",\n      saved: \"Změny uloženy\",\n      password_mismatch: \"Hesla nesouhlasí.\",\n      password_repeat: \"Opakujte prosím vaše heslo.\"\n    },\n    keyboard_shortcuts: {\n      keyboard_shortcuts: \"Klávesové zkratky\",\n      space: \"Mezerník\",\n      enter: \"Enter\",\n      press_enter: \"zmáčkněte enter\",\n      escape: \"Escape\",\n      shift: \"Shift\",\n      run_code: \"Spustit současný kód.\",\n      run_real_time: \"Spustit v reálném čase.\",\n      continue_script: \"Pokračovat v současném skriptu.\",\n      skip_scripts: \"Přeskočit všechny přeskočitelné skripty.\",\n      toggle_playback: \"Přepnout přehrávání/pauzu.\",\n      scrub_playback: \"Procházet zpět a vpřed skrz čas.\",\n      single_scrub_playback: \"Procházet zpět a vpřed skrz čas po jednotlivých snímcíche.\",\n      scrub_execution: \"Procházet skrz stávající provádění kouzla.\",\n      toggle_debug: \"Přepnout displej ladění.\",\n      toggle_grid: \"Přepnout překrytí mřížkou.\",\n      toggle_pathfinding: \"Přepnout překrytí nalezání cesty.\",\n      beautify: \"Udělejte váš kod hezčí standardizováním jeho formátu.\",\n      maximize_editor: \"Maximalizovat/minimalizovat editor kódu.\"\n    },\n    community: {\n      main_title: \"CodeCombat Komunita\",\n      introduction: \"Koukněte se na způsoby, jak se můžete zapojit níže a rozhodněte se co vám nejvíce vyhovuje. Těšíme se na pracování s vámi!\",\n      level_editor_prefix: \"Použít CodeCombat\",\n      level_editor_suffix: \"pro vytvoření a upravení úrovní. Uživatelé vytvořili úrovně pro jejich třídy, přátele, hackatony, studenty, a sourozence. Pokud se bojít vytváření nové úrovně, můžete začít Klonováním jednoho z našich!\",\n      thang_editor_prefix: \"Jednotky ve hře nazýváme 'thangy'. Použij\",\n      thang_editor_suffix: \"pro upravení CodeCombat grafiky. Povol jednotkám házet projektily, změň směr animací, změň body zásahů jednotek nebo nahraj vlastní grafické návrhy.\",\n      article_editor_prefix: \"Vidíš nějakou chybu v naší dokumentaci? Chcete vytvořit instrukce pro vlastní tvorbu? Podívejte se na\",\n      article_editor_suffix: \"a pomožte CodeCombat hráčům dostat co nejvíce z jejich stráveného času.\",\n      find_us: \"Najdete nás na těchto stránkách\",\n      social_blog: \"Přečtěte si CodeCombat blog na Sett\",\n      social_discource: \"Vstupte do diskuze na našem Discourse fóru\",\n      social_facebook: \"Dejte Like CodeCombat na Facebooku\",\n      social_twitter: \"Sledujte CodeCombat na Twitteru\",\n      social_gplus: \"Připojte se k CodeCombat na Google+\",\n      contribute_to_the_project: \"Přispějte tomuto projektu\"\n    },\n    clans: {\n      clan: \"Klan\",\n      clans: \"Klany\",\n      new_name: \"Jméno nového klanu\",\n      new_description: \"Popis nového klanu\",\n      make_private: \"Označit jako soukromý klan\",\n      create_clan: \"Vytvořit nový klan\",\n      private_preview: \"Náhled\",\n      private_clans: \"Soukromé klany\",\n      public_clans: \"Veřejné klany\",\n      my_clans: \"Moje klany\",\n      clan_name: \"Jméno klanu\",\n      name: \"Jméno\",\n      chieftain: \"Vůdce\",\n      edit_clan_name: \"Upravit jméno klanu\",\n      edit_clan_description: \"Upravit popis klanu\",\n      edit_name: \"upravit jméno\",\n      edit_description: \"upravit popis\",\n      \"private\": \"(soukromý)\",\n      summary: \"Shrnutí\",\n      delete_clan: \"Smazat klan\",\n      leave_clan: \"Opustit klan\",\n      join_clan: \"Vstoupit do klanu\",\n      invite_1: \"Pozvat:\",\n      invite_2: \"*Zašlete hráčům tento link a pozvěte je do tohoto klanu.\",\n      members: \"Členové\",\n      status: \"Status\",\n      view_solution: \"Klikni pro zobrazení řešení.\",\n      track_concepts5: \"řešení\"\n    },\n    courses: {\n      create_new_class: \"Vytvořit novou třídu\",\n      unnamed_class: \"Bezejmenná třída\",\n      edit_settings1: \"Upravit nastavení třídy\",\n      add_students: \"Přidat studenty\",\n      stats: \"Statistika\",\n      total_students: \"Počet studentů:\",\n      average_time: \"Průměrná doba hraní úrovně:\",\n      total_time: \"Celková doba hraní:\",\n      average_levels: \"Průměrný počet splněných úrovní:\",\n      total_levels: \"Celkový počet splněných úrovní:\",\n      students: \"Studenti\",\n      concepts: \"Koncepty\",\n      play_time: \"Doba hraní:\",\n      completed: \"Splněno:\",\n      enter_emails: \"Oddělte emailové adresy čárkou nebo novým řádkem\",\n      send_invites: \"Pozvat studenty\",\n      back_classrooms: \"Zpět na moje třídy\",\n      back_courses: \"Zpět na moje kurzy\",\n      remove_student: \"odstranit studenta\",\n      student: \"Student\",\n      teacher: \"Učitel\",\n      arena: \"Aréna\",\n      available_levels: \"Dostupné úrovně\",\n      ready_to_play: \"Připraven hrát?\",\n      start_new_game: \"Začít novou hru\"\n    },\n    classes: {\n      archmage_title: \"Arcikouzelník\",\n      archmage_title_description: \"(Programátor)\",\n      archmage_summary: \"Pokud jste vývojář se zájmem o kódování vzdělávacích her, staňte se Arcikouzelníkem, abyste nám mohli pomoct s vývojem CodeCombat!\",\n      artisan_title: \"Řemeslník\",\n      artisan_title_description: \"(Tvůrce úrovní)\",\n      artisan_summary: \"Stavte a sdílejte úrovně, abyste si na nich mohli zhrát i s přáteli. Staňte se Řemeslníkem, abyste se učili umění učit jiné programovat.\",\n      adventurer_title: \"Dobrodruh\",\n      adventurer_title_description: \"(Tester úrovní)\",\n      adventurer_summary: \"Dostaňte nové úrovně (dokonce i obsah pro předplatitele) zdarma s týdenním předstihem a pomozte nám vyřešit chyby před vydáním.\",\n      scribe_title: \"Písař\",\n      scribe_title_description: \"(Editor článků)\",\n      scribe_summary: \"Dobrý kód potřebuje dobrou dokumentaci. Pište, upravuje a vylepšujte dokumentaci, kterou čtou miliony hráčů po celé zemi.\",\n      diplomat_title: \"Diplomat\",\n      diplomat_title_description: \"(Překladatel)\",\n      diplomat_summary: \"CodeCombat je přeložen do 45+ jazyků našimi Diplomaty. Pomozte nám a přispějte se svými překlady.\",\n      ambassador_title: \"Velvyslanec\",\n      ambassador_title_description: \"(Podpora)\",\n      ambassador_summary: \"Kroťte naše uživatele na fóru a poskytujte odpovědi těm, kteří se ptají. Naši Velvyslanci reprezentují CodeCombat ve světě.\"\n    },\n    editor: {\n      main_title: \"Editory CodeCombatu\",\n      article_title: \"Editor článků\",\n      thang_title: \"Editor Thangů - objektů\",\n      level_title: \"Editor úrovní\",\n      course_title: \"Editor kurzů\",\n      achievement_title: \"Editor Úspěchů\",\n      poll_title: \"Editor dotazníků\",\n      back: \"Zpět\",\n      revert: \"Vrátit\",\n      revert_models: \"Vrátit modely\",\n      pick_a_terrain: \"Vybrat terén\",\n      dungeon: \"Dungeon\",\n      indoor: \"Úkryt\",\n      desert: \"Poušť\",\n      grassy: \"Travnatý\",\n      mountain: \"Hora\",\n      glacier: \"Ledovec\",\n      small: \"Malý\",\n      large: \"Velký\",\n      fork_title: \"Forkovat novou verzi\",\n      fork_creating: \"Vytváření Forku...\",\n      generate_terrain: \"Generování terénu\",\n      more: \"Více\",\n      wiki: \"Wiki\",\n      live_chat: \"Živý Chat\",\n      thang_main: \"Hlavní\",\n      thang_spritesheets: \"Spritesheety\",\n      thang_colors: \"Barvy\",\n      level_some_options: \"Volby?\",\n      level_tab_thangs: \"Thangy\",\n      level_tab_scripts: \"Skripty\",\n      level_tab_components: \"Komponenty\",\n      level_tab_systems: \"Systémy\",\n      level_tab_docs: \"Dokumentace\",\n      level_tab_thangs_title: \"Současné Thangy\",\n      level_tab_thangs_all: \"Všechny\",\n      level_tab_thangs_conditions: \"Výchozí prostředí\",\n      level_tab_thangs_add: \"Přidat Thangy\",\n      add_components: \"Přidat součásti\",\n      component_configs: \"Nastavení součástí\",\n      config_thang: \"Dvoj-klik pro konfiguraci thangu\",\n      \"delete\": \"Smazat\",\n      duplicate: \"Duplikovat\",\n      stop_duplicate: \"Zastavit duplikování\",\n      rotate: \"Otočit\",\n      level_component_tab_title: \"Současné komponenty\",\n      level_component_btn_new: \"Vytvořit novou komponentu\",\n      level_systems_tab_title: \"Současné systémy\",\n      level_systems_btn_new: \"Vytvořit nový systém\",\n      level_systems_btn_add: \"Přidat systém\",\n      level_components_title: \"Zpět na všechny Thangy\",\n      level_components_type: \"Druh\",\n      level_component_edit_title: \"Editovat komponentu\",\n      level_component_config_schema: \"Konfigurační schéma\",\n      level_system_edit_title: \"Editovat systém\",\n      create_system_title: \"Vytvořit nový systém\",\n      new_component_title: \"Vytvořit novou komponentu\",\n      new_component_field_system: \"Systém\",\n      new_article_title: \"Vytvořit nový článek\",\n      new_thang_title: \"Vytvořit nový typ Thangu\",\n      new_level_title: \"Vytvořit novou úroveň\",\n      new_article_title_login: \"Přihlašte se pro vytvoření nového článku\",\n      new_thang_title_login: \"Přihlašte se pro vytvoření nového typu Thangu\",\n      new_level_title_login: \"Přihlašte se pro vytvoření nové úrovně\",\n      new_achievement_title: \"Vytvořit nový Úspěch\",\n      new_achievement_title_login: \"Přihlašte se pro vytvoření nového Úspěchu\",\n      new_poll_title: \"Vytvořit nový dotazník\",\n      article_search_title: \"Vyhledat články\",\n      thang_search_title: \"Vyhledat typy Thangů\",\n      level_search_title: \"Vyhledat úrovně\",\n      achievement_search_title: \"Hledat Úspěchy\",\n      read_only_warning2: \"Poznámka: nemůžete ukládat žádné změny, protože nejste přihlášeni.\",\n      no_achievements: \"Pro tuto úroveň ještě nebyly přidány úspěchy.\",\n      achievement_query_misc: \"Klíčové úspěchy ostatních\",\n      achievement_query_goals: \"Klíčové úspěchy cílů úrovní\",\n      level_completion: \"Dokončení úrovně\",\n      pop_i18n: \"Osídlit I18N\",\n      tasks: \"Úkoly\"\n    },\n    article: {\n      edit_btn_preview: \"Náhled\",\n      edit_article_title: \"Editovat článek\"\n    },\n    polls: {\n      priority: \"Priorita\"\n    },\n    contribute: {\n      page_title: \"Přispívání\",\n      intro_blurb: \"CodeCombat je 100% open source! Stovky nadšených hráčů již pomohli postavit hru do podoby, kterou vidíte dnes. Připojte se a napište další kapitolu CodeCombatu, ve kterém se učí celý svět kódovat!\",\n      alert_account_message_intro: \"Vítejte!\",\n      alert_account_message: \"Pro odebírání třídních emailů musíte být nejdříve přihlášeni.\",\n      archmage_introduction: \"Jedna z nejlepších věcí na vytváření her je to, že se jedná o spojení různých procesů. Grafika, zvuk, síťování v reálném čase, mezilidské vztahy a samozřejmě také spousta běžných aspektů programování, od nízkoúrovňového managementu databáze přes administraci serverů až po tvorbu uživatelská rozhraní. Je zde spousta práce a pokud jste zkušený programátor a všeuměl připravený k ponoření se do hloubek CodeCombatu, tato skupina je pro vás. Budeme moc rádi za vaši pomoc při tvorbě té nejlepší programovací hry.\",\n      class_attributes: \"Vlastnosti\",\n      archmage_attribute_1_pref: \"Znáte \",\n      archmage_attribute_1_suf: \"nebo se jej chcete naučit. Je v něm většina našeho kódu. Je-li vaším oblíbeným jazykem Ruby nebo Python, budete se cítit jako doma. Je to JavaScript, ale s lepší syntaxí.\",\n      archmage_attribute_2: \"Zkušenosti s programováním a osobní iniciativa. Pomůžeme vám se zorientovat, ale nemůžeme vás učit.\",\n      how_to_join: \"Jak se přidat\",\n      join_desc_1: \"Pomoct může kdokoliv! Pro začátek se podívejte na naši stránku na \",\n      join_desc_2: \" , zaškrtněte políčko níže - označíte se tím jako statečný Arcimág a začnete dostávat informace o novinkách emailem. Chcete popovídat o tom jak začít? \",\n      join_desc_3: \", nebo se s námi spojte v naší \",\n      join_desc_4: \"!\",\n      join_url_email: \"Pošlete nám email\",\n      archmage_subscribe_desc: \"Dostávat emailem oznámení a informacemi nových programovacích příležitostech\",\n      artisan_introduction_pref: \"Musíme vytvářet další úrovně! Lidé nás prosí o další obsah, ale sami zvládáme vytvořit jen málo. Naším prvním pracovním zastavením je první úroveň. Editor úrovní je tak-tak použitelný i pro jeho vlastní tvůrce. Máte-li vizi pro vytvoření vnořených úrovní alá \",\n      artisan_introduction_suf: \"pak neváhejte, toto je vaše destinace.\",\n      artisan_attribute_1: \"Předchozí zkušenosti s vytvářením podobného obsahu by byly vítány, například z editorů úrovní Blizzardu, ale nejsou vyžadovány!\",\n      artisan_attribute_2: \"Připraveni ke spoustě testování a pokusů. K vytvoření dobré úrovně je potřeba je představit ostatním, nechat je hrát a pak je z velké části měnit a opravovat.\",\n      artisan_attribute_3: \"Pro teď, stejné jako Dobrodruh - tester úrovní. Náš editor úrovní je ve velmi raném stádiu a frustrující při používání. Varovali jsme vás!\",\n      artisan_join_desc: \"Použijte editor úrovní v těchto postupných krocích:\",\n      artisan_join_step1: \"Přečtěte si dokumentaci.\",\n      artisan_join_step2: \"Vytvořte novou úroveň a prozkoumejte existující úrovně.\",\n      artisan_join_step3: \"Požádejte nás o pomoc ve veřejné  Slack místnosti.\",\n      artisan_join_step4: \"Zveřejněte vaši úroveň na fóru pro připomínkování.\",\n      artisan_subscribe_desc: \"Dostávat emailem oznámení a informace o aktualizacích editoru úrovní.\",\n      adventurer_introduction: \"Ujasněme si dopředu jednu věc o vaší roli: budete jako tank. Projdete ohněm. Potřebujeme někoho, kdo odzkouší zbrusu nové úrovně a pomůže identifikovat kde je možno je zlepšit. Ten boj bude ohromný - tvorba her je dlouhý proces, který nikdo nezvládne na první pokus. Máte-li na to a vydržíte-li to, pak toto je vaše skupina.\",\n      adventurer_attribute_1: \"Touha po učení se. Vy se chcete naučit programovat a my vás to chceme naučit. Jenom, v tomto případě to budete vy, kdo bude vyučovat.\",\n      adventurer_attribute_2: \"Charismatický. Buďte mírný a pečlivě artikulujte co a jak je potřeba zlepšit.\",\n      adventurer_join_pref: \"Buďto se spojte (nebo si najděte!) Dobrodruha a pracujte s ním, nebo zaškrtněte políčko níže a dostávejte emaily o dostupnosti nových úrovní k testování. Budeme také posílat informace o nových úrovních k recenzím na sociálních webech, \",\n      adventurer_forum_url: \" našem fóru\",\n      adventurer_join_suf: \"takže pokud chcete být v obraze, připojte se k nám!\",\n      adventurer_subscribe_desc: \"Dostávat emailem oznámení a informace nových úrovních k testování.\",\n      scribe_introduction_pref: \"CodeCombat nebude pouze kupa úrovní. Bude také zahrnovat informační zdroje a wiki programovacích konceptů na které se úrovně mohou navázat. Takto, namísto toho aby každý Řemeslník musel sám do detailu popsatco který operátor dělá, mohou jednoduše nalinkovat svoji úroveň na článek existující k edukaci hráčů.  Něco ve stylu \",\n      scribe_introduction_url_mozilla: \"Mozilla Developer Network\",\n      scribe_introduction_suf: \". Jestliže vás baví popisovat a předávat koncept programování v Markdown editoru, pak tato role může být právě pro vás.\",\n      scribe_attribute_1: \"Zkušenost s psaním je jediné co budete potřebovat. Nejen gramatika, ale také schopnost popsat složité koncepty a myšlenky ostatním.\",\n      contact_us_url: \"Spojte se s námi\",\n      scribe_join_description: \"dejte nám o vás vědět, o vašich zkušenostech s programováním a o čm byste rádi psali. Od toho začneme!\",\n      scribe_subscribe_desc: \"Dostávat emailem oznámení a informace o článcích.\",\n      diplomat_introduction_pref: \"Jedna z věcí, kterou jsme zjistili během \",\n      diplomat_launch_url: \"zahájení v Říjnu\",\n      diplomat_introduction_suf: \"bylo, že o CodeCombat je velký zájem i v jiných zemích, obzvláště v Brazílii! Chystáme regiment překladatelů ke zpřístupnění CodeCombatu světu. Pokud chcete nakouknout pod pokličku, dozvědět se o připravovaných novinkách a zpřístupnit úrovně vašim národním kolegům, toto je role pro vás.\",\n      diplomat_attribute_1: \"Plynulost v angličtině a v jazyce do kterého budete překládat. Při předávání komplexních myšlenek je důležité si být jisti výrazy v obou jazycích!\",\n      diplomat_i18n_page_prefix: \"Můžete začít překládat naše úrovně přejítím na naše\",\n      diplomat_i18n_page: \"stránky překladů\",\n      diplomat_i18n_page_suffix: \", nebo naše prostředí a stránky na GitHub.\",\n      diplomat_join_pref_github: \"Najděte soubor pro svůj jazyk \",\n      diplomat_github_url: \"na GitHub\",\n      diplomat_join_suf_github: \", upravte ho online a zašlete pull request. Také zaškrtněte toto políčko, abyste zůstali informováni o novém vývoji internacionalizace!\",\n      diplomat_subscribe_desc: \"Dostávat emailem oznámení a informace o internacionalizaci a o úrovních k překladu.\",\n      ambassador_introduction: \"Zde se tvoří komunita a vy jste její spojení. Využíváme chat, emaily a sociální sítě se spoustou lidí k informování a diskuzím a seznámení s naší hrou. Chcete-li pomoci lidem se přidat a pobavit se a získat dobrý náhled na CodeCombat a kam směřujeme, pak toto je vaše role.\",\n      ambassador_attribute_1: \"Komunikační schopnosti. Schopnost identifikovat problémy hráčů a pomoci jim je řešit. Naslouchat co hráči říkají, co mají rádi a co rádi nemají a komunikovat to zpět ostatním!\",\n      ambassador_join_desc: \"dejte nám o sobě vědět, o tom co děláte a co byste rádi dělali. Od toho začneme!\",\n      ambassador_join_note_strong: \"Poznámka\",\n      ambassador_join_note_desc: \"Jedna z našich priorit je vytvoření vícehráčové hry, kde hráč, který má problém s řešením úrovní může oslovit a požádat o pomoc zkušenější kouzelníky. To je přesně ten případ a místo pro pomoc Velvyslance . Dáme vám vědět více!\",\n      ambassador_subscribe_desc: \"Dostávat emailem oznámení a informace o vývoji v podpoře a vícehráčové hře.\",\n      changes_auto_save: \"Změny jsou automaticky uloženy při kliknutí na zaškrtávací políčka.\",\n      diligent_scribes: \"Naši pilní Písaři:\",\n      powerful_archmages: \"Naši mocní Arcimágové:\",\n      creative_artisans: \"Naši kreativní Řemeslníci:\",\n      brave_adventurers: \"Naši stateční Dobrodruzi:\",\n      translating_diplomats: \"Naši překladatelští Diplomati:\",\n      helpful_ambassadors: \"Naši nápomocní Velvyslanci:\"\n    },\n    ladder: {\n      my_matches: \"Mé souboje\",\n      simulate: \"Simulovat\",\n      simulation_explanation: \"Simulováním hry odehrajete hru rychleji!\",\n      simulate_games: \"Simulovat hry!\",\n      games_simulated_by: \"Hry simulovány vámi:\",\n      games_simulated_for: \"Hry simulovány pro vás:\",\n      games_simulated: \"Her simulováno\",\n      games_played: \"Her hráno\",\n      ratio: \"Poměr\",\n      leaderboard: \"Žebříček\",\n      battle_as: \"Bojovat jako \",\n      summary_your: \"Vašich \",\n      summary_matches: \"Soubojů - \",\n      summary_wins: \" Vyhráno, \",\n      summary_losses: \" Prohráno\",\n      rank_no_code: \"Žádný nový kód pro ohodnocení\",\n      rank_my_game: \"Ohodnotit mou hru!\",\n      rank_submitting: \"Odesílání...\",\n      rank_submitted: \"Odesláno pro ohodnocení\",\n      rank_failed: \"Chyba při ohodnocení\",\n      rank_being_ranked: \"Hra je ohodnocována\",\n      rank_last_submitted: \"odesláno \",\n      help_simulate: \"Pomoc simulovat hry?\",\n      code_being_simulated: \"Váš nový kód je právě simulován jiným hráčem pro ohodnocení.\",\n      no_ranked_matches_pre: \"Žádné ohodnocené souboje pro \",\n      no_ranked_matches_post: \" tým! Hraj proti soupeřům a poté přijď zpět pro ohodnocení své hry.\",\n      choose_opponent: \"Vybrat soupeře\",\n      select_your_language: \"Vyber svůj jazyk!\",\n      tutorial_play: \"Hrát Tutoriál\",\n      tutorial_recommended: \"Doporučeno, pokud jste ještě nikdy nehráli\",\n      tutorial_skip: \"Přeskočit Tutoriál\",\n      tutorial_not_sure: \"Nejste si jisti, co se děje?\",\n      tutorial_play_first: \"Hrát nejprve Tutoriál.\",\n      simple_ai: \"Jednoduchá obtížnost\",\n      warmup: \"Rozehřátí\",\n      friends_playing: \"Přátel hraje\",\n      log_in_for_friends: \"Pro hraní s přáteli se nejprve přihlašte!\",\n      social_connect_blurb: \"Připojte se a hrajte proti svým přátelům!\",\n      invite_friends_to_battle: \"Pozvěte své přátele, abyste spolu bojovali!\",\n      fight: \"Boj!\",\n      watch_victory: \"Sledovat vaši výhru\",\n      defeat_the: \"Poraženo\",\n      tournament_ends: \"Turnaj končí\",\n      tournament_ended: \"Turnaj ukončen\",\n      tournament_rules: \"Pravidla turnaje\",\n      tournament_blurb: \"Pište kód, sbírejte zlato, budujte armádu, zabijte nepřátele, vyhrajte ceny a vylepšte si svou kariéru v našem turnaji o $40,000 dolarů! Podívejte se na detaily\",\n      tournament_blurb_criss_cross: \"Vyhrajte nabídky, budujte cesty, přelstěte nepřátele, seberte drahokamy a velepšte si svou kariéru v našem Křížovkářském turnaji! Podívejte se na detaily\",\n      tournament_blurb_blog: \"na našem blogu\",\n      rules: \"Pravidla\",\n      winners: \"Vítězové\"\n    },\n    user: {\n      stats: \"Statistiky\",\n      singleplayer_title: \"Singleplayer Úrovně\",\n      multiplayer_title: \"Multiplayer Úrovně\",\n      achievements_title: \"Úspěchy\",\n      last_played: \"Poslední hraná\",\n      status: \"Stav\",\n      status_completed: \"Dokončeno\",\n      status_unfinished: \"Nedokončeno\",\n      no_singleplayer: \"Zatím žádné Singleplayer hry nebyly hrány.\",\n      no_multiplayer: \"Zatím žádné Multiplayer hry nebyly hrány.\",\n      no_achievements: \"Zatím žádné Úspěchy.\",\n      favorite_prefix: \"Oblíbený jazky: \",\n      favorite_postfix: \".\",\n      not_member_of_clans: \"Zatím není členem žádného klanu.\"\n    },\n    achievements: {\n      last_earned: \"Poslední obdržený\",\n      amount_achieved: \"Množství\",\n      achievement: \"Úspěch\",\n      current_xp_prefix: \"\",\n      current_xp_postfix: \" celkem\",\n      new_xp_prefix: \"\",\n      new_xp_postfix: \" získáno\",\n      left_xp_prefix: \"\",\n      left_xp_infix: \" do úrovně \",\n      left_xp_postfix: \"\"\n    },\n    account: {\n      payments: \"Platby\",\n      prepaid_codes: \"Předplacené kódy\",\n      purchased: \"Zaplaceno\",\n      subscription: \"Předplatné\",\n      invoices: \"Faktury\",\n      service_apple: \"Apple\",\n      service_web: \"Web\",\n      paid_on: \"Zaplaceno přes\",\n      service: \"Služba\",\n      price: \"Cena\",\n      gems: \"Drahokamy\",\n      active: \"Aktivní\",\n      subscribed: \"Odebíráno\",\n      unsubscribed: \"Zrušeno odebírání\",\n      active_until: \"Aktivní do\",\n      cost: \"Náklady\",\n      next_payment: \"Další platba\",\n      card: \"Karta\",\n      status_unsubscribed_active: \"Nejste předplatitel a nebude vám nic zaúčtováno, ale váš účet je pořád aktivní.\",\n      status_unsubscribed: \"Dostaňte přístup k novým úrovním, hrdinům, předmětům a bonusovým drahokamům s CodeCombat předplatným!\"\n    },\n    loading_error: {\n      could_not_load: \"Chyba při načítání ze serveru\",\n      connection_failure: \"Chyba připojení.\",\n      login_required: \"Vyžadováno přihlášení\",\n      unauthorized: \"Musíte se přihlásit. Máte zapnuté cookies?\",\n      forbidden: \"Nemáte oprávnění.\",\n      not_found: \"Nenalezeno.\",\n      not_allowed: \"Metoda není povolena.\",\n      timeout: \"Vypršel časový limit serveru.\",\n      conflict: \"Konflikt zdrojů.\",\n      bad_input: \"Špatný vstup.\",\n      server_error: \"Chyba serveru.\",\n      unknown: \"Neznámá chyba.\"\n    },\n    resources: {\n      level: \"Úroveň\",\n      patch: \"Oprava\",\n      patches: \"Opravy\",\n      system: \"Systém\",\n      systems: \"Systémy\",\n      component: \"Součást\",\n      components: \"Součásti\",\n      hero: \"Hrdina\",\n      campaigns: \"Kampaně\"\n    },\n    concepts: {\n      \"arguments\": \"Parametry\",\n      arithmetic: \"Aritmetika\",\n      array_2d: \"2D Pole\",\n      array_index: \"Indexování pole\",\n      array_searching: \"Vyhledávání v poli\",\n      array_sorting: \"Třídění pole\",\n      arrays: \"Pole\",\n      basic_syntax: \"Základní syntaxe\",\n      break_statements: \"Příkaz Break\",\n      classes: \"Třídy\",\n      continue_statements: \"Příkaz Continue\",\n      for_loops: \"For cykly\",\n      for_loops_nested: \"Vnořené For Cykly\",\n      functions: \"Funkce\",\n      graphics: \"Grafika\",\n      graphs: \"Grafy\",\n      heaps: \"Haldy\",\n      if_else_statements: \"Konstrukce If/Else\",\n      if_statements: \"Konstrukce If\",\n      if_statements_nested: \"Vnořené konstrukce If\",\n      indexing: \"Indexy pole\",\n      jquery: \"jQuery\",\n      length: \"Délka pole\",\n      math_geometry: \"Geometrie\",\n      math_operations: \"Matematické operace\",\n      math_trigonometry: \"Trigonometrie\",\n      parameters: \"Parametry\",\n      queues: \"Datové struktury - fronty\",\n      recursion: \"Rekurze\",\n      return_statements: \"Příkaz return\",\n      stacks: \"Datové struktury - zásobníky\",\n      strings: \"Řetězce\",\n      strings_concatenation: \"Spojování řetězců\",\n      strings_substrings: \"Podřetězec\",\n      trees: \"Datové struktury - stromy\",\n      variables: \"Proměnné\",\n      vectors: \"Vektory\",\n      while_condition_loops: \"Cykly while s podmínkami\",\n      while_loops_simple: \"Cykly while\",\n      while_loops_nested: \"Vnořené cykly while\",\n      xy_coordinates: \"Kartézské souřadnice\",\n      advanced_strings: \"Pokročilé řetězce\",\n      algorithms: \"Algoritmy\",\n      boolean_logic: \"Booleovská logika\",\n      basic_html: \"Základní HTML\",\n      basic_css: \"Základní CSS\",\n      intermediate_html: \"Středně pokročilé HTML\",\n      intermediate_css: \"Středně pokročilé CSS\",\n      advanced_html: \"Pokročilé HTML\",\n      advanced_css: \"Pokročilé CSS\",\n      input_handling: \"Zpracování vstupu\",\n      while_loops: \"Cykly\"\n    },\n    delta: {\n      added: \"Přidáno\",\n      modified: \"Změněno\",\n      not_modified: \"Nezměněno\",\n      deleted: \"Smazáno\",\n      moved_index: \"Index přemístěn\",\n      text_diff: \"Rozdíl textu\",\n      merge_conflict_with: \"SLOUČIT V ROZPORU S\",\n      no_changes: \"Žádné změny\"\n    },\n    legal: {\n      page_title: \"Licence\",\n      opensource_intro: \"CodeCombat je zdarma a plně open source.\",\n      opensource_description_prefix: \"Podívejte se na \",\n      github_url: \"naši stránku na GitHubu\",\n      opensource_description_center: \"a pokud se vám chce, můžete i pomoct! CodeCombat je vystavěn na několika oblíbených svobodných projektech. Podívejte se na\",\n      archmage_wiki_url: \"naši wiki Arcikouzelníků \",\n      opensource_description_suffix: \"pro seznam projektů, díky kterým může tato hra existovat.\",\n      practices_title: \"Doporučené postupy\",\n      practices_description: \"Toto je příslib našeho přístupu v jednoduchém jazyce.\",\n      privacy_title: \"Soukromí\",\n      privacy_description: \"Neprodáme žádné vaše osobní informace.\",\n      security_title: \"Zabezpečení\",\n      security_description: \"Usilujeme o to, abychom udrželi vaše osobní informace v bezpečí. Jako otevřený projekt jsme přístupni komukoliv k provedení kontroly kódu pro zlepšení našich bezpečnostních systémů.\",\n      email_title: \"Email\",\n      email_description_prefix: \"Nebudeme vás zaplavovat nevyžádanou korespondencí. Pomocí \",\n      email_settings_url: \" nastavení emailu\",\n      email_description_suffix: \"nebo skrze odkazy v odeslaných emailech si můžete nastavit nebo se kdykoliv odhlásit z naší korespondence.\",\n      cost_title: \"Cena\",\n      copyrights_title: \"Copyrights a Licence\",\n      contributor_title: \"Licenční ujednání přispívatelů (CLA)\",\n      contributor_description_prefix: \"Všichni přispívatelé jak na webu tak do projektu na GitHubu spadají pod naše \",\n      cla_url: \"CLA\",\n      contributor_description_suffix: \"se kterým je nutno souhlasit před tím, nežli přispějete.\",\n      code_title: \"Kód - MIT\",\n      code_description_prefix: \"Veškerý kód vlastněný CodeCombatem nebo hostovaným na codecombat.com, kód v repozitáři na GitHub repository nebo v databázi codecombat.com, je licencován pod \",\n      mit_license_url: \"MIT licencí\",\n      code_description_suffix: \"Zahrnut je veškerý kód v systémech a komponentech, které jsou zpřístupněné CodeCombatem pro vytváření úrovní.\",\n      art_title: \"Obrázky/Hudba - Creative Commons \",\n      art_description_prefix: \"Veškerý obecný obsah je dostupný pod \",\n      cc_license_url: \"Mezinárodní Licencí Creative Commons Attribution 4.0\",\n      art_description_suffix: \"Obecným obsahem se rozumí vše dostupné na CodeCombatu, určené k vytváření úrovní. To zahrnuje:\",\n      art_music: \"Hudbu\",\n      art_sound: \"Zvuky\",\n      art_artwork: \"Umělecká díla\",\n      art_sprites: \"Doplňkový kód\",\n      art_other: \"A veškeré další kreativní práce použité při vytváření úrovní.\",\n      art_access: \"Momentálně neexistuje jednoduchý systém pro stažení těchto součástí, částí úrovní a podobně. Lze je stáhnout z URL adres na tomto webu, můžete nás kontaktovat se žádostí o informace nebo nám i pomoci ve sdílení a vytváření systému pro jednoduché sdílení těchto doplňkových součástí.\",\n      art_paragraph_1: \"Při uvádění zdroje, uvádějte prosím jméno a odkaz na codecombat.com v místech, která jsou vhodná a kde je to možné. Například:\",\n      use_list_1: \"Při použití ve filmu uveďte codecombat.com v titulcích.\",\n      use_list_2: \"Při použití na webu, zahrňte odkaz například pod obrázkem/odkazem, nebo na stránce uvádějící zdroj, kde také zmíníte další Creative Commons díla a další použité open source projekty. Ostatní, na CodeCombat odkazující se práce (například článek na blogu zmiňující CodeCombat) není nutno separátně označovat a uvádět zdroj.\",\n      art_paragraph_2: \"Využíváte-li obsah vytvořený některým uživatelem na codecombat.com, uvádějte odkaz na zdroj přímo na tohoto autora a následujte doporučení uvádění zdroje daného obsahu, je-li uvedeno.\",\n      rights_title: \"Práva vyhrazena\",\n      rights_desc: \"Všechna práva jsou vyhrazena jednotlivým samostatným úrovním. To zahrnuje\",\n      rights_scripts: \"Skripty\",\n      rights_unit: \"Unit konfigurace\",\n      rights_writings: \"Zápisy\",\n      rights_media: \"Média (zvuky, hudba) a další tvořivý obsah vytvořený specificky pro tuto úroveň, který nebyl zpřístupněn při vytváření úrovně.\",\n      rights_clarification: \"Pro ujasnění - vše, co je dostupné v editoru úrovní při vytváření úrovně spadá pod CC, ale obsah vytvořený v editoru úrovní nebo nahraný při vytváření spadá pod úroveň.\",\n      nutshell_title: \"Ve zkratce\",\n      nutshell_description: \"Vše co je poskytnuto v editoru úrovní  je zdarma a mžete toho využít při vytváření úrovní. Ale vyhrazujeme si právo omezit distribuci úrovní samotných (těch, které byly vytvořeny na codecombat.com), takže v budoucnu bude možno tyto zpoplatnit, bude-li to v nejhorším případě nutné\",\n      canonical: \"Anglická verze tohoto dokumentu je původní, rozhodující verzí. Nastane-li rozdíl v překladu, Anglická verze bude mít vždy přednost.\"\n    },\n    ladder_prizes: {\n      title: \"Ceny v turnaji\",\n      blurb_1: \"Tyto ceny budou rozdány v souladu s\",\n      blurb_2: \"pravidly turnaje\",\n      blurb_3: \"nejlepším lidským a zlobřím hráčům.\",\n      blurb_4: \"Dva týmy znamenají dvojnásobek cen!\",\n      blurb_5: \"(Budou dvě první místa, dvě druhá místa, atd.)\",\n      rank: \"Umístění\",\n      prizes: \"Ceny\",\n      total_value: \"Celková hodnota\",\n      in_cash: \"v penězích\",\n      custom_wizard: \"Vlastní CodeCombat Kouzelník\",\n      custom_avatar: \"Vlastní CodeCombat avatar\",\n      heap: \"na šest měsíců \\\"Startup\\\" přístupu\",\n      credits: \"tvůrci\",\n      one_month_coupon: \"kupon: vybrat buď Rails nebo HTML\",\n      one_month_discount: \"30% sleva: vybrat buď Rails nebo HTML\",\n      license: \"licence\",\n      oreilly: \"ebook vlastního výběru\"\n    },\n    calendar: {\n      year: \"Rok\",\n      day: \"Den\",\n      month: \"Měsíc\",\n      january: \"leden\",\n      february: \"únor\",\n      march: \"březen\",\n      april: \"duben\",\n      may: \"květen\",\n      june: \"červen\",\n      july: \"červenec\",\n      august: \"srpen\",\n      september: \"září\",\n      october: \"říjen\",\n      november: \"listopad\",\n      december: \"prosinec\"\n    }\n  }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///217\n");

/***/ })

});