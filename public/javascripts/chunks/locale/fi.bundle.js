/*! hash:ae6a15474fa7d9a1f9f8, chunkhash:e49cbe15966552bc22f2, name:locale/fi, filebase:fi.bundle.js, query:, file:javascripts/chunks/locale/fi.bundle.js */
webpackJsonp([56],{

/***/ 229:
/***/ (function(module, exports) {

eval("module.exports = {\n  nativeDescription: \"suomi\",\n  englishDescription: \"Finnish\",\n  translation: {\n    new_home: {\n      slogan: \"Lumoavin peli ohjelmoinnin oppimiseen.\",\n      classroom_edition: \"Kouluversio:\",\n      learn_to_code: \"Opi koodaamaan:\",\n      play_now: \"Pelaa Nyt\",\n      im_a_teacher: \"Olen Opettaja\",\n      im_a_student: \"Olen Oppilas\",\n      learn_more: \"Lue lisää\",\n      classroom_in_a_box: \"Luokkahuone taskussa tietojenkäsittelyn opetukseen.\",\n      codecombat_is: \"CodeCombat on alusta <strong>oppilaille</strong> oppia ohjelmointia pelaamisen kautta.\",\n      our_courses: \"Kurssimme on suunniteltu juuri <strong>luokkahuone käyttöön</strong>, jopa opettajille joilla on vain vähän ohjelmoinnin osaamista.\",\n      watch_how: \"Katso kuinka CodeCombat muuttaa miten tietojenkäsittelyä voi oppia.\",\n      top_screenshots_hint: \"Oppilaat kirjoittavat koodia ja näkevät muutokset reaaliajassa\",\n      designed_with: \"Suunniteltu opettajat mielessä\",\n      forgot_learning: \"Luulenpa, että he oikeastaan unohtivat, että olivat oppimassa jotain.\",\n      wanted_to_do: \"´Koodaus on sitä mitä olen aina halunnut tehdä, enkä uskonut että voisin oppia sitä koulussa.\",\n      request_demo_title: \"Aloita oppilaitesi kanssa tänään!\",\n      request_demo: \"Pyydä demo\",\n      have_an_account: \"Onko sinulla jo käyttäjätunnus?\",\n      logged_in_as: \"Olet kirjautunut sisään käyttäjänä\",\n      ffa: \"Ilmainen kaikille oppilaille\",\n      coming_soon: \"Lisää tulossa pian!\",\n      courses_available_in: \"Kurssimme on saatavilla JavaScript ja Python ohjelmointikielillä. Nettikehitys kurssit käyttävät HTML, CSS, ja jQuery kieliä.\",\n      run_class: \"Kaikki mitä tarvitset tietotekniikan opetukseen koulussasi, eikä tietoteknistä taustaa edes vaadita.\",\n      view_profile: \"Tarkastele profiiliani\",\n      view_progress: \"Tarkastele edistymistäni\",\n      go_to_courses: \"Siirry omiin kursseihin\",\n      want_coco: \"Haluatko CodeCombat:in kouluusi?\"\n    },\n    nav: {\n      map: \"Kartta\",\n      play: \"Tasot\",\n      community: \"Yhteisö\",\n      courses: \"Kurssit\",\n      blog: \"Blogi\",\n      forum: \"Foorumi\",\n      account: \"Tili\",\n      my_account: \"Oma Tili\",\n      profile: \"Profiili\",\n      home: \"Koti\",\n      contribute: \"Avusta\",\n      legal: \"Laillisuus\",\n      privacy: \"Yksityisyys\",\n      about: \"Tietoja\",\n      contact: \"Ota yhteyttä\",\n      twitter_follow: \"Seuraa\",\n      my_classrooms: \"Minun luokkani\",\n      my_courses: \"Minun kurssini\",\n      careers: \"Ura\",\n      create_a_class: \"Luo luokka\",\n      other: \"Muu\",\n      learn_to_code: \"Opi koodaamaan!\",\n      schools: \"Koulut\",\n      get_involved: \"Osallistu\",\n      open_source: \"Avoin lähdekoodi (GitHub)\",\n      support: \"Tuki\",\n      faqs: \"UKK\",\n      help_pref: \"Tarviksetko apua? lähetä viesti\",\n      help_suff: \"ja me autamme!\",\n      resource_hub: \"Resurssit\"\n    },\n    modal: {\n      close: \"Sulje\",\n      okay: \"Ok\"\n    },\n    not_found: {\n      page_not_found: \"Sivua ei löydy\"\n    },\n    diplomat_suggestion: {\n      title: \"Auta CodeCombatin kääntämisessä!\",\n      sub_heading: \"Tarvitsemme apuasi käännöksessä.\",\n      pitch_body: \"CodeCombat:ia kehitetään englanniksi mutta pelaajia on jo ympäri maailmaa. Monet haluavat pelata peliä omalla kielellään, joten jos haluat osallistua kääntämiseen, ilmoittaudu Diplomaatiksi ja anna panoksesi.\",\n      missing_translations: \"Siihen asti kunnes koko peli on käännetty suomeksi näet joitain tekstejä edelleen englanniksi.\",\n      learn_more: \"Ota selvää mitä tarkoitta olla Diplomaatti\",\n      subscribe_as_diplomat: \"Tilaa Diplomaatin uutiskirje\"\n    },\n    play: {\n      play_as: \"Pelaa\",\n      compete: \"Kilpaile!\",\n      spectate: \"Tarkkaile\",\n      players: \"pelaajat\",\n      hours_played: \"pelatut tunnit\",\n      items: \"Esineet\",\n      unlock: \"Avaa\",\n      confirm: \"Varmista\",\n      owned: \"Omistettu\",\n      locked: \"Lukittu\",\n      available: \"Saatavilla\",\n      skills_granted: \"Taidot\",\n      heroes: \"Sankarit\",\n      achievements: \"Saavutukset\",\n      settings: \"Asetukset\",\n      poll: \"Kysely\",\n      next: \"Seuraava\",\n      change_hero: \"Vaihda sankaria\",\n      buy_gems: \"Osta jalokiviä\",\n      subscribers_only: \"Vain tilaajille!\",\n      subscribe_unlock: \"Tilaa avataksesi!\",\n      subscriber_heroes: \"Tilaa tänään saadaksesi heti käyttöösi Amaran, Hushbaumin ja Hattorin!\",\n      subscriber_gems: \"Tilaa tänään voidaksesi ostaa tämän sankarin jalokivillä!\",\n      anonymous: \"Nimetön Pelaaja\",\n      level_difficulty: \"Vaikeustaso: \",\n      awaiting_levels_adventurer_prefix: \"Avaamme uusia tasoja viikoittain.\",\n      awaiting_levels_adventurer: \"Kirjaudu seikkailijaksi\",\n      awaiting_levels_adventurer_suffix: \"ja ole ensimmäisten joukossa pelaamassa uusia tasoja.\",\n      adjust_volume: \"Aänenvoimakkuus\",\n      campaign_multiplayer: \"Moninpeli Areenat\",\n      campaign_multiplayer_description: \"... joissa mittaat ohjelmointitaitosi toisia pelaajia vastaan.\",\n      brain_pop_done: \"Pieksit örkit koodilla! Voitto!\",\n      brain_pop_challenge: \"Haasta itsesi ja pelaa uudelleen eri ohjelmointikielellä!\",\n      replay: \"Uudelleentoisto\",\n      back_to_classroom: \"Takaisin luokkahuoneeseen\",\n      teacher_button: \"Opettajille\",\n      get_more_codecombat: \"Hanki Jatkoa CodeCombat:lle\"\n    },\n    code: {\n      \"if\": \"jos\",\n      \"else\": \"muussa tapauksessa\",\n      elif: \"else if - muussa tapauksessa, jos\",\n      \"while\": \"niin kauan kuin\",\n      loop: \"silmukka\",\n      \"for\": \"näille\",\n      \"break\": \"keskeytä silmukka\",\n      \"continue\": \"ohita ja jatka silmukkaa\",\n      pass: \"pass\",\n      \"return\": \"palauta\",\n      then: \"sitten\",\n      \"do\": \"tee näin\",\n      end: \"loppu\",\n      \"function\": \"funktio\",\n      def: \"määrittele\",\n      \"var\": \"muuttuja\",\n      self: \"itse\",\n      hero: \"sankari\",\n      \"this\": \"tämä\",\n      or: \"tai (jompi kumpi)\",\n      \"||\": \"tai (jompi kumpi)\",\n      and: \"ja (sekä että)\",\n      \"&&\": \"ja (sekä että)\",\n      not: \"ei\",\n      \"!\": \"ei\",\n      \"=\": \"aseta\",\n      \"==\": \"ovat samat (yhtäsuuret)\",\n      \"===\": \"täysin yhtäsuuri\",\n      \"!=\": \"ovat eri (erisuuruuset)\",\n      \"!==\": \"ei täysin yhtäsuuri\",\n      \">\": \"suurempi kuin\",\n      \">=\": \"suurempi tai yhtäsuuri kuin\",\n      \"<\": \"pienempi kuin\",\n      \"<=\": \"pienempi tai yhtäsuuri kuin\",\n      \"*\": \"kertomerkki\",\n      \"/\": \"jakoviiva\",\n      \"+\": \"plus\",\n      \"-\": \"miinus\",\n      \"+=\": \"summaa ja aseta muuttujalle uusi arvo\",\n      \"-=\": \"vähennä ja aseta muuttujalle uusi arvo\",\n      True: \"Totta\",\n      \"true\": \"totta\",\n      False: \"Epätotta\",\n      \"false\": \"epätotta\",\n      undefined: \"määrittelemätön\",\n      \"null\": \"tyhjä\",\n      nil: \"nolla\",\n      None: \"Olematon\"\n    },\n    share_progress_modal: {\n      blurb: \"Edistyt loistavasti! Kerro ystävillesi mitä olet oppinut CodeCombat:n avulla.\",\n      email_invalid: \"Virheellinen sähköpostiosoite.\",\n      form_blurb: \"Syötä heidän sähköpostiosoitteet ja me kerromme heille!\",\n      form_label: \"Sähköpostiosoite\",\n      placeholder: \"osoite\",\n      title: \"Erinomaista työtä, Oppipoika\"\n    },\n    login: {\n      sign_up: \"Luo Tili\",\n      email_or_username: \"Käyttäjätunnus tai sähköposti\",\n      log_in: \"Kirjaudu\",\n      logging_in: \"Kirjaudutaan\",\n      log_out: \"Kirjaudu Ulos\",\n      forgot_password: \"Unohditko salasanasi?\",\n      finishing: \"Viimeistellään\",\n      sign_in_with_facebook: \"Kirjaudu Facebook tunnuksilla\",\n      sign_in_with_gplus: \"Kirjaudu G+ tunnuksilla\",\n      signup_switch: \"Haluatko luoda tilin?\"\n    },\n    signup: {\n      create_student_header: \"Luo Oppilaan Tili\",\n      create_teacher_header: \"Luo Opettajan Tili\",\n      create_individual_header: \"Luo Yksittäinen Tili\",\n      email_announcements: \"Haluatko ilmoituksia sähköpostiisi\",\n      creating: \"Luodaan tili...\",\n      sign_up: \"Luo tili\",\n      log_in: \"kirjaudu sisään salasanalla\",\n      required: \"Kirjaudu ensin jotta pääset jatkamaan.\",\n      login_switch: \"Onko sinulla jo tili?\",\n      optional: \"vapaaehtoinen\",\n      connected_gplus_header: \"Google+ on yhdistetty onnistuneesti!\",\n      connected_gplus_p: \"Luo tili loppuun kirjautaksesi sisään Google+ käyttäjälläsi.\",\n      connected_facebook_header: \"Facebook on yhdistetty onnistuneesti!\",\n      connected_facebook_p: \"Luo tili loppuun kirjautuaksesi Facebook käyttäjälläsi.\",\n      hey_students: \"Oppilaat, syöttäkää luokkakoodinne jonka saatte opettajalta.\",\n      birthday: \"Syntymäpäivä\",\n      parent_email_blurb: \"Tiedämme että haluat heti opppia ohjelmoimaan &mdash; me olemme innoissame myös! Vanhempasi saavat ohjeet tilin luomiseen sähköpostiinsa. Lähetä viesti osoitteeseen {{email_link}} jos sinulla on jotain kysyttävää.\",\n      classroom_not_found: \"Luokkia ei löytynyt tuolla koodilla. Tarkista oikeinkirjoitus tai kysy apua opettajaltasi.\",\n      checking: \"Tarikistetaan...\",\n      account_exists: \"Sähköposti on jo käytössä:\",\n      sign_in: \"Kirjaudu sisään\",\n      email_good: \"Sähköposti toimii!\",\n      name_taken: \"Nimi on jo käytössä! Miten olisi {{suggestedName}}?\",\n      name_available: \"Käyttäjänimi saatavilla!\",\n      name_is_email: \"Käyttäjätunnus ei voi olla sähköpostiosoite\",\n      choose_type: \"Valitse tilin tyyppi:\",\n      teacher_type_1: \"Opeta ohjelmoimista CodeCombat:in avulla!\",\n      teacher_type_2: \"Aseta luokkasi valmiiksi\",\n      teacher_type_3: \"Pääsy kurssiohjeisiin\",\n      teacher_type_4: \"Näe oppilaan edistyminen\",\n      signup_as_teacher: \"Luo Opettajan Tili\",\n      student_type_1: \"Opi ohjelmoimaan pelatessasi lumoavaa peliä!\",\n      student_type_2: \"Pelaa luokkasi kanssa\",\n      student_type_3: \"Taistele areenoilla\",\n      student_type_4: \"Valitse sankarisi!\",\n      student_type_5: \"Ota Luokkakoodi valmiiksi!\",\n      signup_as_student: \"Luo Oppilaan Tili\",\n      individuals_or_parents: \"Muut\",\n      individual_type: \"Pelaajille jotka eivät ole luokasssa oppimassa koodaamaan. Vanhempien tulisi luoda tili täällä.\",\n      signup_as_individual: \"Luo Yksittäinen Tili\",\n      enter_class_code: \"Syötä Luokkakoodisi\",\n      enter_birthdate: \"Syötä syntymäaikasi:\",\n      parent_use_birthdate: \"Vanhemmat, käyttäkää omaa syntymäaikaanne.\",\n      ask_teacher_1: \"Kysy opettajaltasi luokkakoodia.\",\n      ask_teacher_2: \"Etkö ole osa luokka? Luo \",\n      ask_teacher_3: \"Yksittäinen Tili\",\n      ask_teacher_4: \" sen sijaan.\",\n      about_to_join: \"Olet liitymässä:\",\n      enter_parent_email: \"Syötä vanhempasi sähköposti:\",\n      parent_email_error: \"Jotain meni pieleen sähköpostin lähetyksessä. Tarkista osoite ja koita uudestaan.\",\n      parent_email_sent: \"Lähetimme sähköpostin jossa on ohjeet tilin luomiseen. Pyydä vanhempaasi tarkistamaan sähköpostinsa.\",\n      account_created: \"Tili luotu!\",\n      confirm_student_blurb: \"Kirjoita ylös tietosi jotta et unohda niitä. Opettajasi voi nollata salasanasi jos unohdat sen.\",\n      confirm_individual_blurb: \"Kirjoita tietosi ylös saatat tarvita niitä myöhemmin. Vahvista sähköpostiosoiteesi, että voit käyttää sitä salasanasi nollaamiseen tarvittaessa!\",\n      write_this_down: \"Kirjoita tämä ylös:\",\n      start_playing: \"Aloita pelaaminen!\",\n      sso_connected: \"Onnistuneesti yhdistetty:\",\n      select_your_starting_hero: \"Valitse aloitussankarisi:\",\n      you_can_always_change_your_hero_later: \"Voit vaihtaa sankariasi myöhemmin.\",\n      dont_use_our_email_silly: \"Laita vanhempiesi sähköposti tähän. Ei omaasi.\"\n    },\n    recover: {\n      recover_account_title: \"Palauta tili\",\n      send_password: \"Lähetä palautusviesti\",\n      recovery_sent: \"Palautusviesti lähetetty.\"\n    },\n    items: {\n      primary: \"Aseet\",\n      secondary: \"Kilvet\",\n      armor: \"Suojat\",\n      accessories: \"Tarvikkeet\",\n      misc: \"Sekalaiset\",\n      books: \"Kirjat\"\n    },\n    common: {\n      back: \"Takaisin\",\n      coming_soon: \"Tulossa pian!\",\n      \"continue\": \"Jatka\",\n      next: \"Seuraava\",\n      default_code: \"Oletuskoodi\",\n      loading: \"Ladataan...\",\n      overview: \"Yleissilmäys\",\n      processing: \"Prosessoidaan...\",\n      solution: \"Ratkaisu\",\n      table_of_contents: \"Sisällysluettelo\",\n      intro: \"Johdanto\",\n      saving: \"Tallennetaan...\",\n      sending: \"Lähetetään...\",\n      send: \"Lähetä\",\n      sent: \"Lähetetty\",\n      cancel: \"Peruuta\",\n      save: \"Tallenna\",\n      publish: \"Julkaise\",\n      create: \"Luo\",\n      fork: \"Haarauta\",\n      play: \"Pelaa\",\n      retry: \"Kokeile uudestaan\",\n      actions: \"Toiminnot\",\n      info: \"Tietoa\",\n      help: \"Apua\",\n      watch: \"Seuraa\",\n      unwatch: \"Lopeta Seuraaminen\",\n      submit_patch: \"Lähetä paikkaus\",\n      submit_changes: \"Lähetä muutos\",\n      save_changes: \"Tallenna muutokset\",\n      required_field: \"Vaadittu kenttä\"\n    },\n    general: {\n      and: \"ja\",\n      name: \"Nimi\",\n      date: \"Päiväys\",\n      body: \"Vartalo\",\n      version: \"Versio\",\n      pending: \"Odotetaan\",\n      accepted: \"Hyväksytty\",\n      rejected: \"Hylätty\",\n      withdrawn: \"Vedetty pois\",\n      accept: \"Hyväksy\",\n      reject: \"Hylkää\",\n      withdraw: \"Peruuta\",\n      submitter: \"Lähettäjä\",\n      submitted: \"Lähetetty\",\n      commit_msg: \"Lähetä Viesti\",\n      version_history: \"Versiohistoria\",\n      version_history_for: \"Versiohistoria: \",\n      select_changes: \"Valitse kaksi versiota vertailuun.\",\n      undo_prefix: \"Peruuta\",\n      redo_prefix: \"Tee uudelleen\",\n      play_preview: \"Toista esikatselu tasosta\",\n      result: \"Tulos\",\n      results: \"Tulokset\",\n      description: \"Kuvaus\",\n      or: \"tai\",\n      subject: \"Aihe\",\n      email: \"Sähköposti\",\n      password: \"Salasana\",\n      confirm_password: \"Vahvista salasana\",\n      message: \"Viesti\",\n      code: \"Koodi\",\n      ladder: \"Liiga\",\n      when: \"Kun\",\n      opponent: \"Vastustaja\",\n      rank: \"Arvo\",\n      score: \"Pisteet\",\n      win: \"Voitto\",\n      loss: \"Tappio\",\n      tie: \"Tasapeli\",\n      easy: \"Helppo\",\n      medium: \"Haastava\",\n      hard: \"Vaikea\",\n      player: \"Pelaaja\",\n      player_level: \"Taso\",\n      warrior: \"Sotilas\",\n      ranger: \"Vartija\",\n      wizard: \"Velho\",\n      first_name: \"Etunimi\",\n      last_name: \"Sukunimi\",\n      last_initial: \"Nimikirjain\",\n      username: \"Käyttäjätunnus\",\n      contact_us: \"Ota yhteyttä\",\n      close_window: \"Sulje ikkuna\",\n      learn_more: \"Lue lisää\",\n      more: \"Lisää\",\n      fewer: \"Vähemmän\",\n      \"with\": \"lisäksi\"\n    },\n    units: {\n      second: \"sekunti\",\n      seconds: \"sekuntia\",\n      minute: \"minuutti\",\n      minutes: \"minuuttia\",\n      hour: \"tunti\",\n      hours: \"tuntia\",\n      day: \"päivä\",\n      days: \"päivää\",\n      week: \"viikko\",\n      weeks: \"viikkoa\",\n      month: \"kuukausi\",\n      months: \"kuukautta\",\n      year: \"vuosi\",\n      years: \"vuotta\"\n    },\n    play_level: {\n      back_to_map: \"Takaisin karttaan\",\n      directions: \"Suunnat\",\n      edit_level: \"Muokkaa tasoa\",\n      keep_learning: \"Jatka oppimista\",\n      explore_codecombat: \"Tutki CodeCombat:a\",\n      finished_hoc: \"Kooditunti on valmis\",\n      get_certificate: \"Hanki todistus!\",\n      level_complete: \"Taso suoritettu\",\n      completed_level: \"Suoritit tason:\",\n      course: \"Kurssi:\",\n      done: \"Valmis\",\n      next_level: \"Seuraava taso\",\n      next_game: \"Seuraava peli\",\n      languages: \"Kielet\",\n      programming_language: \"Ohjelmointikieli\",\n      show_menu: \"Näytä pelivalikko\",\n      level: \"Taso\",\n      skip: \"Ohita\",\n      game_menu: \"Pelivalikko\",\n      restart: \"Käynnistä uudelleen\",\n      goals: \"Tavoitteet\",\n      goal: \"Tavoite\",\n      running: \"Ajetaan...\",\n      success: \"Onnistui!\",\n      incomplete: \"Kesken\",\n      timed_out: \"Aika loppui\",\n      failing: \"Epäonnistui\",\n      reload: \"Lataa\",\n      reload_title: \"Ladataanko kaikki koodi uudestaan?\",\n      reload_really: \"Oletko varma että haluat ladata tämän tason uudestaan ja aloittaa alusta?\",\n      reload_confirm: \"Lataa Kaikki\",\n      test_level: \"Testaa taso\",\n      victory: \"Voitto\",\n      victory_title_prefix: \"\",\n      victory_title_suffix: \" Valmis\",\n      victory_sign_up: \"Luo tili\",\n      victory_sign_up_poke: \"Haluatko tallettaa koodisi? Luo ilmainen tili!\",\n      victory_rate_the_level: \"Kuinka hauska tämä taso oli?\",\n      victory_return_to_ladder: \"Palaa liigaan\",\n      victory_saving_progress: \"Tallennetaan edistymisesi\",\n      victory_go_home: \"Takaisin kotiin\",\n      victory_review: \"Kerro lisää!\",\n      victory_review_placeholder: \"Millainen kenttä oli?\",\n      victory_hour_of_code_done: \"Oletko Valmis?\",\n      victory_hour_of_code_done_yes: \"Kyllä, Koodituntini on vamis!\",\n      victory_experience_gained: \"Kokemusta\",\n      victory_gems_gained: \"Jalokiviä\",\n      victory_new_item: \"Uusi esine\",\n      victory_new_hero: \"Uusi sankari\",\n      victory_become_a_viking: \"Tule viikingiksi\",\n      tome_cast_button_run: \"Suorita\",\n      tome_cast_button_running: \"Suoritetaan\",\n      tome_cast_button_ran: \"Suoritettu\",\n      tome_submit_button: \"Lähetä\",\n      tome_reload_method: \"Lataa koodi uudelleen\",\n      tome_available_spells: \"Saatavissa olevat taiat\",\n      tome_your_skills: \"Taitosi\",\n      hints: \"Vihjeet\",\n      hints_title: \"Vihje {{number}}\",\n      code_saved: \"Koodi on tallennettu\",\n      skip_tutorial: \"Ohita (esc)\",\n      keyboard_shortcuts: \"Pikanäppäimet\",\n      loading_start: \"Aloita Taso\",\n      problem_alert_title: \"Korjaa koodisi\",\n      time_current: \"Nyt:\",\n      time_total: \"Enintään:\",\n      time_goto: \"Mene:\",\n      non_user_code_problem_title: \"Tason lataaminen epäonnistui\",\n      infinite_loop_title: \"Loputon luuppi havaittu\",\n      infinite_loop_description: \"Ohjelmakoodin suoritusta maailman luomiseksi ei saatu päätökseen. Se on todennäköisesti todella hidas tai loputtomassa luupissa. Tai siellä voi olla bugi. Voit joko ajaa koodin uudestaan, tai palauttaa sen alkuperäiseen tilaan. Jos se ei korjaa ongelmaa, kerro siitä meille.\",\n      check_dev_console: \"Voit myös avata kehittäjän konsolin ja katsoa mikä saattaisi olla vialla.\",\n      check_dev_console_link: \"(ohjeet)\",\n      infinite_loop_try_again: \"Yritä uudelleen\",\n      infinite_loop_reset_level: \"Aloita taso uudelleen\",\n      infinite_loop_comment_out: \"Kommentoi koodirivejä\",\n      tip_toggle_play: \"Valitse toista/pysäytä painamalla Ctrl+P.\",\n      tip_scrub_shortcut: \"Paina Ctrl+[ ja Ctrl+] kelataksesi eteen tai taakse.\",\n      tip_guide_exists: \"Katso vinkkejä pelissä, painamalla: Pelivalikko -> Opas.\",\n      tip_open_source: \"CodeCombat on 100% avointa lähdekoodia!\",\n      tip_tell_friends: \"Pidätkö CodeCombatista? Kerro meistä myös ystävillesi!\",\n      tip_beta_launch: \"CodeCombat avattiin betatestaukseen lokakuussa 2013.\",\n      tip_think_solution: \"Mieti ratkaisua, älä ongelmaa.\",\n      tip_theory_practice: \"Teoriassa teoria ja käytäntö ovat sama asia. Käytännössä näin ei ole. - Yogi Berra\",\n      tip_error_free: \"Virheettömiä ohjelmia voi kirjoittaa kahdella eri tavalla. Ikävä kyllä kolmas tapa on ainoa toimiva. - Alan Perlis\",\n      tip_debugging_program: \"Jos debuggaus tarkoittaa virheiden poistamista ohjelmasta, niin ohjelmoinnin on tarkoitettava niiden lisäämistä. - Edsger W. Dijkstra\",\n      tip_forums: \"Tulepa keskustelupalstalle kertomaan mielipiteesi!\",\n      tip_baby_coders: \"Tulevaisuudessa jopa vauvoista tulee Arkkimaageja.\",\n      tip_morale_improves: \"Lataus jatkuu kunnes moraalisi kohenee.\",\n      tip_all_species: \"Me uskomme tasa-arvoisiin mahdollisuuksiin koodauksen oppimisessa.\",\n      tip_google: \"Onko sinulla ongelma, jota et osaa ratkaista? Katso Googlesta!\",\n      tip_solve_then_write: \"Ratkaise ensin ongelma. Kirjoita sitten koodi. - John Johnson\",\n      tip_mistakes_proof_of_trying: \"Virheet koodissa ovat vain todiste siitä että yrität.\",\n      tip_sharpening_swords: \"Teroitetaan miekkoja.\",\n      project_complete: \"Projekti valmis!\",\n      share_this_project: \"Jaa tämä projekti ystävien tai perheen kanssa:\",\n      ready_to_share: \"Oletko valmis julkaisemaan projektisi?\",\n      click_publish: \"Klikkaa \\\"Publish\\\" jotta se ilmestyy luokan galleriaan, käy sitten katsomassa mitä luokkakaverisi ovat rakentaneet! Voit tulla takaisin ja jatkaa tätä projektia. Tulevat muutoksesi tallennetaan ja jaetaan automaattisesti luokkatoveriesi kanssa.\",\n      already_published_prefix: \"Muutoksesi ollaan tallennettu luokan galleriaan.\",\n      already_published_suffix: \"Jatka kokeilemista ja tee tästä projektista jopa vielä parempi tai käy katsomassa mitä luokkakaverisi ovat rakentaneet! Tulevat muutoksesi tallennetaan ja jaetaan automaattisesti luokkatoveriesi kanssa.\",\n      view_gallery: \"Katso galleriaa\",\n      project_published_noty: \"Tasosi on julkaistu!\",\n      keep_editing: \"Jatka muokkaamista\"\n    },\n    game_menu: {\n      inventory_tab: \"Luettelo\",\n      save_load_tab: \"Tallenna/Lataa\",\n      options_tab: \"Asetukset\",\n      guide_tab: \"Opas\",\n      guide_video_tutorial: \"Video-oppaat\",\n      guide_tips: \"Vinkkejä\",\n      multiplayer_tab: \"Moninpelaaja\",\n      auth_tab: \"Kirjaudu sisään\",\n      inventory_caption: \"Varusta sankari\",\n      choose_hero_caption: \"Valitse sankari ja kieli\",\n      options_caption: \"Muuta asetuksia\",\n      guide_caption: \"Ohjeita ja vinkkejä\",\n      multiplayer_caption: \"Pelaa ystävien kanssa!\",\n      auth_caption: \"Tallenna edistymisesi.\"\n    },\n    leaderboard: {\n      view_other_solutions: \"Katso Muita Ratkaisuja\",\n      scores: \"Pisteet\",\n      top_players: \"Parhaat pelaajat\",\n      day: \"Tänään\",\n      week: \"Tällä Viikolla\",\n      all: \"Koskaan\",\n      latest: \"Viimeisin\",\n      time: \"Aika\",\n      damage_taken: \"Vanhinkoa saatu\",\n      damage_dealt: \"Vahinkoa annettu\",\n      difficulty: \"Vaikeustaso\",\n      gold_collected: \"Kultaa kerätty\"\n    },\n    inventory: {\n      equipped_item: \"Käytössä\",\n      required_purchase_title: \"Vaadittu\",\n      available_item: \"Saatavilla\",\n      restricted_title: \"Rajoitettu\",\n      should_equip: \"(ota käyttöön tuplaklikkaamalla)\",\n      equipped: \"(käytössä)\",\n      locked: \"(lukittu)\",\n      restricted: \"(ei saatavilla tässä kentässä)\",\n      equip: \"Ota käyttöön\",\n      unequip: \"Ota pois käytöstä\"\n    },\n    buy_gems: {\n      few_gems: \"Muutama jalokivi\",\n      pile_gems: \"Kasa jalokiviä\",\n      chest_gems: \"Arkullinen jalokiviä\",\n      purchasing: \"Ostetaan...\",\n      declined: \"Korttiasi ei hyväksytty\",\n      retrying: \"Palvelinvirhe, yritetään uudelleen.\",\n      prompt_title: \"Ei riittävästi jalokiviä\",\n      prompt_body: \"Haluatko ostaa lisää?\",\n      prompt_button: \"Siirry kauppaan\",\n      recovered: \"Aiempi jalokiviostos palautettu. Ole hyvä ja päivitä sivu.\",\n      price: \"x{{gems}} / kk\",\n      buy_premium: \"Osta Premium\",\n      purchase: \"Osta\",\n      purchased: \"Ostettu\"\n    },\n    earn_gems: {\n      prompt_title: \"Ei tarpeeksi jalokiviä\",\n      prompt_body: \"Jatka pelaamista ansaitaksesi lisää!\"\n    },\n    subscribe: {\n      comparison_blurb: \"Teroita kykyjäsi CodeCombat kuukausitilauksella!\",\n      must_be_logged: \"Kirjaudu ensin sisään. Ole hyvä, luo tunnus tai kirjaudu sisään yläpuolella olevasta valikosta.\",\n      subscribe_title: \"Tilaa\",\n      unsubscribe: \"Poista tilaus\",\n      confirm_unsubscribe: \"Varmista tilauksen poisto\",\n      never_mind: \"Ei se mitään, Me pidämme sinusta jokatapauksessa\",\n      thank_you_months_prefix: \"Kiitos, että olet tukenut meitä viimeiset\",\n      thank_you_months_suffix: \"kuukautta.\",\n      thank_you: \"CodeCombat kiittää tuestasi.\",\n      sorry_to_see_you_go: \"Harmi, että olet päättänyt lähteä! Kerrothan meille, mitä voimme tehdä paremmin.\",\n      unsubscribe_feedback_placeholder: \"Mitä olisimme voineet tehdä?\",\n      stripe_description: \"Kuukausittainen tilaus\",\n      buy_now: \"Osta nyt\",\n      subscription_required_to_play: \"Tarvitset CodeCombat kuukausitilauksen pellataksesi tätä tasoa.\",\n      unlock_help_videos: \"Hanki tilaus avataksesi kaikki video-oppaat.\",\n      personal_sub: \"Henkilökohtainen tilaus\",\n      loading_info: \"Ladataan tilauksen tietoja...\",\n      managed_by: \"Hallinnoija\",\n      will_be_cancelled: \"Peruutus astuu voimaan\",\n      currently_free: \"Sinulla on tällähetkellä ilmainen tilaus\",\n      currently_free_until: \"Tilauksesi on voimassa\",\n      free_subscription: \"Ilmainen tilaus\",\n      was_free_until: \"Ilmainen tilauksesi päättyi\",\n      managed_subs: \"Hallinnoidut tilaukset\",\n      subscribing: \"Tilausta käsitellään...\",\n      current_recipients: \"Tämänhetkiset vastaanottajat\",\n      unsubscribing: \"Tilaus päätetään...\",\n      subscribe_prepaid: \"Tilaa käyttämällä ennakkomaksettua koodinumeroa\",\n      using_prepaid: \"Käytetään ennakkomaksettu koodinumero kuukausitilaukseen\"\n    },\n    choose_hero: {\n      choose_hero: \"Valitse Sankarisi\",\n      programming_language: \"Ohjelmointikieli\",\n      programming_language_description: \"Mitä ohjelmointikieltä haluat käyttää?\",\n      \"default\": \"Oletus\",\n      experimental: \"Kehitteillä\",\n      python_blurb: \"Yksinkertainen mutta voimakas, loistava niin aloittelijoille kuin experteille.\",\n      javascript_blurb: \"Netin kieli. (Ei ole sama kuin Java.)\",\n      coffeescript_blurb: \"Kivempi JavaScript kirjoitusmuoto.\",\n      lua_blurb: \"Pelien skriptauskieli.\",\n      java_blurb: \"(Vain Tilaajille) Android ja enterprise.\",\n      status: \"Tila\",\n      weapons: \"Aseet\",\n      weapons_warrior: \"Miekat - Lyhyt kantama, Ei taikuutta\",\n      weapons_ranger: \"Jouset, tuliaseet - Pitkä kantama, Ei taikuutta\",\n      weapons_wizard: \"Sauvat - Pitkä kantama, Hallitsee taikuuden\",\n      attack: \"Hyökkays\",\n      health: \"Terveys\",\n      speed: \"Nopeus\",\n      regeneration: \"Palautumisnopeus\",\n      range: \"Etäisyys\",\n      blocks: \"Esto\",\n      backstab: \"Selkäänpuukotus\",\n      skills: \"Taidot\",\n      attack_1: \"Tekee\",\n      attack_2: \"vahinkoa\",\n      attack_3: \"käyttämän aseen vahingosta.\",\n      health_1: \"Antaa\",\n      health_2: \"terveyttä\",\n      health_3: \"käyttämien suojien terveydestä.\",\n      speed_1: \"Liikkuu\",\n      speed_2: \"metriä sekunnissa.\",\n      available_for_purchase: \"Hankittavissa\",\n      level_to_unlock: \"Taso, joka avaa:\",\n      restricted_to_certain_heroes: \"Voit pelata tason vain tietyillä sankareilla.\"\n    },\n    skill_docs: {\n      \"function\": \"funktio\",\n      method: \"metodi\",\n      snippet: \"pätkä\",\n      number: \"numero\",\n      array: \"taulukko\",\n      object: \"olio\",\n      string: \"merkkijono\",\n      writable: \"kirjoitettava\",\n      read_only: \"vain luettavaksi\",\n      action: \"Toiminto\",\n      spell: \"Taika\",\n      action_name: \"nimi\",\n      action_cooldown: \"Kesto\",\n      action_specific_cooldown: \"Latausaika\",\n      action_damage: \"Vahinko\",\n      action_range: \"Etäisyys\",\n      action_radius: \"Säde\",\n      action_duration: \"Kesto\",\n      example: \"Esimerkki\",\n      ex: \"esim.\",\n      current_value: \"Nykyinen Arvo\",\n      default_value: \"Oletusarvo\",\n      parameters: \"Parametrit\",\n      required_parameters: \"Vaaditut parametrit\",\n      optional_parameters: \"Vapaaehtoiset parametrit\",\n      returns: \"Palauttaa\",\n      granted_by: \"Mahdollistaa\"\n    },\n    save_load: {\n      granularity_saved_games: \"Tallennettu\",\n      granularity_change_history: \"Historia\"\n    },\n    options: {\n      general_options: \"Yleiset Asetukset\",\n      volume_label: \"Äänenvoimakkuus\",\n      music_label: \"Musiikki\",\n      music_description: \"Aseta taustamusiikki päälle/pois päältä.\",\n      editor_config_title: \"Editorin asetukset\",\n      editor_config_livecompletion_label: \"Automaattinen koodin täydennys\",\n      editor_config_livecompletion_description: \"Näyttää ehdotuksen koodin kirjoittamisen yhteydessä.\",\n      editor_config_invisibles_label: \"Näytä Näkymättömät Merkit\",\n      editor_config_invisibles_description: \"Näyttää myös näkymättömät merkit kuten välilyönnit ja sarkaimet.\",\n      editor_config_indentguides_label: \"Näytä Sisennysapu\",\n      editor_config_indentguides_description: \"Näyttää pystyviivan jokaisen sisennyksen kohdalla.\",\n      editor_config_behaviors_label: \"Älykäät Toiminnot\",\n      editor_config_behaviors_description: \"Täydentää automaattisesti sulut ja lainausmerkit.\"\n    },\n    versions: {\n      save_version_title: \"Tallenna Uusi Versio\",\n      new_major_version: \"Uusi Pääversio\",\n      submitting_patch: \"Lähetetään Patchi...\",\n      cla_prefix: \"Tallentaaksesi muutokset sinun pitää ensin hyväksyä\",\n      cla_url: \"käyttöehdot\",\n      cla_suffix: \".\",\n      cla_agree: \"HYVÄKSYN\",\n      owner_approve: \"Omistajan pitää ensin hyväksyä se ennen kuin muutokset tulevat voimaan.\"\n    },\n    contact: {\n      contact_us: \"Ota yhteyttä CodeCombat\",\n      welcome: \"Mukava kuulla teistä! Käytä tätä lomaketta lähettääksesi meille sähköpostia. \",\n      forum_prefix: \"Kaikissa yleisisä asioissa, kokeile ensin \",\n      forum_page: \"keskustelufoorumiamme\",\n      forum_suffix: \".\",\n      faq_prefix: \"Usein kysytyt kysymykset löydät\",\n      faq: \"Täältä\",\n      subscribe_prefix: \"Jos tarvitset apua kentän läpäisemisessä, ole hyvä ja hanki\",\n      subscribe: \"CodeCombat kuukausitilaus\",\n      subscribe_suffix: \"ja autamme mielellämme teitä ohjelmakoodinne kanssa.\",\n      subscriber_support: \"Kun olette CodeCombat kuukausitilaaja, sähköpostisi käsitellään etusijalla.\",\n      screenshot_included: \"Kuvankaappaus liitetty.\",\n      where_reply: \"Mihin haluatte vastauksen?\",\n      send: \"Lähetä\"\n    },\n    account_settings: {\n      title: \"Tiliasetukset\",\n      not_logged_in: \"Kirjaudu sisään tai luo tili jotta pelitilanne voidaan tallentaa.\",\n      me_tab: \"Minä\",\n      picture_tab: \"Kuva\",\n      delete_account_tab: \"Poista Tili\",\n      wrong_email: \"Virheellinen sähköposti\",\n      wrong_password: \"Virheellinen salasana\",\n      delete_this_account: \"Poista tili lopullisesti\",\n      reset_progress_tab: \"Resetoi edistymisesi\",\n      reset_your_progress: \"Tyhjennä edistymisesi ja aloita alusta\",\n      god_mode: \"Pääkäyttäjä tila\",\n      emails_tab: \"Sähköpostitiedotteet\",\n      admin: \"Ylläpitäjä\",\n      manage_subscription: \"Klikkaa tässä hallitaksesi tilaustasi.\",\n      new_password: \"Uusi Salasana\",\n      new_password_verify: \"Varmista\",\n      type_in_email: \"Anna sähköpostiosoitteesi vahvistaaksesi tilin poistamisen.\",\n      type_in_email_progress: \"Kirjoita sähköpostisi vahvistaaksesi edistymisen tyhjennyksen.\",\n      type_in_password: \"Kirjoita myös salasanasi.\",\n      email_subscriptions: \"Sähköpostitiedotteet\",\n      email_subscriptions_none: \"Ei sähköpostitiedotteita\",\n      email_announcements: \"Tiedotteet\",\n      email_announcements_description: \"Haluatko viimeisimmät uutiset ja tiedoteet uusista ominaisuuksista.\",\n      email_notifications: \"Ilmoitukset\",\n      email_notifications_summary: \"Valinnat automaattisia sähköposti-ilmoituksia varten toimistasi CodeCombat sivustolla.\",\n      email_any_notes: \"Kaikki Ilmoitukset\",\n      email_any_notes_description: \"Poista valinta jos et halua mitään ilmoituksia sähköpostiisi.\",\n      email_news: \"Uutiset\",\n      email_recruit_notes: \"Työmahdollisuudet\",\n      email_recruit_notes_description: \"Jos pelaat todella hyvin saatamme ottaa sinuun yhteyttä ja tarjota työmahdollisuuksia.\",\n      contributor_emails: \"Avustajakohtaiset Tiedotteet\",\n      contribute_prefix: \"Etsimme lisää tekijöitä! Katso lisää \",\n      contribute_page: \"Avusta\",\n      contribute_suffix: \" sivulta ja lue miten sinäkin pääset mukaan.\",\n      email_toggle: \"Valitse/Poista Kaikki\",\n      error_saving: \"Virhe tallennettaessa\",\n      saved: \"Muutokset tallennettu\",\n      password_mismatch: \"Salasanat eivät täsmää.\",\n      password_repeat: \"Kirjoita salasana uudestaan.\"\n    },\n    keyboard_shortcuts: {\n      keyboard_shortcuts: \"Pikanäppäimet\",\n      space: \"Välilyönti\",\n      enter: \"Enter\",\n      press_enter: \"paina Enter\",\n      escape: \"Esc\",\n      shift: \"Shift\",\n      run_code: \"Suorita koodi.\",\n      run_real_time: \"Suorita tosiajassa.\",\n      continue_script: \"Ohita nykyinen koodi.\",\n      skip_scripts: \"Ohita kaikki ohitettavat koodit.\",\n      toggle_playback: \"Toista/Pysäytä.\",\n      scrub_playback: \"Siirry eteen ja taakse ajassa.\",\n      single_scrub_playback: \"Siirry eteen ja taakse ajassa ruutu kerrallaan.\",\n      scrub_execution: \"Siirry nykyisen taian suorituskohtaan.\",\n      toggle_debug: \"Virheenetsintänäyttö.\",\n      toggle_grid: \"Taustaruudukko.\",\n      toggle_pathfinding: \"Reitinhakunäyttö.\",\n      beautify: \"Viimeistele ohjelmakoodisi, muotoilemalla se yhdenmukaisesti.\",\n      maximize_editor: \"Laajenna/pienennä koodieditori.\"\n    },\n    community: {\n      main_title: \"CodeCombat Yhteisö\",\n      introduction: \"Katso miten voit auttaa ja mieti mikä kuulostaa hauskimmalta. Kuulemme mielellään sinusta!\"\n    },\n    clans: {\n      clan: \"Klaani\",\n      clans: \"Klaanit\",\n      new_name: \"Klaanin nimi\",\n      new_description: \"Klaanin kuvaus\",\n      make_private: \"Yksityinen klaani\",\n      subs_only: \"Vain tilanneille\",\n      create_clan: \"Luo uusi klaani\",\n      private_preview: \"Esikatselu\",\n      private_clans: \"Yksityiset klaanit\",\n      public_clans: \"Julkiset klaanit\",\n      my_clans: \"Omat klaanit\",\n      clan_name: \"Klaanin nimi\",\n      name: \"Nimi\",\n      chieftain: \"Päällikkö\",\n      edit_clan_name: \"Muuta klaanin nimeä\",\n      edit_clan_description: \"Muuta klaanin kuvausta\",\n      edit_name: \"muuta nimi\",\n      edit_description: \"muuta kuvaus\",\n      \"private\": \"(yksityinen)\",\n      summary: \"Yhteenveto\",\n      average_level: \"Keskimääräinen taso\",\n      average_achievements: \"Saavutuksia keskimäärin\",\n      delete_clan: \"Poista klaani\",\n      leave_clan: \"Jätä klaani\",\n      join_clan: \"Liity klaaniin\",\n      invite_1: \"Kutsu:\",\n      invite_2: \"*Kutsu pelaajia klaaniin, lähettämällä heille tämä linkki.\",\n      members: \"Jäsenet\",\n      progress: \"Edistyminen\",\n      not_started_1: \"ei aloitettu\",\n      started_1: \"aloitettu\",\n      complete_1: \"valmis\",\n      exp_levels: \"Laajenna tasot\",\n      rem_hero: \"Poista sankari\",\n      status: \"Tilanne\",\n      complete_2: \"Valmis\",\n      started_2: \"Aloitettu\",\n      not_started_2: \"Ei aloitettu\",\n      view_solution: \"Paina katsoaksesi ratkaisut.\",\n      view_attempt: \"Paina katsoaksesi yrityksesi.\",\n      latest_achievement: \"Viimeisin saavutus\",\n      playtime: \"Peliaika\",\n      last_played: \"Viimeksi pelattu\",\n      leagues_explanation: \"Pelaa liigaa muita klaanin jäseniä vastaan näillä moninpelaaja-areenoilla.\"\n    },\n    courses: {\n      create_new_class: \"Luo uusi luokka\",\n      unnamed_class: \"Nimetön luokka\",\n      edit_settings1: \"Muokkkaa Luokan Asetuksia\",\n      add_students: \"Lisää Oppilaita\",\n      stats: \"Tilastot\",\n      total_students: \"Oppilaita yhteensä:\",\n      average_time: \"Keskimääräinen peliaika:\",\n      total_time: \"Peliaika Yhteensä:\",\n      total_levels: \"Tasoja suoritettu yhteensä:\",\n      students: \"Oppilaat\",\n      play_time: \"Peliaika:\",\n      completed: \"Suoritettu:\",\n      enter_emails: \"Kirjoita oppilaiden sähköpostit kutsuaksesi, yksi per rivi\",\n      send_invites: \"Lähetä kutsut\",\n      remove_student: \"poista oppilas\",\n      student: \"Oppilas\",\n      teacher: \"Opettaja\",\n      arena: \"Areena\",\n      available_levels: \"Saatavilla olevat tasot\",\n      started: \"aloitettu\",\n      complete: \"valmis\",\n      required: \"pakollinen\",\n      welcome_to_courses: \"Seikkailijat, tervetuloa kursseille!\",\n      ready_to_play: \"Valmiina pelaamaan?\",\n      start_new_game: \"Aloita uusi peli\",\n      welcome_to_page: \"Tervetuloa Kurssit sivulle!\",\n      my_classes: \"Minun luokkani\",\n      class_added: \"Luokka lisätty onnistuneesti!\",\n      join: \"Liity\",\n      joining: \"Liitytään luokkaan\",\n      course_complete: \"Kurssi Suoritettu\",\n      play_arena: \"Pelaa Areena\",\n      start: \"Aloita\",\n      last_level: \"Viimeinen pelattu taso\",\n      not_you: \"Joku muu?\",\n      continue_playing: \"Jatka Pelaamista\",\n      remove_student1: \"Poista oppilas\",\n      are_you_sure: \"Haluatko varmasti poistaa tämän oppilaan tästä luokasta?\",\n      keep_student: \"Pidä Oppilas\",\n      removing_user: \"Poistetaan käyttäjää\",\n      select_language: \"Valitse kieli\",\n      select_level: \"Valitse taso\",\n      play_level: \"Pelaa taso\",\n      language_select: \"Valitse kieli\",\n      avg_student_exp_label: \"Keskimääräinen oppilaiden ohjelmointikokemus\",\n      avg_student_exp_select: \"Valitse parhaiten kuvaava vaihtoehto\",\n      student_age_range_label: \"Oppilaiden ikähaarukka\",\n      student_age_range_younger: \"Nuorempi kuin 6\",\n      student_age_range_older: \"Vanhempi kuin 18\",\n      student_age_range_to: \"-\",\n      create_class: \"Luo Luokka\",\n      class_name: \"Luokan Nimi\",\n      teacher_account_restricted: \"Opettajan tililläsi ei voi käyttää oppilassisältöä.\",\n      account_restricted: \"Oppilaan tili tarvitaan tämän sivun käyttämiseen.\",\n      update_account_login_title: \"Kirjaudu sisään päivittääksesi Tilisi\",\n      update_account_title: \"Tilisi tarvitsee toimenpiteitä!\",\n      update_account_blurb: \"Ennen kun pääset käsiksi luokkiisi, valitse miten haluat käyttää tätä tiliä.\",\n      update_account_current_type: \"Nykyisen Tilin Tyyppi:\",\n      update_account_account_email: \"Tilin Sähköposti/Käyttäjänimi:\",\n      update_account_am_teacher: \"Olen Opettaja\",\n      update_account_teachers_can: \"Opettajan Tili Pystyy:\",\n      update_account_teachers_can1: \"Luoda/Hallita/lisätä luokkia\",\n      update_account_teachers_can2: \"Nimittää/ilmoittaa oppilaita kurseille\",\n      update_account_teachers_can3: \"Avaamaan kaikki kurssin tasot kokeiluun\",\n      update_account_teachers_can4: \"Käyttää uusia vain opettajille toimintoja kun julkaisemme ne\",\n      update_account_teachers_warning: \"Varoitus: Sinut poistetaan kaikista luokista johom olet liittynyt ja et voi pelata enää oppilaana.\",\n      update_account_remain_teacher: \"Pysy Opettajana\",\n      update_account_update_teacher: \"Päivitä Tili Opettajaksi\",\n      update_account_am_student: \"Olen Oppilas\",\n      update_account_students_can: \"Oppilaan Tili Pystyy:\",\n      update_account_students_can1: \"Liittyä luokkiin\",\n      update_account_students_can2: \"Pelata kursseja oppilaana ja tarkkailla omaa edistymistään\",\n      update_account_students_can3: \"Taistella luokkakavereita vastaan areenoilla\",\n      update_account_students_can4: \"Käyttää uusia vain oppilaille toimintoja kun julkaisemme ne\",\n      update_account_students_warning: \"Varoitus: Et voi hallita luokkia jotka olet luonut tai luoda uusia luokkia.\",\n      update_account_remain_student: \"Pysy Oppilaaana\",\n      update_account_update_student: \"Päivitä Tili Oppilaaksi\",\n      update_account_not_sure: \"Etkö ole varma minkä valitset? Lähetä sähköpostia\",\n      update_account_confirm_update_student: \"Oletko varma että haluat päivittää tilisi oppilaan tiliksi?\",\n      update_account_confirm_update_student2: \"Et voi hallita luokkia jotka olet luonut etkä voi luoda uusia luokkia. Kaikki luokkasi poistetaan CodeCombat:ista eikä niitä voi palauttaa.\",\n      instructor: \"Ohjaaja: \",\n      account_settings: \"Tilin asetukset\",\n      select_your_hero: \"Valitse sankarisi\",\n      select_your_hero_description: \"Voit vaihtaa sankariasi menemällä kurssit sivulle ja valitsemalla \\\"Valitse sankarisi\\\"\",\n      select_this_hero: \"Valitse tämä sankari\",\n      current_hero: \"Nykyinen sankari:\",\n      current_hero_female: \"Nykyinen sankari:\"\n    },\n    sharing: {\n      game: \"Peli\",\n      webpage: \"Nettisivu\",\n      share_game: \"Jaa tämä peli\",\n      share_web: \"Jaa tämä nettisivu\",\n      victory_share_prefix: \"Kutsu tällä linkillä ystäväsi ja perheesi\",\n      victory_share_game: \"pelaamaan sinun tasoasi\",\n      victory_share_web: \"katsomaan nettisivuasi\",\n      victory_share_suffix: \".\",\n      victory_course_share_prefix: \"Tämä linkki antaa ystäviesi ja perheesi\",\n      victory_course_share_game: \"pelata peliä,\",\n      victory_course_share_web: \"katsoa nettisivua,\",\n      victory_course_share_suffix: \"jonka sinä juuri loit.\",\n      copy_url: \"Kopio URL-osoite\",\n      share_with_teacher_email: \"Lähetä opettajallesi\"\n    },\n    game_dev: {\n      creator: \"Tekijä\"\n    },\n    web_dev: {\n      image_gallery_title: \"Kuvagalleria\",\n      select_an_image: \"Valitse kuva, jota haluat käyttää\",\n      scroll_down_for_more_images: \"(vieritä alaspäin nähdäksesi lisää kuvia)\",\n      copy_the_url: \"Kopioi URL-osoite alapuolelta\",\n      copy_the_url_description: \"Hyödyllinen jos haluat korvata olemassaolevan kuvan.\",\n      copy_the_img_tag: \"Kopioi <img> tagi\",\n      copy_the_img_tag_description: \"Hyödyllinen jos haluat lisätä uuden kuvan.\",\n      copy_url: \"Kopioi URL-osoite\",\n      copy_img: \"Kopioi <img>\",\n      how_to_copy_paste: \"Miten Kopioida/Liittää\",\n      copy: \"Kopioi\",\n      paste: \"Liitä\",\n      back_to_editing: \"Takaisin muokkaamaan\"\n    },\n    classes: {\n      archmage_title: \"Arkkimaagi\",\n      archmage_title_description: \"(Koodaaja)\",\n      artisan_title: \"Käsityöläinen\",\n      artisan_title_description: \"(Kenttäsuunnittelija)\",\n      adventurer_title: \"Seikkailija\",\n      adventurer_title_description: \"(Kenttätestaaja)\",\n      scribe_title: \"Kirjuri\",\n      scribe_title_description: \"(Toimittaja)\",\n      diplomat_title: \"Diplomaatti\",\n      diplomat_title_description: \"(Kääntäjä)\",\n      ambassador_title: \"Suurlähettiläs\",\n      ambassador_title_description: \"(Tuki)\"\n    },\n    article: {\n      edit_btn_preview: \"Esikatselu\",\n      edit_article_title: \"Muokkaa artikkelia\"\n    },\n    polls: {\n      priority: \"Prioriteetti\"\n    },\n    user: {\n      stats: \"Tilastot\",\n      singleplayer_title: \"Yksinpelitasot\",\n      multiplayer_title: \"Moninpelitasot\",\n      achievements_title: \"Saavutukset\",\n      last_played: \"Viimeisin peli\",\n      status: \"Tilanne\",\n      status_completed: \"Valmis\",\n      status_unfinished: \"Kesken\",\n      no_singleplayer: \"Ei yksinpelejä pelattuna.\",\n      no_multiplayer: \"Ei moninpelejä pelattuna.\",\n      no_achievements: \"Ei saavutuksia.\",\n      favorite_prefix: \"Suosikki ohjelmointikieleni on \",\n      favorite_postfix: \".\",\n      not_member_of_clans: \"Ei klaanien jäsenyyksiä.\"\n    },\n    achievements: {\n      last_earned: \"Viimeisin saavutus\",\n      amount_achieved: \"Yhteensä\",\n      achievement: \"Saavutus\",\n      current_xp_prefix: \"\",\n      current_xp_postfix: \" yhteensä\",\n      new_xp_prefix: \"\",\n      new_xp_postfix: \" ansaittu\",\n      left_xp_prefix: \"\",\n      left_xp_infix: \" jäljellä tasoon \",\n      left_xp_postfix: \"\"\n    },\n    account: {\n      payments: \"Ostot\",\n      prepaid_codes: \"Prepaid koodi\",\n      purchased: \"Ostettu\",\n      subscription: \"Kuukausitilaus\",\n      invoices: \"Laskut\",\n      service_apple: \"Apple\",\n      service_web: \"Netti\",\n      paid_on: \"Maksettu\",\n      service: \"Palvelu\",\n      price: \"Hinta\",\n      gems: \"Jalokivet\",\n      active: \"Voimassa\",\n      subscribed: \"Kirjautunut\",\n      unsubscribed: \"Ei kirjautunut\",\n      active_until: \"Voimassa asti\",\n      cost: \"Hinta\",\n      next_payment: \"Seuraava maksu\",\n      card: \"Kortti\",\n      status_unsubscribed_active: \"Tilauksesi ei ole aktiivinen ja sinua ei laskuteta, mutta etusi ovat vielä voimassa.\",\n      status_unsubscribed: \"Hanki käyttöösi uusia tasoja, sankareita, esineitä ja lisää jalokiviä CodeCombat kuukausitilauskella!\",\n      not_yet_verified: \"Ei vielä vahvistettu.\",\n      resend_email: \"Lähetä viesti uudelleen\",\n      email_sent: \"Viesti lähetetty! Tarkista sähköpostisi.\",\n      verifying_email: \"Vahvistetaan sähköpostiosoitettasi...\",\n      successfully_verified: \"Vahvistit sähköpostiosoitteesi onnistuneesti!\",\n      verify_error: \"Jotain meni pieleen sähköpostiasi vahvistettaessa. :(\"\n    },\n    account_invoices: {\n      amount: \"Hinta US dollareina\",\n      declined: \"Luottokorttisimaksu hylätty\",\n      invalid_amount: \"Ole hyvä ja syötä määrä US dollareina.\",\n      not_logged_in: \"Kirjaudu sisään tai luo tili katosaksi laskujanne.\",\n      pay: \"Suorita maksu\",\n      purchasing: \"Käsitellään...\",\n      retrying: \"Palvelinvirhe, yritetään uudelleen.\",\n      success: \"Maksu onnistui. Kiitos!\"\n    },\n    loading_error: {\n      could_not_load: \"Virhe ladattaessa tietoja palvelimelta\",\n      connection_failure: \"Yhteysvirhe.\",\n      connection_failure_desc: \"Näyttää siltä että et ole yhteydessä internettiin! Tarkista yhteytesi ja lataa sivu uudelleen.\",\n      login_required: \"Kirjautuminen vaaditaan\",\n      login_required_desc: \"Sinun täytyy olla kirjautunut sisään nähdäksesi tämän sivun\",\n      unauthorized: \"Teidän tulee olla kirjautuneena sisään. Ovatko evästeet sallittuna?\",\n      forbidden: \"Ei käyttöoikeuttta.\",\n      forbidden_desc: \"Voi voi, täällä ei ole mitään mitä voimme näyttää sinulle! Tarkista että olet kirjautunut oikealla käyttäjällä tai katso seuraavat linkit päästäksesi takaisin ohjelmoimaan!\",\n      not_found: \"Ei löydetty.\",\n      not_found_desc: \"Hmm, täällä ei ole mitään. Katso seuraavat linkit päästäksesi takaisin ohjelmoimaan!\",\n      not_allowed: \"Toiminto ei sallittu.\",\n      timeout: \"Toiminto aikakatkaistu.\",\n      conflict: \"Resurssiristiriita.\",\n      bad_input: \"Virheellinen syöte.\",\n      server_error: \"Palvelinvirhe.\",\n      unknown: \"Tuntematon virhe.\",\n      error: \"VIRHE\",\n      general_desc: \"Jotain meni pieleen ja se on luultavasti meidän syytämme. Odota hetki ja lataa sivu uudelleen tai katso seuraavat linkit päästäksesi takaisin ohjelmoimaan!\"\n    },\n    resources: {\n      level: \"Taso\",\n      patch: \"Muutostiedosto\",\n      patches: \"Muutostiedostot\",\n      system: \"Järjestelmä\",\n      systems: \"Järjestelmät\",\n      component: \"Komponentti\",\n      components: \"Komponentit\",\n      hero: \"Sankari\",\n      campaigns: \"Kampanjat\"\n    },\n    calendar: {\n      year: \"Vuosi\",\n      day: \"Päivä\",\n      month: \"Kuukausi\",\n      january: \"Tammikuu\",\n      february: \"Helmikuu\",\n      march: \"Maaliskuu\",\n      april: \"Huhtikuu\",\n      may: \"Toukokuu\",\n      june: \"Kesäkuu\",\n      july: \"Heinäkuu\",\n      august: \"Elokuu\",\n      september: \"Syyskuu\",\n      october: \"Lokakuu\",\n      november: \"Marraskuu\",\n      december: \"Joulukuu\"\n    }\n  }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAvbG9jYWxlL2ZpLmNvZmZlZT9jOGE0Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE1BQU0sQ0FBQyxPQUFQLEdBQWlCO0VBQUEsbUJBQW1CLE9BQW5CO0VBQTRCLG9CQUFvQixTQUFoRDtFQUEyRCxhQUMxRTtJQUFBLFVBQ0U7TUFBQSxRQUFRLHdDQUFSO01BQ0EsbUJBQW1CLGNBRG5CO01BRUEsZUFBZSxpQkFGZjtNQUdBLFVBQVUsV0FIVjtNQUlBLGNBQWMsZUFKZDtNQUtBLGNBQWMsY0FMZDtNQU1BLFlBQVksV0FOWjtNQU9BLG9CQUFvQixxREFQcEI7TUFRQSxlQUFlLHdGQVJmO01BU0EsYUFBYSxxSUFUYjtNQVVBLFdBQVcscUVBVlg7TUFXQSxzQkFBc0IsZ0VBWHRCO01BWUEsZUFBZSxnQ0FaZjtNQXNCQSxpQkFBaUIsdUVBdEJqQjtNQXVCQSxjQUFjLCtGQXZCZDtNQXlDQSxvQkFBb0IsbUNBekNwQjtNQTZDQSxjQUFjLFlBN0NkO01BK0NBLGlCQUFpQixpQ0EvQ2pCO01BZ0RBLGNBQWMsb0NBaERkO01Ba0RBLEtBQUssOEJBbERMO01BbURBLGFBQWEscUJBbkRiO01Bb0RBLHNCQUFzQiwrSEFwRHRCO01BdURBLFdBQVcsc0dBdkRYO01BeURBLGNBQWMsd0JBekRkO01BMERBLGVBQWUsMEJBMURmO01BMkRBLGVBQWUseUJBM0RmO01BNERBLFdBQVcsa0NBNURYO0tBREY7SUErREEsS0FDRTtNQUFBLEtBQUssUUFBTDtNQUNBLE1BQU0sT0FETjtNQUVBLFdBQVcsU0FGWDtNQUdBLFNBQVMsU0FIVDtNQUlBLE1BQU0sT0FKTjtNQUtBLE9BQU8sU0FMUDtNQU1BLFNBQVMsTUFOVDtNQU9BLFlBQVksVUFQWjtNQVFBLFNBQVMsVUFSVDtNQVNBLE1BQU0sTUFUTjtNQVVBLFlBQVksUUFWWjtNQVdBLE9BQU8sWUFYUDtNQVlBLFNBQVMsYUFaVDtNQWFBLE9BQU8sU0FiUDtNQWNBLFNBQVMsY0FkVDtNQWVBLGdCQUFn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QWhCO01BQ0Esb0JBQW9CLGNBRHBCO01BRUEseUJBQXlCLGdHQUZ6QjtNQUdBLGdCQUFnQix5QkFIaEI7TUFJQSxxQkFBcUIsNkRBSnJCO01BS0EsY0FBYyxxRUFMZDtNQU1BLFdBQVcscUJBTlg7TUFPQSxnQkFBZ0IsOEtBUGhCO01BUUEsV0FBVyxjQVJYO01BU0EsZ0JBQWdCLHNGQVRoQjtNQVVBLGFBQWEsdUJBVmI7TUFXQSxTQUFTLHlCQVhUO01BWUEsVUFBVSxxQkFaVjtNQWFBLFdBQVcscUJBYlg7TUFjQSxjQUFjLGdCQWRkO01BZUEsU0FBUyxtQkFmVDtNQWdCQSxPQUFPLE9BaEJQO01BaUJBLGNBQWMsNkpBakJkO0tBM2xFRjtJQThtRUEsV0FDRTtNQUFBLE9BQU8sTUFBUDtNQUNBLE9BQU8sZ0JBRFA7TUFFQSxTQUFTLGlCQUZUO01BR0EsUUFBUSxhQUhSO01BSUEsU0FBUyxjQUpUO01BS0EsV0FBVyxhQUxYO01BTUEsWUFBWSxhQU5aO01BT0EsTUFBTSxTQVBOO01BUUEsV0FBVyxXQVJYO0tBL21FRjtJQWsxRUEsVUFDRTtNQUFBLE1BQU0sT0FBTjtNQUNBLEtBQUssT0FETDtNQUVBLE9BQU8sVUFGUDtNQUdBLFNBQVMsVUFIVDtNQUlBLFVBQVUsVUFKVjtNQUtBLE9BQU8sV0FMUDtNQU1BLE9BQU8sVUFOUDtNQU9BLEtBQUssVUFQTDtNQVFBLE1BQU0sU0FSTjtNQVNBLE1BQU0sVUFUTjtNQVVBLFFBQVEsUUFWUjtNQVdBLFdBQVcsU0FYWDtNQVlBLFNBQVMsU0FaVDtNQWFBLFVBQVUsV0FiVjtNQWNBLFVBQVUsVUFkVjtLQW4xRUY7R0FEZSIsImZpbGUiOiIyMjkuanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IG5hdGl2ZURlc2NyaXB0aW9uOiBcInN1b21pXCIsIGVuZ2xpc2hEZXNjcmlwdGlvbjogXCJGaW5uaXNoXCIsIHRyYW5zbGF0aW9uOlxuICBuZXdfaG9tZTpcbiAgICBzbG9nYW46IFwiTHVtb2F2aW4gcGVsaSBvaGplbG1vaW5uaW4gb3BwaW1pc2Vlbi5cIlxuICAgIGNsYXNzcm9vbV9lZGl0aW9uOiBcIktvdWx1dmVyc2lvOlwiXG4gICAgbGVhcm5fdG9fY29kZTogXCJPcGkga29vZGFhbWFhbjpcIlxuICAgIHBsYXlfbm93OiBcIlBlbGFhIE55dFwiXG4gICAgaW1fYV90ZWFjaGVyOiBcIk9sZW4gT3BldHRhamFcIlxuICAgIGltX2Ffc3R1ZGVudDogXCJPbGVuIE9wcGlsYXNcIlxuICAgIGxlYXJuX21vcmU6IFwiTHVlIGxpc8Okw6RcIlxuICAgIGNsYXNzcm9vbV9pbl9hX2JveDogXCJMdW9ra2FodW9uZSB0YXNrdXNzYSB0aWV0b2plbmvDpHNpdHRlbHluIG9wZXR1a3NlZW4uXCJcbiAgICBjb2RlY29tYmF0X2lzOiBcIkNvZGVDb21iYXQgb24gYWx1c3RhIDxzdHJvbmc+b3BwaWxhaWxsZTwvc3Ryb25nPiBvcHBpYSBvaGplbG1vaW50aWEgcGVsYWFtaXNlbiBrYXV0dGEuXCJcbiAgICBvdXJfY291cnNlczogXCJLdXJzc2ltbWUgb24gc3V1bm5pdGVsdHUganV1cmkgPHN0cm9uZz5sdW9ra2FodW9uZSBrw6R5dHTDtsO2bjwvc3Ryb25nPiwgam9wYSBvcGV0dGFqaWxsZSBqb2lsbGEgb24gdmFpbiB2w6Row6RuIG9oamVsbW9pbm5pbiBvc2FhbWlzdGEuXCJcbiAgICB3YXRjaF9ob3c6IFwiS2F0c28ga3VpbmthIENvZGVDb21iYXQgbXV1dHRhYSBtaXRlbiB0aWV0b2plbmvDpHNpdHRlbHnDpCB2b2kgb3BwaWEuXCJcbiAgICB0b3Bfc2NyZWVuc2hvdHNfaGludDogXCJPcHBpbGFhdCBraXJqb2l0dGF2YXQga29vZGlhIGphIG7DpGtldsOkdCBtdXV0b2tzZXQgcmVhYWxpYWphc3NhXCJcbiAgICBkZXNpZ25lZF93aXRoOiBcIlN1dW5uaXRlbHR1IG9wZXR0YWphdCBtaWVsZXNzw6RcIlxuIyAgICByZWFsX2NvZGU6IFwiUmVhbCwgdHlwZWQgY29kZVwiXG4jICAgIGZyb21fdGhlX2ZpcnN0X2xldmVsOiBcImZyb20gdGhlIGZpcnN0IGxldmVsXCJcbiMgICAgZ2V0dGluZ19zdHVkZW50czogXCJHZXR0aW5nIHN0dWRlbnRzIHRvIHR5cGVkIGNvZGUgYXMgcXVpY2tseSBhcyBwb3NzaWJsZSBpcyBjcml0aWNhbCB0byBsZWFybmluZyBwcm9ncmFtbWluZyBzeW50YXggYW5kIHByb3BlciBzdHJ1Y3R1cmUuXCJcbiMgICAgZWR1Y2F0b3JfcmVzb3VyY2VzOiBcIkVkdWNhdG9yIHJlc291cmNlc1wiXG4jICAgIGNvdXJzZV9ndWlkZXM6IFwiYW5kIGNvdXJzZSBndWlkZXNcIlxuIyAgICB0ZWFjaGluZ19jb21wdXRlcl9zY2llbmNlOiBcIlRlYWNoaW5nIGNvbXB1dGVyIHNjaWVuY2UgZG9lcyBub3QgcmVxdWlyZSBhIGNvc3RseSBkZWdyZWUsIGJlY2F1c2Ugd2UgcHJvdmlkZSB0b29scyB0byBzdXBwb3J0IGVkdWNhdG9ycyBvZiBhbGwgYmFja2dyb3VuZHMuXCJcbiMgICAgYWNjZXNzaWJsZV90bzogXCJBY2Nlc3NpYmxlIHRvXCJcbiMgICAgZXZlcnlvbmU6IFwiZXZlcnlvbmVcIlxuIyAgICBkZW1vY3JhdGl6aW5nOiBcIkRlbW9jcmF0aXppbmcgdGhlIHByb2Nlc3Mgb2YgbGVhcm5pbmcgY29kaW5nIGlzIGF0IHRoZSBjb3JlIG9mIG91ciBwaGlsb3NvcGh5LiBFdmVyeW9uZSBzaG91bGQgYmUgYWJsZSB0byBsZWFybiB0byBjb2RlLlwiXG4gICAgZm9yZ290X2xlYXJuaW5nOiBcIkx1dWxlbnBhLCBldHTDpCBoZSBvaWtlYXN0YWFuIHVub2h0aXZhdCwgZXR0w6Qgb2xpdmF0IG9wcGltYXNzYSBqb3RhaW4uXCJcbiAgICB3YW50ZWRfdG9fZG86IFwiwrRLb29kYXVzIG9uIHNpdMOkIG1pdMOkIG9sZW4gYWluYSBoYWx1bm51dCB0ZWhkw6QsIGVua8OkIHVza29udXQgZXR0w6Qgdm9pc2luIG9wcGlhIHNpdMOkIGtvdWx1c3NhLlwiXG4jICAgIHdoeV9nYW1lczogXCJXaHkgaXMgbGVhcm5pbmcgdGhyb3VnaCBnYW1lcyBpbXBvcnRhbnQ/XCJcbiMgICAgZ2FtZXNfcmV3YXJkOiBcIkdhbWVzIHJld2FyZCB0aGUgcHJvZHVjdGl2ZSBzdHJ1Z2dsZS5cIlxuIyAgICBlbmNvdXJhZ2U6IFwiR2FtaW5nIGlzIGEgbWVkaXVtIHRoYXQgZW5jb3VyYWdlcyBpbnRlcmFjdGlvbiwgZGlzY292ZXJ5LCBhbmQgdHJpYWwtYW5kLWVycm9yLiBBIGdvb2QgZ2FtZSBjaGFsbGVuZ2VzIHRoZSBwbGF5ZXIgdG8gbWFzdGVyIHNraWxscyBvdmVyIHRpbWUsIHdoaWNoIGlzIHRoZSBzYW1lIGNyaXRpY2FsIHByb2Nlc3Mgc3R1ZGVudHMgZ28gdGhyb3VnaCBhcyB0aGV5IGxlYXJuLlwiXG4jICAgIGV4Y2VsOiBcIkdhbWVzIGV4Y2VsIGF0IHJld2FyZGluZ1wiXG4jICAgIHN0cnVnZ2xlOiBcInByb2R1Y3RpdmUgc3RydWdnbGVcIlxuIyAgICBraW5kX29mX3N0cnVnZ2xlOiBcInRoZSBraW5kIG9mIHN0cnVnZ2xlIHRoYXQgcmVzdWx0cyBpbiBsZWFybmluZyB0aGF04oCZcyBlbmdhZ2luZyBhbmRcIlxuIyAgICBtb3RpdmF0aW5nOiBcIm1vdGl2YXRpbmdcIlxuIyAgICBub3RfdGVkaW91czogXCJub3QgdGVkaW91cy5cIlxuIyAgICBnYW1pbmdfaXNfZ29vZDogXCJTdHVkaWVzIHN1Z2dlc3QgZ2FtaW5nIGlzIGdvb2QgZm9yIGNoaWxkcmVu4oCZcyBicmFpbnMuIChpdOKAmXMgdHJ1ZSEpXCJcbiMgICAgZ2FtZV9iYXNlZDogXCJXaGVuIGdhbWUtYmFzZWQgbGVhcm5pbmcgc3lzdGVtcyBhcmVcIlxuIyAgICBjb21wYXJlZDogXCJjb21wYXJlZFwiXG4jICAgIGNvbnZlbnRpb25hbDogXCJhZ2FpbnN0IGNvbnZlbnRpb25hbCBhc3Nlc3NtZW50IG1ldGhvZHMsIHRoZSBkaWZmZXJlbmNlIGlzIGNsZWFyOiBnYW1lcyBhcmUgYmV0dGVyIGF0IGhlbHBpbmcgc3R1ZGVudHMgcmV0YWluIGtub3dsZWRnZSwgY29uY2VudHJhdGUgYW5kXCJcbiMgICAgcGVyZm9ybV9hdF9oaWdoZXJfbGV2ZWw6IFwicGVyZm9ybSBhdCBhIGhpZ2hlciBsZXZlbCBvZiBhY2hpZXZlbWVudFwiXG4jICAgIGZlZWRiYWNrOiBcIkdhbWVzIGFsc28gcHJvdmlkZSByZWFsLXRpbWUgZmVlZGJhY2sgdGhhdCBhbGxvd3Mgc3R1ZGVudHMgdG8gYWRqdXN0IHRoZWlyIHNvbHV0aW9uIHBhdGggYW5kIHVuZGVyc3RhbmQgY29uY2VwdHMgbW9yZSBob2xpc3RpY2FsbHksIGluc3RlYWQgb2YgYmVpbmcgbGltaXRlZCB0byBqdXN0IOKAnGNvcnJlY3TigJ0gb3Ig4oCcaW5jb3JyZWN04oCdIGFuc3dlcnMuXCJcbiMgICAgcmVhbF9nYW1lOiBcIkEgcmVhbCBnYW1lLCBwbGF5ZWQgd2l0aCByZWFsIGNvZGluZy5cIlxuIyAgICBncmVhdF9nYW1lOiBcIkEgZ3JlYXQgZ2FtZSBpcyBtb3JlIHRoYW4ganVzdCBiYWRnZXMgYW5kIGFjaGlldmVtZW50cyAtIGl04oCZcyBhYm91dCBhIHBsYXllcuKAmXMgam91cm5leSwgd2VsbC1kZXNpZ25lZCBwdXp6bGVzLCBhbmQgdGhlIGFiaWxpdHkgdG8gdGFja2xlIGNoYWxsZW5nZXMgd2l0aCBhZ2VuY3kgYW5kIGNvbmZpZGVuY2UuXCJcbiMgICAgYWdlbmN5OiBcIkNvZGVDb21iYXQgaXMgYSBnYW1lIHRoYXQgZ2l2ZXMgcGxheWVycyB0aGF0IGFnZW5jeSBhbmQgY29uZmlkZW5jZSB3aXRoIG91ciByb2J1c3QgdHlwZWQgY29kZSBlbmdpbmUsIHdoaWNoIGhlbHBzIGJlZ2lubmVyIGFuZCBhZHZhbmNlZCBzdHVkZW50cyBhbGlrZSB3cml0ZSBwcm9wZXIsIHZhbGlkIGNvZGUuXCJcbiAgICByZXF1ZXN0X2RlbW9fdGl0bGU6IFwiQWxvaXRhIG9wcGlsYWl0ZXNpIGthbnNzYSB0w6Ruw6TDpG4hXCJcbiMgICAgcmVxdWVzdF9kZW1vX3N1YnRpdGxlOiBcIlJlcXVlc3QgYSBkZW1vIGFuZCBnZXQgeW91ciBzdHVkZW50cyBzdGFydGVkIGluIGxlc3MgdGhhbiBhbiBob3VyLlwiXG4jICAgIGdldF9zdGFydGVkX3RpdGxlOiBcIlNldCB1cCB5b3VyIGNsYXNzIHRvZGF5XCJcbiMgICAgZ2V0X3N0YXJ0ZWRfc3VidGl0bGU6IFwiU2V0IHVwIGEgY2xhc3MsIGFkZCB5b3VyIHN0dWRlbnRzLCBhbmQgbW9uaXRvciB0aGVpciBwcm9ncmVzcyBhcyB0aGV5IGxlYXJuIGNvbXB1dGVyIHNjaWVuY2UuXCJcbiAgICByZXF1ZXN0X2RlbW86IFwiUHl5ZMOkIGRlbW9cIlxuIyAgICBzZXR1cF9hX2NsYXNzOiBcIlNldCBVcCBhIENsYXNzXCJcbiAgICBoYXZlX2FuX2FjY291bnQ6IFwiT25rbyBzaW51bGxhIGpvIGvDpHl0dMOkasOkdHVubnVzP1wiXG4gICAgbG9nZ2VkX2luX2FzOiBcIk9sZXQga2lyamF1dHVudXQgc2lzw6TDpG4ga8OkeXR0w6Rqw6Ruw6RcIlxuIyAgICBjb21wdXRlcl9zY2llbmNlOiBcIk91ciBzZWxmLXBhY2VkIGNvdXJzZXMgY292ZXIgYmFzaWMgc3ludGF4IHRvIGFkdmFuY2VkIGNvbmNlcHRzXCJcbiAgICBmZmE6IFwiSWxtYWluZW4ga2Fpa2lsbGUgb3BwaWxhaWxsZVwiXG4gICAgY29taW5nX3Nvb246IFwiTGlzw6TDpCB0dWxvc3NhIHBpYW4hXCJcbiAgICBjb3Vyc2VzX2F2YWlsYWJsZV9pbjogXCJLdXJzc2ltbWUgb24gc2FhdGF2aWxsYSBKYXZhU2NyaXB0IGphIFB5dGhvbiBvaGplbG1vaW50aWtpZWxpbGzDpC4gTmV0dGlrZWhpdHlzIGt1cnNzaXQga8OkeXR0w6R2w6R0IEhUTUwsIENTUywgamEgalF1ZXJ5IGtpZWxpw6QuXCJcbiMgICAgYm9hc3Q6IFwiQm9hc3RzIHJpZGRsZXMgdGhhdCBhcmUgY29tcGxleCBlbm91Z2ggdG8gZmFzY2luYXRlIGdhbWVycyBhbmQgY29kZXJzIGFsaWtlLlwiXG4jICAgIHdpbm5pbmc6IFwiQSB3aW5uaW5nIGNvbWJpbmF0aW9uIG9mIFJQRyBnYW1lcGxheSBhbmQgcHJvZ3JhbW1pbmcgaG9tZXdvcmsgdGhhdCBwdWxscyBvZmYgbWFraW5nIGtpZC1mcmllbmRseSBlZHVjYXRpb24gbGVnaXRpbWF0ZWx5IGVuam95YWJsZS5cIlxuICAgIHJ1bl9jbGFzczogXCJLYWlra2kgbWl0w6QgdGFydml0c2V0IHRpZXRvdGVrbmlpa2FuIG9wZXR1a3NlZW4ga291bHVzc2FzaSwgZWlrw6QgdGlldG90ZWtuaXN0w6QgdGF1c3RhYSBlZGVzIHZhYWRpdGEuXCJcbiMgICAgZ290b19jbGFzc2VzOiBcIkdvIHRvIE15IENsYXNzZXNcIlxuICAgIHZpZXdfcHJvZmlsZTogXCJUYXJrYXN0ZWxlIHByb2ZpaWxpYW5pXCJcbiAgICB2aWV3X3Byb2dyZXNzOiBcIlRhcmthc3RlbGUgZWRpc3R5bWlzdMOkbmlcIlxuICAgIGdvX3RvX2NvdXJzZXM6IFwiU2lpcnJ5IG9taWluIGt1cnNzZWloaW5cIlxuICAgIHdhbnRfY29jbzogXCJIYWx1YXRrbyBDb2RlQ29tYmF0OmluIGtvdWx1dXNpP1wiXG5cbiAgbmF2OlxuICAgIG1hcDogXCJLYXJ0dGFcIlxuICAgIHBsYXk6IFwiVGFzb3RcIiAjIFRoZSB0b3AgbmF2IGJhciBlbnRyeSB3aGVyZSBwbGF5ZXJzIGNob29zZSB3aGljaCBsZXZlbHMgdG8gcGxheVxuICAgIGNvbW11bml0eTogXCJZaHRlaXPDtlwiXG4gICAgY291cnNlczogXCJLdXJzc2l0XCJcbiAgICBibG9nOiBcIkJsb2dpXCJcbiAgICBmb3J1bTogXCJGb29ydW1pXCJcbiAgICBhY2NvdW50OiBcIlRpbGlcIlxuICAgIG15X2FjY291bnQ6IFwiT21hIFRpbGlcIlxuICAgIHByb2ZpbGU6IFwiUHJvZmlpbGlcIlxuICAgIGhvbWU6IFwiS290aVwiXG4gICAgY29udHJpYnV0ZTogXCJBdnVzdGFcIlxuICAgIGxlZ2FsOiBcIkxhaWxsaXN1dXNcIlxuICAgIHByaXZhY3k6IFwiWWtzaXR5aXN5eXNcIlxuICAgIGFib3V0OiBcIlRpZXRvamFcIlxuICAgIGNvbnRhY3Q6IFwiT3RhIHlodGV5dHTDpFwiXG4gICAgdHdpdHRlcl9mb2xsb3c6IFwiU2V1cmFhXCJcbiAgICBteV9jbGFzc3Jvb21zOiBcIk1pbnVuIGx1b2trYW5pXCJcbiAgICBteV9jb3Vyc2VzOiBcIk1pbnVuIGt1cnNzaW5pXCJcbiAgICBjYXJlZXJzOiBcIlVyYVwiXG4jICAgIGZhY2Vib29rOiBcIkZhY2Vib29rXCJcbiMgICAgdHdpdHRlcjogXCJUd2l0dGVyXCJcbiAgICBjcmVhdGVfYV9jbGFzczogXCJMdW8gbHVva2thXCJcbiAgICBvdGhlcjogXCJNdXVcIlxuICAgIGxlYXJuX3RvX2NvZGU6IFwiT3BpIGtvb2RhYW1hYW4hXCJcbiMgICAgdG9nZ2xlX25hdjogXCJUb2dnbGUgbmF2aWdhdGlvblwiXG4gICAgc2Nob29sczogXCJLb3VsdXRcIlxuICAgIGdldF9pbnZvbHZlZDogXCJPc2FsbGlzdHVcIlxuICAgIG9wZW5fc291cmNlOiBcIkF2b2luIGzDpGhkZWtvb2RpIChHaXRIdWIpXCJcbiAgICBzdXBwb3J0OiBcIlR1a2lcIlxuICAgIGZhcXM6IFwiVUtLXCJcbiMgICAgY29weXJpZ2h0X3ByZWZpeDogXCJDb3B5cmlnaHRcIlxuIyAgICBjb3B5cmlnaHRfc3VmZml4OiBcIkFsbCBSaWdodHMgUmVzZXJ2ZWQuXCJcbiAgICBoZWxwX3ByZWY6IFwiVGFydmlrc2V0a28gYXB1YT8gbMOkaGV0w6Qgdmllc3RpXCJcbiAgICBoZWxwX3N1ZmY6IFwiamEgbWUgYXV0YW1tZSFcIlxuICAgIHJlc291cmNlX2h1YjogXCJSZXN1cnNzaXRcIlxuXG4gIG1vZGFsOlxuICAgIGNsb3NlOiBcIlN1bGplXCJcbiAgICBva2F5OiBcIk9rXCJcblxuICBub3RfZm91bmQ6XG4gICAgcGFnZV9ub3RfZm91bmQ6IFwiU2l2dWEgZWkgbMO2eWR5XCJcblxuICBkaXBsb21hdF9zdWdnZXN0aW9uOlxuICAgIHRpdGxlOiBcIkF1dGEgQ29kZUNvbWJhdGluIGvDpMOkbnTDpG1pc2Vzc8OkIVwiICMgVGhpcyBzaG93cyB1cCB3aGVuIGEgcGxheWVyIHN3aXRjaGVzIHRvIGEgbm9uLUVuZ2xpc2ggbGFuZ3VhZ2UgdXNpbmcgdGhlIGxhbmd1YWdlIHNlbGVjdG9yLlxuICAgIHN1Yl9oZWFkaW5nOiBcIlRhcnZpdHNlbW1lIGFwdWFzaSBrw6TDpG5uw7Zrc2Vzc8OkLlwiXG4gICAgcGl0Y2hfYm9keTogXCJDb2RlQ29tYmF0OmlhIGtlaGl0ZXTDpMOkbiBlbmdsYW5uaWtzaSBtdXR0YSBwZWxhYWppYSBvbiBqbyB5bXDDpHJpIG1hYWlsbWFhLiBNb25ldCBoYWx1YXZhdCBwZWxhdGEgcGVsacOkIG9tYWxsYSBraWVsZWxsw6TDpG4sIGpvdGVuIGpvcyBoYWx1YXQgb3NhbGxpc3R1YSBrw6TDpG50w6RtaXNlZW4sIGlsbW9pdHRhdWR1IERpcGxvbWFhdGlrc2kgamEgYW5uYSBwYW5va3Nlc2kuXCJcbiAgICBtaXNzaW5nX3RyYW5zbGF0aW9uczogXCJTaWloZW4gYXN0aSBrdW5uZXMga29rbyBwZWxpIG9uIGvDpMOkbm5ldHR5IHN1b21la3NpIG7DpGV0IGpvaXRhaW4gdGVrc3RlasOkIGVkZWxsZWVuIGVuZ2xhbm5pa3NpLlwiXG4gICAgbGVhcm5fbW9yZTogXCJPdGEgc2VsdsOkw6QgbWl0w6QgdGFya29pdHRhIG9sbGEgRGlwbG9tYWF0dGlcIlxuICAgIHN1YnNjcmliZV9hc19kaXBsb21hdDogXCJUaWxhYSBEaXBsb21hYXRpbiB1dXRpc2tpcmplXCJcblxuICBwbGF5OlxuICAgIHBsYXlfYXM6IFwiUGVsYWFcIiAjIExhZGRlciBwYWdlXG4jICAgIGdldF9jb3Vyc2VfZm9yX2NsYXNzOiBcIkFzc2lnbiBHYW1lIERldmVsb3BtZW50IGFuZCBtb3JlIHRvIHlvdXIgY2xhc3NlcyFcIlxuIyAgICByZXF1ZXN0X2xpY2Vuc2VzOiBcIkNvbnRhY3Qgb3VyIHNjaG9vbCBzcGVjaWFsaXN0cyBmb3IgZGV0YWlscy5cIlxuICAgIGNvbXBldGU6IFwiS2lscGFpbGUhXCIgIyBDb3Vyc2UgZGV0YWlscyBwYWdlXG4gICAgc3BlY3RhdGU6IFwiVGFya2thaWxlXCIgIyBMYWRkZXIgcGFnZVxuICAgIHBsYXllcnM6IFwicGVsYWFqYXRcIiAjIEhvdmVyIG92ZXIgYSBsZXZlbCBvbiAvcGxheVxuICAgIGhvdXJzX3BsYXllZDogXCJwZWxhdHV0IHR1bm5pdFwiICMgSG92ZXIgb3ZlciBhIGxldmVsIG9uIC9wbGF5XG4gICAgaXRlbXM6IFwiRXNpbmVldFwiICMgVG9vbHRpcCBvbiBpdGVtIHNob3AgYnV0dG9uIGZyb20gL3BsYXlcbiAgICB1bmxvY2s6IFwiQXZhYVwiICMgRm9yIHB1cmNoYXNpbmcgaXRlbXMgYW5kIGhlcm9lc1xuICAgIGNvbmZpcm06IFwiVmFybWlzdGFcIlxuICAgIG93bmVkOiBcIk9taXN0ZXR0dVwiICMgRm9yIGl0ZW1zIHlvdSBvd25cbiAgICBsb2NrZWQ6IFwiTHVraXR0dVwiXG4gICAgYXZhaWxhYmxlOiBcIlNhYXRhdmlsbGFcIlxuICAgIHNraWxsc19ncmFudGVkOiBcIlRhaWRvdFwiICMgUHJvcGVydHkgZG9jdW1lbnRhdGlvbiBkZXRhaWxzXG4gICAgaGVyb2VzOiBcIlNhbmthcml0XCIgIyBUb29sdGlwIG9uIGhlcm8gc2hvcCBidXR0b24gZnJvbSAvcGxheVxuICAgIGFjaGlldmVtZW50czogXCJTYWF2dXR1a3NldFwiICMgVG9vbHRpcCBvbiBhY2hpZXZlbWVudCBsaXN0IGJ1dHRvbiBmcm9tIC9wbGF5XG4gICAgc2V0dGluZ3M6IFwiQXNldHVrc2V0XCIgIyBUb29sdGlwIG9uIHNldHRpbmdzIGJ1dHRvbiBmcm9tIC9wbGF5XG4gICAgcG9sbDogXCJLeXNlbHlcIiAjIFRvb2x0aXAgb24gcG9sbCBidXR0b24gZnJvbSAvcGxheVxuICAgIG5leHQ6IFwiU2V1cmFhdmFcIiAjIEdvIGZyb20gY2hvb3NlIGhlcm8gdG8gY2hvb3NlIGludmVudG9yeSBiZWZvcmUgcGxheWluZyBhIGxldmVsXG4gICAgY2hhbmdlX2hlcm86IFwiVmFpaGRhIHNhbmthcmlhXCIgIyBHbyBiYWNrIGZyb20gY2hvb3NlIGludmVudG9yeSB0byBjaG9vc2UgaGVyb1xuICAgIGJ1eV9nZW1zOiBcIk9zdGEgamFsb2tpdmnDpFwiXG4gICAgc3Vic2NyaWJlcnNfb25seTogXCJWYWluIHRpbGFhamlsbGUhXCJcbiAgICBzdWJzY3JpYmVfdW5sb2NrOiBcIlRpbGFhIGF2YXRha3Nlc2khXCJcbiAgICBzdWJzY3JpYmVyX2hlcm9lczogXCJUaWxhYSB0w6Ruw6TDpG4gc2FhZGFrc2VzaSBoZXRpIGvDpHl0dMO2w7ZzaSBBbWFyYW4sIEh1c2hiYXVtaW4gamEgSGF0dG9yaW4hXCJcbiAgICBzdWJzY3JpYmVyX2dlbXM6IFwiVGlsYWEgdMOkbsOkw6RuIHZvaWRha3Nlc2kgb3N0YWEgdMOkbcOkbiBzYW5rYXJpbiBqYWxva2l2aWxsw6QhXCJcbiAgICBhbm9ueW1vdXM6IFwiTmltZXTDtm4gUGVsYWFqYVwiXG4gICAgbGV2ZWxfZGlmZmljdWx0eTogXCJWYWlrZXVzdGFzbzogXCJcbiAgICBhd2FpdGluZ19sZXZlbHNfYWR2ZW50dXJlcl9wcmVmaXg6IFwiQXZhYW1tZSB1dXNpYSB0YXNvamEgdmlpa29pdHRhaW4uXCJcbiAgICBhd2FpdGluZ19sZXZlbHNfYWR2ZW50dXJlcjogXCJLaXJqYXVkdSBzZWlra2FpbGlqYWtzaVwiXG4gICAgYXdhaXRpbmdfbGV2ZWxzX2FkdmVudHVyZXJfc3VmZml4OiBcImphIG9sZSBlbnNpbW3DpGlzdGVuIGpvdWtvc3NhIHBlbGFhbWFzc2EgdXVzaWEgdGFzb2phLlwiXG4gICAgYWRqdXN0X3ZvbHVtZTogXCJBw6RuZW52b2ltYWtrdXVzXCJcbiAgICBjYW1wYWlnbl9tdWx0aXBsYXllcjogXCJNb25pbnBlbGkgQXJlZW5hdFwiXG4gICAgY2FtcGFpZ25fbXVsdGlwbGF5ZXJfZGVzY3JpcHRpb246IFwiLi4uIGpvaXNzYSBtaXR0YWF0IG9oamVsbW9pbnRpdGFpdG9zaSB0b2lzaWEgcGVsYWFqaWEgdmFzdGFhbi5cIlxuICAgIGJyYWluX3BvcF9kb25lOiBcIlBpZWtzaXQgw7Zya2l0IGtvb2RpbGxhISBWb2l0dG8hXCJcbiAgICBicmFpbl9wb3BfY2hhbGxlbmdlOiBcIkhhYXN0YSBpdHNlc2kgamEgcGVsYWEgdXVkZWxsZWVuIGVyaSBvaGplbG1vaW50aWtpZWxlbGzDpCFcIlxuICAgIHJlcGxheTogXCJVdWRlbGxlZW50b2lzdG9cIlxuICAgIGJhY2tfdG9fY2xhc3Nyb29tOiBcIlRha2Fpc2luIGx1b2trYWh1b25lZXNlZW5cIlxuICAgIHRlYWNoZXJfYnV0dG9uOiBcIk9wZXR0YWppbGxlXCJcbiAgICBnZXRfbW9yZV9jb2RlY29tYmF0OiBcIkhhbmtpIEphdGtvYSBDb2RlQ29tYmF0OmxsZVwiXG5cbiAgY29kZTpcbiAgICBpZjogXCJqb3NcIiAjIEtleXdvcmRzLS10aGVzZSB0cmFuc2xhdGlvbnMgc2hvdyB1cCBvbiBob3Zlciwgc28gcGxlYXNlIHRyYW5zbGF0ZSB0aGVtIGFsbCwgZXZlbiBpZiBpdCdzIGtpbmQgb2YgbG9uZy4gKEluIHRoZSBjb2RlIGVkaXRvciwgdGhleSB3aWxsIHN0aWxsIGJlIGluIEVuZ2xpc2guKVxuICAgIGVsc2U6IFwibXV1c3NhIHRhcGF1a3Nlc3NhXCJcbiAgICBlbGlmOiBcImVsc2UgaWYgLSBtdXVzc2EgdGFwYXVrc2Vzc2EsIGpvc1wiXG4gICAgd2hpbGU6IFwibmlpbiBrYXVhbiBrdWluXCJcbiAgICBsb29wOiBcInNpbG11a2thXCJcbiAgICBmb3I6IFwibsOkaWxsZVwiXG4gICAgYnJlYWs6IFwia2Vza2V5dMOkIHNpbG11a2thXCJcbiAgICBjb250aW51ZTogXCJvaGl0YSBqYSBqYXRrYSBzaWxtdWtrYWFcIlxuICAgIHBhc3M6IFwicGFzc1wiXG4gICAgcmV0dXJuOiBcInBhbGF1dGFcIlxuICAgIHRoZW46IFwic2l0dGVuXCJcbiAgICBkbzogXCJ0ZWUgbsOkaW5cIlxuICAgIGVuZDogXCJsb3BwdVwiXG4gICAgZnVuY3Rpb246IFwiZnVua3Rpb1wiXG4gICAgZGVmOiBcIm3DpMOkcml0dGVsZVwiXG4gICAgdmFyOiBcIm11dXR0dWphXCJcbiAgICBzZWxmOiBcIml0c2VcIlxuICAgIGhlcm86IFwic2Fua2FyaVwiXG4gICAgdGhpczogXCJ0w6Rtw6RcIlxuICAgIG9yOiBcInRhaSAoam9tcGkga3VtcGkpXCJcbiAgICBcInx8XCI6IFwidGFpIChqb21waSBrdW1waSlcIlxuICAgIGFuZDogXCJqYSAoc2Vrw6QgZXR0w6QpXCJcbiAgICBcIiYmXCI6IFwiamEgKHNla8OkIGV0dMOkKVwiXG4gICAgbm90OiBcImVpXCJcbiAgICBcIiFcIjogXCJlaVwiXG4gICAgXCI9XCI6IFwiYXNldGFcIlxuICAgIFwiPT1cIjogXCJvdmF0IHNhbWF0ICh5aHTDpHN1dXJldClcIlxuICAgIFwiPT09XCI6IFwidMOkeXNpbiB5aHTDpHN1dXJpXCJcbiAgICBcIiE9XCI6IFwib3ZhdCBlcmkgKGVyaXN1dXJ1dXNldClcIlxuICAgIFwiIT09XCI6IFwiZWkgdMOkeXNpbiB5aHTDpHN1dXJpXCJcbiAgICBcIj5cIjogXCJzdXVyZW1waSBrdWluXCJcbiAgICBcIj49XCI6IFwic3V1cmVtcGkgdGFpIHlodMOkc3V1cmkga3VpblwiXG4gICAgXCI8XCI6IFwicGllbmVtcGkga3VpblwiXG4gICAgXCI8PVwiOiBcInBpZW5lbXBpIHRhaSB5aHTDpHN1dXJpIGt1aW5cIlxuICAgIFwiKlwiOiBcImtlcnRvbWVya2tpXCJcbiAgICBcIi9cIjogXCJqYWtvdmlpdmFcIlxuICAgIFwiK1wiOiBcInBsdXNcIlxuICAgIFwiLVwiOiBcIm1paW51c1wiXG4gICAgXCIrPVwiOiBcInN1bW1hYSBqYSBhc2V0YSBtdXV0dHVqYWxsZSB1dXNpIGFydm9cIlxuICAgIFwiLT1cIjogXCJ2w6RoZW5uw6QgamEgYXNldGEgbXV1dHR1amFsbGUgdXVzaSBhcnZvXCJcbiAgICBUcnVlOiBcIlRvdHRhXCJcbiAgICB0cnVlOiBcInRvdHRhXCJcbiAgICBGYWxzZTogXCJFcMOkdG90dGFcIlxuICAgIGZhbHNlOiBcImVww6R0b3R0YVwiXG4gICAgdW5kZWZpbmVkOiBcIm3DpMOkcml0dGVsZW3DpHTDtm5cIlxuICAgIG51bGw6IFwidHloasOkXCJcbiAgICBuaWw6IFwibm9sbGFcIlxuICAgIE5vbmU6IFwiT2xlbWF0b25cIlxuXG4gIHNoYXJlX3Byb2dyZXNzX21vZGFsOlxuICAgIGJsdXJiOiBcIkVkaXN0eXQgbG9pc3RhdmFzdGkhIEtlcnJvIHlzdMOkdmlsbGVzaSBtaXTDpCBvbGV0IG9wcGludXQgQ29kZUNvbWJhdDpuIGF2dWxsYS5cIlxuICAgIGVtYWlsX2ludmFsaWQ6IFwiVmlyaGVlbGxpbmVuIHPDpGhrw7Zwb3N0aW9zb2l0ZS5cIlxuICAgIGZvcm1fYmx1cmI6IFwiU3nDtnTDpCBoZWlkw6RuIHPDpGhrw7Zwb3N0aW9zb2l0dGVldCBqYSBtZSBrZXJyb21tZSBoZWlsbGUhXCJcbiAgICBmb3JtX2xhYmVsOiBcIlPDpGhrw7Zwb3N0aW9zb2l0ZVwiXG4gICAgcGxhY2Vob2xkZXI6IFwib3NvaXRlXCJcbiAgICB0aXRsZTogXCJFcmlub21haXN0YSB0ecO2dMOkLCBPcHBpcG9pa2FcIlxuXG4gIGxvZ2luOlxuICAgIHNpZ25fdXA6IFwiTHVvIFRpbGlcIlxuICAgIGVtYWlsX29yX3VzZXJuYW1lOiBcIkvDpHl0dMOkasOkdHVubnVzIHRhaSBzw6Roa8O2cG9zdGlcIlxuICAgIGxvZ19pbjogXCJLaXJqYXVkdVwiXG4gICAgbG9nZ2luZ19pbjogXCJLaXJqYXVkdXRhYW5cIlxuICAgIGxvZ19vdXQ6IFwiS2lyamF1ZHUgVWxvc1wiXG4gICAgZm9yZ290X3Bhc3N3b3JkOiBcIlVub2hkaXRrbyBzYWxhc2FuYXNpP1wiXG4gICAgZmluaXNoaW5nOiBcIlZpaW1laXN0ZWxsw6TDpG5cIlxuICAgIHNpZ25faW5fd2l0aF9mYWNlYm9vazogXCJLaXJqYXVkdSBGYWNlYm9vayB0dW5udWtzaWxsYVwiXG4gICAgc2lnbl9pbl93aXRoX2dwbHVzOiBcIktpcmphdWR1IEcrIHR1bm51a3NpbGxhXCJcbiAgICBzaWdudXBfc3dpdGNoOiBcIkhhbHVhdGtvIGx1b2RhIHRpbGluP1wiXG5cbiAgc2lnbnVwOlxuIyAgICBjb21wbGV0ZV9zdWJzY3JpcHRpb246IFwiQ29tcGxldGUgU3Vic2NyaXB0aW9uXCJcbiAgICBjcmVhdGVfc3R1ZGVudF9oZWFkZXI6IFwiTHVvIE9wcGlsYWFuIFRpbGlcIlxuICAgIGNyZWF0ZV90ZWFjaGVyX2hlYWRlcjogXCJMdW8gT3BldHRhamFuIFRpbGlcIlxuICAgIGNyZWF0ZV9pbmRpdmlkdWFsX2hlYWRlcjogXCJMdW8gWWtzaXR0w6RpbmVuIFRpbGlcIlxuICAgIGVtYWlsX2Fubm91bmNlbWVudHM6IFwiSGFsdWF0a28gaWxtb2l0dWtzaWEgc8OkaGvDtnBvc3RpaXNpXCIgIyB7Y2hhbmdlfVxuIyAgICBzaWduX2luX3RvX2NvbnRpbnVlOiBcIlNpZ24gaW4gb3IgY3JlYXRlIGFuIGFjY291bnQgdG8gY29udGludWVcIlxuIyAgICB0ZWFjaGVyX2VtYWlsX2Fubm91bmNlbWVudHM6IFwiS2VlcCBtZSB1cGRhdGVkIG9uIG5ldyB0ZWFjaGVyIHJlc291cmNlcywgY3VycmljdWx1bSwgYW5kIGNvdXJzZXMhXCJcbiAgICBjcmVhdGluZzogXCJMdW9kYWFuIHRpbGkuLi5cIlxuICAgIHNpZ25fdXA6IFwiTHVvIHRpbGlcIlxuICAgIGxvZ19pbjogXCJraXJqYXVkdSBzaXPDpMOkbiBzYWxhc2FuYWxsYVwiXG4gICAgcmVxdWlyZWQ6IFwiS2lyamF1ZHUgZW5zaW4gam90dGEgcMOkw6RzZXQgamF0a2FtYWFuLlwiXG4gICAgbG9naW5fc3dpdGNoOiBcIk9ua28gc2ludWxsYSBqbyB0aWxpP1wiXG4gICAgb3B0aW9uYWw6IFwidmFwYWFlaHRvaW5lblwiXG4gICAgY29ubmVjdGVkX2dwbHVzX2hlYWRlcjogXCJHb29nbGUrIG9uIHloZGlzdGV0dHkgb25uaXN0dW5lZXN0aSFcIlxuICAgIGNvbm5lY3RlZF9ncGx1c19wOiBcIkx1byB0aWxpIGxvcHB1dW4ga2lyamF1dGFrc2VzaSBzaXPDpMOkbiBHb29nbGUrIGvDpHl0dMOkasOkbGzDpHNpLlwiXG4gICAgY29ubmVjdGVkX2ZhY2Vib29rX2hlYWRlcjogXCJGYWNlYm9vayBvbiB5aGRpc3RldHR5IG9ubmlzdHVuZWVzdGkhXCJcbiAgICBjb25uZWN0ZWRfZmFjZWJvb2tfcDogXCJMdW8gdGlsaSBsb3BwdXVuIGtpcmphdXR1YWtzZXNpIEZhY2Vib29rIGvDpHl0dMOkasOkbGzDpHNpLlwiXG4gICAgaGV5X3N0dWRlbnRzOiBcIk9wcGlsYWF0LCBzecO2dHTDpGvDpMOkIGx1b2trYWtvb2Rpbm5lIGpvbmthIHNhYXR0ZSBvcGV0dGFqYWx0YS5cIlxuICAgIGJpcnRoZGF5OiBcIlN5bnR5bcOkcMOkaXbDpFwiXG4gICAgcGFyZW50X2VtYWlsX2JsdXJiOiBcIlRpZWTDpG1tZSBldHTDpCBoYWx1YXQgaGV0aSBvcHBwaWEgb2hqZWxtb2ltYWFuICZtZGFzaDsgbWUgb2xlbW1lIGlubm9pc3NhbWUgbXnDtnMhIFZhbmhlbXBhc2kgc2FhdmF0IG9oamVldCB0aWxpbiBsdW9taXNlZW4gc8OkaGvDtnBvc3RpaW5zYS4gTMOkaGV0w6Qgdmllc3RpIG9zb2l0dGVlc2VlbiB7e2VtYWlsX2xpbmt9fSBqb3Mgc2ludWxsYSBvbiBqb3RhaW4ga3lzeXR0w6R2w6TDpC5cIlxuICAgIGNsYXNzcm9vbV9ub3RfZm91bmQ6IFwiTHVva2tpYSBlaSBsw7Z5dHlueXQgdHVvbGxhIGtvb2RpbGxhLiBUYXJraXN0YSBvaWtlaW5raXJqb2l0dXMgdGFpIGt5c3kgYXB1YSBvcGV0dGFqYWx0YXNpLlwiXG4gICAgY2hlY2tpbmc6IFwiVGFyaWtpc3RldGFhbi4uLlwiXG4gICAgYWNjb3VudF9leGlzdHM6IFwiU8OkaGvDtnBvc3RpIG9uIGpvIGvDpHl0w7Zzc8OkOlwiICMge2NoYW5nZX1cbiAgICBzaWduX2luOiBcIktpcmphdWR1IHNpc8Okw6RuXCJcbiAgICBlbWFpbF9nb29kOiBcIlPDpGhrw7Zwb3N0aSB0b2ltaWkhXCJcbiAgICBuYW1lX3Rha2VuOiBcIk5pbWkgb24gam8ga8OkeXTDtnNzw6QhIE1pdGVuIG9saXNpIHt7c3VnZ2VzdGVkTmFtZX19P1wiXG4gICAgbmFtZV9hdmFpbGFibGU6IFwiS8OkeXR0w6Rqw6RuaW1pIHNhYXRhdmlsbGEhXCJcbiAgICBuYW1lX2lzX2VtYWlsOiBcIkvDpHl0dMOkasOkdHVubnVzIGVpIHZvaSBvbGxhIHPDpGhrw7Zwb3N0aW9zb2l0ZVwiXG4gICAgY2hvb3NlX3R5cGU6IFwiVmFsaXRzZSB0aWxpbiB0eXlwcGk6XCJcbiAgICB0ZWFjaGVyX3R5cGVfMTogXCJPcGV0YSBvaGplbG1vaW1pc3RhIENvZGVDb21iYXQ6aW4gYXZ1bGxhIVwiXG4gICAgdGVhY2hlcl90eXBlXzI6IFwiQXNldGEgbHVva2thc2kgdmFsbWlpa3NpXCJcbiAgICB0ZWFjaGVyX3R5cGVfMzogXCJQw6TDpHN5IGt1cnNzaW9oamVpc2lpblwiXG4gICAgdGVhY2hlcl90eXBlXzQ6IFwiTsOkZSBvcHBpbGFhbiBlZGlzdHltaW5lblwiXG4gICAgc2lnbnVwX2FzX3RlYWNoZXI6IFwiTHVvIE9wZXR0YWphbiBUaWxpXCJcbiAgICBzdHVkZW50X3R5cGVfMTogXCJPcGkgb2hqZWxtb2ltYWFuIHBlbGF0ZXNzYXNpIGx1bW9hdmFhIHBlbGnDpCFcIlxuICAgIHN0dWRlbnRfdHlwZV8yOiBcIlBlbGFhIGx1b2trYXNpIGthbnNzYVwiXG4gICAgc3R1ZGVudF90eXBlXzM6IFwiVGFpc3RlbGUgYXJlZW5vaWxsYVwiXG4gICAgc3R1ZGVudF90eXBlXzQ6IFwiVmFsaXRzZSBzYW5rYXJpc2khXCJcbiAgICBzdHVkZW50X3R5cGVfNTogXCJPdGEgTHVva2tha29vZGkgdmFsbWlpa3NpIVwiXG4gICAgc2lnbnVwX2FzX3N0dWRlbnQ6IFwiTHVvIE9wcGlsYWFuIFRpbGlcIlxuICAgIGluZGl2aWR1YWxzX29yX3BhcmVudHM6IFwiTXV1dFwiXG4gICAgaW5kaXZpZHVhbF90eXBlOiBcIlBlbGFhamlsbGUgam90a2EgZWl2w6R0IG9sZSBsdW9rYXNzc2Egb3BwaW1hc3NhIGtvb2RhYW1hYW4uIFZhbmhlbXBpZW4gdHVsaXNpIGx1b2RhIHRpbGkgdMOkw6RsbMOkLlwiXG4gICAgc2lnbnVwX2FzX2luZGl2aWR1YWw6IFwiTHVvIFlrc2l0dMOkaW5lbiBUaWxpXCJcbiAgICBlbnRlcl9jbGFzc19jb2RlOiBcIlN5w7Z0w6QgTHVva2tha29vZGlzaVwiXG4gICAgZW50ZXJfYmlydGhkYXRlOiBcIlN5w7Z0w6Qgc3ludHltw6RhaWthc2k6XCJcbiAgICBwYXJlbnRfdXNlX2JpcnRoZGF0ZTogXCJWYW5oZW1tYXQsIGvDpHl0dMOka8Okw6Qgb21hYSBzeW50eW3DpGFpa2Fhbm5lLlwiXG4gICAgYXNrX3RlYWNoZXJfMTogXCJLeXN5IG9wZXR0YWphbHRhc2kgbHVva2tha29vZGlhLlwiXG4gICAgYXNrX3RlYWNoZXJfMjogXCJFdGvDtiBvbGUgb3NhIGx1b2trYT8gTHVvIFwiXG4gICAgYXNrX3RlYWNoZXJfMzogXCJZa3NpdHTDpGluZW4gVGlsaVwiXG4gICAgYXNrX3RlYWNoZXJfNDogXCIgc2VuIHNpamFhbi5cIlxuICAgIGFib3V0X3RvX2pvaW46IFwiT2xldCBsaWl0eW3DpHNzw6Q6XCJcbiAgICBlbnRlcl9wYXJlbnRfZW1haWw6IFwiU3nDtnTDpCB2YW5oZW1wYXNpIHPDpGhrw7Zwb3N0aTpcIlxuICAgIHBhcmVudF9lbWFpbF9lcnJvcjogXCJKb3RhaW4gbWVuaSBwaWVsZWVuIHPDpGhrw7Zwb3N0aW4gbMOkaGV0eWtzZXNzw6QuIFRhcmtpc3RhIG9zb2l0ZSBqYSBrb2l0YSB1dWRlc3RhYW4uXCJcbiAgICBwYXJlbnRfZW1haWxfc2VudDogXCJMw6RoZXRpbW1lIHPDpGhrw7Zwb3N0aW4gam9zc2Egb24gb2hqZWV0IHRpbGluIGx1b21pc2Vlbi4gUHl5ZMOkIHZhbmhlbXBhYXNpIHRhcmtpc3RhbWFhbiBzw6Roa8O2cG9zdGluc2EuXCJcbiAgICBhY2NvdW50X2NyZWF0ZWQ6IFwiVGlsaSBsdW90dSFcIlxuICAgIGNvbmZpcm1fc3R1ZGVudF9ibHVyYjogXCJLaXJqb2l0YSB5bMO2cyB0aWV0b3NpIGpvdHRhIGV0IHVub2hkYSBuaWl0w6QuIE9wZXR0YWphc2kgdm9pIG5vbGxhdGEgc2FsYXNhbmFzaSBqb3MgdW5vaGRhdCBzZW4uXCJcbiAgICBjb25maXJtX2luZGl2aWR1YWxfYmx1cmI6IFwiS2lyam9pdGEgdGlldG9zaSB5bMO2cyBzYWF0YXQgdGFydml0YSBuaWl0w6QgbXnDtmhlbW1pbi4gVmFodmlzdGEgc8OkaGvDtnBvc3Rpb3NvaXRlZXNpLCBldHTDpCB2b2l0IGvDpHl0dMOkw6Qgc2l0w6Qgc2FsYXNhbmFzaSBub2xsYWFtaXNlZW4gdGFydml0dGFlc3NhIVwiXG4gICAgd3JpdGVfdGhpc19kb3duOiBcIktpcmpvaXRhIHTDpG3DpCB5bMO2czpcIlxuICAgIHN0YXJ0X3BsYXlpbmc6IFwiQWxvaXRhIHBlbGFhbWluZW4hXCJcbiAgICBzc29fY29ubmVjdGVkOiBcIk9ubmlzdHVuZWVzdGkgeWhkaXN0ZXR0eTpcIlxuICAgIHNlbGVjdF95b3VyX3N0YXJ0aW5nX2hlcm86IFwiVmFsaXRzZSBhbG9pdHVzc2Fua2FyaXNpOlwiXG4gICAgeW91X2Nhbl9hbHdheXNfY2hhbmdlX3lvdXJfaGVyb19sYXRlcjogXCJWb2l0IHZhaWh0YWEgc2Fua2FyaWFzaSBtecO2aGVtbWluLlwiXG4jICAgIGZpbmlzaDogXCJGaW5pc2hcIlxuIyAgICB0ZWFjaGVyX3JlYWR5X3RvX2NyZWF0ZV9jbGFzczogXCJZb3UncmUgcmVhZHkgdG8gY3JlYXRlIHlvdXIgZmlyc3QgY2xhc3MhXCJcbiMgICAgdGVhY2hlcl9zdHVkZW50c19jYW5fc3RhcnRfbm93OiBcIllvdXIgc3R1ZGVudHMgd2lsbCBiZSBhYmxlIHRvIHN0YXJ0IHBsYXlpbmcgdGhlIGZpcnN0IGNvdXJzZSwgSW50cm9kdWN0aW9uIHRvIENvbXB1dGVyIFNjaWVuY2UsIGltbWVkaWF0ZWx5LlwiXG4jICAgIHRlYWNoZXJfbGlzdF9jcmVhdGVfY2xhc3M6IFwiT24gdGhlIG5leHQgc2NyZWVuIHlvdSB3aWxsIGJlIGFibGUgdG8gY3JlYXRlIGEgbmV3IGNsYXNzLlwiXG4jICAgIHRlYWNoZXJfbGlzdF9hZGRfc3R1ZGVudHM6IFwiQWRkIHN0dWRlbnRzIHRvIHRoZSBjbGFzcyBieSBjbGlja2luZyB0aGUgVmlldyBDbGFzcyBsaW5rLCB0aGVuIHNlbmRpbmcgeW91ciBzdHVkZW50cyB0aGUgQ2xhc3MgQ29kZSBvciBVUkwuIFlvdSBjYW4gYWxzbyBpbnZpdGUgdGhlbSB2aWEgZW1haWwgaWYgdGhleSBoYXZlIGVtYWlsIGFkZHJlc3Nlcy5cIlxuIyAgICB0ZWFjaGVyX2xpc3RfcmVzb3VyY2VfaHViXzE6IFwiQ2hlY2sgb3V0IHRoZVwiXG4jICAgIHRlYWNoZXJfbGlzdF9yZXNvdXJjZV9odWJfMjogXCJDb3Vyc2UgR3VpZGVzXCJcbiMgICAgdGVhY2hlcl9saXN0X3Jlc291cmNlX2h1Yl8zOiBcImZvciBzb2x1dGlvbnMgdG8gZXZlcnkgbGV2ZWwsIGFuZCB0aGVcIlxuIyAgICB0ZWFjaGVyX2xpc3RfcmVzb3VyY2VfaHViXzQ6IFwiUmVzb3VyY2UgSHViXCJcbiMgICAgdGVhY2hlcl9saXN0X3Jlc291cmNlX2h1Yl81OiBcImZvciBjdXJyaWN1bHVtIGd1aWRlcywgYWN0aXZpdGllcywgYW5kIG1vcmUhXCJcbiMgICAgdGVhY2hlcl9hZGRpdGlvbmFsX3F1ZXN0aW9uczogXCJUaGF04oCZcyBpdCEgSWYgeW91IG5lZWQgYWRkaXRpb25hbCBoZWxwIG9yIGhhdmUgcXVlc3Rpb25zLCByZWFjaCBvdXQgdG8gX19zdXBwb3J0RW1haWxfXy5cIlxuICAgIGRvbnRfdXNlX291cl9lbWFpbF9zaWxseTogXCJMYWl0YSB2YW5oZW1waWVzaSBzw6Roa8O2cG9zdGkgdMOkaMOkbi4gRWkgb21hYXNpLlwiXG4jICAgIHdhbnRfY29kZWNvbWJhdF9pbl9zY2hvb2w6IFwiV2FudCB0byBwbGF5IENvZGVDb21iYXQgYWxsIHRoZSB0aW1lP1wiXG5cbiAgcmVjb3ZlcjpcbiAgICByZWNvdmVyX2FjY291bnRfdGl0bGU6IFwiUGFsYXV0YSB0aWxpXCJcbiAgICBzZW5kX3Bhc3N3b3JkOiBcIkzDpGhldMOkIHBhbGF1dHVzdmllc3RpXCJcbiAgICByZWNvdmVyeV9zZW50OiBcIlBhbGF1dHVzdmllc3RpIGzDpGhldGV0dHkuXCJcblxuICBpdGVtczpcbiAgICBwcmltYXJ5OiBcIkFzZWV0XCJcbiAgICBzZWNvbmRhcnk6IFwiS2lsdmV0XCJcbiAgICBhcm1vcjogXCJTdW9qYXRcIlxuICAgIGFjY2Vzc29yaWVzOiBcIlRhcnZpa2tlZXRcIlxuICAgIG1pc2M6IFwiU2VrYWxhaXNldFwiXG4gICAgYm9va3M6IFwiS2lyamF0XCJcblxuICBjb21tb246XG4gICAgYmFjazogXCJUYWthaXNpblwiICMgV2hlbiB1c2VkIGFzIGFuIGFjdGlvbiB2ZXJiLCBsaWtlIFwiTmF2aWdhdGUgYmFja3dhcmRcIlxuICAgIGNvbWluZ19zb29uOiBcIlR1bG9zc2EgcGlhbiFcIlxuICAgIGNvbnRpbnVlOiBcIkphdGthXCIgIyBXaGVuIHVzZWQgYXMgYW4gYWN0aW9uIHZlcmIsIGxpa2UgXCJDb250aW51ZSBmb3J3YXJkXCJcbiAgICBuZXh0OiBcIlNldXJhYXZhXCJcbiAgICBkZWZhdWx0X2NvZGU6IFwiT2xldHVza29vZGlcIlxuICAgIGxvYWRpbmc6IFwiTGFkYXRhYW4uLi5cIlxuICAgIG92ZXJ2aWV3OiBcIllsZWlzc2lsbcOkeXNcIlxuICAgIHByb2Nlc3Npbmc6IFwiUHJvc2Vzc29pZGFhbi4uLlwiXG4gICAgc29sdXRpb246IFwiUmF0a2Fpc3VcIlxuICAgIHRhYmxlX29mX2NvbnRlbnRzOiBcIlNpc8OkbGx5c2x1ZXR0ZWxvXCJcbiAgICBpbnRybzogXCJKb2hkYW50b1wiXG4gICAgc2F2aW5nOiBcIlRhbGxlbm5ldGFhbi4uLlwiXG4gICAgc2VuZGluZzogXCJMw6RoZXRldMOkw6RuLi4uXCJcbiAgICBzZW5kOiBcIkzDpGhldMOkXCJcbiAgICBzZW50OiBcIkzDpGhldGV0dHlcIlxuICAgIGNhbmNlbDogXCJQZXJ1dXRhXCJcbiAgICBzYXZlOiBcIlRhbGxlbm5hXCJcbiAgICBwdWJsaXNoOiBcIkp1bGthaXNlXCJcbiAgICBjcmVhdGU6IFwiTHVvXCJcbiAgICBmb3JrOiBcIkhhYXJhdXRhXCJcbiAgICBwbGF5OiBcIlBlbGFhXCIgIyBXaGVuIHVzZWQgYXMgYW4gYWN0aW9uIHZlcmIsIGxpa2UgXCJQbGF5IG5leHQgbGV2ZWxcIlxuICAgIHJldHJ5OiBcIktva2VpbGUgdXVkZXN0YWFuXCJcbiAgICBhY3Rpb25zOiBcIlRvaW1pbm5vdFwiXG4gICAgaW5mbzogXCJUaWV0b2FcIlxuICAgIGhlbHA6IFwiQXB1YVwiXG4gICAgd2F0Y2g6IFwiU2V1cmFhXCJcbiAgICB1bndhdGNoOiBcIkxvcGV0YSBTZXVyYWFtaW5lblwiXG4gICAgc3VibWl0X3BhdGNoOiBcIkzDpGhldMOkIHBhaWtrYXVzXCJcbiAgICBzdWJtaXRfY2hhbmdlczogXCJMw6RoZXTDpCBtdXV0b3NcIlxuICAgIHNhdmVfY2hhbmdlczogXCJUYWxsZW5uYSBtdXV0b2tzZXRcIlxuICAgIHJlcXVpcmVkX2ZpZWxkOiBcIlZhYWRpdHR1IGtlbnR0w6RcIlxuXG4gIGdlbmVyYWw6XG4gICAgYW5kOiBcImphXCJcbiAgICBuYW1lOiBcIk5pbWlcIlxuICAgIGRhdGU6IFwiUMOkaXbDpHlzXCJcbiAgICBib2R5OiBcIlZhcnRhbG9cIlxuICAgIHZlcnNpb246IFwiVmVyc2lvXCJcbiAgICBwZW5kaW5nOiBcIk9kb3RldGFhblwiXG4gICAgYWNjZXB0ZWQ6IFwiSHl2w6Rrc3l0dHlcIlxuICAgIHJlamVjdGVkOiBcIkh5bMOkdHR5XCJcbiAgICB3aXRoZHJhd246IFwiVmVkZXR0eSBwb2lzXCJcbiAgICBhY2NlcHQ6IFwiSHl2w6Rrc3lcIlxuICAgIHJlamVjdDogXCJIeWxrw6TDpFwiXG4gICAgd2l0aGRyYXc6IFwiUGVydXV0YVwiXG4gICAgc3VibWl0dGVyOiBcIkzDpGhldHTDpGrDpFwiXG4gICAgc3VibWl0dGVkOiBcIkzDpGhldGV0dHlcIlxuICAgIGNvbW1pdF9tc2c6IFwiTMOkaGV0w6QgVmllc3RpXCJcbiAgICB2ZXJzaW9uX2hpc3Rvcnk6IFwiVmVyc2lvaGlzdG9yaWFcIlxuICAgIHZlcnNpb25faGlzdG9yeV9mb3I6IFwiVmVyc2lvaGlzdG9yaWE6IFwiXG4gICAgc2VsZWN0X2NoYW5nZXM6IFwiVmFsaXRzZSBrYWtzaSB2ZXJzaW90YSB2ZXJ0YWlsdXVuLlwiXG4gICAgdW5kb19wcmVmaXg6IFwiUGVydXV0YVwiXG4jICAgIHVuZG9fc2hvcnRjdXQ6IFwiKEN0cmwrWilcIlxuICAgIHJlZG9fcHJlZml4OiBcIlRlZSB1dWRlbGxlZW5cIlxuIyAgICByZWRvX3Nob3J0Y3V0OiBcIihDdHJsK1NoaWZ0K1opXCJcbiAgICBwbGF5X3ByZXZpZXc6IFwiVG9pc3RhIGVzaWthdHNlbHUgdGFzb3N0YVwiXG4gICAgcmVzdWx0OiBcIlR1bG9zXCJcbiAgICByZXN1bHRzOiBcIlR1bG9rc2V0XCJcbiAgICBkZXNjcmlwdGlvbjogXCJLdXZhdXNcIlxuICAgIG9yOiBcInRhaVwiXG4gICAgc3ViamVjdDogXCJBaWhlXCJcbiAgICBlbWFpbDogXCJTw6Roa8O2cG9zdGlcIlxuICAgIHBhc3N3b3JkOiBcIlNhbGFzYW5hXCJcbiAgICBjb25maXJtX3Bhc3N3b3JkOiBcIlZhaHZpc3RhIHNhbGFzYW5hXCJcbiAgICBtZXNzYWdlOiBcIlZpZXN0aVwiXG4gICAgY29kZTogXCJLb29kaVwiXG4gICAgbGFkZGVyOiBcIkxpaWdhXCJcbiAgICB3aGVuOiBcIkt1blwiXG4gICAgb3Bwb25lbnQ6IFwiVmFzdHVzdGFqYVwiXG4gICAgcmFuazogXCJBcnZvXCJcbiAgICBzY29yZTogXCJQaXN0ZWV0XCJcbiAgICB3aW46IFwiVm9pdHRvXCJcbiAgICBsb3NzOiBcIlRhcHBpb1wiXG4gICAgdGllOiBcIlRhc2FwZWxpXCJcbiAgICBlYXN5OiBcIkhlbHBwb1wiXG4gICAgbWVkaXVtOiBcIkhhYXN0YXZhXCJcbiAgICBoYXJkOiBcIlZhaWtlYVwiXG4gICAgcGxheWVyOiBcIlBlbGFhamFcIlxuICAgIHBsYXllcl9sZXZlbDogXCJUYXNvXCIgIyBMaWtlIHBsYXllciBsZXZlbCA1LCBub3QgbGlrZSBsZXZlbDogRHVuZ2VvbnMgb2YgS2l0aGdhcmRcbiAgICB3YXJyaW9yOiBcIlNvdGlsYXNcIlxuICAgIHJhbmdlcjogXCJWYXJ0aWphXCJcbiAgICB3aXphcmQ6IFwiVmVsaG9cIlxuICAgIGZpcnN0X25hbWU6IFwiRXR1bmltaVwiXG4gICAgbGFzdF9uYW1lOiBcIlN1a3VuaW1pXCJcbiAgICBsYXN0X2luaXRpYWw6IFwiTmltaWtpcmphaW5cIlxuICAgIHVzZXJuYW1lOiBcIkvDpHl0dMOkasOkdHVubnVzXCJcbiAgICBjb250YWN0X3VzOiBcIk90YSB5aHRleXR0w6RcIlxuICAgIGNsb3NlX3dpbmRvdzogXCJTdWxqZSBpa2t1bmFcIlxuICAgIGxlYXJuX21vcmU6IFwiTHVlIGxpc8Okw6RcIlxuICAgIG1vcmU6IFwiTGlzw6TDpFwiXG4gICAgZmV3ZXI6IFwiVsOkaGVtbcOkblwiXG4gICAgd2l0aDogXCJsaXPDpGtzaVwiXG5cbiAgdW5pdHM6XG4gICAgc2Vjb25kOiBcInNla3VudGlcIlxuICAgIHNlY29uZHM6IFwic2VrdW50aWFcIlxuIyAgICBzZWM6IFwic2VjXCJcbiAgICBtaW51dGU6IFwibWludXV0dGlcIlxuICAgIG1pbnV0ZXM6IFwibWludXV0dGlhXCJcbiAgICBob3VyOiBcInR1bnRpXCJcbiAgICBob3VyczogXCJ0dW50aWFcIlxuICAgIGRheTogXCJww6RpdsOkXCJcbiAgICBkYXlzOiBcInDDpGl2w6TDpFwiXG4gICAgd2VlazogXCJ2aWlra29cIlxuICAgIHdlZWtzOiBcInZpaWtrb2FcIlxuICAgIG1vbnRoOiBcImt1dWthdXNpXCJcbiAgICBtb250aHM6IFwia3V1a2F1dHRhXCJcbiAgICB5ZWFyOiBcInZ1b3NpXCJcbiAgICB5ZWFyczogXCJ2dW90dGFcIlxuXG4gIHBsYXlfbGV2ZWw6XG4gICAgYmFja190b19tYXA6IFwiVGFrYWlzaW4ga2FydHRhYW5cIlxuICAgIGRpcmVjdGlvbnM6IFwiU3V1bm5hdFwiXG4gICAgZWRpdF9sZXZlbDogXCJNdW9ra2FhIHRhc29hXCJcbiAgICBrZWVwX2xlYXJuaW5nOiBcIkphdGthIG9wcGltaXN0YVwiXG4gICAgZXhwbG9yZV9jb2RlY29tYmF0OiBcIlR1dGtpIENvZGVDb21iYXQ6YVwiXG4gICAgZmluaXNoZWRfaG9jOiBcIktvb2RpdHVudGkgb24gdmFsbWlzXCJcbiAgICBnZXRfY2VydGlmaWNhdGU6IFwiSGFua2kgdG9kaXN0dXMhXCJcbiAgICBsZXZlbF9jb21wbGV0ZTogXCJUYXNvIHN1b3JpdGV0dHVcIlxuICAgIGNvbXBsZXRlZF9sZXZlbDogXCJTdW9yaXRpdCB0YXNvbjpcIlxuICAgIGNvdXJzZTogXCJLdXJzc2k6XCJcbiAgICBkb25lOiBcIlZhbG1pc1wiXG4gICAgbmV4dF9sZXZlbDogXCJTZXVyYWF2YSB0YXNvXCJcbiMgICAgY29tYm9fY2hhbGxlbmdlOiBcIkNvbWJvIENoYWxsZW5nZVwiXG4jICAgIGNvbmNlcHRfY2hhbGxlbmdlOiBcIkNvbmNlcHQgQ2hhbGxlbmdlXCJcbiMgICAgY2hhbGxlbmdlX3VubG9ja2VkOiBcIkNoYWxsZW5nZSBVbmxvY2tlZFwiXG4jICAgIGNvbWJvX2NoYWxsZW5nZV91bmxvY2tlZDogXCJDb21ibyBDaGFsbGVuZ2UgVW5sb2NrZWRcIlxuIyAgICBjb25jZXB0X2NoYWxsZW5nZV91bmxvY2tlZDogXCJDb25jZXB0IENoYWxsZW5nZSBVbmxvY2tlZFwiXG4jICAgIGNvbmNlcHRfY2hhbGxlbmdlX2NvbXBsZXRlOiBcIkNvbmNlcHQgQ2hhbGxlbmdlIENvbXBsZXRlIVwiXG4jICAgIGNvbWJvX2NoYWxsZW5nZV9jb21wbGV0ZTogXCJDb21ibyBDaGFsbGVuZ2UgQ29tcGxldGUhXCJcbiMgICAgY29tYm9fY2hhbGxlbmdlX2NvbXBsZXRlX2JvZHk6IFwiR3JlYXQgam9iLCBpdCBsb29rcyBsaWtlIHlvdSdyZSB3ZWxsIG9uIHlvdXIgd2F5IHRvIHVuZGVyc3RhbmRpbmcgX19jb25jZXB0X18hXCJcbiMgICAgcmVwbGF5X2xldmVsOiBcIlJlcGxheSBMZXZlbFwiXG4jICAgIGNvbWJvX2NvbmNlcHRzX3VzZWQ6IFwiX19jb21wbGV0ZV9fL19fdG90YWxfXyBDb25jZXB0cyBVc2VkXCJcbiMgICAgY29tYm9fYWxsX2NvbmNlcHRzX3VzZWQ6IFwiWW91IHVzZWQgYWxsIGNvbmNlcHRzIHBvc3NpYmxlIHRvIHNvbHZlIHRoZSBjaGFsbGVuZ2UuIEdyZWF0IGpvYiFcIlxuIyAgICBjb21ib19ub3RfYWxsX2NvbmNlcHRzX3VzZWQ6IFwiWW91IHVzZWQgX19jb21wbGV0ZV9fIG91dCBvZiB0aGUgX190b3RhbF9fIGNvbmNlcHRzIHBvc3NpYmxlIHRvIHNvbHZlIHRoZSBjaGFsbGVuZ2UuIFRyeSB0byBnZXQgYWxsIF9fdG90YWxfXyBjb25jZXB0cyBuZXh0IHRpbWUhXCJcbiMgICAgc3RhcnRfY2hhbGxlbmdlOiBcIlN0YXJ0IENoYWxsZW5nZVwiXG4gICAgbmV4dF9nYW1lOiBcIlNldXJhYXZhIHBlbGlcIlxuICAgIGxhbmd1YWdlczogXCJLaWVsZXRcIlxuICAgIHByb2dyYW1taW5nX2xhbmd1YWdlOiBcIk9oamVsbW9pbnRpa2llbGlcIlxuICAgIHNob3dfbWVudTogXCJOw6R5dMOkIHBlbGl2YWxpa2tvXCJcbiMgICAgaG9tZTogXCJIb21lXCIgIyBOb3QgdXNlZCBhbnkgbW9yZSwgd2lsbCBiZSByZW1vdmVkIHNvb24uXG4gICAgbGV2ZWw6IFwiVGFzb1wiICMgTGlrZSBcIkxldmVsOiBEdW5nZW9ucyBvZiBLaXRoZ2FyZFwiXG4gICAgc2tpcDogXCJPaGl0YVwiXG4gICAgZ2FtZV9tZW51OiBcIlBlbGl2YWxpa2tvXCJcbiAgICByZXN0YXJ0OiBcIkvDpHlubmlzdMOkIHV1ZGVsbGVlblwiXG4gICAgZ29hbHM6IFwiVGF2b2l0dGVldFwiXG4gICAgZ29hbDogXCJUYXZvaXRlXCJcbiMgICAgY2hhbGxlbmdlX2xldmVsX2dvYWxzOiBcIkNoYWxsZW5nZSBMZXZlbCBHb2Fsc1wiXG4jICAgIGNoYWxsZW5nZV9sZXZlbF9nb2FsOiBcIkNoYWxsZW5nZSBMZXZlbCBHb2FsXCJcbiMgICAgY29uY2VwdF9jaGFsbGVuZ2VfZ29hbHM6IFwiQ29uY2VwdCBDaGFsbGVuZ2UgR29hbHNcIlxuIyAgICBjb21ib19jaGFsbGVuZ2VfZ29hbHM6IFwiQ2hhbGxlbmdlIExldmVsIEdvYWxzXCJcbiMgICAgY29uY2VwdF9jaGFsbGVuZ2VfZ29hbDogXCJDb25jZXB0IENoYWxsZW5nZSBHb2FsXCJcbiMgICAgY29tYm9fY2hhbGxlbmdlX2dvYWw6IFwiQ2hhbGxlbmdlIExldmVsIEdvYWxcIlxuICAgIHJ1bm5pbmc6IFwiQWpldGFhbi4uLlwiXG4gICAgc3VjY2VzczogXCJPbm5pc3R1aSFcIlxuICAgIGluY29tcGxldGU6IFwiS2Vza2VuXCJcbiAgICB0aW1lZF9vdXQ6IFwiQWlrYSBsb3BwdWlcIlxuICAgIGZhaWxpbmc6IFwiRXDDpG9ubmlzdHVpXCJcbiAgICByZWxvYWQ6IFwiTGF0YWFcIlxuICAgIHJlbG9hZF90aXRsZTogXCJMYWRhdGFhbmtvIGthaWtraSBrb29kaSB1dWRlc3RhYW4/XCJcbiAgICByZWxvYWRfcmVhbGx5OiBcIk9sZXRrbyB2YXJtYSBldHTDpCBoYWx1YXQgbGFkYXRhIHTDpG3DpG4gdGFzb24gdXVkZXN0YWFuIGphIGFsb2l0dGFhIGFsdXN0YT9cIlxuICAgIHJlbG9hZF9jb25maXJtOiBcIkxhdGFhIEthaWtraVwiXG4gICAgdGVzdF9sZXZlbDogXCJUZXN0YWEgdGFzb1wiXG4gICAgdmljdG9yeTogXCJWb2l0dG9cIlxuICAgIHZpY3RvcnlfdGl0bGVfcHJlZml4OiBcIlwiXG4gICAgdmljdG9yeV90aXRsZV9zdWZmaXg6IFwiIFZhbG1pc1wiXG4gICAgdmljdG9yeV9zaWduX3VwOiBcIkx1byB0aWxpXCJcbiAgICB2aWN0b3J5X3NpZ25fdXBfcG9rZTogXCJIYWx1YXRrbyB0YWxsZXR0YWEga29vZGlzaT8gTHVvIGlsbWFpbmVuIHRpbGkhXCJcbiAgICB2aWN0b3J5X3JhdGVfdGhlX2xldmVsOiBcIkt1aW5rYSBoYXVza2EgdMOkbcOkIHRhc28gb2xpP1wiXG4gICAgdmljdG9yeV9yZXR1cm5fdG9fbGFkZGVyOiBcIlBhbGFhIGxpaWdhYW5cIlxuICAgIHZpY3Rvcnlfc2F2aW5nX3Byb2dyZXNzOiBcIlRhbGxlbm5ldGFhbiBlZGlzdHltaXNlc2lcIlxuICAgIHZpY3RvcnlfZ29faG9tZTogXCJUYWthaXNpbiBrb3RpaW5cIlxuICAgIHZpY3RvcnlfcmV2aWV3OiBcIktlcnJvIGxpc8Okw6QhXCJcbiAgICB2aWN0b3J5X3Jldmlld19wbGFjZWhvbGRlcjogXCJNaWxsYWluZW4ga2VudHTDpCBvbGk/XCJcbiAgICB2aWN0b3J5X2hvdXJfb2ZfY29kZV9kb25lOiBcIk9sZXRrbyBWYWxtaXM/XCJcbiAgICB2aWN0b3J5X2hvdXJfb2ZfY29kZV9kb25lX3llczogXCJLeWxsw6QsIEtvb2RpdHVudGluaSBvbiB2YW1pcyFcIlxuICAgIHZpY3RvcnlfZXhwZXJpZW5jZV9nYWluZWQ6IFwiS29rZW11c3RhXCJcbiAgICB2aWN0b3J5X2dlbXNfZ2FpbmVkOiBcIkphbG9raXZpw6RcIlxuICAgIHZpY3RvcnlfbmV3X2l0ZW06IFwiVXVzaSBlc2luZVwiXG4gICAgdmljdG9yeV9uZXdfaGVybzogXCJVdXNpIHNhbmthcmlcIlxuIyAgICB2aWN0b3J5X3Zpa2luZ19jb2RlX3NjaG9vbDogXCJIb2x5IHNtb2tlcywgdGhhdCB3YXMgYSBoYXJkIGxldmVsIHlvdSBqdXN0IGJlYXQhIElmIHlvdSBhcmVuJ3QgYWxyZWFkeSBhIHNvZnR3YXJlIGRldmVsb3BlciwgeW91IHNob3VsZCBiZS4gWW91IGp1c3QgZ290IGZhc3QtdHJhY2tlZCBmb3IgYWNjZXB0YW5jZSB3aXRoIFZpa2luZyBDb2RlIFNjaG9vbCwgd2hlcmUgeW91IGNhbiB0YWtlIHlvdXIgc2tpbGxzIHRvIHRoZSBuZXh0IGxldmVsIGFuZCBiZWNvbWUgYSBwcm9mZXNzaW9uYWwgd2ViIGRldmVsb3BlciBpbiAxNCB3ZWVrcy5cIlxuICAgIHZpY3RvcnlfYmVjb21lX2FfdmlraW5nOiBcIlR1bGUgdmlpa2luZ2lrc2lcIlxuIyAgICB2aWN0b3J5X25vX3Byb2dyZXNzX2Zvcl90ZWFjaGVyczogXCJQcm9ncmVzcyBpcyBub3Qgc2F2ZWQgZm9yIHRlYWNoZXJzLiBCdXQsIHlvdSBjYW4gYWRkIGEgc3R1ZGVudCBhY2NvdW50IHRvIHlvdXIgY2xhc3Nyb29tIGZvciB5b3Vyc2VsZi5cIlxuICAgIHRvbWVfY2FzdF9idXR0b25fcnVuOiBcIlN1b3JpdGFcIlxuICAgIHRvbWVfY2FzdF9idXR0b25fcnVubmluZzogXCJTdW9yaXRldGFhblwiXG4gICAgdG9tZV9jYXN0X2J1dHRvbl9yYW46IFwiU3Vvcml0ZXR0dVwiXG4gICAgdG9tZV9zdWJtaXRfYnV0dG9uOiBcIkzDpGhldMOkXCJcbiAgICB0b21lX3JlbG9hZF9tZXRob2Q6IFwiTGF0YWEga29vZGkgdXVkZWxsZWVuXCIgIyB7Y2hhbmdlfVxuICAgIHRvbWVfYXZhaWxhYmxlX3NwZWxsczogXCJTYWF0YXZpc3NhIG9sZXZhdCB0YWlhdFwiXG4gICAgdG9tZV95b3VyX3NraWxsczogXCJUYWl0b3NpXCJcbiAgICBoaW50czogXCJWaWhqZWV0XCJcbiAgICBoaW50c190aXRsZTogXCJWaWhqZSB7e251bWJlcn19XCJcbiAgICBjb2RlX3NhdmVkOiBcIktvb2RpIG9uIHRhbGxlbm5ldHR1XCJcbiAgICBza2lwX3R1dG9yaWFsOiBcIk9oaXRhIChlc2MpXCJcbiAgICBrZXlib2FyZF9zaG9ydGN1dHM6IFwiUGlrYW7DpHBww6RpbWV0XCJcbiAgICBsb2FkaW5nX3N0YXJ0OiBcIkFsb2l0YSBUYXNvXCJcbiMgICAgbG9hZGluZ19zdGFydF9jb21ibzogXCJTdGFydCBDb21ibyBDaGFsbGVuZ2VcIlxuIyAgICBsb2FkaW5nX3N0YXJ0X2NvbmNlcHQ6IFwiU3RhcnQgQ29uY2VwdCBDaGFsbGVuZ2VcIlxuICAgIHByb2JsZW1fYWxlcnRfdGl0bGU6IFwiS29yamFhIGtvb2Rpc2lcIlxuICAgIHRpbWVfY3VycmVudDogXCJOeXQ6XCJcbiAgICB0aW1lX3RvdGFsOiBcIkVuaW50w6TDpG46XCJcbiAgICB0aW1lX2dvdG86IFwiTWVuZTpcIlxuICAgIG5vbl91c2VyX2NvZGVfcHJvYmxlbV90aXRsZTogXCJUYXNvbiBsYXRhYW1pbmVuIGVww6Rvbm5pc3R1aVwiXG4gICAgaW5maW5pdGVfbG9vcF90aXRsZTogXCJMb3B1dG9uIGx1dXBwaSBoYXZhaXR0dVwiXG4gICAgaW5maW5pdGVfbG9vcF9kZXNjcmlwdGlvbjogXCJPaGplbG1ha29vZGluIHN1b3JpdHVzdGEgbWFhaWxtYW4gbHVvbWlzZWtzaSBlaSBzYWF0dSBww6TDpHTDtmtzZWVuLiBTZSBvbiB0b2Rlbm7DpGvDtmlzZXN0aSB0b2RlbGxhIGhpZGFzIHRhaSBsb3B1dHRvbWFzc2EgbHV1cGlzc2EuIFRhaSBzaWVsbMOkIHZvaSBvbGxhIGJ1Z2kuIFZvaXQgam9rbyBhamFhIGtvb2RpbiB1dWRlc3RhYW4sIHRhaSBwYWxhdXR0YWEgc2VuIGFsa3VwZXLDpGlzZWVuIHRpbGFhbi4gSm9zIHNlIGVpIGtvcmphYSBvbmdlbG1hYSwga2Vycm8gc2lpdMOkIG1laWxsZS5cIlxuICAgIGNoZWNrX2Rldl9jb25zb2xlOiBcIlZvaXQgbXnDtnMgYXZhdGEga2VoaXR0w6Rqw6RuIGtvbnNvbGluIGphIGthdHNvYSBtaWvDpCBzYWF0dGFpc2kgb2xsYSB2aWFsbGEuXCJcbiAgICBjaGVja19kZXZfY29uc29sZV9saW5rOiBcIihvaGplZXQpXCJcbiAgICBpbmZpbml0ZV9sb29wX3RyeV9hZ2FpbjogXCJZcml0w6QgdXVkZWxsZWVuXCJcbiAgICBpbmZpbml0ZV9sb29wX3Jlc2V0X2xldmVsOiBcIkFsb2l0YSB0YXNvIHV1ZGVsbGVlblwiXG4gICAgaW5maW5pdGVfbG9vcF9jb21tZW50X291dDogXCJLb21tZW50b2kga29vZGlyaXZlasOkXCJcbiAgICB0aXBfdG9nZ2xlX3BsYXk6IFwiVmFsaXRzZSB0b2lzdGEvcHlzw6R5dMOkIHBhaW5hbWFsbGEgQ3RybCtQLlwiXG4gICAgdGlwX3NjcnViX3Nob3J0Y3V0OiBcIlBhaW5hIEN0cmwrWyBqYSBDdHJsK10ga2VsYXRha3Nlc2kgZXRlZW4gdGFpIHRhYWtzZS5cIlxuICAgIHRpcF9ndWlkZV9leGlzdHM6IFwiS2F0c28gdmlua2tlasOkIHBlbGlzc8OkLCBwYWluYW1hbGxhOiBQZWxpdmFsaWtrbyAtPiBPcGFzLlwiXG4gICAgdGlwX29wZW5fc291cmNlOiBcIkNvZGVDb21iYXQgb24gMTAwJSBhdm9pbnRhIGzDpGhkZWtvb2RpYSFcIlxuICAgIHRpcF90ZWxsX2ZyaWVuZHM6IFwiUGlkw6R0a8O2IENvZGVDb21iYXRpc3RhPyBLZXJybyBtZWlzdMOkIG15w7ZzIHlzdMOkdmlsbGVzaSFcIlxuICAgIHRpcF9iZXRhX2xhdW5jaDogXCJDb2RlQ29tYmF0IGF2YXR0aWluIGJldGF0ZXN0YXVrc2VlbiBsb2tha3V1c3NhIDIwMTMuXCJcbiAgICB0aXBfdGhpbmtfc29sdXRpb246IFwiTWlldGkgcmF0a2Fpc3VhLCDDpGzDpCBvbmdlbG1hYS5cIlxuICAgIHRpcF90aGVvcnlfcHJhY3RpY2U6IFwiVGVvcmlhc3NhIHRlb3JpYSBqYSBrw6R5dMOkbnTDtiBvdmF0IHNhbWEgYXNpYS4gS8OkeXTDpG5uw7Zzc8OkIG7DpGluIGVpIG9sZS4gLSBZb2dpIEJlcnJhXCJcbiAgICB0aXBfZXJyb3JfZnJlZTogXCJWaXJoZWV0dMO2bWnDpCBvaGplbG1pYSB2b2kga2lyam9pdHRhYSBrYWhkZWxsYSBlcmkgdGF2YWxsYS4gSWvDpHbDpCBreWxsw6Qga29sbWFzIHRhcGEgb24gYWlub2EgdG9pbWl2YS4gLSBBbGFuIFBlcmxpc1wiXG4gICAgdGlwX2RlYnVnZ2luZ19wcm9ncmFtOiBcIkpvcyBkZWJ1Z2dhdXMgdGFya29pdHRhYSB2aXJoZWlkZW4gcG9pc3RhbWlzdGEgb2hqZWxtYXN0YSwgbmlpbiBvaGplbG1vaW5uaW4gb24gdGFya29pdGV0dGF2YSBuaWlkZW4gbGlzw6TDpG1pc3TDpC4gLSBFZHNnZXIgVy4gRGlqa3N0cmFcIlxuICAgIHRpcF9mb3J1bXM6IFwiVHVsZXBhIGtlc2t1c3RlbHVwYWxzdGFsbGUga2VydG9tYWFuIG1pZWxpcGl0ZWVzaSFcIlxuICAgIHRpcF9iYWJ5X2NvZGVyczogXCJUdWxldmFpc3V1ZGVzc2Egam9wYSB2YXV2b2lzdGEgdHVsZWUgQXJra2ltYWFnZWphLlwiXG4gICAgdGlwX21vcmFsZV9pbXByb3ZlczogXCJMYXRhdXMgamF0a3V1IGt1bm5lcyBtb3JhYWxpc2kga29oZW5lZS5cIlxuICAgIHRpcF9hbGxfc3BlY2llczogXCJNZSB1c2tvbW1lIHRhc2EtYXJ2b2lzaWluIG1haGRvbGxpc3V1a3NpaW4ga29vZGF1a3NlbiBvcHBpbWlzZXNzYS5cIlxuIyAgICB0aXBfcmV0aWN1bGF0aW5nOiBcIlJldGljdWxhdGluZyBzcGluZXMuXCJcbiMgICAgdGlwX2hhcnJ5OiBcIlllciBhIFdpemFyZCwgXCJcbiMgICAgdGlwX2dyZWF0X3Jlc3BvbnNpYmlsaXR5OiBcIldpdGggZ3JlYXQgY29kaW5nIHNraWxsIGNvbWVzIGdyZWF0IGRlYnVnIHJlc3BvbnNpYmlsaXR5LlwiXG4jICAgIHRpcF9tdW5jaGtpbjogXCJJZiB5b3UgZG9uJ3QgZWF0IHlvdXIgdmVnZXRhYmxlcywgYSBtdW5jaGtpbiB3aWxsIGNvbWUgYWZ0ZXIgeW91IHdoaWxlIHlvdSdyZSBhc2xlZXAuXCJcbiMgICAgdGlwX2JpbmFyeTogXCJUaGVyZSBhcmUgb25seSAxMCB0eXBlcyBvZiBwZW9wbGUgaW4gdGhlIHdvcmxkOiB0aG9zZSB3aG8gdW5kZXJzdGFuZCBiaW5hcnksIGFuZCB0aG9zZSB3aG8gZG9uJ3QuXCJcbiMgICAgdGlwX2NvbW1pdG1lbnRfeW9kYTogXCJBIHByb2dyYW1tZXIgbXVzdCBoYXZlIHRoZSBkZWVwZXN0IGNvbW1pdG1lbnQsIHRoZSBtb3N0IHNlcmlvdXMgbWluZC4gfiBZb2RhXCJcbiMgICAgdGlwX25vX3RyeTogXCJEby4gT3IgZG8gbm90LiBUaGVyZSBpcyBubyB0cnkuIC0gWW9kYVwiXG4jICAgIHRpcF9wYXRpZW5jZTogXCJQYXRpZW5jZSB5b3UgbXVzdCBoYXZlLCB5b3VuZyBQYWRhd2FuLiAtIFlvZGFcIlxuIyAgICB0aXBfZG9jdW1lbnRlZF9idWc6IFwiQSBkb2N1bWVudGVkIGJ1ZyBpcyBub3QgYSBidWc7IGl0IGlzIGEgZmVhdHVyZS5cIlxuIyAgICB0aXBfaW1wb3NzaWJsZTogXCJJdCBhbHdheXMgc2VlbXMgaW1wb3NzaWJsZSB1bnRpbCBpdCdzIGRvbmUuIC0gTmVsc29uIE1hbmRlbGFcIlxuIyAgICB0aXBfdGFsa19pc19jaGVhcDogXCJUYWxrIGlzIGNoZWFwLiBTaG93IG1lIHRoZSBjb2RlLiAtIExpbnVzIFRvcnZhbGRzXCJcbiMgICAgdGlwX2ZpcnN0X2xhbmd1YWdlOiBcIlRoZSBtb3N0IGRpc2FzdHJvdXMgdGhpbmcgdGhhdCB5b3UgY2FuIGV2ZXIgbGVhcm4gaXMgeW91ciBmaXJzdCBwcm9ncmFtbWluZyBsYW5ndWFnZS4gLSBBbGFuIEtheVwiXG4jICAgIHRpcF9oYXJkd2FyZV9wcm9ibGVtOiBcIlE6IEhvdyBtYW55IHByb2dyYW1tZXJzIGRvZXMgaXQgdGFrZSB0byBjaGFuZ2UgYSBsaWdodCBidWxiPyAgQTogTm9uZSwgaXQncyBhIGhhcmR3YXJlIHByb2JsZW0uXCJcbiMgICAgdGlwX2hvZnN0YWR0ZXJzX2xhdzogXCJIb2ZzdGFkdGVyJ3MgTGF3OiBJdCBhbHdheXMgdGFrZXMgbG9uZ2VyIHRoYW4geW91IGV4cGVjdCwgZXZlbiB3aGVuIHlvdSB0YWtlIGludG8gYWNjb3VudCBIb2ZzdGFkdGVyJ3MgTGF3LlwiXG4jICAgIHRpcF9wcmVtYXR1cmVfb3B0aW1pemF0aW9uOiBcIlByZW1hdHVyZSBvcHRpbWl6YXRpb24gaXMgdGhlIHJvb3Qgb2YgYWxsIGV2aWwuIC0gRG9uYWxkIEtudXRoXCJcbiMgICAgdGlwX2JydXRlX2ZvcmNlOiBcIldoZW4gaW4gZG91YnQsIHVzZSBicnV0ZSBmb3JjZS4gLSBLZW4gVGhvbXBzb25cIlxuIyAgICB0aXBfZXh0cmFwb2xhdGlvbjogXCJUaGVyZSBhcmUgb25seSB0d28ga2luZHMgb2YgcGVvcGxlOiB0aG9zZSB0aGF0IGNhbiBleHRyYXBvbGF0ZSBmcm9tIGluY29tcGxldGUgZGF0YS4uLlwiXG4jICAgIHRpcF9zdXBlcnBvd2VyOiBcIkNvZGluZyBpcyB0aGUgY2xvc2VzdCB0aGluZyB3ZSBoYXZlIHRvIGEgc3VwZXJwb3dlci5cIlxuIyAgICB0aXBfY29udHJvbF9kZXN0aW55OiBcIkluIHJlYWwgb3BlbiBzb3VyY2UsIHlvdSBoYXZlIHRoZSByaWdodCB0byBjb250cm9sIHlvdXIgb3duIGRlc3RpbnkuIC0gTGludXMgVG9ydmFsZHNcIlxuIyAgICB0aXBfbm9fY29kZTogXCJObyBjb2RlIGlzIGZhc3RlciB0aGFuIG5vIGNvZGUuXCJcbiMgICAgdGlwX2NvZGVfbmV2ZXJfbGllczogXCJDb2RlIG5ldmVyIGxpZXMsIGNvbW1lbnRzIHNvbWV0aW1lcyBkby4g4oCUIFJvbiBKZWZmcmllc1wiXG4jICAgIHRpcF9yZXVzYWJsZV9zb2Z0d2FyZTogXCJCZWZvcmUgc29mdHdhcmUgY2FuIGJlIHJldXNhYmxlIGl0IGZpcnN0IGhhcyB0byBiZSB1c2FibGUuXCJcbiMgICAgdGlwX29wdGltaXphdGlvbl9vcGVyYXRvcjogXCJFdmVyeSBsYW5ndWFnZSBoYXMgYW4gb3B0aW1pemF0aW9uIG9wZXJhdG9yLiBJbiBtb3N0IGxhbmd1YWdlcyB0aGF0IG9wZXJhdG9yIGlzIOKAmC8v4oCZXCJcbiMgICAgdGlwX2xpbmVzX29mX2NvZGU6IFwiTWVhc3VyaW5nIHByb2dyYW1taW5nIHByb2dyZXNzIGJ5IGxpbmVzIG9mIGNvZGUgaXMgbGlrZSBtZWFzdXJpbmcgYWlyY3JhZnQgYnVpbGRpbmcgcHJvZ3Jlc3MgYnkgd2VpZ2h0LiDigJQgQmlsbCBHYXRlc1wiXG4jICAgIHRpcF9zb3VyY2VfY29kZTogXCJJIHdhbnQgdG8gY2hhbmdlIHRoZSB3b3JsZCBidXQgdGhleSB3b3VsZCBub3QgZ2l2ZSBtZSB0aGUgc291cmNlIGNvZGUuXCJcbiMgICAgdGlwX2phdmFzY3JpcHRfamF2YTogXCJKYXZhIGlzIHRvIEphdmFTY3JpcHQgd2hhdCBDYXIgaXMgdG8gQ2FycGV0LiAtIENocmlzIEhlaWxtYW5uXCJcbiMgICAgdGlwX21vdmVfZm9yd2FyZDogXCJXaGF0ZXZlciB5b3UgZG8sIGtlZXAgbW92aW5nIGZvcndhcmQuIC0gTWFydGluIEx1dGhlciBLaW5nIEpyLlwiXG4gICAgdGlwX2dvb2dsZTogXCJPbmtvIHNpbnVsbGEgb25nZWxtYSwgam90YSBldCBvc2FhIHJhdGthaXN0YT8gS2F0c28gR29vZ2xlc3RhIVwiXG4jICAgIHRpcF9hZGRpbmdfZXZpbDogXCJBZGRpbmcgYSBwaW5jaCBvZiBldmlsLlwiXG4jICAgIHRpcF9oYXRlX2NvbXB1dGVyczogXCJUaGF0J3MgdGhlIHRoaW5nIGFib3V0IHBlb3BsZSB3aG8gdGhpbmsgdGhleSBoYXRlIGNvbXB1dGVycy4gV2hhdCB0aGV5IHJlYWxseSBoYXRlIGlzIGxvdXN5IHByb2dyYW1tZXJzLiAtIExhcnJ5IE5pdmVuXCJcbiMgICAgdGlwX29wZW5fc291cmNlX2NvbnRyaWJ1dGU6IFwiWW91IGNhbiBoZWxwIENvZGVDb21iYXQgaW1wcm92ZSFcIlxuIyAgICB0aXBfcmVjdXJzZTogXCJUbyBpdGVyYXRlIGlzIGh1bWFuLCB0byByZWN1cnNlIGRpdmluZS4gLSBMLiBQZXRlciBEZXV0c2NoXCJcbiMgICAgdGlwX2ZyZWVfeW91cl9taW5kOiBcIllvdSBoYXZlIHRvIGxldCBpdCBhbGwgZ28sIE5lby4gRmVhciwgZG91YnQsIGFuZCBkaXNiZWxpZWYuIEZyZWUgeW91ciBtaW5kLiAtIE1vcnBoZXVzXCJcbiMgICAgdGlwX3N0cm9uZ19vcHBvbmVudHM6IFwiRXZlbiB0aGUgc3Ryb25nZXN0IG9mIG9wcG9uZW50cyBhbHdheXMgaGFzIGEgd2Vha25lc3MuIC0gSXRhY2hpIFVjaGloYVwiXG4jICAgIHRpcF9wYXBlcl9hbmRfcGVuOiBcIkJlZm9yZSB5b3Ugc3RhcnQgY29kaW5nLCB5b3UgY2FuIGFsd2F5cyBwbGFuIHdpdGggYSBzaGVldCBvZiBwYXBlciBhbmQgYSBwZW4uXCJcbiAgICB0aXBfc29sdmVfdGhlbl93cml0ZTogXCJSYXRrYWlzZSBlbnNpbiBvbmdlbG1hLiBLaXJqb2l0YSBzaXR0ZW4ga29vZGkuIC0gSm9obiBKb2huc29uXCJcbiMgICAgdGlwX2NvbXBpbGVyX2lnbm9yZXNfY29tbWVudHM6IFwiU29tZXRpbWVzIEkgdGhpbmsgdGhhdCB0aGUgY29tcGlsZXIgaWdub3JlcyBteSBjb21tZW50cy5cIlxuIyAgICB0aXBfdW5kZXJzdGFuZF9yZWN1cnNpb246IFwiVGhlIG9ubHkgd2F5IHRvIHVuZGVyc3RhbmQgcmVjdXJzaW9uIGlzIHRvIHVuZGVyc3RhbmQgcmVjdXJzaW9uLlwiXG4jICAgIHRpcF9saWZlX2FuZF9wb2x5bW9ycGhpc206IFwiT3BlbiBTb3VyY2UgaXMgbGlrZSBhIHRvdGFsbHkgcG9seW1vcnBoaWMgaGV0ZXJvZ2VuZW91cyBzdHJ1Y3R1cmU6IEFsbCB0eXBlcyBhcmUgd2VsY29tZS5cIlxuICAgIHRpcF9taXN0YWtlc19wcm9vZl9vZl90cnlpbmc6IFwiVmlyaGVldCBrb29kaXNzYSBvdmF0IHZhaW4gdG9kaXN0ZSBzaWl0w6QgZXR0w6QgeXJpdMOkdC5cIlxuIyAgICB0aXBfYWRkaW5nX29yZ3JlczogXCJSb3VuZGluZyB1cCBvZ3Jlcy5cIlxuICAgIHRpcF9zaGFycGVuaW5nX3N3b3JkczogXCJUZXJvaXRldGFhbiBtaWVra29qYS5cIlxuIyAgICB0aXBfcmF0YXRvdWlsbGU6IFwiWW91IG11c3Qgbm90IGxldCBhbnlvbmUgZGVmaW5lIHlvdXIgbGltaXRzIGJlY2F1c2Ugb2Ygd2hlcmUgeW91IGNvbWUgZnJvbS4gWW91ciBvbmx5IGxpbWl0IGlzIHlvdXIgc291bC4gLSBHdXN0ZWF1LCBSYXRhdG91aWxsZVwiXG4jICAgIHRpcF9uZW1vOiBcIldoZW4gbGlmZSBnZXRzIHlvdSBkb3duLCB3YW50IHRvIGtub3cgd2hhdCB5b3UndmUgZ290dGEgZG8/IEp1c3Qga2VlcCBzd2ltbWluZywganVzdCBrZWVwIHN3aW1taW5nLiAtIERvcnksIEZpbmRpbmcgTmVtb1wiXG4jICAgIHRpcF9pbnRlcm5ldF93ZWF0aGVyOiBcIkp1c3QgbW92ZSB0byB0aGUgaW50ZXJuZXQsIGl0J3MgZ3JlYXQgaGVyZS4gV2UgZ2V0IHRvIGxpdmUgaW5zaWRlIHdoZXJlIHRoZSB3ZWF0aGVyIGlzIGFsd2F5cyBhd2Vzb21lLiAtIEpvaG4gR3JlZW5cIlxuIyAgICB0aXBfbmVyZHM6IFwiTmVyZHMgYXJlIGFsbG93ZWQgdG8gbG92ZSBzdHVmZiwgbGlrZSBqdW1wLXVwLWFuZC1kb3duLWluLXRoZS1jaGFpci1jYW4ndC1jb250cm9sLXlvdXJzZWxmIGxvdmUgaXQuIC0gSm9obiBHcmVlblwiXG4jICAgIHRpcF9zZWxmX3RhdWdodDogXCJJIHRhdWdodCBteXNlbGYgOTAlIG9mIHdoYXQgSSd2ZSBsZWFybmVkLiBBbmQgdGhhdCdzIG5vcm1hbCEgLSBIYW5rIEdyZWVuXCJcbiMgICAgdGlwX2x1bmFfbG92ZWdvb2Q6IFwiRG9uJ3Qgd29ycnksIHlvdSdyZSBqdXN0IGFzIHNhbmUgYXMgSSBhbS4gLSBMdW5hIExvdmVnb29kXCJcbiMgICAgdGlwX2dvb2RfaWRlYTogXCJUaGUgYmVzdCB3YXkgdG8gaGF2ZSBhIGdvb2QgaWRlYSBpcyB0byBoYXZlIGEgbG90IG9mIGlkZWFzLiAtIExpbnVzIFBhdWxpbmdcIlxuIyAgICB0aXBfcHJvZ3JhbW1pbmdfbm90X2Fib3V0X2NvbXB1dGVyczogXCJDb21wdXRlciBTY2llbmNlIGlzIG5vIG1vcmUgYWJvdXQgY29tcHV0ZXJzIHRoYW4gYXN0cm9ub215IGlzIGFib3V0IHRlbGVzY29wZXMuIC0gRWRzZ2VyIERpamtzdHJhXCJcbiMgICAgdGlwX211bGFuOiBcIkJlbGlldmUgeW91IGNhbiwgdGhlbiB5b3Ugd2lsbC4gLSBNdWxhblwiXG4gICAgcHJvamVjdF9jb21wbGV0ZTogXCJQcm9qZWt0aSB2YWxtaXMhXCJcbiAgICBzaGFyZV90aGlzX3Byb2plY3Q6IFwiSmFhIHTDpG3DpCBwcm9qZWt0aSB5c3TDpHZpZW4gdGFpIHBlcmhlZW4ga2Fuc3NhOlwiXG4gICAgcmVhZHlfdG9fc2hhcmU6IFwiT2xldGtvIHZhbG1pcyBqdWxrYWlzZW1hYW4gcHJvamVrdGlzaT9cIlxuICAgIGNsaWNrX3B1Ymxpc2g6IFwiS2xpa2thYSBcXFwiUHVibGlzaFxcXCIgam90dGEgc2UgaWxtZXN0eXkgbHVva2FuIGdhbGxlcmlhYW4sIGvDpHkgc2l0dGVuIGthdHNvbWFzc2EgbWl0w6QgbHVva2tha2F2ZXJpc2kgb3ZhdCByYWtlbnRhbmVldCEgVm9pdCB0dWxsYSB0YWthaXNpbiBqYSBqYXRrYWEgdMOkdMOkIHByb2pla3RpYS4gVHVsZXZhdCBtdXV0b2tzZXNpIHRhbGxlbm5ldGFhbiBqYSBqYWV0YWFuIGF1dG9tYWF0dGlzZXN0aSBsdW9ra2F0b3Zlcmllc2kga2Fuc3NhLlwiXG4gICAgYWxyZWFkeV9wdWJsaXNoZWRfcHJlZml4OiBcIk11dXRva3Nlc2kgb2xsYWFuIHRhbGxlbm5ldHR1IGx1b2thbiBnYWxsZXJpYWFuLlwiXG4gICAgYWxyZWFkeV9wdWJsaXNoZWRfc3VmZml4OiBcIkphdGthIGtva2VpbGVtaXN0YSBqYSB0ZWUgdMOkc3TDpCBwcm9qZWt0aXN0YSBqb3BhIHZpZWzDpCBwYXJlbXBpIHRhaSBrw6R5IGthdHNvbWFzc2EgbWl0w6QgbHVva2tha2F2ZXJpc2kgb3ZhdCByYWtlbnRhbmVldCEgVHVsZXZhdCBtdXV0b2tzZXNpIHRhbGxlbm5ldGFhbiBqYSBqYWV0YWFuIGF1dG9tYWF0dGlzZXN0aSBsdW9ra2F0b3Zlcmllc2kga2Fuc3NhLlwiXG4gICAgdmlld19nYWxsZXJ5OiBcIkthdHNvIGdhbGxlcmlhYVwiXG4gICAgcHJvamVjdF9wdWJsaXNoZWRfbm90eTogXCJUYXNvc2kgb24ganVsa2Fpc3R1IVwiXG4gICAga2VlcF9lZGl0aW5nOiBcIkphdGthIG11b2trYWFtaXN0YVwiXG5cbiMgIGFwaXM6XG4jICAgIG1ldGhvZHM6IFwiTWV0aG9kc1wiXG4jICAgIGV2ZW50czogXCJFdmVudHNcIlxuIyAgICBzcGF3bmFibGU6IFwiU3Bhd25hYmxlXCJcbiMgICAgaHRtbDogXCJIVE1MXCJcbiMgICAgbWF0aDogXCJNYXRoXCJcbiMgICAgYXJyYXk6IFwiQXJyYXlcIlxuIyAgICBvYmplY3Q6IFwiT2JqZWN0XCJcbiMgICAgc3RyaW5nOiBcIlN0cmluZ1wiXG4jICAgIGZ1bmN0aW9uOiBcIkZ1bmN0aW9uXCJcbiMgICAgdmVjdG9yOiBcIlZlY3RvclwiXG4jICAgIGRhdGU6IFwiRGF0ZVwiXG4jICAgIGpxdWVyeTogXCJqUXVlcnlcIlxuIyAgICBqc29uOiBcIkpTT05cIlxuIyAgICBudW1iZXI6IFwiTnVtYmVyXCJcbiMgICAgd2ViamF2YXNjcmlwdDogXCJKYXZhU2NyaXB0XCJcblxuIyAgYW1hem9uX2hvYzpcbiMgICAgdGl0bGU6IFwiS2VlcCBMZWFybmluZyB3aXRoIEFtYXpvbiFcIlxuIyAgICBjb25ncmF0czogXCJDb25ncmF0dWxhdGlvbnMgb24gY29ucXVlcmluZyB0aGF0IGNoYWxsZW5naW5nIEhvdXIgb2YgQ29kZSFcIlxuIyAgICBlZHVjYXRlXzE6IFwiTm93LCBrZWVwIGxlYXJuaW5nIGFib3V0IGNvZGluZyBhbmQgY2xvdWQgY29tcHV0aW5nIHdpdGggQVdTIEVkdWNhdGUsIGFuIGV4Y2l0aW5nLCBmcmVlIHByb2dyYW0gZnJvbSBBbWF6b24gZm9yIGJvdGggc3R1ZGVudHMgYW5kIHRlYWNoZXJzLiBXaXRoIEFXUyBFZHVjYXRlLCB5b3UgY2FuIGVhcm4gY29vbCBiYWRnZXMgYXMgeW91IGxlYXJuIGFib3V0IHRoZSBiYXNpY3Mgb2YgdGhlIGNsb3VkIGFuZCBjdXR0aW5nLWVkZ2UgdGVjaG5vbG9naWVzIHN1Y2ggYXMgZ2FtaW5nLCB2aXJ0dWFsIHJlYWxpdHksIGFuZCBBbGV4YS5cIlxuIyAgICBlZHVjYXRlXzI6IFwiTGVhcm4gbW9yZSBhbmQgc2lnbiB1cCBoZXJlXCJcbiMgICAgZnV0dXJlX2VuZ18xOiBcIllvdSBjYW4gYWxzbyB0cnkgdG8gYnVpbGQgeW91ciBvd24gc2Nob29sIGZhY3RzIHNraWxsIGZvciBBbGV4YVwiXG4jICAgIGZ1dHVyZV9lbmdfMjogXCJoZXJlXCJcbiMgICAgZnV0dXJlX2VuZ18zOiBcIihkZXZpY2UgaXMgbm90IHJlcXVpcmVkKS4gVGhpcyBBbGV4YSBhY3Rpdml0eSBpcyBicm91Z2h0IHRvIHlvdSBieSB0aGVcIlxuIyAgICBmdXR1cmVfZW5nXzQ6IFwiQW1hem9uIEZ1dHVyZSBFbmdpbmVlclwiXG4jICAgIGZ1dHVyZV9lbmdfNTogXCJwcm9ncmFtIHdoaWNoIGNyZWF0ZXMgbGVhcm5pbmcgYW5kIHdvcmsgb3Bwb3J0dW5pdGllcyBmb3IgYWxsIEstMTIgc3R1ZGVudHMgaW4gdGhlIFVuaXRlZCBTdGF0ZXMgd2hvIHdpc2ggdG8gcHVyc3VlIGNvbXB1dGVyIHNjaWVuY2UuXCJcblxuIyAgcGxheV9nYW1lX2Rldl9sZXZlbDpcbiMgICAgY3JlYXRlZF9ieTogXCJDcmVhdGVkIGJ5IHt7bmFtZX19XCJcbiMgICAgY3JlYXRlZF9kdXJpbmdfaG9jOiBcIkNyZWF0ZWQgZHVyaW5nIEhvdXIgb2YgQ29kZVwiXG4jICAgIHJlc3RhcnQ6IFwiUmVzdGFydCBMZXZlbFwiXG4jICAgIHBsYXk6IFwiUGxheSBMZXZlbFwiXG4jICAgIHBsYXlfbW9yZV9jb2RlY29tYmF0OiBcIlBsYXkgTW9yZSBDb2RlQ29tYmF0XCJcbiMgICAgZGVmYXVsdF9zdHVkZW50X2luc3RydWN0aW9uczogXCJDbGljayB0byBjb250cm9sIHlvdXIgaGVybyBhbmQgd2luIHlvdXIgZ2FtZSFcIlxuIyAgICBnb2FsX3N1cnZpdmU6IFwiU3Vydml2ZS5cIlxuIyAgICBnb2FsX3N1cnZpdmVfdGltZTogXCJTdXJ2aXZlIGZvciBfX3NlY29uZHNfXyBzZWNvbmRzLlwiXG4jICAgIGdvYWxfZGVmZWF0OiBcIkRlZmVhdCBhbGwgZW5lbWllcy5cIlxuIyAgICBnb2FsX2RlZmVhdF9hbW91bnQ6IFwiRGVmZWF0IF9fYW1vdW50X18gZW5lbWllcy5cIlxuIyAgICBnb2FsX21vdmU6IFwiTW92ZSB0byBhbGwgdGhlIHJlZCBYIG1hcmtzLlwiXG4jICAgIGdvYWxfY29sbGVjdDogXCJDb2xsZWN0IGFsbCB0aGUgaXRlbXMuXCJcbiMgICAgZ29hbF9jb2xsZWN0X2Ftb3VudDogXCJDb2xsZWN0IF9fYW1vdW50X18gaXRlbXMuXCJcblxuICBnYW1lX21lbnU6XG4gICAgaW52ZW50b3J5X3RhYjogXCJMdWV0dGVsb1wiXG4gICAgc2F2ZV9sb2FkX3RhYjogXCJUYWxsZW5uYS9MYXRhYVwiXG4gICAgb3B0aW9uc190YWI6IFwiQXNldHVrc2V0XCJcbiAgICBndWlkZV90YWI6IFwiT3Bhc1wiXG4gICAgZ3VpZGVfdmlkZW9fdHV0b3JpYWw6IFwiVmlkZW8tb3BwYWF0XCJcbiAgICBndWlkZV90aXBzOiBcIlZpbmtrZWrDpFwiXG4gICAgbXVsdGlwbGF5ZXJfdGFiOiBcIk1vbmlucGVsYWFqYVwiXG4gICAgYXV0aF90YWI6IFwiS2lyamF1ZHUgc2lzw6TDpG5cIlxuICAgIGludmVudG9yeV9jYXB0aW9uOiBcIlZhcnVzdGEgc2Fua2FyaVwiXG4gICAgY2hvb3NlX2hlcm9fY2FwdGlvbjogXCJWYWxpdHNlIHNhbmthcmkgamEga2llbGlcIlxuICAgIG9wdGlvbnNfY2FwdGlvbjogXCJNdXV0YSBhc2V0dWtzaWFcIlxuICAgIGd1aWRlX2NhcHRpb246IFwiT2hqZWl0YSBqYSB2aW5ra2Vqw6RcIlxuICAgIG11bHRpcGxheWVyX2NhcHRpb246IFwiUGVsYWEgeXN0w6R2aWVuIGthbnNzYSFcIlxuICAgIGF1dGhfY2FwdGlvbjogXCJUYWxsZW5uYSBlZGlzdHltaXNlc2kuXCJcblxuICBsZWFkZXJib2FyZDpcbiAgICB2aWV3X290aGVyX3NvbHV0aW9uczogXCJLYXRzbyBNdWl0YSBSYXRrYWlzdWphXCIgIyB7Y2hhbmdlfVxuICAgIHNjb3JlczogXCJQaXN0ZWV0XCJcbiAgICB0b3BfcGxheWVyczogXCJQYXJoYWF0IHBlbGFhamF0XCJcbiAgICBkYXk6IFwiVMOkbsOkw6RuXCJcbiAgICB3ZWVrOiBcIlTDpGxsw6QgVmlpa29sbGFcIlxuICAgIGFsbDogXCJLb3NrYWFuXCJcbiAgICBsYXRlc3Q6IFwiVmlpbWVpc2luXCJcbiAgICB0aW1lOiBcIkFpa2FcIlxuICAgIGRhbWFnZV90YWtlbjogXCJWYW5oaW5rb2Egc2FhdHVcIlxuICAgIGRhbWFnZV9kZWFsdDogXCJWYWhpbmtvYSBhbm5ldHR1XCJcbiAgICBkaWZmaWN1bHR5OiBcIlZhaWtldXN0YXNvXCJcbiAgICBnb2xkX2NvbGxlY3RlZDogXCJLdWx0YWEga2Vyw6R0dHlcIlxuIyAgICBzdXJ2aXZhbF90aW1lOiBcIlN1cnZpdmVkXCJcbiMgICAgZGVmZWF0ZWQ6IFwiRW5lbWllcyBEZWZlYXRlZFwiXG4jICAgIGNvZGVfbGVuZ3RoOiBcIkxpbmVzIG9mIENvZGVcIlxuIyAgICBzY29yZV9kaXNwbGF5OiBcIl9fc2NvcmVUeXBlX186IF9fc2NvcmVfX1wiXG5cbiAgaW52ZW50b3J5OlxuICAgIGVxdWlwcGVkX2l0ZW06IFwiS8OkeXTDtnNzw6RcIlxuICAgIHJlcXVpcmVkX3B1cmNoYXNlX3RpdGxlOiBcIlZhYWRpdHR1XCJcbiAgICBhdmFpbGFibGVfaXRlbTogXCJTYWF0YXZpbGxhXCJcbiAgICByZXN0cmljdGVkX3RpdGxlOiBcIlJham9pdGV0dHVcIlxuICAgIHNob3VsZF9lcXVpcDogXCIob3RhIGvDpHl0dMO2w7ZuIHR1cGxha2xpa2thYW1hbGxhKVwiXG4gICAgZXF1aXBwZWQ6IFwiKGvDpHl0w7Zzc8OkKVwiXG4gICAgbG9ja2VkOiBcIihsdWtpdHR1KVwiXG4gICAgcmVzdHJpY3RlZDogXCIoZWkgc2FhdGF2aWxsYSB0w6Rzc8OkIGtlbnTDpHNzw6QpXCJcbiAgICBlcXVpcDogXCJPdGEga8OkeXR0w7bDtm5cIlxuICAgIHVuZXF1aXA6IFwiT3RhIHBvaXMga8OkeXTDtnN0w6RcIlxuIyAgICB3YXJyaW9yX29ubHk6IFwiV2FycmlvciBPbmx5XCJcbiMgICAgcmFuZ2VyX29ubHk6IFwiUmFuZ2VyIE9ubHlcIlxuIyAgICB3aXphcmRfb25seTogXCJXaXphcmQgT25seVwiXG5cbiAgYnV5X2dlbXM6XG4gICAgZmV3X2dlbXM6IFwiTXV1dGFtYSBqYWxva2l2aVwiXG4gICAgcGlsZV9nZW1zOiBcIkthc2EgamFsb2tpdmnDpFwiXG4gICAgY2hlc3RfZ2VtczogXCJBcmt1bGxpbmVuIGphbG9raXZpw6RcIlxuICAgIHB1cmNoYXNpbmc6IFwiT3N0ZXRhYW4uLi5cIlxuICAgIGRlY2xpbmVkOiBcIktvcnR0aWFzaSBlaSBoeXbDpGtzeXR0eVwiXG4gICAgcmV0cnlpbmc6IFwiUGFsdmVsaW52aXJoZSwgeXJpdGV0w6TDpG4gdXVkZWxsZWVuLlwiXG4gICAgcHJvbXB0X3RpdGxlOiBcIkVpIHJpaXR0w6R2w6RzdGkgamFsb2tpdmnDpFwiXG4gICAgcHJvbXB0X2JvZHk6IFwiSGFsdWF0a28gb3N0YWEgbGlzw6TDpD9cIlxuICAgIHByb21wdF9idXR0b246IFwiU2lpcnJ5IGthdXBwYWFuXCJcbiAgICByZWNvdmVyZWQ6IFwiQWllbXBpIGphbG9raXZpb3N0b3MgcGFsYXV0ZXR0dS4gT2xlIGh5dsOkIGphIHDDpGl2aXTDpCBzaXZ1LlwiXG4gICAgcHJpY2U6IFwieHt7Z2Vtc319IC8ga2tcIlxuICAgIGJ1eV9wcmVtaXVtOiBcIk9zdGEgUHJlbWl1bVwiXG4gICAgcHVyY2hhc2U6IFwiT3N0YVwiXG4gICAgcHVyY2hhc2VkOiBcIk9zdGV0dHVcIlxuXG4gIGVhcm5fZ2VtczpcbiAgICBwcm9tcHRfdGl0bGU6IFwiRWkgdGFycGVla3NpIGphbG9raXZpw6RcIlxuICAgIHByb21wdF9ib2R5OiBcIkphdGthIHBlbGFhbWlzdGEgYW5zYWl0YWtzZXNpIGxpc8Okw6QhXCJcblxuICBzdWJzY3JpYmU6XG4jICAgIGJlc3RfZGVhbDogXCJCZXN0IERlYWwhXCJcbiMgICAgY29uZmlybWF0aW9uOiBcIkNvbmdyYXR1bGF0aW9ucyEgWW91IG5vdyBoYXZlIGEgQ29kZUNvbWJhdCBQcmVtaXVtIFN1YnNjcmlwdGlvbiFcIlxuIyAgICBwcmVtaXVtX2FscmVhZHlfc3Vic2NyaWJlZDogXCJZb3UncmUgYWxyZWFkeSBzdWJzY3JpYmVkIHRvIFByZW1pdW0hXCJcbiMgICAgc3Vic2NyaWJlX21vZGFsX3RpdGxlOiBcIkNvZGVDb21iYXQgUHJlbWl1bVwiXG4gICAgY29tcGFyaXNvbl9ibHVyYjogXCJUZXJvaXRhIGt5a3lqw6RzaSBDb2RlQ29tYmF0IGt1dWthdXNpdGlsYXVrc2VsbGEhXCIgIyB7Y2hhbmdlfVxuICAgIG11c3RfYmVfbG9nZ2VkOiBcIktpcmphdWR1IGVuc2luIHNpc8Okw6RuLiBPbGUgaHl2w6QsIGx1byB0dW5udXMgdGFpIGtpcmphdWR1IHNpc8Okw6RuIHlsw6RwdW9sZWxsYSBvbGV2YXN0YSB2YWxpa29zdGEuXCJcbiAgICBzdWJzY3JpYmVfdGl0bGU6IFwiVGlsYWFcIiAjIEFjdHVhbGx5IHVzZWQgaW4gc3Vic2NyaWJlIGJ1dHRvbnMsIHRvb1xuICAgIHVuc3Vic2NyaWJlOiBcIlBvaXN0YSB0aWxhdXNcIlxuICAgIGNvbmZpcm1fdW5zdWJzY3JpYmU6IFwiVmFybWlzdGEgdGlsYXVrc2VuIHBvaXN0b1wiXG4gICAgbmV2ZXJfbWluZDogXCJFaSBzZSBtaXTDpMOkbiwgTWUgcGlkw6RtbWUgc2ludXN0YSBqb2thdGFwYXVrc2Vzc2FcIlxuICAgIHRoYW5rX3lvdV9tb250aHNfcHJlZml4OiBcIktpaXRvcywgZXR0w6Qgb2xldCB0dWtlbnV0IG1laXTDpCB2aWltZWlzZXRcIlxuICAgIHRoYW5rX3lvdV9tb250aHNfc3VmZml4OiBcImt1dWthdXR0YS5cIlxuICAgIHRoYW5rX3lvdTogXCJDb2RlQ29tYmF0IGtpaXR0w6TDpCB0dWVzdGFzaS5cIlxuICAgIHNvcnJ5X3RvX3NlZV95b3VfZ286IFwiSGFybWksIGV0dMOkIG9sZXQgcMOkw6R0dMOkbnl0IGzDpGh0ZcOkISBLZXJyb3RoYW4gbWVpbGxlLCBtaXTDpCB2b2ltbWUgdGVoZMOkIHBhcmVtbWluLlwiXG4gICAgdW5zdWJzY3JpYmVfZmVlZGJhY2tfcGxhY2Vob2xkZXI6IFwiTWl0w6Qgb2xpc2ltbWUgdm9pbmVldCB0ZWhkw6Q/XCJcbiAgICBzdHJpcGVfZGVzY3JpcHRpb246IFwiS3V1a2F1c2l0dGFpbmVuIHRpbGF1c1wiXG4gICAgYnV5X25vdzogXCJPc3RhIG55dFwiXG4gICAgc3Vic2NyaXB0aW9uX3JlcXVpcmVkX3RvX3BsYXk6IFwiVGFydml0c2V0IENvZGVDb21iYXQga3V1a2F1c2l0aWxhdWtzZW4gcGVsbGF0YWtzZXNpIHTDpHTDpCB0YXNvYS5cIlxuICAgIHVubG9ja19oZWxwX3ZpZGVvczogXCJIYW5raSB0aWxhdXMgYXZhdGFrc2VzaSBrYWlra2kgdmlkZW8tb3BwYWF0LlwiXG4gICAgcGVyc29uYWxfc3ViOiBcIkhlbmtpbMO2a29odGFpbmVuIHRpbGF1c1wiICMgQWNjb3VudHMgU3Vic2NyaXB0aW9uIFZpZXcgYmVsb3dcbiAgICBsb2FkaW5nX2luZm86IFwiTGFkYXRhYW4gdGlsYXVrc2VuIHRpZXRvamEuLi5cIlxuICAgIG1hbmFnZWRfYnk6IFwiSGFsbGlubm9pamFcIlxuICAgIHdpbGxfYmVfY2FuY2VsbGVkOiBcIlBlcnV1dHVzIGFzdHV1IHZvaW1hYW5cIlxuICAgIGN1cnJlbnRseV9mcmVlOiBcIlNpbnVsbGEgb24gdMOkbGzDpGhldGtlbGzDpCBpbG1haW5lbiB0aWxhdXNcIlxuICAgIGN1cnJlbnRseV9mcmVlX3VudGlsOiBcIlRpbGF1a3Nlc2kgb24gdm9pbWFzc2FcIlxuICAgIGZyZWVfc3Vic2NyaXB0aW9uOiBcIklsbWFpbmVuIHRpbGF1c1wiXG4gICAgd2FzX2ZyZWVfdW50aWw6IFwiSWxtYWluZW4gdGlsYXVrc2VzaSBww6TDpHR0eWlcIlxuICAgIG1hbmFnZWRfc3ViczogXCJIYWxsaW5ub2lkdXQgdGlsYXVrc2V0XCJcbiAgICBzdWJzY3JpYmluZzogXCJUaWxhdXN0YSBrw6RzaXRlbGzDpMOkbi4uLlwiXG4gICAgY3VycmVudF9yZWNpcGllbnRzOiBcIlTDpG3DpG5oZXRraXNldCB2YXN0YWFub3R0YWphdFwiXG4gICAgdW5zdWJzY3JpYmluZzogXCJUaWxhdXMgcMOkw6R0ZXTDpMOkbi4uLlwiICMge2NoYW5nZX1cbiAgICBzdWJzY3JpYmVfcHJlcGFpZDogXCJUaWxhYSBrw6R5dHTDpG3DpGxsw6QgZW5uYWtrb21ha3NldHR1YSBrb29kaW51bWVyb2FcIlxuICAgIHVzaW5nX3ByZXBhaWQ6IFwiS8OkeXRldMOkw6RuIGVubmFra29tYWtzZXR0dSBrb29kaW51bWVybyBrdXVrYXVzaXRpbGF1a3NlZW5cIlxuIyAgICBmZWF0dXJlX2xldmVsX2FjY2VzczogXCJBY2Nlc3MgMzAwKyBsZXZlbHMgYXZhaWxhYmxlXCJcbiMgICAgZmVhdHVyZV9oZXJvZXM6IFwiVW5sb2NrIGV4Y2x1c2l2ZSBoZXJvZXMgYW5kIHBldHNcIlxuIyAgICBmZWF0dXJlX2xlYXJuOiBcIkxlYXJuIHRvIG1ha2UgZ2FtZXMgYW5kIHdlYnNpdGVzXCJcbiMgICAgbW9udGhfcHJpY2U6IFwiJF9fcHJpY2VfX1wiXG4jICAgIGZpcnN0X21vbnRoX3ByaWNlOiBcIk9ubHkgJF9fcHJpY2VfXyBmb3IgeW91ciBmaXJzdCBtb250aCFcIlxuIyAgICBsaWZldGltZTogXCJMaWZldGltZSBBY2Nlc3NcIlxuIyAgICBsaWZldGltZV9wcmljZTogXCIkX19wcmljZV9fXCJcbiMgICAgeWVhcl9zdWJzY3JpcHRpb246IFwiWWVhcmx5IFN1YnNjcmlwdGlvblwiXG4jICAgIHllYXJfcHJpY2U6IFwiJF9fcHJpY2VfXy95ZWFyXCJcbiMgICAgc3VwcG9ydF9wYXJ0MTogXCJOZWVkIGhlbHAgd2l0aCBwYXltZW50IG9yIHByZWZlciBQYXlQYWw/IEVtYWlsXCJcbiMgICAgc3VwcG9ydF9wYXJ0MjogXCJzdXBwb3J0QGNvZGVjb21iYXQuY29tXCJcblxuIyAgYW5ub3VuY2VtZW50OlxuIyAgICBub3dfYXZhaWxhYmxlOiBcIk5vdyBhdmFpbGFibGUgZm9yIHN1YnNjcmliZXJzIVwiXG4jICAgIHN1YnNjcmliZXI6IFwic3Vic2NyaWJlclwiXG4jICAgIGN1ZGRseV9jb21wYW5pb25zOiBcIkN1ZGRseSBDb21wYW5pb25zIVwiICMgUGV0IEFubm91bmNlbWVudCBNb2RhbFxuIyAgICBraW5kbGluZ19uYW1lOiBcIktpbmRsaW5nIEVsZW1lbnRhbFwiXG4jICAgIGtpbmRsaW5nX2Rlc2NyaXB0aW9uOiBcIktpbmRsaW5nIEVsZW1lbnRhbHMganVzdCB3YW50IHRvIGtlZXAgeW91IHdhcm0gYXQgbmlnaHQuIEFuZCBkdXJpbmcgdGhlIGRheS4gQWxsIHRoZSB0aW1lLCByZWFsbHkuXCJcbiMgICAgZ3JpZmZpbl9uYW1lOiBcIkJhYnkgR3JpZmZpblwiXG4jICAgIGdyaWZmaW5fZGVzY3JpcHRpb246IFwiR3JpZmZpbnMgYXJlIGhhbGYgZWFnbGUsIGhhbGYgbGlvbiwgYWxsIGFkb3JhYmxlLlwiXG4jICAgIHJhdmVuX25hbWU6IFwiUmF2ZW5cIlxuIyAgICByYXZlbl9kZXNjcmlwdGlvbjogXCJSYXZlbnMgYXJlIGV4Y2VsbGVudCBhdCBnYXRoZXJpbmcgc2hpbnkgYm90dGxlcyBmdWxsIG9mIGhlYWx0aCBmb3IgeW91LlwiXG4jICAgIG1pbWljX25hbWU6IFwiTWltaWNcIlxuIyAgICBtaW1pY19kZXNjcmlwdGlvbjogXCJNaW1pY3MgY2FuIHBpY2sgdXAgY29pbnMgZm9yIHlvdS4gTW92ZSB0aGVtIG9uIHRvcCBvZiBjb2lucyB0byBpbmNyZWFzZSB5b3VyIGdvbGQgc3VwcGx5LlwiXG4jICAgIGNvdWdhcl9uYW1lOiBcIkNvdWdhclwiXG4jICAgIGNvdWdhcl9kZXNjcmlwdGlvbjogXCJDb3VnYXJzIGxpa2UgdG8gZWFybiBhIFBoRCBieSBQdXJyaW5nIEhhcHBpbHkgRGFpbHkuXCJcbiMgICAgZm94X25hbWU6IFwiQmx1ZSBGb3hcIlxuIyAgICBmb3hfZGVzY3JpcHRpb246IFwiQmx1ZSBmb3hlcyBhcmUgdmVyeSBjbGV2ZXIgYW5kIGxvdmUgZGlnZ2luZyBpbiB0aGUgZGlydCBhbmQgc25vdyFcIlxuIyAgICBwdWdpY29ybl9uYW1lOiBcIlB1Z2ljb3JuXCJcbiMgICAgcHVnaWNvcm5fZGVzY3JpcHRpb246IFwiUHVnaWNvcm5zIGFyZSBzb21lIG9mIHRoZSByYXJlc3QgY3JlYXR1cmVzIGFuZCBjYW4gY2FzdCBzcGVsbHMhXCJcbiMgICAgd29sZl9uYW1lOiBcIldvbGYgUHVwXCJcbiMgICAgd29sZl9kZXNjcmlwdGlvbjogXCJXb2xmIHB1cHMgZXhjZWwgaW4gaHVudGluZywgZ2F0aGVyaW5nLCBhbmQgcGxheWluZyBhIG1lYW4gZ2FtZSBvZiBoaWRlLWFuZC1zZWVrIVwiXG4jICAgIGJhbGxfbmFtZTogXCJSZWQgU3F1ZWFreSBCYWxsXCJcbiMgICAgYmFsbF9kZXNjcmlwdGlvbjogXCJiYWxsLnNxdWVhaygpXCJcbiMgICAgY29sbGVjdF9wZXRzOiBcIkNvbGxlY3QgcGV0cyBmb3IgeW91ciBoZXJvZXMhXCJcbiMgICAgZWFjaF9wZXQ6IFwiRWFjaCBwZXQgaGFzIGEgdW5pcXVlIGhlbHBlciBhYmlsaXR5IVwiXG4jICAgIHVwZ3JhZGVfdG9fcHJlbWl1bTogXCJCZWNvbWUgYSB7e3N1YnNjcmliZXJ9fSB0byBlcXVpcCBwZXRzLlwiXG4jICAgIHBsYXlfc2Vjb25kX2tpdGhtYXplOiBcIlBsYXkge3t0aGVfc2Vjb25kX2tpdGhtYXplfX0gdG8gdW5sb2NrIHRoZSBXb2xmIFB1cCFcIlxuIyAgICB0aGVfc2Vjb25kX2tpdGhtYXplOiBcIlRoZSBTZWNvbmQgS2l0aG1hemVcIlxuIyAgICBrZWVwX3BsYXlpbmc6IFwiS2VlcCBwbGF5aW5nIHRvIGRpc2NvdmVyIHRoZSBmaXJzdCBwZXQhXCJcbiMgICAgY29taW5nX3Nvb246IFwiQ29taW5nIHNvb25cIlxuIyAgICByaXRpYzogXCJSaXRpYyB0aGUgQ29sZFwiICMgUml0aWMgQW5ub3VuY2VtZW50IE1vZGFsXG4jICAgIHJpdGljX2Rlc2NyaXB0aW9uOiBcIlJpdGljIHRoZSBDb2xkLiBUcmFwcGVkIGluIEtlbHZpbnRhcGggR2xhY2llciBmb3IgY291bnRsZXNzIGFnZXMsIGZpbmFsbHkgZnJlZSBhbmQgcmVhZHkgdG8gdGVuZCB0byB0aGUgb2dyZXMgdGhhdCBpbXByaXNvbmVkIGhpbS5cIlxuIyAgICBpY2VfYmxvY2s6IFwiQSBibG9jayBvZiBpY2VcIlxuIyAgICBpY2VfZGVzY3JpcHRpb246IFwiVGhlcmUgYXBwZWFycyB0byBiZSBzb21ldGhpbmcgdHJhcHBlZCBpbnNpZGUuLi5cIlxuIyAgICBibGlua19uYW1lOiBcIkJsaW5rXCJcbiMgICAgYmxpbmtfZGVzY3JpcHRpb246IFwiUml0aWMgZGlzYXBwZWFycyBhbmQgcmVhcHBlYXJzIGluIGEgYmxpbmsgb2YgYW4gZXllLCBsZWF2aW5nIG5vdGhpbmcgYnV0IGEgc2hhZG93LlwiXG4jICAgIHNoYWRvd1N0ZXBfbmFtZTogXCJTaGFkb3dzdGVwXCJcbiMgICAgc2hhZG93U3RlcF9kZXNjcmlwdGlvbjogXCJBIG1hc3RlciBhc3Nhc3NpbiBrbm93cyBob3cgdG8gd2FsayBiZXR3ZWVuIHRoZSBzaGFkb3dzLlwiXG4jICAgIHRvcm5hZG9fbmFtZTogXCJUb3JuYWRvXCJcbiMgICAgdG9ybmFkb19kZXNjcmlwdGlvbjogXCJJdCBpcyBnb29kIHRvIGhhdmUgYSByZXNldCBidXR0b24gd2hlbiBvbmUncyBjb3ZlciBpcyBibG93bi5cIlxuIyAgICB3YWxsT2ZEYXJrbmVzc19uYW1lOiBcIldhbGwgb2YgRGFya25lc3NcIlxuIyAgICB3YWxsT2ZEYXJrbmVzc19kZXNjcmlwdGlvbjogXCJIaWRlIGJlaGluZCBhIHdhbGwgb2Ygc2hhZG93cyB0byBwcmV2ZW50IHRoZSBnYXplIG9mIHByeWluZyBleWVzLlwiXG5cbiMgIHByZW1pdW1fZmVhdHVyZXM6XG4jICAgIGdldF9wcmVtaXVtOiBcIkdldDxicj5Db2RlQ29tYmF0PGJyPlByZW1pdW1cIiAjIEZpdCBpbnRvIHRoZSBiYW5uZXIgb24gdGhlIC9mZWF0dXJlcyBwYWdlXG4jICAgIG1hc3Rlcl9jb2RlcjogXCJCZWNvbWUgYSBNYXN0ZXIgQ29kZXIgYnkgc3Vic2NyaWJpbmcgdG9kYXkhXCJcbiMgICAgcGF5cGFsX3JlZGlyZWN0OiBcIllvdSB3aWxsIGJlIHJlZGlyZWN0ZWQgdG8gUGF5UGFsIHRvIGNvbXBsZXRlIHRoZSBzdWJzY3JpcHRpb24gcHJvY2Vzcy5cIlxuIyAgICBzdWJzY3JpYmVfbm93OiBcIlN1YnNjcmliZSBOb3dcIlxuIyAgICBoZXJvX2JsdXJiXzE6IFwiR2V0IGFjY2VzcyB0byBfX3ByZW1pdW1IZXJvZXNDb3VudF9fIHN1cGVyLWNoYXJnZWQgc3Vic2NyaWJlci1vbmx5IGhlcm9lcyEgSGFybmVzcyB0aGUgdW5zdG9wcGFibGUgcG93ZXIgb2YgT2thciBTdG9tcGZvb3QsIHRoZSBkZWFkbHkgcHJlY2lzaW9uIG9mIE5hcmlhIG9mIHRoZSBMZWFmLCBvciBzdW1tb24gXFxcImFkb3JhYmxlXFxcIiBza2VsZXRvbnMgd2l0aCBOYWxmYXIgQ3J5cHRvci5cIlxuIyAgICBoZXJvX2JsdXJiXzI6IFwiUHJlbWl1bSBXYXJyaW9ycyB1bmxvY2sgc3R1bm5pbmcgbWFydGlhbCBza2lsbHMgbGlrZSBXYXJjcnksIFN0b21wLCBhbmQgSHVybCBFbmVteS4gT3IsIHBsYXkgYXMgYSBSYW5nZXIsIHVzaW5nIHN0ZWFsdGggYW5kIGJvd3MsIHRocm93aW5nIGtuaXZlcywgdHJhcHMhIFRyeSB5b3VyIHNraWxsIGFzIGEgdHJ1ZSBjb2RpbmcgV2l6YXJkLCBhbmQgdW5sZWFzaCBhIHBvd2VyZnVsIGFycmF5IG9mIFByaW1vcmRpYWwsIE5lY3JvbWFudGljIG9yIEVsZW1lbnRhbCBtYWdpYyFcIlxuIyAgICBoZXJvX2NhcHRpb246IFwiRXhjaXRpbmcgbmV3IGhlcm9lcyFcIlxuIyAgICBwZXRfYmx1cmJfMTogXCJQZXRzIGFyZW4ndCBqdXN0IGFkb3JhYmxlIGNvbXBhbmlvbnMsIHRoZXkgYWxzbyBwcm92aWRlIHVuaXF1ZSBmdW5jdGlvbmFsaXR5IGFuZCBtZXRob2RzLiBUaGUgQmFieSBHcmlmZm9uIGNhbiBjYXJyeSB1bml0cyB0aHJvdWdoIHRoZSBhaXIsIHRoZSBXb2xmIFB1cCBwbGF5cyBjYXRjaCB3aXRoIGVuZW15IGFycm93cywgdGhlIENvdWdhciBpcyBmb25kIG9mIGNoYXNpbmcgb2dyZXMgYXJvdW5kLCBhbmQgdGhlIE1pbWljIGF0dHJhY3RzIGNvaW5zIGxpa2UgYSBtYWduZXQhXCJcbiMgICAgcGV0X2JsdXJiXzI6IFwiQ29sbGVjdCBhbGwgdGhlIHBldHMgdG8gZGlzY292ZXIgdGhlaXIgdW5pcXVlIGFiaWxpdGllcyFcIlxuIyAgICBwZXRfY2FwdGlvbjogXCJBZG9wdCBwZXRzIHRvIGFjY29tcGFueSB5b3VyIGhlcm8hXCJcbiMgICAgZ2FtZV9kZXZfYmx1cmI6IFwiTGVhcm4gZ2FtZSBzY3JpcHRpbmcgYW5kIGJ1aWxkIG5ldyBsZXZlbHMgdG8gc2hhcmUgd2l0aCB5b3VyIGZyaWVuZHMhIFBsYWNlIHRoZSBpdGVtcyB5b3Ugd2FudCwgd3JpdGUgY29kZSBmb3IgdW5pdCBsb2dpYyBhbmQgYmVoYXZpb3IsIGFuZCBzZWUgaWYgeW91ciBmcmllbmRzIGNhbiBiZWF0IHRoZSBsZXZlbCFcIlxuIyAgICBnYW1lX2Rldl9jYXB0aW9uOiBcIkRlc2lnbiB5b3VyIG93biBnYW1lcyB0byBjaGFsbGVuZ2UgeW91ciBmcmllbmRzIVwiXG4jICAgIGV2ZXJ5dGhpbmdfaW5fcHJlbWl1bTogXCJFdmVyeXRoaW5nIHlvdSBnZXQgaW4gQ29kZUNvbWJhdCBQcmVtaXVtOlwiXG4jICAgIGxpc3RfZ2VtczogXCJSZWNlaXZlIGJvbnVzIGdlbXMgdG8gYnV5IGdlYXIsIHBldHMsIGFuZCBoZXJvZXNcIlxuIyAgICBsaXN0X2xldmVsczogXCJHYWluIGFjY2VzcyB0byBfX3ByZW1pdW1MZXZlbHNDb3VudF9fIG1vcmUgbGV2ZWxzXCJcbiMgICAgbGlzdF9oZXJvZXM6IFwiVW5sb2NrIGV4Y2x1c2l2ZSBoZXJvZXMsIGluY2x1ZGUgUmFuZ2VyIGFuZCBXaXphcmQgY2xhc3Nlc1wiXG4jICAgIGxpc3RfZ2FtZV9kZXY6IFwiTWFrZSBhbmQgc2hhcmUgZ2FtZXMgd2l0aCBmcmllbmRzXCJcbiMgICAgbGlzdF93ZWJfZGV2OiBcIkJ1aWxkIHdlYnNpdGVzIGFuZCBpbnRlcmFjdGl2ZSBhcHBzXCJcbiMgICAgbGlzdF9pdGVtczogXCJFcXVpcCBQcmVtaXVtLW9ubHkgaXRlbXMgbGlrZSBwZXRzXCJcbiMgICAgbGlzdF9zdXBwb3J0OiBcIkdldCBQcmVtaXVtIHN1cHBvcnQgdG8gaGVscCB5b3UgZGVidWcgdHJpY2t5IGNvZGVcIlxuIyAgICBsaXN0X2NsYW5zOiBcIkNyZWF0ZSBwcml2YXRlIGNsYW5zIHRvIGludml0ZSB5b3VyIGZyaWVuZHMgYW5kIGNvbXBldGUgb24gYSBncm91cCBsZWFkZXJib2FyZFwiXG5cbiAgY2hvb3NlX2hlcm86XG4gICAgY2hvb3NlX2hlcm86IFwiVmFsaXRzZSBTYW5rYXJpc2lcIlxuICAgIHByb2dyYW1taW5nX2xhbmd1YWdlOiBcIk9oamVsbW9pbnRpa2llbGlcIlxuICAgIHByb2dyYW1taW5nX2xhbmd1YWdlX2Rlc2NyaXB0aW9uOiBcIk1pdMOkIG9oamVsbW9pbnRpa2llbHTDpCBoYWx1YXQga8OkeXR0w6TDpD9cIlxuICAgIGRlZmF1bHQ6IFwiT2xldHVzXCJcbiAgICBleHBlcmltZW50YWw6IFwiS2VoaXR0ZWlsbMOkXCJcbiAgICBweXRob25fYmx1cmI6IFwiWWtzaW5rZXJ0YWluZW4gbXV0dGEgdm9pbWFrYXMsIGxvaXN0YXZhIG5paW4gYWxvaXR0ZWxpam9pbGxlIGt1aW4gZXhwZXJ0ZWlsbGUuXCJcbiAgICBqYXZhc2NyaXB0X2JsdXJiOiBcIk5ldGluIGtpZWxpLiAoRWkgb2xlIHNhbWEga3VpbiBKYXZhLilcIlxuICAgIGNvZmZlZXNjcmlwdF9ibHVyYjogXCJLaXZlbXBpIEphdmFTY3JpcHQga2lyam9pdHVzbXVvdG8uXCJcbiAgICBsdWFfYmx1cmI6IFwiUGVsaWVuIHNrcmlwdGF1c2tpZWxpLlwiXG4gICAgamF2YV9ibHVyYjogXCIoVmFpbiBUaWxhYWppbGxlKSBBbmRyb2lkIGphIGVudGVycHJpc2UuXCJcbiAgICBzdGF0dXM6IFwiVGlsYVwiXG4gICAgd2VhcG9uczogXCJBc2VldFwiXG4gICAgd2VhcG9uc193YXJyaW9yOiBcIk1pZWthdCAtIEx5aHl0IGthbnRhbWEsIEVpIHRhaWt1dXR0YVwiXG4gICAgd2VhcG9uc19yYW5nZXI6IFwiSm91c2V0LCB0dWxpYXNlZXQgLSBQaXRrw6Qga2FudGFtYSwgRWkgdGFpa3V1dHRhXCJcbiAgICB3ZWFwb25zX3dpemFyZDogXCJTYXV2YXQgLSBQaXRrw6Qga2FudGFtYSwgSGFsbGl0c2VlIHRhaWt1dWRlblwiXG4gICAgYXR0YWNrOiBcIkh5w7Zra2F5c1wiICMgQ2FuIGFsc28gdHJhbnNsYXRlIGFzIFwiQXR0YWNrXCJcbiAgICBoZWFsdGg6IFwiVGVydmV5c1wiXG4gICAgc3BlZWQ6IFwiTm9wZXVzXCJcbiAgICByZWdlbmVyYXRpb246IFwiUGFsYXV0dW1pc25vcGV1c1wiXG4gICAgcmFuZ2U6IFwiRXTDpGlzeXlzXCIgIyBBcyBpbiBcImF0dGFjayBvciB2aXN1YWwgcmFuZ2VcIlxuICAgIGJsb2NrczogXCJFc3RvXCIgIyBBcyBpbiBcInRoaXMgc2hpZWxkIGJsb2NrcyB0aGlzIG11Y2ggZGFtYWdlXCJcbiAgICBiYWNrc3RhYjogXCJTZWxrw6TDpG5wdXVrb3R1c1wiICMgQXMgaW4gXCJ0aGlzIGRhZ2dlciBkb2VzIHRoaXMgbXVjaCBiYWNrc3RhYiBkYW1hZ2VcIlxuICAgIHNraWxsczogXCJUYWlkb3RcIlxuICAgIGF0dGFja18xOiBcIlRla2VlXCJcbiAgICBhdHRhY2tfMjogXCJ2YWhpbmtvYVwiXG4gICAgYXR0YWNrXzM6IFwia8OkeXR0w6Rtw6RuIGFzZWVuIHZhaGluZ29zdGEuXCJcbiAgICBoZWFsdGhfMTogXCJBbnRhYVwiXG4gICAgaGVhbHRoXzI6IFwidGVydmV5dHTDpFwiXG4gICAgaGVhbHRoXzM6IFwia8OkeXR0w6RtaWVuIHN1b2ppZW4gdGVydmV5ZGVzdMOkLlwiXG4gICAgc3BlZWRfMTogXCJMaWlra3V1XCJcbiAgICBzcGVlZF8yOiBcIm1ldHJpw6Qgc2VrdW5uaXNzYS5cIlxuICAgIGF2YWlsYWJsZV9mb3JfcHVyY2hhc2U6IFwiSGFua2l0dGF2aXNzYVwiICMgU2hvd3MgdXAgd2hlbiB5b3UgaGF2ZSB1bmxvY2tlZCwgYnV0IG5vdCBwdXJjaGFzZWQsIGEgaGVybyBpbiB0aGUgaGVybyBzdG9yZVxuICAgIGxldmVsX3RvX3VubG9jazogXCJUYXNvLCBqb2thIGF2YWE6XCIgIyBMYWJlbCBmb3Igd2hpY2ggbGV2ZWwgeW91IGhhdmUgdG8gYmVhdCB0byB1bmxvY2sgYSBwYXJ0aWN1bGFyIGhlcm8gKGNsaWNrIGEgbG9ja2VkIGhlcm8gaW4gdGhlIHN0b3JlIHRvIHNlZSlcbiAgICByZXN0cmljdGVkX3RvX2NlcnRhaW5faGVyb2VzOiBcIlZvaXQgcGVsYXRhIHRhc29uIHZhaW4gdGlldHlpbGzDpCBzYW5rYXJlaWxsYS5cIlxuXG4gIHNraWxsX2RvY3M6XG4gICAgZnVuY3Rpb246IFwiZnVua3Rpb1wiICMgc2tpbGwgdHlwZXNcbiAgICBtZXRob2Q6IFwibWV0b2RpXCJcbiAgICBzbmlwcGV0OiBcInDDpHRrw6RcIlxuICAgIG51bWJlcjogXCJudW1lcm9cIlxuICAgIGFycmF5OiBcInRhdWx1a2tvXCJcbiAgICBvYmplY3Q6IFwib2xpb1wiXG4gICAgc3RyaW5nOiBcIm1lcmtraWpvbm9cIlxuICAgIHdyaXRhYmxlOiBcImtpcmpvaXRldHRhdmFcIiAjIEhvdmVyIG92ZXIgXCJhdHRhY2tcIiBpbiBZb3VyIFNraWxscyB3aGlsZSBwbGF5aW5nIGEgbGV2ZWwgdG8gc2VlIG1vc3Qgb2YgdGhpc1xuICAgIHJlYWRfb25seTogXCJ2YWluIGx1ZXR0YXZha3NpXCJcbiAgICBhY3Rpb246IFwiVG9pbWludG9cIlxuICAgIHNwZWxsOiBcIlRhaWthXCJcbiAgICBhY3Rpb25fbmFtZTogXCJuaW1pXCJcbiAgICBhY3Rpb25fY29vbGRvd246IFwiS2VzdG9cIlxuICAgIGFjdGlvbl9zcGVjaWZpY19jb29sZG93bjogXCJMYXRhdXNhaWthXCJcbiAgICBhY3Rpb25fZGFtYWdlOiBcIlZhaGlua29cIlxuICAgIGFjdGlvbl9yYW5nZTogXCJFdMOkaXN5eXNcIlxuICAgIGFjdGlvbl9yYWRpdXM6IFwiU8OkZGVcIlxuICAgIGFjdGlvbl9kdXJhdGlvbjogXCJLZXN0b1wiXG4gICAgZXhhbXBsZTogXCJFc2ltZXJra2lcIlxuICAgIGV4OiBcImVzaW0uXCIgIyBBYmJyZXZpYXRpb24gb2YgXCJleGFtcGxlXCJcbiAgICBjdXJyZW50X3ZhbHVlOiBcIk55a3lpbmVuIEFydm9cIlxuICAgIGRlZmF1bHRfdmFsdWU6IFwiT2xldHVzYXJ2b1wiXG4gICAgcGFyYW1ldGVyczogXCJQYXJhbWV0cml0XCJcbiAgICByZXF1aXJlZF9wYXJhbWV0ZXJzOiBcIlZhYWRpdHV0IHBhcmFtZXRyaXRcIlxuICAgIG9wdGlvbmFsX3BhcmFtZXRlcnM6IFwiVmFwYWFlaHRvaXNldCBwYXJhbWV0cml0XCJcbiAgICByZXR1cm5zOiBcIlBhbGF1dHRhYVwiXG4gICAgZ3JhbnRlZF9ieTogXCJNYWhkb2xsaXN0YWFcIlxuXG4gIHNhdmVfbG9hZDpcbiAgICBncmFudWxhcml0eV9zYXZlZF9nYW1lczogXCJUYWxsZW5uZXR0dVwiXG4gICAgZ3JhbnVsYXJpdHlfY2hhbmdlX2hpc3Rvcnk6IFwiSGlzdG9yaWFcIlxuXG4gIG9wdGlvbnM6XG4gICAgZ2VuZXJhbF9vcHRpb25zOiBcIllsZWlzZXQgQXNldHVrc2V0XCIgIyBDaGVjayBvdXQgdGhlIE9wdGlvbnMgdGFiIGluIHRoZSBHYW1lIE1lbnUgd2hpbGUgcGxheWluZyBhIGxldmVsXG4gICAgdm9sdW1lX2xhYmVsOiBcIsOEw6RuZW52b2ltYWtrdXVzXCJcbiAgICBtdXNpY19sYWJlbDogXCJNdXNpaWtraVwiXG4gICAgbXVzaWNfZGVzY3JpcHRpb246IFwiQXNldGEgdGF1c3RhbXVzaWlra2kgcMOkw6RsbGUvcG9pcyBww6TDpGx0w6QuXCJcbiAgICBlZGl0b3JfY29uZmlnX3RpdGxlOiBcIkVkaXRvcmluIGFzZXR1a3NldFwiXG4gICAgZWRpdG9yX2NvbmZpZ19saXZlY29tcGxldGlvbl9sYWJlbDogXCJBdXRvbWFhdHRpbmVuIGtvb2RpbiB0w6R5ZGVubnlzXCJcbiAgICBlZGl0b3JfY29uZmlnX2xpdmVjb21wbGV0aW9uX2Rlc2NyaXB0aW9uOiBcIk7DpHl0dMOkw6QgZWhkb3R1a3NlbiBrb29kaW4ga2lyam9pdHRhbWlzZW4geWh0ZXlkZXNzw6QuXCJcbiAgICBlZGl0b3JfY29uZmlnX2ludmlzaWJsZXNfbGFiZWw6IFwiTsOkeXTDpCBOw6RreW3DpHR0w7Ztw6R0IE1lcmtpdFwiXG4gICAgZWRpdG9yX2NvbmZpZ19pbnZpc2libGVzX2Rlc2NyaXB0aW9uOiBcIk7DpHl0dMOkw6QgbXnDtnMgbsOka3ltw6R0dMO2bcOkdCBtZXJraXQga3V0ZW4gdsOkbGlsecO2bm5pdCBqYSBzYXJrYWltZXQuXCJcbiAgICBlZGl0b3JfY29uZmlnX2luZGVudGd1aWRlc19sYWJlbDogXCJOw6R5dMOkIFNpc2VubnlzYXB1XCJcbiAgICBlZGl0b3JfY29uZmlnX2luZGVudGd1aWRlc19kZXNjcmlwdGlvbjogXCJOw6R5dHTDpMOkIHB5c3R5dmlpdmFuIGpva2Fpc2VuIHNpc2Vubnlrc2VuIGtvaGRhbGxhLlwiXG4gICAgZWRpdG9yX2NvbmZpZ19iZWhhdmlvcnNfbGFiZWw6IFwiw4RseWvDpMOkdCBUb2ltaW5ub3RcIlxuICAgIGVkaXRvcl9jb25maWdfYmVoYXZpb3JzX2Rlc2NyaXB0aW9uOiBcIlTDpHlkZW50w6TDpCBhdXRvbWFhdHRpc2VzdGkgc3VsdXQgamEgbGFpbmF1c21lcmtpdC5cIlxuXG4jICBhYm91dDpcbiMgICAgbGVhcm5fbW9yZTogXCJMZWFybiBNb3JlXCJcbiMgICAgbWFpbl90aXRsZTogXCJJZiB5b3Ugd2FudCB0byBsZWFybiB0byBwcm9ncmFtLCB5b3UgbmVlZCB0byB3cml0ZSAoYSBsb3Qgb2YpIGNvZGUuXCJcbiMgICAgbWFpbl9kZXNjcmlwdGlvbjogXCJBdCBDb2RlQ29tYmF0LCBvdXIgam9iIGlzIHRvIG1ha2Ugc3VyZSB5b3UncmUgZG9pbmcgdGhhdCB3aXRoIGEgc21pbGUgb24geW91ciBmYWNlLlwiXG4jICAgIG1pc3Npb25fbGluazogXCJNaXNzaW9uXCJcbiMgICAgdGVhbV9saW5rOiBcIlRlYW1cIlxuIyAgICBzdG9yeV9saW5rOiBcIlN0b3J5XCJcbiMgICAgcHJlc3NfbGluazogXCJQcmVzc1wiXG4jICAgIG1pc3Npb25fdGl0bGU6IFwiT3VyIG1pc3Npb246IG1ha2UgcHJvZ3JhbW1pbmcgYWNjZXNzaWJsZSB0byBldmVyeSBzdHVkZW50IG9uIEVhcnRoLlwiXG4jICAgIG1pc3Npb25fZGVzY3JpcHRpb25fMTogXCI8c3Ryb25nPlByb2dyYW1taW5nIGlzIG1hZ2ljPC9zdHJvbmc+LiBJdCdzIHRoZSBhYmlsaXR5IHRvIGNyZWF0ZSB0aGluZ3MgZnJvbSBwdXJlIGltYWdpbmF0aW9uLiBXZSBzdGFydGVkIENvZGVDb21iYXQgdG8gZ2l2ZSBsZWFybmVycyB0aGUgZmVlbGluZyBvZiB3aXphcmRseSBwb3dlciBhdCB0aGVpciBmaW5nZXJ0aXBzIGJ5IHVzaW5nIDxzdHJvbmc+dHlwZWQgY29kZTwvc3Ryb25nPi5cIlxuIyAgICBtaXNzaW9uX2Rlc2NyaXB0aW9uXzI6IFwiQXMgaXQgdHVybnMgb3V0LCB0aGF0IGVuYWJsZXMgdGhlbSB0byBsZWFybiBmYXN0ZXIgdG9vLiBXQVkgZmFzdGVyLiBJdCdzIGxpa2UgaGF2aW5nIGEgY29udmVyc2F0aW9uIGluc3RlYWQgb2YgcmVhZGluZyBhIG1hbnVhbC4gV2Ugd2FudCB0byBicmluZyB0aGF0IGNvbnZlcnNhdGlvbiB0byBldmVyeSBzY2hvb2wgYW5kIHRvIDxzdHJvbmc+ZXZlcnkgc3R1ZGVudDwvc3Ryb25nPiwgYmVjYXVzZSBldmVyeW9uZSBzaG91bGQgaGF2ZSB0aGUgY2hhbmNlIHRvIGxlYXJuIHRoZSBtYWdpYyBvZiBwcm9ncmFtbWluZy5cIlxuIyAgICB0ZWFtX3RpdGxlOiBcIk1lZXQgdGhlIENvZGVDb21iYXQgdGVhbVwiXG4jICAgIHRlYW1fdmFsdWVzOiBcIldlIHZhbHVlIG9wZW4gYW5kIHJlc3BlY3RmdWwgZGlhbG9nLCB3aGVyZSB0aGUgYmVzdCBpZGVhIHdpbnMuIE91ciBkZWNpc2lvbnMgYXJlIGdyb3VuZGVkIGluIGN1c3RvbWVyIHJlc2VhcmNoIGFuZCBvdXIgcHJvY2VzcyBpcyBmb2N1c2VkIG9uIGRlbGl2ZXJpbmcgdGFuZ2libGUgcmVzdWx0cyBmb3IgdGhlbS4gRXZlcnlvbmUgaXMgaGFuZHMtb24sIGZyb20gb3VyIENFTyB0byBvdXIgR2l0SHViIGNvbnRyaWJ1dG9ycywgYmVjYXVzZSB3ZSB2YWx1ZSBncm93dGggYW5kIGxlYXJuaW5nIGluIG91ciB0ZWFtLlwiXG4jICAgIG5pY2tfdGl0bGU6IFwiQ29mb3VuZGVyLCBDRU9cIlxuIyAgICBtYXR0X3RpdGxlOiBcIkNvZm91bmRlciwgQ1RPXCJcbiMgICAgY2F0X3RpdGxlOiBcIkdhbWUgRGVzaWduZXJcIlxuIyAgICBzY290dF90aXRsZTogXCJDb2ZvdW5kZXIsIFNvZnR3YXJlIEVuZ2luZWVyXCJcbiMgICAgbWFrYV90aXRsZTogXCJDdXN0b21lciBBZHZvY2F0ZVwiXG4jICAgIHJvYmluX3RpdGxlOiBcIlByb2R1Y3QgTWFuYWdlclwiXG4jICAgIG5vbGFuX3RpdGxlOiBcIlNhbGVzIE1hbmFnZXJcIlxuIyAgICBsaXNhX3RpdGxlOiBcIkJ1c2luZXNzIERldmVsb3BtZW50IE1hbmFnZXJcIlxuIyAgICBzZWFuX3RpdGxlOiBcIlRlcnJpdG9yeSBNYW5hZ2VyXCJcbiMgICAgbGl6X3RpdGxlOiBcIlRlcnJpdG9yeSBNYW5hZ2VyXCJcbiMgICAgamFuZV90aXRsZTogXCJDdXN0b21lciBTdWNjZXNzIE1hbmFnZXJcIlxuIyAgICBkYXZpZF90aXRsZTogXCJNYXJrZXRpbmcgTGVhZFwiXG4jICAgIHJldHJvc3R5bGVfdGl0bGU6IFwiSWxsdXN0cmF0aW9uXCJcbiMgICAgcmV0cm9zdHlsZV9ibHVyYjogXCJSZXRyb1N0eWxlIEdhbWVzXCJcbiMgICAgYnJ5dWtoX3RpdGxlOiBcIkdhbWUgRGVzaWduZXJcIlxuIyAgICBicnl1a2hfYmx1cmI6IFwiQ29uc3RydWN0cyBwdXp6bGVzXCJcbiMgICAgY29tbXVuaXR5X3RpdGxlOiBcIi4uLmFuZCBvdXIgb3Blbi1zb3VyY2UgY29tbXVuaXR5XCJcbiMgICAgY29tbXVuaXR5X3N1YnRpdGxlOiBcIk92ZXIgNTAwIGNvbnRyaWJ1dG9ycyBoYXZlIGhlbHBlZCBidWlsZCBDb2RlQ29tYmF0LCB3aXRoIG1vcmUgam9pbmluZyBldmVyeSB3ZWVrIVwiXG4jICAgIGNvbW11bml0eV9kZXNjcmlwdGlvbl8zOiBcIkNvZGVDb21iYXQgaXMgYVwiXG4jICAgIGNvbW11bml0eV9kZXNjcmlwdGlvbl9saW5rXzI6IFwiY29tbXVuaXR5IHByb2plY3RcIlxuIyAgICBjb21tdW5pdHlfZGVzY3JpcHRpb25fMTogXCJ3aXRoIGh1bmRyZWRzIG9mIHBsYXllcnMgdm9sdW50ZWVyaW5nIHRvIGNyZWF0ZSBsZXZlbHMsIGNvbnRyaWJ1dGUgdG8gb3VyIGNvZGUgdG8gYWRkIGZlYXR1cmVzLCBmaXggYnVncywgcGxheXRlc3QsIGFuZCBldmVuIHRyYW5zbGF0ZSB0aGUgZ2FtZSBpbnRvIDUwIGxhbmd1YWdlcyBzbyBmYXIuIEVtcGxveWVlcywgY29udHJpYnV0b3JzIGFuZCB0aGUgc2l0ZSBnYWluIGJ5IHNoYXJpbmcgaWRlYXMgYW5kIHBvb2xpbmcgZWZmb3J0LCBhcyBkb2VzIHRoZSBvcGVuIHNvdXJjZSBjb21tdW5pdHkgaW4gZ2VuZXJhbC4gVGhlIHNpdGUgaXMgYnVpbHQgb24gbnVtZXJvdXMgb3BlbiBzb3VyY2UgcHJvamVjdHMsIGFuZCB3ZSBhcmUgb3BlbiBzb3VyY2VkIHRvIGdpdmUgYmFjayB0byB0aGUgY29tbXVuaXR5IGFuZCBwcm92aWRlIGNvZGUtY3VyaW91cyBwbGF5ZXJzIGEgZmFtaWxpYXIgcHJvamVjdCB0byBleHBsb3JlIGFuZCBleHBlcmltZW50IHdpdGguIEFueW9uZSBjYW4gam9pbiB0aGUgQ29kZUNvbWJhdCBjb21tdW5pdHkhIENoZWNrIG91dCBvdXJcIlxuIyAgICBjb21tdW5pdHlfZGVzY3JpcHRpb25fbGluazogXCJjb250cmlidXRlIHBhZ2VcIlxuIyAgICBjb21tdW5pdHlfZGVzY3JpcHRpb25fMjogXCJmb3IgbW9yZSBpbmZvLlwiXG4jICAgIG51bWJlcl9jb250cmlidXRvcnM6IFwiT3ZlciA0NTAgY29udHJpYnV0b3JzIGhhdmUgbGVudCB0aGVpciBzdXBwb3J0IGFuZCB0aW1lIHRvIHRoaXMgcHJvamVjdC5cIlxuIyAgICBzdG9yeV90aXRsZTogXCJPdXIgc3Rvcnkgc28gZmFyXCJcbiMgICAgc3Rvcnlfc3VidGl0bGU6IFwiU2luY2UgMjAxMywgQ29kZUNvbWJhdCBoYXMgZ3Jvd24gZnJvbSBhIG1lcmUgc2V0IG9mIHNrZXRjaGVzIHRvIGEgbGl2aW5nLCB0aHJpdmluZyBnYW1lLlwiXG4jICAgIHN0b3J5X3N0YXRpc3RpY18xYTogXCI1LDAwMCwwMDArXCJcbiMgICAgc3Rvcnlfc3RhdGlzdGljXzFiOiBcInRvdGFsIHBsYXllcnNcIlxuIyAgICBzdG9yeV9zdGF0aXN0aWNfMWM6IFwiaGF2ZSBzdGFydGVkIHRoZWlyIHByb2dyYW1taW5nIGpvdXJuZXkgdGhyb3VnaCBDb2RlQ29tYmF0XCJcbiMgICAgc3Rvcnlfc3RhdGlzdGljXzJhOiBcIldl4oCZdmUgYmVlbiB0cmFuc2xhdGVkIGludG8gb3ZlciA1MCBsYW5ndWFnZXMg4oCUIG91ciBwbGF5ZXJzIGhhaWwgZnJvbVwiXG4jICAgIHN0b3J5X3N0YXRpc3RpY18yYjogXCIyMDArIGNvdW50cmllc1wiXG4jICAgIHN0b3J5X3N0YXRpc3RpY18zYTogXCJUb2dldGhlciwgdGhleSBoYXZlIHdyaXR0ZW5cIlxuIyAgICBzdG9yeV9zdGF0aXN0aWNfM2I6IFwiMSBiaWxsaW9uIGxpbmVzIG9mIGNvZGUgYW5kIGNvdW50aW5nXCJcbiMgICAgc3Rvcnlfc3RhdGlzdGljXzNjOiBcImFjcm9zcyBtYW55IGRpZmZlcmVudCBwcm9ncmFtbWluZyBsYW5ndWFnZXNcIlxuIyAgICBzdG9yeV9sb25nX3dheV8xOiBcIlRob3VnaCB3ZSd2ZSBjb21lIGEgbG9uZyB3YXkuLi5cIlxuIyAgICBzdG9yeV9za2V0Y2hfY2FwdGlvbjogXCJOaWNrJ3MgdmVyeSBmaXJzdCBza2V0Y2ggZGVwaWN0aW5nIGEgcHJvZ3JhbW1pbmcgZ2FtZSBpbiBhY3Rpb24uXCJcbiMgICAgc3RvcnlfbG9uZ193YXlfMjogXCJ3ZSBzdGlsbCBoYXZlIG11Y2ggdG8gZG8gYmVmb3JlIHdlIGNvbXBsZXRlIG91ciBxdWVzdCwgc28uLi5cIlxuIyAgICBqb2JzX3RpdGxlOiBcIkNvbWUgd29yayB3aXRoIHVzIGFuZCBoZWxwIHdyaXRlIENvZGVDb21iYXQgaGlzdG9yeSFcIlxuIyAgICBqb2JzX3N1YnRpdGxlOiBcIkRvbid0IHNlZSBhIGdvb2QgZml0IGJ1dCBpbnRlcmVzdGVkIGluIGtlZXBpbmcgaW4gdG91Y2g/IFNlZSBvdXIgXFxcIkNyZWF0ZSBZb3VyIE93blxcXCIgbGlzdGluZy5cIlxuIyAgICBqb2JzX2JlbmVmaXRzOiBcIkVtcGxveWVlIEJlbmVmaXRzXCJcbiMgICAgam9ic19iZW5lZml0XzQ6IFwiVW5saW1pdGVkIHZhY2F0aW9uXCJcbiMgICAgam9ic19iZW5lZml0XzU6IFwiUHJvZmVzc2lvbmFsIGRldmVsb3BtZW50IGFuZCBjb250aW51aW5nIGVkdWNhdGlvbiBzdXBwb3J0IOKAkyBmcmVlIGJvb2tzIGFuZCBnYW1lcyFcIlxuIyAgICBqb2JzX2JlbmVmaXRfNjogXCJNZWRpY2FsIChnb2xkKSwgZGVudGFsLCB2aXNpb24sIGNvbW11dGVyXCJcbiMgICAgam9ic19iZW5lZml0Xzc6IFwiU2l0LXN0YW5kIGRlc2tzIGZvciBhbGxcIlxuIyAgICBqb2JzX2JlbmVmaXRfOTogXCIxMC15ZWFyIG9wdGlvbiBleGVyY2lzZSB3aW5kb3dcIlxuIyAgICBqb2JzX2JlbmVmaXRfMTA6IFwiTWF0ZXJuaXR5IGxlYXZlOiAxMCB3ZWVrcyBwYWlkLCBuZXh0IDYgQCA1NSUgc2FsYXJ5XCJcbiMgICAgam9ic19iZW5lZml0XzExOiBcIlBhdGVybml0eSBsZWF2ZTogMTAgd2Vla3MgcGFpZFwiXG4jICAgIGpvYnNfY3VzdG9tX3RpdGxlOiBcIkNyZWF0ZSBZb3VyIE93blwiXG4jICAgIGpvYnNfY3VzdG9tX2Rlc2NyaXB0aW9uOiBcIkFyZSB5b3UgcGFzc2lvbmF0ZSBhYm91dCBDb2RlQ29tYmF0IGJ1dCBkb24ndCBzZWUgYSBqb2IgbGlzdGVkIHRoYXQgbWF0Y2hlcyB5b3VyIHF1YWxpZmljYXRpb25zPyBXcml0ZSB1cyBhbmQgc2hvdyBob3cgeW91IHRoaW5rIHlvdSBjYW4gY29udHJpYnV0ZSB0byBvdXIgdGVhbS4gV2UnZCBsb3ZlIHRvIGhlYXIgZnJvbSB5b3UhXCJcbiMgICAgam9ic19jdXN0b21fY29udGFjdF8xOiBcIlNlbmQgdXMgYSBub3RlIGF0XCJcbiMgICAgam9ic19jdXN0b21fY29udGFjdF8yOiBcImludHJvZHVjaW5nIHlvdXJzZWxmIGFuZCB3ZSBtaWdodCBnZXQgaW4gdG91Y2ggaW4gdGhlIGZ1dHVyZSFcIlxuIyAgICBjb250YWN0X3RpdGxlOiBcIlByZXNzICYgQ29udGFjdFwiXG4jICAgIGNvbnRhY3Rfc3VidGl0bGU6IFwiTmVlZCBtb3JlIGluZm9ybWF0aW9uPyBHZXQgaW4gdG91Y2ggd2l0aCB1cyBhdFwiXG4jICAgIHNjcmVlbnNob3RzX3RpdGxlOiBcIkdhbWUgU2NyZWVuc2hvdHNcIlxuIyAgICBzY3JlZW5zaG90c19oaW50OiBcIihjbGljayB0byB2aWV3IGZ1bGwgc2l6ZSlcIlxuIyAgICBkb3dubG9hZHNfdGl0bGU6IFwiRG93bmxvYWQgQXNzZXRzICYgSW5mb3JtYXRpb25cIlxuIyAgICBhYm91dF9jb2RlY29tYmF0OiBcIkFib3V0IENvZGVDb21iYXRcIlxuIyAgICBsb2dvOiBcIkxvZ29cIlxuIyAgICBzY3JlZW5zaG90czogXCJTY3JlZW5zaG90c1wiXG4jICAgIGNoYXJhY3Rlcl9hcnQ6IFwiQ2hhcmFjdGVyIEFydFwiXG4jICAgIGRvd25sb2FkX2FsbDogXCJEb3dubG9hZCBBbGxcIlxuIyAgICBwcmV2aW91czogXCJQcmV2aW91c1wiXG4jICAgIGxvY2F0aW9uX3RpdGxlOiBcIldlJ3JlIGxvY2F0ZWQgaW4gZG93bnRvd24gU0Y6XCJcblxuIyAgdGVhY2hlcnM6XG4jICAgIGxpY2Vuc2VzX25lZWRlZDogXCJMaWNlbnNlcyBuZWVkZWRcIlxuXG4jICBzcGVjaWFsX29mZmVyOlxuIyAgICBzcGVjaWFsX29mZmVyOiBcIlNwZWNpYWwgT2ZmZXJcIlxuIyAgICBwcm9qZWN0X2Jhc2VkX3RpdGxlOiBcIlByb2plY3QtQmFzZWQgQ291cnNlc1wiXG4jICAgIHByb2plY3RfYmFzZWRfZGVzY3JpcHRpb246IFwiV2ViIGFuZCBHYW1lIERldmVsb3BtZW50IGNvdXJzZXMgZmVhdHVyZSBzaGFyZWFibGUgZmluYWwgcHJvamVjdHMuXCJcbiMgICAgZ3JlYXRfZm9yX2NsdWJzX3RpdGxlOiBcIkdyZWF0IGZvciBjbHVicyBhbmQgZWxlY3RpdmVzXCJcbiMgICAgZ3JlYXRfZm9yX2NsdWJzX2Rlc2NyaXB0aW9uOiBcIlRlYWNoZXJzIGNhbiBwdXJjaGFzZSB1cCB0byBfX21heFF1YW50aXR5U3RhcnRlckxpY2Vuc2VzX18gU3RhcnRlciBMaWNlbnNlcy5cIiAjXG4jICAgIGxvd19wcmljZV90aXRsZTogXCJKdXN0IF9fc3RhcnRlckxpY2Vuc2VQcmljZV9fIHBlciBzdHVkZW50XCJcbiMgICAgbG93X3ByaWNlX2Rlc2NyaXB0aW9uOiBcIlN0YXJ0ZXIgTGljZW5zZXMgYXJlIGFjdGl2ZSBmb3IgX19zdGFydGVyTGljZW5zZUxlbmd0aE1vbnRoc19fIG1vbnRocyBmcm9tIHB1cmNoYXNlLlwiXG4jICAgIHRocmVlX2dyZWF0X2NvdXJzZXM6IFwiVGhyZWUgZ3JlYXQgY291cnNlcyBpbmNsdWRlZCBpbiB0aGUgU3RhcnRlciBMaWNlbnNlOlwiXG4jICAgIGxpY2Vuc2VfbGltaXRfZGVzY3JpcHRpb246IFwiVGVhY2hlcnMgY2FuIHB1cmNoYXNlIHVwIHRvIF9fbWF4UXVhbnRpdHlTdGFydGVyTGljZW5zZXNfXyBTdGFydGVyIExpY2Vuc2VzLiBZb3UgaGF2ZSBhbHJlYWR5IHB1cmNoYXNlZCBfX3F1YW50aXR5QWxyZWFkeVB1cmNoYXNlZF9fLiBJZiB5b3UgbmVlZCBtb3JlLCBjb250YWN0IF9fc3VwcG9ydEVtYWlsX18uIFN0YXJ0ZXIgTGljZW5zZXMgYXJlIHZhbGlkIGZvciBfX3N0YXJ0ZXJMaWNlbnNlTGVuZ3RoTW9udGhzX18gbW9udGhzLlwiXG4jICAgIHN0dWRlbnRfc3RhcnRlcl9saWNlbnNlOiBcIlN0dWRlbnQgU3RhcnRlciBMaWNlbnNlXCJcbiMgICAgcHVyY2hhc2Vfc3RhcnRlcl9saWNlbnNlczogXCJQdXJjaGFzZSBTdGFydGVyIExpY2Vuc2VzXCJcbiMgICAgcHVyY2hhc2Vfc3RhcnRlcl9saWNlbnNlc190b19ncmFudDogXCJQdXJjaGFzZSBTdGFydGVyIExpY2Vuc2VzIHRvIGdyYW50IGFjY2VzcyB0byBfX3N0YXJ0ZXJMaWNlbnNlQ291cnNlTGlzdF9fXCJcbiMgICAgc3RhcnRlcl9saWNlbnNlc19jYW5fYmVfdXNlZDogXCJTdGFydGVyIExpY2Vuc2VzIGNhbiBiZSB1c2VkIHRvIGFzc2lnbiBhZGRpdGlvbmFsIGNvdXJzZXMgaW1tZWRpYXRlbHkgYWZ0ZXIgcHVyY2hhc2UuXCJcbiMgICAgcGF5X25vdzogXCJQYXkgTm93XCJcbiMgICAgd2VfYWNjZXB0X2FsbF9tYWpvcl9jcmVkaXRfY2FyZHM6IFwiV2UgYWNjZXB0IGFsbCBtYWpvciBjcmVkaXQgY2FyZHMuXCJcbiMgICAgY3MyX2Rlc2NyaXB0aW9uOiBcImJ1aWxkcyBvbiB0aGUgZm91bmRhdGlvbiBmcm9tIEludHJvZHVjdGlvbiB0byBDb21wdXRlciBTY2llbmNlLCBkaXZpbmcgaW50byBpZi1zdGF0ZW1lbnRzLCBmdW5jdGlvbnMsIGV2ZW50cyBhbmQgbW9yZS5cIlxuIyAgICB3ZDFfZGVzY3JpcHRpb246IFwiaW50cm9kdWNlcyB0aGUgYmFzaWNzIG9mIEhUTUwgYW5kIENTUyB3aGlsZSB0ZWFjaGluZyBza2lsbHMgbmVlZGVkIGZvciBzdHVkZW50cyB0byBidWlsZCB0aGVpciBmaXJzdCB3ZWJwYWdlLlwiXG4jICAgIGdkMV9kZXNjcmlwdGlvbjogXCJ1c2VzIHN5bnRheCBzdHVkZW50cyBhcmUgYWxyZWFkeSBmYW1pbGlhciB3aXRoIHRvIHNob3cgdGhlbSBob3cgdG8gYnVpbGQgYW5kIHNoYXJlIHRoZWlyIG93biBwbGF5YWJsZSBnYW1lIGxldmVscy5cIlxuIyAgICBzZWVfYW5fZXhhbXBsZV9wcm9qZWN0OiBcInNlZSBhbiBleGFtcGxlIHByb2plY3RcIlxuIyAgICBnZXRfc3RhcnRlZF90b2RheTogXCJHZXQgc3RhcnRlZCB0b2RheSFcIlxuIyAgICB3YW50X2FsbF90aGVfY291cnNlczogXCJXYW50IGFsbCB0aGUgY291cnNlcz8gUmVxdWVzdCBpbmZvcm1hdGlvbiBvbiBvdXIgRnVsbCBMaWNlbnNlcy5cIlxuIyAgICBjb21wYXJlX2xpY2Vuc2VfdHlwZXM6IFwiQ29tcGFyZSBMaWNlbnNlIFR5cGVzOlwiXG4jICAgIGNzOiBcIkNvbXB1dGVyIFNjaWVuY2VcIlxuIyAgICB3ZDogXCJXZWIgRGV2ZWxvcG1lbnRcIlxuIyAgICB3ZDE6IFwiV2ViIERldmVsb3BtZW50IDFcIlxuIyAgICBnZDogXCJHYW1lIERldmVsb3BtZW50XCJcbiMgICAgZ2QxOiBcIkdhbWUgRGV2ZWxvcG1lbnQgMVwiXG4jICAgIG1heGltdW1fc3R1ZGVudHM6IFwiTWF4aW11bSAjIG9mIFN0dWRlbnRzXCJcbiMgICAgdW5saW1pdGVkOiBcIlVubGltaXRlZFwiXG4jICAgIHByaW9yaXR5X3N1cHBvcnQ6IFwiUHJpb3JpdHkgc3VwcG9ydFwiXG4jICAgIHllczogXCJZZXNcIlxuIyAgICBwcmljZV9wZXJfc3R1ZGVudDogXCJfX3ByaWNlX18gcGVyIHN0dWRlbnRcIlxuIyAgICBwcmljaW5nOiBcIlByaWNpbmdcIlxuIyAgICBmcmVlOiBcIkZyZWVcIlxuIyAgICBwdXJjaGFzZTogXCJQdXJjaGFzZVwiXG4jICAgIGNvdXJzZXNfcHJlZml4OiBcIkNvdXJzZXNcIlxuIyAgICBjb3Vyc2VzX3N1ZmZpeDogXCJcIlxuIyAgICBjb3Vyc2VfcHJlZml4OiBcIkNvdXJzZVwiXG4jICAgIGNvdXJzZV9zdWZmaXg6IFwiXCJcblxuIyAgdGVhY2hlcnNfcXVvdGU6XG4jICAgIHN1YnRpdGxlOiBcIkdldCB5b3VyIHN0dWRlbnRzIHN0YXJ0ZWQgaW4gbGVzcyB0aGFuIGFuIGhvdXIuIFlvdSdsbCBiZSBhYmxlIHRvIDxzdHJvbmc+Y3JlYXRlIGEgY2xhc3MsIGFkZCBzdHVkZW50cywgYW5kIG1vbml0b3IgdGhlaXIgcHJvZ3Jlc3M8L3N0cm9uZz4gYXMgdGhleSBsZWFybiBjb21wdXRlciBzY2llbmNlLlwiXG4jICAgIGVtYWlsX2V4aXN0czogXCJVc2VyIGV4aXN0cyB3aXRoIHRoaXMgZW1haWwuXCJcbiMgICAgcGhvbmVfbnVtYmVyOiBcIlBob25lIG51bWJlclwiXG4jICAgIHBob25lX251bWJlcl9oZWxwOiBcIldoZXJlIGNhbiB3ZSByZWFjaCB5b3UgZHVyaW5nIHRoZSB3b3JrZGF5P1wiXG4jICAgIHByaW1hcnlfcm9sZV9sYWJlbDogXCJZb3VyIFByaW1hcnkgUm9sZVwiXG4jICAgIHJvbGVfZGVmYXVsdDogXCJTZWxlY3QgUm9sZVwiXG4jICAgIHByaW1hcnlfcm9sZV9kZWZhdWx0OiBcIlNlbGVjdCBQcmltYXJ5IFJvbGVcIlxuIyAgICBwdXJjaGFzZXJfcm9sZV9kZWZhdWx0OiBcIlNlbGVjdCBQdXJjaGFzZXIgUm9sZVwiXG4jICAgIHRlY2hfY29vcmRpbmF0b3I6IFwiVGVjaG5vbG9neSBjb29yZGluYXRvclwiXG4jICAgIGFkdmlzb3I6IFwiQ3VycmljdWx1bSBTcGVjaWFsaXN0L0Fkdmlzb3JcIlxuIyAgICBwcmluY2lwYWw6IFwiUHJpbmNpcGFsXCJcbiMgICAgc3VwZXJpbnRlbmRlbnQ6IFwiU3VwZXJpbnRlbmRlbnRcIlxuIyAgICBwYXJlbnQ6IFwiUGFyZW50XCJcbiMgICAgcHVyY2hhc2VyX3JvbGVfbGFiZWw6IFwiWW91ciBQdXJjaGFzZXIgUm9sZVwiXG4jICAgIGluZmx1ZW5jZV9hZHZvY2F0ZTogXCJJbmZsdWVuY2UvQWR2b2NhdGVcIlxuIyAgICBldmFsdWF0ZV9yZWNvbW1lbmQ6IFwiRXZhbHVhdGUvUmVjb21tZW5kXCJcbiMgICAgYXBwcm92ZV9mdW5kczogXCJBcHByb3ZlIEZ1bmRzXCJcbiMgICAgbm9fcHVyY2hhc2VyX3JvbGU6IFwiTm8gcm9sZSBpbiBwdXJjaGFzZSBkZWNpc2lvbnNcIlxuIyAgICBkaXN0cmljdF9sYWJlbDogXCJEaXN0cmljdFwiXG4jICAgIGRpc3RyaWN0X25hbWU6IFwiRGlzdHJpY3QgTmFtZVwiXG4jICAgIGRpc3RyaWN0X25hOiBcIkVudGVyIE4vQSBpZiBub3QgYXBwbGljYWJsZVwiXG4jICAgIG9yZ2FuaXphdGlvbl9sYWJlbDogXCJTY2hvb2xcIlxuIyAgICBzY2hvb2xfbmFtZTogXCJTY2hvb2wgTmFtZVwiXG4jICAgIGNpdHk6IFwiQ2l0eVwiXG4jICAgIHN0YXRlOiBcIlN0YXRlXCJcbiMgICAgY291bnRyeTogXCJDb3VudHJ5XCJcbiMgICAgbnVtX3N0dWRlbnRzX2hlbHA6IFwiSG93IG1hbnkgc3R1ZGVudHMgd2lsbCB1c2UgQ29kZUNvbWJhdD9cIlxuIyAgICBudW1fc3R1ZGVudHNfZGVmYXVsdDogXCJTZWxlY3QgUmFuZ2VcIlxuIyAgICBlZHVjYXRpb25fbGV2ZWxfbGFiZWw6IFwiRWR1Y2F0aW9uIExldmVsIG9mIFN0dWRlbnRzXCJcbiMgICAgZWR1Y2F0aW9uX2xldmVsX2hlbHA6IFwiQ2hvb3NlIGFzIG1hbnkgYXMgYXBwbHkuXCJcbiMgICAgZWxlbWVudGFyeV9zY2hvb2w6IFwiRWxlbWVudGFyeSBTY2hvb2xcIlxuIyAgICBoaWdoX3NjaG9vbDogXCJIaWdoIFNjaG9vbFwiXG4jICAgIHBsZWFzZV9leHBsYWluOiBcIihwbGVhc2UgZXhwbGFpbilcIlxuIyAgICBtaWRkbGVfc2Nob29sOiBcIk1pZGRsZSBTY2hvb2xcIlxuIyAgICBjb2xsZWdlX3BsdXM6IFwiQ29sbGVnZSBvciBoaWdoZXJcIlxuIyAgICByZWZlcnJlcjogXCJIb3cgZGlkIHlvdSBoZWFyIGFib3V0IHVzP1wiXG4jICAgIHJlZmVycmVyX2hlbHA6IFwiRm9yIGV4YW1wbGU6IGZyb20gYW5vdGhlciB0ZWFjaGVyLCBhIGNvbmZlcmVuY2UsIHlvdXIgc3R1ZGVudHMsIENvZGUub3JnLCBldGMuXCJcbiMgICAgcmVmZXJyZXJfZGVmYXVsdDogXCJTZWxlY3QgT25lXCJcbiMgICAgcmVmZXJyZXJfaG9jOiBcIkNvZGUub3JnL0hvdXIgb2YgQ29kZVwiXG4jICAgIHJlZmVycmVyX3RlYWNoZXI6IFwiQSB0ZWFjaGVyXCJcbiMgICAgcmVmZXJyZXJfYWRtaW46IFwiQW4gYWRtaW5pc3RyYXRvclwiXG4jICAgIHJlZmVycmVyX3N0dWRlbnQ6IFwiQSBzdHVkZW50XCJcbiMgICAgcmVmZXJyZXJfcGQ6IFwiUHJvZmVzc2lvbmFsIHRyYWluaW5ncy93b3Jrc2hvcHNcIlxuIyAgICByZWZlcnJlcl93ZWI6IFwiR29vZ2xlXCJcbiMgICAgcmVmZXJyZXJfb3RoZXI6IFwiT3RoZXJcIlxuIyAgICBhbnl0aGluZ19lbHNlOiBcIldoYXQga2luZCBvZiBjbGFzcyBkbyB5b3UgYW50aWNpcGF0ZSB1c2luZyBDb2RlQ29tYmF0IGZvcj9cIlxuIyAgICB0aGFua3NfaGVhZGVyOiBcIlJlcXVlc3QgUmVjZWl2ZWQhXCJcbiMgICAgdGhhbmtzX3N1Yl9oZWFkZXI6IFwiVGhhbmtzIGZvciBleHByZXNzaW5nIGludGVyZXN0IGluIENvZGVDb21iYXQgZm9yIHlvdXIgc2Nob29sLlwiXG4jICAgIHRoYW5rc19wOiBcIldlJ2xsIGJlIGluIHRvdWNoIHNvb24hIElmIHlvdSBuZWVkIHRvIGdldCBpbiBjb250YWN0LCB5b3UgY2FuIHJlYWNoIHVzIGF0OlwiXG4jICAgIGJhY2tfdG9fY2xhc3NlczogXCJCYWNrIHRvIENsYXNzZXNcIlxuIyAgICBmaW5pc2hfc2lnbnVwOiBcIkZpbmlzaCBjcmVhdGluZyB5b3VyIHRlYWNoZXIgYWNjb3VudDpcIlxuIyAgICBmaW5pc2hfc2lnbnVwX3A6IFwiQ3JlYXRlIGFuIGFjY291bnQgdG8gc2V0IHVwIGEgY2xhc3MsIGFkZCB5b3VyIHN0dWRlbnRzLCBhbmQgbW9uaXRvciB0aGVpciBwcm9ncmVzcyBhcyB0aGV5IGxlYXJuIGNvbXB1dGVyIHNjaWVuY2UuXCJcbiMgICAgc2lnbnVwX3dpdGg6IFwiU2lnbiB1cCB3aXRoOlwiXG4jICAgIGNvbm5lY3Rfd2l0aDogXCJDb25uZWN0IHdpdGg6XCJcbiMgICAgY29udmVyc2lvbl93YXJuaW5nOiBcIldBUk5JTkc6IFlvdXIgY3VycmVudCBhY2NvdW50IGlzIGEgPGVtPlN0dWRlbnQgQWNjb3VudDwvZW0+LiBPbmNlIHlvdSBzdWJtaXQgdGhpcyBmb3JtLCB5b3VyIGFjY291bnQgd2lsbCBiZSB1cGRhdGVkIHRvIGEgVGVhY2hlciBBY2NvdW50LlwiXG4jICAgIGxlYXJuX21vcmVfbW9kYWw6IFwiVGVhY2hlciBhY2NvdW50cyBvbiBDb2RlQ29tYmF0IGhhdmUgdGhlIGFiaWxpdHkgdG8gbW9uaXRvciBzdHVkZW50IHByb2dyZXNzLCBhc3NpZ24gbGljZW5zZXMgYW5kIG1hbmFnZSBjbGFzc3Jvb21zLiBUZWFjaGVyIGFjY291bnRzIGNhbm5vdCBiZSBhIHBhcnQgb2YgYSBjbGFzc3Jvb20gLSBpZiB5b3UgYXJlIGN1cnJlbnRseSBlbnJvbGxlZCBpbiBhIGNsYXNzIHVzaW5nIHRoaXMgYWNjb3VudCwgeW91IHdpbGwgbm8gbG9uZ2VyIGJlIGFibGUgdG8gYWNjZXNzIGl0IG9uY2UgeW91IHVwZGF0ZSB0byBhIFRlYWNoZXIgQWNjb3VudC5cIlxuIyAgICBjcmVhdGVfYWNjb3VudDogXCJDcmVhdGUgYSBUZWFjaGVyIEFjY291bnRcIlxuIyAgICBjcmVhdGVfYWNjb3VudF9zdWJ0aXRsZTogXCJHZXQgYWNjZXNzIHRvIHRlYWNoZXItb25seSB0b29scyBmb3IgdXNpbmcgQ29kZUNvbWJhdCBpbiB0aGUgY2xhc3Nyb29tLiAgPHN0cm9uZz5TZXQgdXAgYSBjbGFzczwvc3Ryb25nPiwgYWRkIHlvdXIgc3R1ZGVudHMsIGFuZCA8c3Ryb25nPm1vbml0b3IgdGhlaXIgcHJvZ3Jlc3M8L3N0cm9uZz4hXCJcbiMgICAgY29udmVydF9hY2NvdW50X3RpdGxlOiBcIlVwZGF0ZSB0byBUZWFjaGVyIEFjY291bnRcIlxuIyAgICBub3Q6IFwiTm90XCJcblxuICB2ZXJzaW9uczpcbiAgICBzYXZlX3ZlcnNpb25fdGl0bGU6IFwiVGFsbGVubmEgVXVzaSBWZXJzaW9cIlxuICAgIG5ld19tYWpvcl92ZXJzaW9uOiBcIlV1c2kgUMOkw6R2ZXJzaW9cIlxuICAgIHN1Ym1pdHRpbmdfcGF0Y2g6IFwiTMOkaGV0ZXTDpMOkbiBQYXRjaGkuLi5cIlxuICAgIGNsYV9wcmVmaXg6IFwiVGFsbGVudGFha3Nlc2kgbXV1dG9rc2V0IHNpbnVuIHBpdMOkw6QgZW5zaW4gaHl2w6Rrc3nDpFwiXG4gICAgY2xhX3VybDogXCJrw6R5dHTDtmVoZG90XCJcbiAgICBjbGFfc3VmZml4OiBcIi5cIlxuICAgIGNsYV9hZ3JlZTogXCJIWVbDhEtTWU5cIlxuICAgIG93bmVyX2FwcHJvdmU6IFwiT21pc3RhamFuIHBpdMOkw6QgZW5zaW4gaHl2w6Rrc3nDpCBzZSBlbm5lbiBrdWluIG11dXRva3NldCB0dWxldmF0IHZvaW1hYW4uXCJcblxuICBjb250YWN0OlxuICAgIGNvbnRhY3RfdXM6IFwiT3RhIHlodGV5dHTDpCBDb2RlQ29tYmF0XCJcbiAgICB3ZWxjb21lOiBcIk11a2F2YSBrdXVsbGEgdGVpc3TDpCEgS8OkeXTDpCB0w6R0w6QgbG9tYWtldHRhIGzDpGhldHTDpMOka3Nlc2kgbWVpbGxlIHPDpGhrw7Zwb3N0aWEuIFwiXG4gICAgZm9ydW1fcHJlZml4OiBcIkthaWtpc3NhIHlsZWlzaXPDpCBhc2lvaXNzYSwga29rZWlsZSBlbnNpbiBcIlxuICAgIGZvcnVtX3BhZ2U6IFwia2Vza3VzdGVsdWZvb3J1bWlhbW1lXCJcbiAgICBmb3J1bV9zdWZmaXg6IFwiLlwiXG4gICAgZmFxX3ByZWZpeDogXCJVc2VpbiBreXN5dHl0IGt5c3lteWtzZXQgbMO2eWTDpHRcIlxuICAgIGZhcTogXCJUw6TDpGx0w6RcIlxuICAgIHN1YnNjcmliZV9wcmVmaXg6IFwiSm9zIHRhcnZpdHNldCBhcHVhIGtlbnTDpG4gbMOkcMOkaXNlbWlzZXNzw6QsIG9sZSBoeXbDpCBqYSBoYW5raVwiXG4gICAgc3Vic2NyaWJlOiBcIkNvZGVDb21iYXQga3V1a2F1c2l0aWxhdXNcIlxuICAgIHN1YnNjcmliZV9zdWZmaXg6IFwiamEgYXV0YW1tZSBtaWVsZWxsw6RtbWUgdGVpdMOkIG9oamVsbWFrb29kaW5uZSBrYW5zc2EuXCJcbiAgICBzdWJzY3JpYmVyX3N1cHBvcnQ6IFwiS3VuIG9sZXR0ZSBDb2RlQ29tYmF0IGt1dWthdXNpdGlsYWFqYSwgc8OkaGvDtnBvc3Rpc2kga8Okc2l0ZWxsw6TDpG4gZXR1c2lqYWxsYS5cIlxuICAgIHNjcmVlbnNob3RfaW5jbHVkZWQ6IFwiS3V2YW5rYWFwcGF1cyBsaWl0ZXR0eS5cIlxuICAgIHdoZXJlX3JlcGx5OiBcIk1paGluIGhhbHVhdHRlIHZhc3RhdWtzZW4/XCJcbiAgICBzZW5kOiBcIkzDpGhldMOkXCJcblxuICBhY2NvdW50X3NldHRpbmdzOlxuICAgIHRpdGxlOiBcIlRpbGlhc2V0dWtzZXRcIlxuICAgIG5vdF9sb2dnZWRfaW46IFwiS2lyamF1ZHUgc2lzw6TDpG4gdGFpIGx1byB0aWxpIGpvdHRhIHBlbGl0aWxhbm5lIHZvaWRhYW4gdGFsbGVudGFhLlwiXG4gICAgbWVfdGFiOiBcIk1pbsOkXCJcbiAgICBwaWN0dXJlX3RhYjogXCJLdXZhXCJcbiAgICBkZWxldGVfYWNjb3VudF90YWI6IFwiUG9pc3RhIFRpbGlcIlxuICAgIHdyb25nX2VtYWlsOiBcIlZpcmhlZWxsaW5lbiBzw6Roa8O2cG9zdGlcIlxuICAgIHdyb25nX3Bhc3N3b3JkOiBcIlZpcmhlZWxsaW5lbiBzYWxhc2FuYVwiXG4jICAgIHVzZV9ncmF2YXRhcjogXCJDaGFuZ2UgeW91ciBwcm9maWxlIHBpY3R1cmUgYnkgc2lnbmluZyB1cCBmb3IgR3JhdmF0YXJcIlxuICAgIGRlbGV0ZV90aGlzX2FjY291bnQ6IFwiUG9pc3RhIHRpbGkgbG9wdWxsaXNlc3RpXCJcbiAgICByZXNldF9wcm9ncmVzc190YWI6IFwiUmVzZXRvaSBlZGlzdHltaXNlc2lcIlxuICAgIHJlc2V0X3lvdXJfcHJvZ3Jlc3M6IFwiVHloamVubsOkIGVkaXN0eW1pc2VzaSBqYSBhbG9pdGEgYWx1c3RhXCJcbiAgICBnb2RfbW9kZTogXCJQw6TDpGvDpHl0dMOkasOkIHRpbGFcIlxuICAgIGVtYWlsc190YWI6IFwiU8OkaGvDtnBvc3RpdGllZG90dGVldFwiXG4gICAgYWRtaW46IFwiWWxsw6RwaXTDpGrDpFwiXG4gICAgbWFuYWdlX3N1YnNjcmlwdGlvbjogXCJLbGlra2FhIHTDpHNzw6QgaGFsbGl0YWtzZXNpIHRpbGF1c3Rhc2kuXCJcbiAgICBuZXdfcGFzc3dvcmQ6IFwiVXVzaSBTYWxhc2FuYVwiXG4gICAgbmV3X3Bhc3N3b3JkX3ZlcmlmeTogXCJWYXJtaXN0YVwiXG4gICAgdHlwZV9pbl9lbWFpbDogXCJBbm5hIHPDpGhrw7Zwb3N0aW9zb2l0dGVlc2kgdmFodmlzdGFha3Nlc2kgdGlsaW4gcG9pc3RhbWlzZW4uXCJcbiAgICB0eXBlX2luX2VtYWlsX3Byb2dyZXNzOiBcIktpcmpvaXRhIHPDpGhrw7Zwb3N0aXNpIHZhaHZpc3RhYWtzZXNpIGVkaXN0eW1pc2VuIHR5aGplbm55a3Nlbi5cIlxuICAgIHR5cGVfaW5fcGFzc3dvcmQ6IFwiS2lyam9pdGEgbXnDtnMgc2FsYXNhbmFzaS5cIlxuICAgIGVtYWlsX3N1YnNjcmlwdGlvbnM6IFwiU8OkaGvDtnBvc3RpdGllZG90dGVldFwiXG4gICAgZW1haWxfc3Vic2NyaXB0aW9uc19ub25lOiBcIkVpIHPDpGhrw7Zwb3N0aXRpZWRvdHRlaXRhXCJcbiAgICBlbWFpbF9hbm5vdW5jZW1lbnRzOiBcIlRpZWRvdHRlZXRcIlxuICAgIGVtYWlsX2Fubm91bmNlbWVudHNfZGVzY3JpcHRpb246IFwiSGFsdWF0a28gdmlpbWVpc2ltbcOkdCB1dXRpc2V0IGphIHRpZWRvdGVldCB1dXNpc3RhIG9taW5haXN1dWtzaXN0YS5cIlxuICAgIGVtYWlsX25vdGlmaWNhdGlvbnM6IFwiSWxtb2l0dWtzZXRcIlxuICAgIGVtYWlsX25vdGlmaWNhdGlvbnNfc3VtbWFyeTogXCJWYWxpbm5hdCBhdXRvbWFhdHRpc2lhIHPDpGhrw7Zwb3N0aS1pbG1vaXR1a3NpYSB2YXJ0ZW4gdG9pbWlzdGFzaSBDb2RlQ29tYmF0IHNpdnVzdG9sbGEuXCJcbiAgICBlbWFpbF9hbnlfbm90ZXM6IFwiS2Fpa2tpIElsbW9pdHVrc2V0XCJcbiAgICBlbWFpbF9hbnlfbm90ZXNfZGVzY3JpcHRpb246IFwiUG9pc3RhIHZhbGludGEgam9zIGV0IGhhbHVhIG1pdMOkw6RuIGlsbW9pdHVrc2lhIHPDpGhrw7Zwb3N0aWlzaS5cIlxuICAgIGVtYWlsX25ld3M6IFwiVXV0aXNldFwiXG4gICAgZW1haWxfcmVjcnVpdF9ub3RlczogXCJUecO2bWFoZG9sbGlzdXVkZXRcIlxuICAgIGVtYWlsX3JlY3J1aXRfbm90ZXNfZGVzY3JpcHRpb246IFwiSm9zIHBlbGFhdCB0b2RlbGxhIGh5dmluIHNhYXRhbW1lIG90dGFhIHNpbnV1biB5aHRleXR0w6QgamEgdGFyam90YSB0ecO2bWFoZG9sbGlzdXVrc2lhLlwiXG4gICAgY29udHJpYnV0b3JfZW1haWxzOiBcIkF2dXN0YWpha29odGFpc2V0IFRpZWRvdHRlZXRcIlxuICAgIGNvbnRyaWJ1dGVfcHJlZml4OiBcIkV0c2ltbWUgbGlzw6TDpCB0ZWtpasO2aXTDpCEgS2F0c28gbGlzw6TDpCBcIlxuICAgIGNvbnRyaWJ1dGVfcGFnZTogXCJBdnVzdGFcIlxuICAgIGNvbnRyaWJ1dGVfc3VmZml4OiBcIiBzaXZ1bHRhIGphIGx1ZSBtaXRlbiBzaW7DpGtpbiBww6TDpHNldCBtdWthYW4uXCJcbiAgICBlbWFpbF90b2dnbGU6IFwiVmFsaXRzZS9Qb2lzdGEgS2Fpa2tpXCJcbiAgICBlcnJvcl9zYXZpbmc6IFwiVmlyaGUgdGFsbGVubmV0dGFlc3NhXCJcbiAgICBzYXZlZDogXCJNdXV0b2tzZXQgdGFsbGVubmV0dHVcIlxuICAgIHBhc3N3b3JkX21pc21hdGNoOiBcIlNhbGFzYW5hdCBlaXbDpHQgdMOkc23DpMOkLlwiXG4gICAgcGFzc3dvcmRfcmVwZWF0OiBcIktpcmpvaXRhIHNhbGFzYW5hIHV1ZGVzdGFhbi5cIlxuXG4gIGtleWJvYXJkX3Nob3J0Y3V0czpcbiAgICBrZXlib2FyZF9zaG9ydGN1dHM6IFwiUGlrYW7DpHBww6RpbWV0XCJcbiAgICBzcGFjZTogXCJWw6RsaWx5w7ZudGlcIlxuICAgIGVudGVyOiBcIkVudGVyXCJcbiAgICBwcmVzc19lbnRlcjogXCJwYWluYSBFbnRlclwiXG4gICAgZXNjYXBlOiBcIkVzY1wiXG4gICAgc2hpZnQ6IFwiU2hpZnRcIlxuICAgIHJ1bl9jb2RlOiBcIlN1b3JpdGEga29vZGkuXCJcbiAgICBydW5fcmVhbF90aW1lOiBcIlN1b3JpdGEgdG9zaWFqYXNzYS5cIlxuICAgIGNvbnRpbnVlX3NjcmlwdDogXCJPaGl0YSBueWt5aW5lbiBrb29kaS5cIlxuICAgIHNraXBfc2NyaXB0czogXCJPaGl0YSBrYWlra2kgb2hpdGV0dGF2YXQga29vZGl0LlwiXG4gICAgdG9nZ2xlX3BsYXliYWNrOiBcIlRvaXN0YS9QeXPDpHl0w6QuXCJcbiAgICBzY3J1Yl9wbGF5YmFjazogXCJTaWlycnkgZXRlZW4gamEgdGFha3NlIGFqYXNzYS5cIlxuICAgIHNpbmdsZV9zY3J1Yl9wbGF5YmFjazogXCJTaWlycnkgZXRlZW4gamEgdGFha3NlIGFqYXNzYSBydXV0dSBrZXJyYWxsYWFuLlwiXG4gICAgc2NydWJfZXhlY3V0aW9uOiBcIlNpaXJyeSBueWt5aXNlbiB0YWlhbiBzdW9yaXR1c2tvaHRhYW4uXCJcbiAgICB0b2dnbGVfZGVidWc6IFwiVmlyaGVlbmV0c2ludMOkbsOkeXR0w7YuXCJcbiAgICB0b2dnbGVfZ3JpZDogXCJUYXVzdGFydXVkdWtrby5cIlxuICAgIHRvZ2dsZV9wYXRoZmluZGluZzogXCJSZWl0aW5oYWt1bsOkeXR0w7YuXCJcbiAgICBiZWF1dGlmeTogXCJWaWltZWlzdGVsZSBvaGplbG1ha29vZGlzaSwgbXVvdG9pbGVtYWxsYSBzZSB5aGRlbm11a2Fpc2VzdGkuXCJcbiAgICBtYXhpbWl6ZV9lZGl0b3I6IFwiTGFhamVubmEvcGllbmVubsOkIGtvb2RpZWRpdG9yaS5cIlxuXG4gIGNvbW11bml0eTpcbiAgICBtYWluX3RpdGxlOiBcIkNvZGVDb21iYXQgWWh0ZWlzw7ZcIlxuICAgIGludHJvZHVjdGlvbjogXCJLYXRzbyBtaXRlbiB2b2l0IGF1dHRhYSBqYSBtaWV0aSBtaWvDpCBrdXVsb3N0YWEgaGF1c2tpbW1hbHRhLiBLdXVsZW1tZSBtaWVsZWxsw6TDpG4gc2ludXN0YSFcIlxuIyAgICBsZXZlbF9lZGl0b3JfcHJlZml4OiBcIlVzZSB0aGUgQ29kZUNvbWJhdFwiXG4jICAgIGxldmVsX2VkaXRvcl9zdWZmaXg6IFwidG8gY3JlYXRlIGFuZCBlZGl0IGxldmVscy4gVXNlcnMgaGF2ZSBjcmVhdGVkIGxldmVscyBmb3IgdGhlaXIgY2xhc3NlcywgZnJpZW5kcywgaGFja2F0aG9ucywgc3R1ZGVudHMsIGFuZCBzaWJsaW5ncy4gSWYgY3JlYXRlIGEgbmV3IGxldmVsIHNvdW5kcyBpbnRpbWlkYXRpbmcgeW91IGNhbiBzdGFydCBieSBmb3JraW5nIG9uZSBvZiBvdXJzIVwiXG4jICAgIHRoYW5nX2VkaXRvcl9wcmVmaXg6IFwiV2UgY2FsbCB1bml0cyB3aXRoaW4gdGhlIGdhbWUgJ3RoYW5ncycuIFVzZSB0aGVcIlxuIyAgICB0aGFuZ19lZGl0b3Jfc3VmZml4OiBcInRvIG1vZGlmeSB0aGUgQ29kZUNvbWJhdCBzb3VyY2UgYXJ0d29yay4gQWxsb3cgdW5pdHMgdG8gdGhyb3cgcHJvamVjdGlsZXMsIGFsdGVyIHRoZSBkaXJlY3Rpb24gb2YgYW4gYW5pbWF0aW9uLCBjaGFuZ2UgYSB1bml0J3MgaGl0IHBvaW50cywgb3IgdXBsb2FkIHlvdXIgb3duIHZlY3RvciBzcHJpdGVzLlwiXG4jICAgIGFydGljbGVfZWRpdG9yX3ByZWZpeDogXCJTZWUgYSBtaXN0YWtlIGluIHNvbWUgb2Ygb3VyIGRvY3M/IFdhbnQgdG8gbWFrZSBzb21lIGluc3RydWN0aW9ucyBmb3IgeW91ciBvd24gY3JlYXRpb25zPyBDaGVjayBvdXQgdGhlXCJcbiMgICAgYXJ0aWNsZV9lZGl0b3Jfc3VmZml4OiBcImFuZCBoZWxwIENvZGVDb21iYXQgcGxheWVycyBnZXQgdGhlIG1vc3Qgb3V0IG9mIHRoZWlyIHBsYXl0aW1lLlwiXG4jICAgIGZpbmRfdXM6IFwiRmluZCB1cyBvbiB0aGVzZSBzaXRlc1wiXG4jICAgIHNvY2lhbF9naXRodWI6IFwiQ2hlY2sgb3V0IGFsbCBvdXIgY29kZSBvbiBHaXRIdWJcIlxuIyAgICBzb2NpYWxfYmxvZzogXCJSZWFkIHRoZSBDb2RlQ29tYmF0IGJsb2cgb24gU2V0dFwiXG4jICAgIHNvY2lhbF9kaXNjb3VyY2U6IFwiSm9pbiB0aGUgZGlzY3Vzc2lvbiBvbiBvdXIgRGlzY291cnNlIGZvcnVtXCJcbiMgICAgc29jaWFsX2ZhY2Vib29rOiBcIkxpa2UgQ29kZUNvbWJhdCBvbiBGYWNlYm9va1wiXG4jICAgIHNvY2lhbF90d2l0dGVyOiBcIkZvbGxvdyBDb2RlQ29tYmF0IG9uIFR3aXR0ZXJcIlxuIyAgICBzb2NpYWxfZ3BsdXM6IFwiSm9pbiBDb2RlQ29tYmF0IG9uIEdvb2dsZStcIlxuIyAgICBzb2NpYWxfc2xhY2s6IFwiQ2hhdCB3aXRoIHVzIGluIHRoZSBwdWJsaWMgQ29kZUNvbWJhdCBTbGFjayBjaGFubmVsXCJcbiMgICAgY29udHJpYnV0ZV90b190aGVfcHJvamVjdDogXCJDb250cmlidXRlIHRvIHRoZSBwcm9qZWN0XCJcblxuICBjbGFuczpcbiAgICBjbGFuOiBcIktsYWFuaVwiXG4gICAgY2xhbnM6IFwiS2xhYW5pdFwiXG4gICAgbmV3X25hbWU6IFwiS2xhYW5pbiBuaW1pXCJcbiAgICBuZXdfZGVzY3JpcHRpb246IFwiS2xhYW5pbiBrdXZhdXNcIlxuICAgIG1ha2VfcHJpdmF0ZTogXCJZa3NpdHlpbmVuIGtsYWFuaVwiXG4gICAgc3Vic19vbmx5OiBcIlZhaW4gdGlsYW5uZWlsbGVcIlxuICAgIGNyZWF0ZV9jbGFuOiBcIkx1byB1dXNpIGtsYWFuaVwiXG4gICAgcHJpdmF0ZV9wcmV2aWV3OiBcIkVzaWthdHNlbHVcIlxuICAgIHByaXZhdGVfY2xhbnM6IFwiWWtzaXR5aXNldCBrbGFhbml0XCJcbiAgICBwdWJsaWNfY2xhbnM6IFwiSnVsa2lzZXQga2xhYW5pdFwiXG4gICAgbXlfY2xhbnM6IFwiT21hdCBrbGFhbml0XCJcbiAgICBjbGFuX25hbWU6IFwiS2xhYW5pbiBuaW1pXCJcbiAgICBuYW1lOiBcIk5pbWlcIlxuICAgIGNoaWVmdGFpbjogXCJQw6TDpGxsaWtrw7ZcIlxuICAgIGVkaXRfY2xhbl9uYW1lOiBcIk11dXRhIGtsYWFuaW4gbmltZcOkXCJcbiAgICBlZGl0X2NsYW5fZGVzY3JpcHRpb246IFwiTXV1dGEga2xhYW5pbiBrdXZhdXN0YVwiXG4gICAgZWRpdF9uYW1lOiBcIm11dXRhIG5pbWlcIlxuICAgIGVkaXRfZGVzY3JpcHRpb246IFwibXV1dGEga3V2YXVzXCJcbiAgICBwcml2YXRlOiBcIih5a3NpdHlpbmVuKVwiXG4gICAgc3VtbWFyeTogXCJZaHRlZW52ZXRvXCJcbiAgICBhdmVyYWdlX2xldmVsOiBcIktlc2tpbcOkw6Ryw6RpbmVuIHRhc29cIlxuICAgIGF2ZXJhZ2VfYWNoaWV2ZW1lbnRzOiBcIlNhYXZ1dHVrc2lhIGtlc2tpbcOkw6RyaW5cIlxuICAgIGRlbGV0ZV9jbGFuOiBcIlBvaXN0YSBrbGFhbmlcIlxuICAgIGxlYXZlX2NsYW46IFwiSsOkdMOkIGtsYWFuaVwiXG4gICAgam9pbl9jbGFuOiBcIkxpaXR5IGtsYWFuaWluXCJcbiAgICBpbnZpdGVfMTogXCJLdXRzdTpcIlxuICAgIGludml0ZV8yOiBcIipLdXRzdSBwZWxhYWppYSBrbGFhbmlpbiwgbMOkaGV0dMOkbcOkbGzDpCBoZWlsbGUgdMOkbcOkIGxpbmtraS5cIlxuICAgIG1lbWJlcnM6IFwiSsOkc2VuZXRcIlxuICAgIHByb2dyZXNzOiBcIkVkaXN0eW1pbmVuXCJcbiAgICBub3Rfc3RhcnRlZF8xOiBcImVpIGFsb2l0ZXR0dVwiXG4gICAgc3RhcnRlZF8xOiBcImFsb2l0ZXR0dVwiXG4gICAgY29tcGxldGVfMTogXCJ2YWxtaXNcIlxuICAgIGV4cF9sZXZlbHM6IFwiTGFhamVubmEgdGFzb3RcIlxuICAgIHJlbV9oZXJvOiBcIlBvaXN0YSBzYW5rYXJpXCJcbiAgICBzdGF0dXM6IFwiVGlsYW5uZVwiXG4gICAgY29tcGxldGVfMjogXCJWYWxtaXNcIlxuICAgIHN0YXJ0ZWRfMjogXCJBbG9pdGV0dHVcIlxuICAgIG5vdF9zdGFydGVkXzI6IFwiRWkgYWxvaXRldHR1XCJcbiAgICB2aWV3X3NvbHV0aW9uOiBcIlBhaW5hIGthdHNvYWtzZXNpIHJhdGthaXN1dC5cIlxuICAgIHZpZXdfYXR0ZW1wdDogXCJQYWluYSBrYXRzb2Frc2VzaSB5cml0eWtzZXNpLlwiXG4gICAgbGF0ZXN0X2FjaGlldmVtZW50OiBcIlZpaW1laXNpbiBzYWF2dXR1c1wiXG4gICAgcGxheXRpbWU6IFwiUGVsaWFpa2FcIlxuICAgIGxhc3RfcGxheWVkOiBcIlZpaW1la3NpIHBlbGF0dHVcIlxuICAgIGxlYWd1ZXNfZXhwbGFuYXRpb246IFwiUGVsYWEgbGlpZ2FhIG11aXRhIGtsYWFuaW4gasOkc2VuacOkIHZhc3RhYW4gbsOkaWxsw6QgbW9uaW5wZWxhYWphLWFyZWVub2lsbGEuXCJcbiMgICAgdHJhY2tfY29uY2VwdHMxOiBcIlRyYWNrIGNvbmNlcHRzXCJcbiMgICAgdHJhY2tfY29uY2VwdHMyYTogXCJsZWFybmVkIGJ5IGVhY2ggc3R1ZGVudFwiXG4jICAgIHRyYWNrX2NvbmNlcHRzMmI6IFwibGVhcm5lZCBieSBlYWNoIG1lbWJlclwiXG4jICAgIHRyYWNrX2NvbmNlcHRzM2E6IFwiVHJhY2sgbGV2ZWxzIGNvbXBsZXRlZCBmb3IgZWFjaCBzdHVkZW50XCJcbiMgICAgdHJhY2tfY29uY2VwdHMzYjogXCJUcmFjayBsZXZlbHMgY29tcGxldGVkIGZvciBlYWNoIG1lbWJlclwiXG4jICAgIHRyYWNrX2NvbmNlcHRzNGE6IFwiU2VlIHlvdXIgc3R1ZGVudHMnXCJcbiMgICAgdHJhY2tfY29uY2VwdHM0YjogXCJTZWUgeW91ciBtZW1iZXJzJ1wiXG4jICAgIHRyYWNrX2NvbmNlcHRzNTogXCJzb2x1dGlvbnNcIlxuIyAgICB0cmFja19jb25jZXB0czZhOiBcIlNvcnQgc3R1ZGVudHMgYnkgbmFtZSBvciBwcm9ncmVzc1wiXG4jICAgIHRyYWNrX2NvbmNlcHRzNmI6IFwiU29ydCBtZW1iZXJzIGJ5IG5hbWUgb3IgcHJvZ3Jlc3NcIlxuIyAgICB0cmFja19jb25jZXB0czc6IFwiUmVxdWlyZXMgaW52aXRhdGlvblwiXG4jICAgIHRyYWNrX2NvbmNlcHRzODogXCJ0byBqb2luXCJcbiMgICAgcHJpdmF0ZV9yZXF1aXJlX3N1YjogXCJQcml2YXRlIGNsYW5zIHJlcXVpcmUgYSBzdWJzY3JpcHRpb24gdG8gY3JlYXRlIG9yIGpvaW4uXCJcblxuICBjb3Vyc2VzOlxuICAgIGNyZWF0ZV9uZXdfY2xhc3M6IFwiTHVvIHV1c2kgbHVva2thXCJcbiMgICAgc29sdXRpb25zX3JlcXVpcmVfbGljZW5zZXM6IFwiTGV2ZWwgc29sdXRpb25zIGFyZSBhdmFpbGFibGUgZm9yIHRlYWNoZXJzIHdobyBoYXZlIGxpY2Vuc2VzLlwiXG4gICAgdW5uYW1lZF9jbGFzczogXCJOaW1ldMO2biBsdW9ra2FcIlxuICAgIGVkaXRfc2V0dGluZ3MxOiBcIk11b2tra2FhIEx1b2thbiBBc2V0dWtzaWFcIlxuICAgIGFkZF9zdHVkZW50czogXCJMaXPDpMOkIE9wcGlsYWl0YVwiXG4gICAgc3RhdHM6IFwiVGlsYXN0b3RcIlxuIyAgICBzdHVkZW50X2VtYWlsX2ludml0ZV9ibHVyYjogXCJZb3VyIHN0dWRlbnRzIGNhbiBhbHNvIHVzZSBjbGFzcyBjb2RlIDxzdHJvbmc+X19jbGFzc0NvZGVfXzwvc3Ryb25nPiB3aGVuIGNyZWF0aW5nIGEgU3R1ZGVudCBBY2NvdW50LCBubyBlbWFpbCByZXF1aXJlZC5cIlxuICAgIHRvdGFsX3N0dWRlbnRzOiBcIk9wcGlsYWl0YSB5aHRlZW5zw6Q6XCJcbiAgICBhdmVyYWdlX3RpbWU6IFwiS2Vza2ltw6TDpHLDpGluZW4gcGVsaWFpa2E6XCJcbiAgICB0b3RhbF90aW1lOiBcIlBlbGlhaWthIFlodGVlbnPDpDpcIlxuIyAgICBhdmVyYWdlX2xldmVsczogXCJBdmVyYWdlIGxldmVscyBjb21wbGV0ZWQ6XCJcbiAgICB0b3RhbF9sZXZlbHM6IFwiVGFzb2phIHN1b3JpdGV0dHUgeWh0ZWVuc8OkOlwiXG4gICAgc3R1ZGVudHM6IFwiT3BwaWxhYXRcIlxuIyAgICBjb25jZXB0czogXCJDb25jZXB0c1wiXG4gICAgcGxheV90aW1lOiBcIlBlbGlhaWthOlwiXG4gICAgY29tcGxldGVkOiBcIlN1b3JpdGV0dHU6XCJcbiAgICBlbnRlcl9lbWFpbHM6IFwiS2lyam9pdGEgb3BwaWxhaWRlbiBzw6Roa8O2cG9zdGl0IGt1dHN1YWtzZXNpLCB5a3NpIHBlciByaXZpXCIgIyB7Y2hhbmdlfVxuICAgIHNlbmRfaW52aXRlczogXCJMw6RoZXTDpCBrdXRzdXRcIiAjIHtjaGFuZ2V9XG4jICAgIG51bWJlcl9wcm9ncmFtbWluZ19zdHVkZW50czogXCJOdW1iZXIgb2YgUHJvZ3JhbW1pbmcgU3R1ZGVudHNcIlxuIyAgICBudW1iZXJfdG90YWxfc3R1ZGVudHM6IFwiVG90YWwgU3R1ZGVudHMgaW4gU2Nob29sL0Rpc3RyaWN0XCJcbiMgICAgZW5yb2xsOiBcIkVucm9sbFwiXG4jICAgIGVucm9sbF9wYWlkOiBcIkVucm9sbCBTdHVkZW50cyBpbiBQYWlkIENvdXJzZXNcIlxuIyAgICBnZXRfZW5yb2xsbWVudHM6IFwiR2V0IE1vcmUgTGljZW5zZXNcIlxuIyAgICBjaGFuZ2VfbGFuZ3VhZ2U6IFwiQ2hhbmdlIENvdXJzZSBMYW5ndWFnZVwiXG4jICAgIGtlZXBfdXNpbmc6IFwiS2VlcCBVc2luZ1wiXG4jICAgIHN3aXRjaF90bzogXCJTd2l0Y2ggVG9cIlxuIyAgICBncmVldGluZ3M6IFwiR3JlZXRpbmdzIVwiXG4jICAgIGJhY2tfY2xhc3Nyb29tczogXCJCYWNrIHRvIG15IGNsYXNzcm9vbXNcIlxuIyAgICBiYWNrX2NsYXNzcm9vbTogXCJCYWNrIHRvIGNsYXNzcm9vbVwiXG4jICAgIGJhY2tfY291cnNlczogXCJCYWNrIHRvIG15IGNvdXJzZXNcIlxuIyAgICBlZGl0X2RldGFpbHM6IFwiRWRpdCBjbGFzcyBkZXRhaWxzXCJcbiMgICAgcHVyY2hhc2VfZW5yb2xsbWVudHM6IFwiUHVyY2hhc2UgU3R1ZGVudCBMaWNlbnNlc1wiXG4gICAgcmVtb3ZlX3N0dWRlbnQ6IFwicG9pc3RhIG9wcGlsYXNcIlxuIyAgICBhc3NpZ246IFwiQXNzaWduXCJcbiMgICAgdG9fYXNzaWduOiBcInRvIGFzc2lnbiBwYWlkIGNvdXJzZXMuXCJcbiAgICBzdHVkZW50OiBcIk9wcGlsYXNcIlxuICAgIHRlYWNoZXI6IFwiT3BldHRhamFcIlxuICAgIGFyZW5hOiBcIkFyZWVuYVwiXG4gICAgYXZhaWxhYmxlX2xldmVsczogXCJTYWF0YXZpbGxhIG9sZXZhdCB0YXNvdFwiXG4gICAgc3RhcnRlZDogXCJhbG9pdGV0dHVcIlxuICAgIGNvbXBsZXRlOiBcInZhbG1pc1wiXG4jICAgIHByYWN0aWNlOiBcInByYWN0aWNlXCJcbiAgICByZXF1aXJlZDogXCJwYWtvbGxpbmVuXCJcbiAgICB3ZWxjb21lX3RvX2NvdXJzZXM6IFwiU2Vpa2thaWxpamF0LCB0ZXJ2ZXR1bG9hIGt1cnNzZWlsbGUhXCJcbiAgICByZWFkeV90b19wbGF5OiBcIlZhbG1paW5hIHBlbGFhbWFhbj9cIlxuICAgIHN0YXJ0X25ld19nYW1lOiBcIkFsb2l0YSB1dXNpIHBlbGlcIlxuIyAgICBwbGF5X25vd19sZWFybl9oZWFkZXI6IFwiUGxheSBub3cgdG8gbGVhcm5cIlxuIyAgICBwbGF5X25vd19sZWFybl8xOiBcImJhc2ljIHN5bnRheCB0byBjb250cm9sIHlvdXIgY2hhcmFjdGVyXCJcbiMgICAgcGxheV9ub3dfbGVhcm5fMjogXCJ3aGlsZSBsb29wcyB0byBzb2x2ZSBwZXNreSBwdXp6bGVzXCJcbiMgICAgcGxheV9ub3dfbGVhcm5fMzogXCJzdHJpbmdzICYgdmFyaWFibGVzIHRvIGN1c3RvbWl6ZSBhY3Rpb25zXCJcbiMgICAgcGxheV9ub3dfbGVhcm5fNDogXCJob3cgdG8gZGVmZWF0IGFuIG9ncmUgKGltcG9ydGFudCBsaWZlIHNraWxscyEpXCJcbiAgICB3ZWxjb21lX3RvX3BhZ2U6IFwiVGVydmV0dWxvYSBLdXJzc2l0IHNpdnVsbGUhXCIgIyB7Y2hhbmdlfVxuICAgIG15X2NsYXNzZXM6IFwiTWludW4gbHVva2thbmlcIlxuICAgIGNsYXNzX2FkZGVkOiBcIkx1b2trYSBsaXPDpHR0eSBvbm5pc3R1bmVlc3RpIVwiXG4jICAgIHZpZXdfbGV2ZWxzOiBcInZpZXcgYWxsIGxldmVsc1wiXG4jICAgIHZpZXdfcHJvamVjdF9nYWxsZXJ5OiBcInZpZXcgbXkgY2xhc3NtYXRlcycgcHJvamVjdHNcIlxuIyAgICBqb2luX2NsYXNzOiBcIkpvaW4gQSBDbGFzc1wiXG4jICAgIGpvaW5fY2xhc3NfMjogXCJKb2luIGNsYXNzXCJcbiMgICAgYXNrX3RlYWNoZXJfZm9yX2NvZGU6IFwiQXNrIHlvdXIgdGVhY2hlciBpZiB5b3UgaGF2ZSBhIENvZGVDb21iYXQgY2xhc3MgY29kZSEgSWYgc28sIGVudGVyIGl0IGJlbG93OlwiXG4jICAgIGVudGVyX2NfY29kZTogXCI8RW50ZXIgQ2xhc3MgQ29kZT5cIlxuICAgIGpvaW46IFwiTGlpdHlcIlxuICAgIGpvaW5pbmc6IFwiTGlpdHl0w6TDpG4gbHVva2thYW5cIlxuICAgIGNvdXJzZV9jb21wbGV0ZTogXCJLdXJzc2kgU3Vvcml0ZXR0dVwiXG4gICAgcGxheV9hcmVuYTogXCJQZWxhYSBBcmVlbmFcIlxuIyAgICB2aWV3X3Byb2plY3Q6IFwiVmlldyBQcm9qZWN0XCJcbiAgICBzdGFydDogXCJBbG9pdGFcIlxuICAgIGxhc3RfbGV2ZWw6IFwiVmlpbWVpbmVuIHBlbGF0dHUgdGFzb1wiXG4gICAgbm90X3lvdTogXCJKb2t1IG11dT9cIlxuICAgIGNvbnRpbnVlX3BsYXlpbmc6IFwiSmF0a2EgUGVsYWFtaXN0YVwiXG4jICAgIG9wdGlvbjFfaGVhZGVyOiBcIkludml0ZSBTdHVkZW50cyBieSBFbWFpbFwiXG4gICAgcmVtb3ZlX3N0dWRlbnQxOiBcIlBvaXN0YSBvcHBpbGFzXCJcbiAgICBhcmVfeW91X3N1cmU6IFwiSGFsdWF0a28gdmFybWFzdGkgcG9pc3RhYSB0w6Rtw6RuIG9wcGlsYWFuIHTDpHN0w6QgbHVva2FzdGE/XCJcbiMgICAgcmVtb3ZlX2Rlc2NyaXB0aW9uMTogXCJTdHVkZW50IHdpbGwgbG9zZSBhY2Nlc3MgdG8gdGhpcyBjbGFzc3Jvb20gYW5kIGFzc2lnbmVkIGNsYXNzZXMuIFByb2dyZXNzIGFuZCBnYW1lcGxheSBpcyBOT1QgbG9zdCwgYW5kIHRoZSBzdHVkZW50IGNhbiBiZSBhZGRlZCBiYWNrIHRvIHRoZSBjbGFzc3Jvb20gYXQgYW55IHRpbWUuXCJcbiMgICAgcmVtb3ZlX2Rlc2NyaXB0aW9uMjogXCJUaGUgYWN0aXZhdGVkIHBhaWQgbGljZW5zZSB3aWxsIG5vdCBiZSByZXR1cm5lZC5cIlxuIyAgICBsaWNlbnNlX3dpbGxfcmV2b2tlOiBcIlRoaXMgc3R1ZGVudCdzIHBhaWQgbGljZW5zZSB3aWxsIGJlIHJldm9rZWQgYW5kIG1hZGUgYXZhaWxhYmxlIHRvIGFzc2lnbiB0byBhbm90aGVyIHN0dWRlbnQuXCJcbiAgICBrZWVwX3N0dWRlbnQ6IFwiUGlkw6QgT3BwaWxhc1wiXG4gICAgcmVtb3ZpbmdfdXNlcjogXCJQb2lzdGV0YWFuIGvDpHl0dMOkasOkw6RcIlxuIyAgICBzdWJ0aXRsZTogXCJSZXZpZXcgY291cnNlIG92ZXJ2aWV3cyBhbmQgbGV2ZWxzXCIgIyBGbGF0IHN0eWxlIHJlZGVzaWduXG4jICAgIGNoYW5nZWxvZzogXCJWaWV3IGxhdGVzdCBjaGFuZ2VzIHRvIGNvdXJzZSBsZXZlbHMuXCJcbiAgICBzZWxlY3RfbGFuZ3VhZ2U6IFwiVmFsaXRzZSBraWVsaVwiXG4gICAgc2VsZWN0X2xldmVsOiBcIlZhbGl0c2UgdGFzb1wiXG4gICAgcGxheV9sZXZlbDogXCJQZWxhYSB0YXNvXCJcbiMgICAgY29uY2VwdHNfY292ZXJlZDogXCJDb25jZXB0cyBjb3ZlcmVkXCJcbiMgICAgdmlld19ndWlkZV9vbmxpbmU6IFwiTGV2ZWwgT3ZlcnZpZXdzIGFuZCBTb2x1dGlvbnNcIlxuIyAgICBncmFudHNfbGlmZXRpbWVfYWNjZXNzOiBcIkdyYW50cyBhY2Nlc3MgdG8gYWxsIENvdXJzZXMuXCJcbiMgICAgZW5yb2xsbWVudF9jcmVkaXRzX2F2YWlsYWJsZTogXCJMaWNlbnNlcyBBdmFpbGFibGU6XCJcbiAgICBsYW5ndWFnZV9zZWxlY3Q6IFwiVmFsaXRzZSBraWVsaVwiICMgQ2xhc3Nyb29tU2V0dGluZ3NNb2RhbFxuIyAgICBsYW5ndWFnZV9jYW5ub3RfY2hhbmdlOiBcIkxhbmd1YWdlIGNhbm5vdCBiZSBjaGFuZ2VkIG9uY2Ugc3R1ZGVudHMgam9pbiBhIGNsYXNzLlwiXG4gICAgYXZnX3N0dWRlbnRfZXhwX2xhYmVsOiBcIktlc2tpbcOkw6Ryw6RpbmVuIG9wcGlsYWlkZW4gb2hqZWxtb2ludGlrb2tlbXVzXCJcbiMgICAgYXZnX3N0dWRlbnRfZXhwX2Rlc2M6IFwiVGhpcyB3aWxsIGhlbHAgdXMgdW5kZXJzdGFuZCBob3cgdG8gcGFjZSBjb3Vyc2VzIGJldHRlci5cIlxuICAgIGF2Z19zdHVkZW50X2V4cF9zZWxlY3Q6IFwiVmFsaXRzZSBwYXJoYWl0ZW4ga3V2YWF2YSB2YWlodG9laHRvXCJcbiMgICAgYXZnX3N0dWRlbnRfZXhwX25vbmU6IFwiTm8gRXhwZXJpZW5jZSAtIGxpdHRsZSB0byBubyBleHBlcmllbmNlXCJcbiMgICAgYXZnX3N0dWRlbnRfZXhwX2JlZ2lubmVyOiBcIkJlZ2lubmVyIC0gc29tZSBleHBvc3VyZSBvciBibG9jay1iYXNlZFwiXG4jICAgIGF2Z19zdHVkZW50X2V4cF9pbnRlcm1lZGlhdGU6IFwiSW50ZXJtZWRpYXRlIC0gc29tZSBleHBlcmllbmNlIHdpdGggdHlwZWQgY29kZVwiXG4jICAgIGF2Z19zdHVkZW50X2V4cF9hZHZhbmNlZDogXCJBZHZhbmNlZCAtIGV4dGVuc2l2ZSBleHBlcmllbmNlIHdpdGggdHlwZWQgY29kZVwiXG4jICAgIGF2Z19zdHVkZW50X2V4cF92YXJpZWQ6IFwiVmFyaWVkIExldmVscyBvZiBFeHBlcmllbmNlXCJcbiAgICBzdHVkZW50X2FnZV9yYW5nZV9sYWJlbDogXCJPcHBpbGFpZGVuIGlrw6RoYWFydWtrYVwiXG4gICAgc3R1ZGVudF9hZ2VfcmFuZ2VfeW91bmdlcjogXCJOdW9yZW1waSBrdWluIDZcIlxuICAgIHN0dWRlbnRfYWdlX3JhbmdlX29sZGVyOiBcIlZhbmhlbXBpIGt1aW4gMThcIlxuICAgIHN0dWRlbnRfYWdlX3JhbmdlX3RvOiBcIi1cIlxuICAgIGNyZWF0ZV9jbGFzczogXCJMdW8gTHVva2thXCJcbiAgICBjbGFzc19uYW1lOiBcIkx1b2thbiBOaW1pXCJcbiAgICB0ZWFjaGVyX2FjY291bnRfcmVzdHJpY3RlZDogXCJPcGV0dGFqYW4gdGlsaWxsw6RzaSBlaSB2b2kga8OkeXR0w6TDpCBvcHBpbGFzc2lzw6RsdMO2w6QuXCJcbiAgICBhY2NvdW50X3Jlc3RyaWN0ZWQ6IFwiT3BwaWxhYW4gdGlsaSB0YXJ2aXRhYW4gdMOkbcOkbiBzaXZ1biBrw6R5dHTDpG1pc2Vlbi5cIlxuICAgIHVwZGF0ZV9hY2NvdW50X2xvZ2luX3RpdGxlOiBcIktpcmphdWR1IHNpc8Okw6RuIHDDpGl2aXR0w6TDpGtzZXNpIFRpbGlzaVwiXG4gICAgdXBkYXRlX2FjY291bnRfdGl0bGU6IFwiVGlsaXNpIHRhcnZpdHNlZSB0b2ltZW5waXRlaXTDpCFcIlxuICAgIHVwZGF0ZV9hY2NvdW50X2JsdXJiOiBcIkVubmVuIGt1biBww6TDpHNldCBrw6RzaWtzaSBsdW9ra2lpc2ksIHZhbGl0c2UgbWl0ZW4gaGFsdWF0IGvDpHl0dMOkw6QgdMOkdMOkIHRpbGnDpC5cIlxuICAgIHVwZGF0ZV9hY2NvdW50X2N1cnJlbnRfdHlwZTogXCJOeWt5aXNlbiBUaWxpbiBUeXlwcGk6XCJcbiAgICB1cGRhdGVfYWNjb3VudF9hY2NvdW50X2VtYWlsOiBcIlRpbGluIFPDpGhrw7Zwb3N0aS9Lw6R5dHTDpGrDpG5pbWk6XCIgIyB7Y2hhbmdlfVxuICAgIHVwZGF0ZV9hY2NvdW50X2FtX3RlYWNoZXI6IFwiT2xlbiBPcGV0dGFqYVwiXG4jICAgIHVwZGF0ZV9hY2NvdW50X2tlZXBfYWNjZXNzOiBcIktlZXAgYWNjZXNzIHRvIGNsYXNzZXMgSSd2ZSBjcmVhdGVkXCJcbiAgICB1cGRhdGVfYWNjb3VudF90ZWFjaGVyc19jYW46IFwiT3BldHRhamFuIFRpbGkgUHlzdHl5OlwiXG4gICAgdXBkYXRlX2FjY291bnRfdGVhY2hlcnNfY2FuMTogXCJMdW9kYS9IYWxsaXRhL2xpc8OkdMOkIGx1b2traWFcIlxuICAgIHVwZGF0ZV9hY2NvdW50X3RlYWNoZXJzX2NhbjI6IFwiTmltaXR0w6TDpC9pbG1vaXR0YWEgb3BwaWxhaXRhIGt1cnNlaWxsZVwiXG4gICAgdXBkYXRlX2FjY291bnRfdGVhY2hlcnNfY2FuMzogXCJBdmFhbWFhbiBrYWlra2kga3Vyc3NpbiB0YXNvdCBrb2tlaWx1dW5cIlxuICAgIHVwZGF0ZV9hY2NvdW50X3RlYWNoZXJzX2NhbjQ6IFwiS8OkeXR0w6TDpCB1dXNpYSB2YWluIG9wZXR0YWppbGxlIHRvaW1pbnRvamEga3VuIGp1bGthaXNlbW1lIG5lXCJcbiAgICB1cGRhdGVfYWNjb3VudF90ZWFjaGVyc193YXJuaW5nOiBcIlZhcm9pdHVzOiBTaW51dCBwb2lzdGV0YWFuIGthaWtpc3RhIGx1b2tpc3RhIGpvaG9tIG9sZXQgbGlpdHR5bnl0IGphIGV0IHZvaSBwZWxhdGEgZW7DpMOkIG9wcGlsYWFuYS5cIlxuICAgIHVwZGF0ZV9hY2NvdW50X3JlbWFpbl90ZWFjaGVyOiBcIlB5c3kgT3BldHRhamFuYVwiXG4gICAgdXBkYXRlX2FjY291bnRfdXBkYXRlX3RlYWNoZXI6IFwiUMOkaXZpdMOkIFRpbGkgT3BldHRhamFrc2lcIlxuICAgIHVwZGF0ZV9hY2NvdW50X2FtX3N0dWRlbnQ6IFwiT2xlbiBPcHBpbGFzXCJcbiMgICAgdXBkYXRlX2FjY291bnRfcmVtb3ZlX2FjY2VzczogXCJSZW1vdmUgYWNjZXNzIHRvIGNsYXNzZXMgSSBoYXZlIGNyZWF0ZWRcIlxuICAgIHVwZGF0ZV9hY2NvdW50X3N0dWRlbnRzX2NhbjogXCJPcHBpbGFhbiBUaWxpIFB5c3R5eTpcIlxuICAgIHVwZGF0ZV9hY2NvdW50X3N0dWRlbnRzX2NhbjE6IFwiTGlpdHR5w6QgbHVva2tpaW5cIlxuICAgIHVwZGF0ZV9hY2NvdW50X3N0dWRlbnRzX2NhbjI6IFwiUGVsYXRhIGt1cnNzZWphIG9wcGlsYWFuYSBqYSB0YXJra2FpbGxhIG9tYWEgZWRpc3R5bWlzdMOkw6RuXCJcbiAgICB1cGRhdGVfYWNjb3VudF9zdHVkZW50c19jYW4zOiBcIlRhaXN0ZWxsYSBsdW9ra2FrYXZlcmVpdGEgdmFzdGFhbiBhcmVlbm9pbGxhXCJcbiAgICB1cGRhdGVfYWNjb3VudF9zdHVkZW50c19jYW40OiBcIkvDpHl0dMOkw6QgdXVzaWEgdmFpbiBvcHBpbGFpbGxlIHRvaW1pbnRvamEga3VuIGp1bGthaXNlbW1lIG5lXCJcbiAgICB1cGRhdGVfYWNjb3VudF9zdHVkZW50c193YXJuaW5nOiBcIlZhcm9pdHVzOiBFdCB2b2kgaGFsbGl0YSBsdW9ra2lhIGpvdGthIG9sZXQgbHVvbnV0IHRhaSBsdW9kYSB1dXNpYSBsdW9ra2lhLlwiXG4jICAgIHVuc3Vic2NyaWJlX3dhcm5pbmc6IFwiV2FybmluZzogWW91IHdpbGwgYmUgdW5zdWJzY3JpYmVkIGZyb20geW91ciBtb250aGx5IHN1YnNjcmlwdGlvbi5cIlxuICAgIHVwZGF0ZV9hY2NvdW50X3JlbWFpbl9zdHVkZW50OiBcIlB5c3kgT3BwaWxhYWFuYVwiXG4gICAgdXBkYXRlX2FjY291bnRfdXBkYXRlX3N0dWRlbnQ6IFwiUMOkaXZpdMOkIFRpbGkgT3BwaWxhYWtzaVwiXG4jICAgIG5lZWRfYV9jbGFzc19jb2RlOiBcIllvdSdsbCBuZWVkIGEgQ2xhc3MgQ29kZSBmb3IgdGhlIGNsYXNzIHlvdSdyZSBqb2luaW5nOlwiXG4gICAgdXBkYXRlX2FjY291bnRfbm90X3N1cmU6IFwiRXRrw7Ygb2xlIHZhcm1hIG1pbmvDpCB2YWxpdHNldD8gTMOkaGV0w6Qgc8OkaGvDtnBvc3RpYVwiXG4gICAgdXBkYXRlX2FjY291bnRfY29uZmlybV91cGRhdGVfc3R1ZGVudDogXCJPbGV0a28gdmFybWEgZXR0w6QgaGFsdWF0IHDDpGl2aXR0w6TDpCB0aWxpc2kgb3BwaWxhYW4gdGlsaWtzaT9cIlxuICAgIHVwZGF0ZV9hY2NvdW50X2NvbmZpcm1fdXBkYXRlX3N0dWRlbnQyOiBcIkV0IHZvaSBoYWxsaXRhIGx1b2traWEgam90a2Egb2xldCBsdW9udXQgZXRrw6Qgdm9pIGx1b2RhIHV1c2lhIGx1b2traWEuIEthaWtraSBsdW9ra2FzaSBwb2lzdGV0YWFuIENvZGVDb21iYXQ6aXN0YSBlaWvDpCBuaWl0w6Qgdm9pIHBhbGF1dHRhYS5cIlxuICAgIGluc3RydWN0b3I6IFwiT2hqYWFqYTogXCJcbiMgICAgeW91dmVfYmVlbl9pbnZpdGVkXzE6IFwiWW91J3ZlIGJlZW4gaW52aXRlZCB0byBqb2luIFwiXG4jICAgIHlvdXZlX2JlZW5faW52aXRlZF8yOiBcIiwgd2hlcmUgeW91J2xsIGxlYXJuIFwiXG4jICAgIHlvdXZlX2JlZW5faW52aXRlZF8zOiBcIiB3aXRoIHlvdXIgY2xhc3NtYXRlcyBpbiBDb2RlQ29tYmF0LlwiXG4jICAgIGJ5X2pvaW5pbmdfMTogXCJCeSBqb2luaW5nIFwiXG4jICAgIGJ5X2pvaW5pbmdfMjogXCJ3aWxsIGJlIGFibGUgdG8gaGVscCByZXNldCB5b3VyIHBhc3N3b3JkIGlmIHlvdSBmb3JnZXQgb3IgbG9zZSBpdC4gWW91IGNhbiBhbHNvIHZlcmlmeSB5b3VyIGVtYWlsIGFkZHJlc3Mgc28gdGhhdCB5b3UgY2FuIHJlc2V0IHRoZSBwYXNzd29yZCB5b3Vyc2VsZiFcIlxuIyAgICBzZW50X3ZlcmlmaWNhdGlvbjogXCJXZSd2ZSBzZW50IGEgdmVyaWZpY2F0aW9uIGVtYWlsIHRvOlwiXG4jICAgIHlvdV9jYW5fZWRpdDogXCJZb3UgY2FuIGVkaXQgeW91ciBlbWFpbCBhZGRyZXNzIGluIFwiXG4gICAgYWNjb3VudF9zZXR0aW5nczogXCJUaWxpbiBhc2V0dWtzZXRcIlxuICAgIHNlbGVjdF95b3VyX2hlcm86IFwiVmFsaXRzZSBzYW5rYXJpc2lcIlxuICAgIHNlbGVjdF95b3VyX2hlcm9fZGVzY3JpcHRpb246IFwiVm9pdCB2YWlodGFhIHNhbmthcmlhc2kgbWVuZW3DpGxsw6Qga3Vyc3NpdCBzaXZ1bGxlIGphIHZhbGl0c2VtYWxsYSBcXFwiVmFsaXRzZSBzYW5rYXJpc2lcXFwiXCJcbiAgICBzZWxlY3RfdGhpc19oZXJvOiBcIlZhbGl0c2UgdMOkbcOkIHNhbmthcmlcIlxuICAgIGN1cnJlbnRfaGVybzogXCJOeWt5aW5lbiBzYW5rYXJpOlwiXG4gICAgY3VycmVudF9oZXJvX2ZlbWFsZTogXCJOeWt5aW5lbiBzYW5rYXJpOlwiXG4jICAgIHdlYl9kZXZfbGFuZ3VhZ2VfdHJhbnNpdGlvbjogXCJBbGwgY2xhc3NlcyBwcm9ncmFtIGluIEhUTUwgLyBKYXZhU2NyaXB0IGZvciB0aGlzIGNvdXJzZS4gIENsYXNzZXMgdGhhdCBoYXZlIGJlZW4gdXNpbmcgUHl0aG9uIHdpbGwgc3RhcnQgd2l0aCBleHRyYSBKYXZhU2NyaXB0IGludHJvIGxldmVscyB0byBlYXNlIHRoZSB0cmFuc2l0aW9uLiAgQ2xhc3NlcyB0aGF0IGFyZSBhbHJlYWR5IHVzaW5nIEphdmFTY3JpcHQgd2lsbCBza2lwIHRoZSBpbnRybyBsZXZlbHMuXCJcbiMgICAgY291cnNlX21lbWJlcnNoaXBfcmVxdWlyZWRfdG9fcGxheTogXCJZb3UnbGwgbmVlZCB0byBqb2luIGEgY291cnNlIHRvIHBsYXkgdGhpcyBsZXZlbC5cIlxuIyAgICBsaWNlbnNlX3JlcXVpcmVkX3RvX3BsYXk6IFwiQXNrIHlvdXIgdGVhY2hlciB0byBhc3NpZ24gYSBsaWNlbnNlIHRvIHlvdSBzbyB5b3UgY2FuIGNvbnRpbnVlIHRvIHBsYXkgQ29kZUNvbWJhdCFcIlxuIyAgICB1cGRhdGVfb2xkX2NsYXNzcm9vbTogXCJOZXcgc2Nob29sIHllYXIsIG5ldyBsZXZlbHMhXCJcbiMgICAgdXBkYXRlX29sZF9jbGFzc3Jvb21fZGV0YWlsOiBcIlRvIG1ha2Ugc3VyZSB5b3UncmUgZ2V0dGluZyB0aGUgbW9zdCB1cC10by1kYXRlIGxldmVscywgbWFrZSBzdXJlIHlvdSBjcmVhdGUgYSBuZXcgY2xhc3MgZm9yIHRoaXMgc2VtZXN0ZXIgYnkgY2xpY2tpbmcgQ3JlYXRlIGEgTmV3IENsYXNzIG9uIHlvdXJcIlxuIyAgICB0ZWFjaGVyX2Rhc2hib2FyZDogXCJ0ZWFjaGVyIGRhc2hib2FyZFwiXG4jICAgIHVwZGF0ZV9vbGRfY2xhc3Nyb29tX2RldGFpbF8yOiBcImFuZCBnaXZpbmcgc3R1ZGVudHMgdGhlIG5ldyBDbGFzcyBDb2RlIHRoYXQgYXBwZWFycy5cIlxuIyAgICB2aWV3X2Fzc2Vzc21lbnRzOiBcIlZpZXcgQXNzZXNzbWVudHNcIlxuIyAgICB2aWV3X2NoYWxsZW5nZXM6IFwidmlldyBjaGFsbGVuZ2UgbGV2ZWxzXCJcbiMgICAgY2hhbGxlbmdlOiBcIkNoYWxsZW5nZTpcIlxuIyAgICBjaGFsbGVuZ2VfbGV2ZWw6IFwiQ2hhbGxlbmdlIExldmVsOlwiXG4jICAgIHN0YXR1czogXCJTdGF0dXM6XCJcbiMgICAgYXNzZXNzbWVudHM6IFwiQXNzZXNzbWVudHNcIlxuIyAgICBjaGFsbGVuZ2VzOiBcIkNoYWxsZW5nZXNcIlxuIyAgICBsZXZlbF9uYW1lOiBcIkxldmVsIE5hbWU6XCJcbiMgICAga2VlcF90cnlpbmc6IFwiS2VlcCBUcnlpbmdcIlxuIyAgICBzdGFydF9jaGFsbGVuZ2U6IFwiU3RhcnQgQ2hhbGxlbmdlXCJcbiMgICAgbG9ja2VkOiBcIkxvY2tlZFwiXG4jICAgIGNvbmNlcHRzX3VzZWQ6IFwiQ29uY2VwdHMgVXNlZDpcIlxuXG4jICBwcm9qZWN0X2dhbGxlcnk6XG4jICAgIG5vX3Byb2plY3RzX3B1Ymxpc2hlZDogXCJCZSB0aGUgZmlyc3QgdG8gcHVibGlzaCBhIHByb2plY3QgaW4gdGhpcyBjb3Vyc2UhXCJcbiMgICAgdmlld19wcm9qZWN0OiBcIlZpZXcgUHJvamVjdFwiXG4jICAgIGVkaXRfcHJvamVjdDogXCJFZGl0IFByb2plY3RcIlxuXG4jICB0ZWFjaGVyOlxuIyAgICBhc3NpZ25pbmdfY291cnNlOiBcIkFzc2lnbmluZyBjb3Vyc2VcIlxuIyAgICBiYWNrX3RvX3RvcDogXCJCYWNrIHRvIFRvcFwiXG4jICAgIGNsaWNrX3N0dWRlbnRfY29kZTogXCJDbGljayBvbiBhbnkgbGV2ZWwgdGhhdCB0aGUgc3R1ZGVudCBoYXMgc3RhcnRlZCBvciBjb21wbGV0ZWQgYmVsb3cgdG8gdmlldyB0aGUgY29kZSB0aGV5IHdyb3RlLlwiXG4jICAgIGNvZGU6IFwiX19uYW1lX18ncyBDb2RlXCJcbiMgICAgY29tcGxldGVfc29sdXRpb246IFwiQ29tcGxldGUgU29sdXRpb25cIlxuIyAgICBjb3Vyc2Vfbm90X3N0YXJ0ZWQ6IFwiU3R1ZGVudCBoYXMgbm90IHN0YXJ0ZWQgdGhpcyBjb3Vyc2UgeWV0LlwiXG4jICAgIG5vX2NvZGVfeWV0OiBcIlN0dWRlbnQgaGFzIG5vdCB3cml0dGVuIGFueSBjb2RlIGZvciB0aGlzIGxldmVsIHlldC5cIlxuIyAgICBvcGVuX2VuZGVkX2xldmVsOiBcIk9wZW4tRW5kZWQgTGV2ZWxcIlxuIyAgICBwYXJ0aWFsX3NvbHV0aW9uOiBcIlBhcnRpYWwgU29sdXRpb25cIlxuIyAgICByZW1vdmluZ19jb3Vyc2U6IFwiUmVtb3ZpbmcgY291cnNlXCJcbiMgICAgc29sdXRpb25fYXJlbmFfYmx1cmI6IFwiU3R1ZGVudHMgYXJlIGVuY291cmFnZWQgdG8gc29sdmUgYXJlbmEgbGV2ZWxzIGNyZWF0aXZlbHkuIFRoZSBzb2x1dGlvbiBwcm92aWRlZCBiZWxvdyBtZWV0cyB0aGUgcmVxdWlyZW1lbnRzIG9mIHRoZSBhcmVuYSBsZXZlbC5cIlxuIyAgICBzb2x1dGlvbl9jaGFsbGVuZ2VfYmx1cmI6IFwiU3R1ZGVudHMgYXJlIGVuY291cmFnZWQgdG8gc29sdmUgb3Blbi1lbmRlZCBjaGFsbGVuZ2UgbGV2ZWxzIGNyZWF0aXZlbHkuIE9uZSBwb3NzaWJsZSBzb2x1dGlvbiBpcyBkaXNwbGF5ZWQgYmVsb3cuXCJcbiMgICAgc29sdXRpb25fcHJvamVjdF9ibHVyYjogXCJTdHVkZW50cyBhcmUgZW5jb3VyYWdlZCB0byBidWlsZCBhIGNyZWF0aXZlIHByb2plY3QgaW4gdGhpcyBsZXZlbC4gVGhlIHNvbHV0aW9uIHByb3ZpZGVkIGJlbG93IG1lZXRzIHRoZSByZXF1aXJlbWVudHMgb2YgdGhlIHByb2plY3QgbGV2ZWwuXCJcbiMgICAgc3R1ZGVudHNfY29kZV9ibHVyYjogXCJBIGNvcnJlY3Qgc29sdXRpb24gdG8gZWFjaCBsZXZlbCBpcyBwcm92aWRlZCB3aGVyZSBhcHByb3ByaWF0ZS4gSW4gc29tZSBjYXNlcywgaXTigJlzIHBvc3NpYmxlIGZvciBhIHN0dWRlbnQgdG8gc29sdmUgYSBsZXZlbCB1c2luZyBkaWZmZXJlbnQgY29kZS4gU29sdXRpb25zIGFyZSBub3Qgc2hvd24gZm9yIGxldmVscyB0aGUgc3R1ZGVudCBoYXMgbm90IHN0YXJ0ZWQuXCJcbiMgICAgY291cnNlX3NvbHV0aW9uOiBcIkNvdXJzZSBTb2x1dGlvblwiXG4jICAgIGxldmVsX292ZXJ2aWV3X3NvbHV0aW9uczogXCJMZXZlbCBPdmVydmlldyBhbmQgU29sdXRpb25zXCJcbiMgICAgbm9fc3R1ZGVudF9hc3NpZ25lZDogXCJObyBzdHVkZW50cyBoYXZlIGJlZW4gYXNzaWduZWQgdGhpcyBjb3Vyc2UuXCJcbiMgICAgcGFyZW5fbmV3OiBcIihuZXcpXCJcbiMgICAgc3R1ZGVudF9jb2RlOiBcIl9fbmFtZV9fJ3MgU3R1ZGVudCBDb2RlXCJcbiMgICAgdGVhY2hlcl9kYXNoYm9hcmQ6IFwiVGVhY2hlciBEYXNoYm9hcmRcIiAjIE5hdmJhclxuIyAgICBteV9jbGFzc2VzOiBcIk15IENsYXNzZXNcIlxuIyAgICBjb3Vyc2VzOiBcIkNvdXJzZSBHdWlkZXNcIlxuIyAgICBlbnJvbGxtZW50czogXCJTdHVkZW50IExpY2Vuc2VzXCJcbiMgICAgcmVzb3VyY2VzOiBcIlJlc291cmNlc1wiXG4jICAgIGhlbHA6IFwiSGVscFwiXG4jICAgIGxhbmd1YWdlOiBcIkxhbmd1YWdlXCJcbiMgICAgZWRpdF9jbGFzc19zZXR0aW5nczogXCJlZGl0IGNsYXNzIHNldHRpbmdzXCJcbiMgICAgYWNjZXNzX3Jlc3RyaWN0ZWQ6IFwiQWNjb3VudCBVcGRhdGUgUmVxdWlyZWRcIlxuIyAgICB0ZWFjaGVyX2FjY291bnRfcmVxdWlyZWQ6IFwiQSB0ZWFjaGVyIGFjY291bnQgaXMgcmVxdWlyZWQgdG8gYWNjZXNzIHRoaXMgY29udGVudC5cIlxuIyAgICBjcmVhdGVfdGVhY2hlcl9hY2NvdW50OiBcIkNyZWF0ZSBUZWFjaGVyIEFjY291bnRcIlxuIyAgICB3aGF0X2lzX2FfdGVhY2hlcl9hY2NvdW50OiBcIldoYXQncyBhIFRlYWNoZXIgQWNjb3VudD9cIlxuIyAgICB0ZWFjaGVyX2FjY291bnRfZXhwbGFuYXRpb246IFwiQSBDb2RlQ29tYmF0IFRlYWNoZXIgYWNjb3VudCBhbGxvd3MgeW91IHRvIHNldCB1cCBjbGFzc3Jvb21zLCBtb25pdG9yIHN0dWRlbnRz4oCZIHByb2dyZXNzIGFzIHRoZXkgd29yayB0aHJvdWdoIGNvdXJzZXMsIG1hbmFnZSBsaWNlbnNlcyBhbmQgYWNjZXNzIHJlc291cmNlcyB0byBhaWQgaW4geW91ciBjdXJyaWN1bHVtLWJ1aWxkaW5nLlwiXG4jICAgIGN1cnJlbnRfY2xhc3NlczogXCJDdXJyZW50IENsYXNzZXNcIlxuIyAgICBhcmNoaXZlZF9jbGFzc2VzOiBcIkFyY2hpdmVkIENsYXNzZXNcIlxuIyAgICBhcmNoaXZlZF9jbGFzc2VzX2JsdXJiOiBcIkNsYXNzZXMgY2FuIGJlIGFyY2hpdmVkIGZvciBmdXR1cmUgcmVmZXJlbmNlLiBVbmFyY2hpdmUgYSBjbGFzcyB0byB2aWV3IGl0IGluIHRoZSBDdXJyZW50IENsYXNzZXMgbGlzdCBhZ2Fpbi5cIlxuIyAgICB2aWV3X2NsYXNzOiBcInZpZXcgY2xhc3NcIlxuIyAgICBhcmNoaXZlX2NsYXNzOiBcImFyY2hpdmUgY2xhc3NcIlxuIyAgICB1bmFyY2hpdmVfY2xhc3M6IFwidW5hcmNoaXZlIGNsYXNzXCJcbiMgICAgdW5hcmNoaXZlX3RoaXNfY2xhc3M6IFwiVW5hcmNoaXZlIHRoaXMgY2xhc3NcIlxuIyAgICBub19zdHVkZW50c195ZXQ6IFwiVGhpcyBjbGFzcyBoYXMgbm8gc3R1ZGVudHMgeWV0LlwiXG4jICAgIG5vX3N0dWRlbnRzX3lldF92aWV3X2NsYXNzOiBcIlZpZXcgY2xhc3MgdG8gYWRkIHN0dWRlbnRzLlwiXG4jICAgIHRyeV9yZWZyZXNoaW5nOiBcIihZb3UgbWF5IG5lZWQgdG8gcmVmcmVzaCB0aGUgcGFnZSlcIlxuIyAgICBjcmVhdGVfbmV3X2NsYXNzOiBcIkNyZWF0ZSBhIE5ldyBDbGFzc1wiXG4jICAgIGNsYXNzX292ZXJ2aWV3OiBcIkNsYXNzIE92ZXJ2aWV3XCIgIyBWaWV3IENsYXNzIHBhZ2VcbiMgICAgYXZnX3BsYXl0aW1lOiBcIkF2ZXJhZ2UgbGV2ZWwgcGxheXRpbWVcIlxuIyAgICB0b3RhbF9wbGF5dGltZTogXCJUb3RhbCBwbGF5IHRpbWVcIlxuIyAgICBhdmdfY29tcGxldGVkOiBcIkF2ZXJhZ2UgbGV2ZWxzIGNvbXBsZXRlZFwiXG4jICAgIHRvdGFsX2NvbXBsZXRlZDogXCJUb3RhbCBsZXZlbHMgY29tcGxldGVkXCJcbiMgICAgY3JlYXRlZDogXCJDcmVhdGVkXCJcbiMgICAgY29uY2VwdHNfY292ZXJlZDogXCJDb25jZXB0cyBjb3ZlcmVkXCJcbiMgICAgZWFybGllc3RfaW5jb21wbGV0ZTogXCJFYXJsaWVzdCBpbmNvbXBsZXRlIGxldmVsXCJcbiMgICAgbGF0ZXN0X2NvbXBsZXRlOiBcIkxhdGVzdCBjb21wbGV0ZWQgbGV2ZWxcIlxuIyAgICBlbnJvbGxfc3R1ZGVudDogXCJFbnJvbGwgc3R1ZGVudFwiXG4jICAgIGFwcGx5X2xpY2Vuc2U6IFwiQXBwbHkgTGljZW5zZVwiXG4jICAgIHJldm9rZV9saWNlbnNlOiBcIlJldm9rZSBMaWNlbnNlXCJcbiMgICAgY291cnNlX3Byb2dyZXNzOiBcIkNvdXJzZSBQcm9ncmVzc1wiXG4jICAgIG5vdF9hcHBsaWNhYmxlOiBcIk4vQVwiXG4jICAgIGVkaXQ6IFwiZWRpdFwiXG4jICAgIGVkaXRfMjogXCJFZGl0XCJcbiMgICAgcmVtb3ZlOiBcInJlbW92ZVwiXG4jICAgIGxhdGVzdF9jb21wbGV0ZWQ6IFwiTGF0ZXN0IGNvbXBsZXRlZDpcIlxuIyAgICBzb3J0X2J5OiBcIlNvcnQgYnlcIlxuIyAgICBwcm9ncmVzczogXCJQcm9ncmVzc1wiXG4jICAgIGNvbmNlcHRzX3VzZWQ6IFwiQ29uY2VwdHMgdXNlZCBieSBTdHVkZW50OlwiXG4jICAgIGNvbmNlcHRfY2hlY2tlZDogXCJDb25jZXB0IGNoZWNrZWQ6XCJcbiMgICAgY29tcGxldGVkOiBcIkNvbXBsZXRlZFwiXG4jICAgIHByYWN0aWNlOiBcIlByYWN0aWNlXCJcbiMgICAgc3RhcnRlZDogXCJTdGFydGVkXCJcbiMgICAgbm9fcHJvZ3Jlc3M6IFwiTm8gcHJvZ3Jlc3NcIlxuIyAgICBub3RfcmVxdWlyZWQ6IFwiTm90IHJlcXVpcmVkXCJcbiMgICAgc2VsZWN0X2NvdXJzZTogXCJTZWxlY3QgY291cnNlIHRvIHZpZXdcIlxuIyAgICBwcm9ncmVzc19jb2xvcl9rZXk6IFwiUHJvZ3Jlc3MgY29sb3Iga2V5OlwiXG4jICAgIGxldmVsX2luX3Byb2dyZXNzOiBcIkxldmVsIGluIFByb2dyZXNzXCJcbiMgICAgbGV2ZWxfbm90X3N0YXJ0ZWQ6IFwiTGV2ZWwgTm90IFN0YXJ0ZWRcIlxuIyAgICBwcm9qZWN0X29yX2FyZW5hOiBcIlByb2plY3Qgb3IgQXJlbmFcIlxuIyAgICBzdHVkZW50c19ub3RfYXNzaWduZWQ6IFwiU3R1ZGVudHMgd2hvIGhhdmUgbm90IGJlZW4gYXNzaWduZWQge3tjb3Vyc2VOYW1lfX1cIlxuIyAgICBjb3Vyc2Vfb3ZlcnZpZXc6IFwiQ291cnNlIE92ZXJ2aWV3XCJcbiMgICAgY29weV9jbGFzc19jb2RlOiBcIkNvcHkgQ2xhc3MgQ29kZVwiXG4jICAgIGNsYXNzX2NvZGVfYmx1cmI6IFwiU3R1ZGVudHMgY2FuIGpvaW4geW91ciBjbGFzcyB1c2luZyB0aGlzIENsYXNzIENvZGUuIE5vIGVtYWlsIGFkZHJlc3MgaXMgcmVxdWlyZWQgd2hlbiBjcmVhdGluZyBhIFN0dWRlbnQgYWNjb3VudCB3aXRoIHRoaXMgQ2xhc3MgQ29kZS5cIlxuIyAgICBjb3B5X2NsYXNzX3VybDogXCJDb3B5IENsYXNzIFVSTFwiXG4jICAgIGNsYXNzX2pvaW5fdXJsX2JsdXJiOiBcIllvdSBjYW4gYWxzbyBwb3N0IHRoaXMgdW5pcXVlIGNsYXNzIFVSTCB0byBhIHNoYXJlZCB3ZWJwYWdlLlwiXG4jICAgIGFkZF9zdHVkZW50c19tYW51YWxseTogXCJJbnZpdGUgU3R1ZGVudHMgYnkgRW1haWxcIlxuIyAgICBidWxrX2Fzc2lnbjogXCJTZWxlY3QgY291cnNlXCJcbiMgICAgYXNzaWduZWRfbXNnXzE6IFwie3tudW1iZXJBc3NpZ25lZH19IHN0dWRlbnRzIHdlcmUgYXNzaWduZWQge3tjb3Vyc2VOYW1lfX0uXCJcbiMgICAgYXNzaWduZWRfbXNnXzI6IFwie3tudW1iZXJFbnJvbGxlZH19IGxpY2Vuc2VzIHdlcmUgYXBwbGllZC5cIlxuIyAgICBhc3NpZ25lZF9tc2dfMzogXCJZb3Ugbm93IGhhdmUge3tyZW1haW5pbmdTcG90c319IGF2YWlsYWJsZSBsaWNlbnNlcyByZW1haW5pbmcuXCJcbiMgICAgYXNzaWduX2NvdXJzZTogXCJBc3NpZ24gQ291cnNlXCJcbiMgICAgcmVtb3ZlZF9jb3Vyc2VfbXNnOiBcInt7bnVtYmVyUmVtb3ZlZH19IHN0dWRlbnRzIHdlcmUgcmVtb3ZlZCBmcm9tIHt7Y291cnNlTmFtZX19LlwiXG4jICAgIHJlbW92ZV9jb3Vyc2U6IFwiUmVtb3ZlIENvdXJzZVwiXG4jICAgIG5vdF9hc3NpZ25lZF9tb2RhbF90aXRsZTogXCJDb3Vyc2VzIHdlcmUgbm90IGFzc2lnbmVkXCJcbiMgICAgbm90X2Fzc2lnbmVkX21vZGFsX3N0YXJ0ZXJfYm9keV8xOiBcIlRoaXMgY291cnNlIHJlcXVpcmVzIGEgU3RhcnRlciBMaWNlbnNlLiBZb3UgZG8gbm90IGhhdmUgZW5vdWdoIFN0YXJ0ZXIgTGljZW5zZXMgYXZhaWxhYmxlIHRvIGFzc2lnbiB0aGlzIGNvdXJzZSB0byBhbGwgX19zZWxlY3RlZF9fIHNlbGVjdGVkIHN0dWRlbnRzLlwiXG4jICAgIG5vdF9hc3NpZ25lZF9tb2RhbF9zdGFydGVyX2JvZHlfMjogXCJQdXJjaGFzZSBTdGFydGVyIExpY2Vuc2VzIHRvIGdyYW50IGFjY2VzcyB0byB0aGlzIGNvdXJzZS5cIlxuIyAgICBub3RfYXNzaWduZWRfbW9kYWxfZnVsbF9ib2R5XzE6IFwiVGhpcyBjb3Vyc2UgcmVxdWlyZXMgYSBGdWxsIExpY2Vuc2UuIFlvdSBkbyBub3QgaGF2ZSBlbm91Z2ggRnVsbCBMaWNlbnNlcyBhdmFpbGFibGUgdG8gYXNzaWduIHRoaXMgY291cnNlIHRvIGFsbCBfX3NlbGVjdGVkX18gc2VsZWN0ZWQgc3R1ZGVudHMuXCJcbiMgICAgbm90X2Fzc2lnbmVkX21vZGFsX2Z1bGxfYm9keV8yOiBcIllvdSBvbmx5IGhhdmUgX19udW1GdWxsTGljZW5zZXNBdmFpbGFibGVfXyBGdWxsIExpY2Vuc2VzIGF2YWlsYWJsZSAoX19udW1TdHVkZW50c1dpdGhvdXRGdWxsTGljZW5zZXNfXyBzdHVkZW50cyBkbyBub3QgY3VycmVudGx5IGhhdmUgYSBGdWxsIExpY2Vuc2UgYWN0aXZlKS5cIlxuIyAgICBub3RfYXNzaWduZWRfbW9kYWxfZnVsbF9ib2R5XzM6IFwiUGxlYXNlIHNlbGVjdCBmZXdlciBzdHVkZW50cywgb3IgcmVhY2ggb3V0IHRvIF9fc3VwcG9ydEVtYWlsX18gZm9yIGFzc2lzdGFuY2UuXCJcbiMgICAgYXNzaWduZWQ6IFwiQXNzaWduZWRcIlxuIyAgICBlbnJvbGxfc2VsZWN0ZWRfc3R1ZGVudHM6IFwiRW5yb2xsIFNlbGVjdGVkIFN0dWRlbnRzXCJcbiMgICAgbm9fc3R1ZGVudHNfc2VsZWN0ZWQ6IFwiTm8gc3R1ZGVudHMgd2VyZSBzZWxlY3RlZC5cIlxuIyAgICBzaG93X3N0dWRlbnRzX2Zyb206IFwiU2hvdyBzdHVkZW50cyBmcm9tXCIgIyBFbnJvbGwgc3R1ZGVudHMgbW9kYWxcbiMgICAgYXBwbHlfbGljZW5zZXNfdG9fdGhlX2ZvbGxvd2luZ19zdHVkZW50czogXCJBcHBseSBMaWNlbnNlcyB0byB0aGUgRm9sbG93aW5nIFN0dWRlbnRzXCJcbiMgICAgc3R1ZGVudHNfaGF2ZV9saWNlbnNlczogXCJUaGUgZm9sbG93aW5nIHN0dWRlbnRzIGFscmVhZHkgaGF2ZSBsaWNlbnNlcyBhcHBsaWVkOlwiXG4jICAgIGFsbF9zdHVkZW50czogXCJBbGwgU3R1ZGVudHNcIlxuIyAgICBhcHBseV9saWNlbnNlczogXCJBcHBseSBMaWNlbnNlc1wiXG4jICAgIG5vdF9lbm91Z2hfZW5yb2xsbWVudHM6IFwiTm90IGVub3VnaCBsaWNlbnNlcyBhdmFpbGFibGUuXCJcbiMgICAgZW5yb2xsbWVudHNfYmx1cmI6IFwiU3R1ZGVudHMgYXJlIHJlcXVpcmVkIHRvIGhhdmUgYSBsaWNlbnNlIHRvIGFjY2VzcyBhbnkgY29udGVudCBhZnRlciB0aGUgZmlyc3QgY291cnNlLlwiXG4jICAgIGhvd190b19hcHBseV9saWNlbnNlczogXCJIb3cgdG8gQXBwbHkgTGljZW5zZXNcIlxuIyAgICBleHBvcnRfc3R1ZGVudF9wcm9ncmVzczogXCJFeHBvcnQgU3R1ZGVudCBQcm9ncmVzcyAoQ1NWKVwiXG4jICAgIHNlbmRfZW1haWxfdG86IFwiU2VuZCBSZWNvdmVyIFBhc3N3b3JkIEVtYWlsIHRvOlwiXG4jICAgIGVtYWlsX3NlbnQ6IFwiRW1haWwgc2VudFwiXG4jICAgIHNlbmRfcmVjb3ZlcnlfZW1haWw6IFwiU2VuZCByZWNvdmVyeSBlbWFpbFwiXG4jICAgIGVudGVyX25ld19wYXNzd29yZF9iZWxvdzogXCJFbnRlciBuZXcgcGFzc3dvcmQgYmVsb3c6XCJcbiMgICAgY2hhbmdlX3Bhc3N3b3JkOiBcIkNoYW5nZSBQYXNzd29yZFwiXG4jICAgIGNoYW5nZWQ6IFwiQ2hhbmdlZFwiXG4jICAgIGF2YWlsYWJsZV9jcmVkaXRzOiBcIkF2YWlsYWJsZSBMaWNlbnNlc1wiXG4jICAgIHBlbmRpbmdfY3JlZGl0czogXCJQZW5kaW5nIExpY2Vuc2VzXCJcbiMgICAgZW1wdHlfY3JlZGl0czogXCJFeGhhdXN0ZWQgTGljZW5zZXNcIlxuIyAgICBsaWNlbnNlX3JlbWFpbmluZzogXCJsaWNlbnNlIHJlbWFpbmluZ1wiXG4jICAgIGxpY2Vuc2VzX3JlbWFpbmluZzogXCJsaWNlbnNlcyByZW1haW5pbmdcIlxuIyAgICBvbmVfbGljZW5zZV91c2VkOiBcIjEgbGljZW5zZSBoYXMgYmVlbiB1c2VkXCJcbiMgICAgbnVtX2xpY2Vuc2VzX3VzZWQ6IFwiX19udW1MaWNlbnNlc1VzZWRfXyBsaWNlbnNlcyBoYXZlIGJlZW4gdXNlZFwiXG4jICAgIHN0YXJ0ZXJfbGljZW5zZXM6IFwic3RhcnRlciBsaWNlbnNlc1wiXG4jICAgIHN0YXJ0X2RhdGU6IFwic3RhcnQgZGF0ZTpcIlxuIyAgICBlbmRfZGF0ZTogXCJlbmQgZGF0ZTpcIlxuIyAgICBnZXRfZW5yb2xsbWVudHNfYmx1cmI6IFwiIFdlJ2xsIGhlbHAgeW91IGJ1aWxkIGEgc29sdXRpb24gdGhhdCBtZWV0cyB0aGUgbmVlZHMgb2YgeW91ciBjbGFzcywgc2Nob29sIG9yIGRpc3RyaWN0LlwiXG4jICAgIGhvd190b19hcHBseV9saWNlbnNlc19ibHVyYl8xOiBcIldoZW4gYSB0ZWFjaGVyIGFzc2lnbnMgYSBjb3Vyc2UgdG8gYSBzdHVkZW50IGZvciB0aGUgZmlyc3QgdGltZSwgd2XigJlsbCBhdXRvbWF0aWNhbGx5IGFwcGx5IGEgbGljZW5zZS4gVXNlIHRoZSBidWxrLWFzc2lnbiBkcm9wZG93biBpbiB5b3VyIGNsYXNzcm9vbSB0byBhc3NpZ24gYSBjb3Vyc2UgdG8gc2VsZWN0ZWQgc3R1ZGVudHM6XCJcbiMgICAgaG93X3RvX2FwcGx5X2xpY2Vuc2VzX2JsdXJiXzI6IFwiQ2FuIEkgc3RpbGwgYXBwbHkgYSBsaWNlbnNlIHdpdGhvdXQgYXNzaWduaW5nIGEgY291cnNlP1wiXG4jICAgIGhvd190b19hcHBseV9saWNlbnNlc19ibHVyYl8zOiBcIlllcyDigJQgZ28gdG8gdGhlIExpY2Vuc2UgU3RhdHVzIHRhYiBpbiB5b3VyIGNsYXNzcm9vbSBhbmQgY2xpY2sgXFxcIkFwcGx5IExpY2Vuc2VcXFwiIHRvIGFueSBzdHVkZW50IHdobyBkb2VzIG5vdCBoYXZlIGFuIGFjdGl2ZSBsaWNlbnNlLlwiXG4jICAgIHJlcXVlc3Rfc2VudDogXCJSZXF1ZXN0IFNlbnQhXCJcbiMgICAgYXNzZXNzbWVudHM6IFwiQXNzZXNzbWVudHNcIlxuIyAgICBsaWNlbnNlX3N0YXR1czogXCJMaWNlbnNlIFN0YXR1c1wiXG4jICAgIHN0YXR1c19leHBpcmVkOiBcIkV4cGlyZWQgb24ge3tkYXRlfX1cIlxuIyAgICBzdGF0dXNfbm90X2Vucm9sbGVkOiBcIk5vdCBFbnJvbGxlZFwiXG4jICAgIHN0YXR1c19lbnJvbGxlZDogXCJFeHBpcmVzIG9uIHt7ZGF0ZX19XCJcbiMgICAgc2VsZWN0X2FsbDogXCJTZWxlY3QgQWxsXCJcbiMgICAgcHJvamVjdDogXCJQcm9qZWN0XCJcbiMgICAgcHJvamVjdF9nYWxsZXJ5OiBcIlByb2plY3QgR2FsbGVyeVwiXG4jICAgIHZpZXdfcHJvamVjdDogXCJWaWV3IFByb2plY3RcIlxuIyAgICB1bnB1Ymxpc2hlZDogXCIodW5wdWJsaXNoZWQpXCJcbiMgICAgdmlld19hcmVuYV9sYWRkZXI6IFwiVmlldyBBcmVuYSBMYWRkZXJcIlxuIyAgICByZXNvdXJjZV9odWI6IFwiUmVzb3VyY2UgSHViXCJcbiMgICAgcGFjaW5nX2d1aWRlczogXCJDbGFzc3Jvb20taW4tYS1Cb3ggUGFjaW5nIEd1aWRlc1wiXG4jICAgIHBhY2luZ19ndWlkZXNfZGVzYzogXCJMZWFybiBob3cgdG8gaW5jb3Jwb3JhdGUgYWxsIG9mIENvZGVDb21iYXQncyByZXNvdXJjZXMgdG8gcGxhbiB5b3VyIHNjaG9vbCB5ZWFyIVwiXG4jICAgIHBhY2luZ19ndWlkZXNfZWxlbTogXCJFbGVtZW50YXJ5IFNjaG9vbCBQYWNpbmcgR3VpZGVcIlxuIyAgICBwYWNpbmdfZ3VpZGVzX21pZGRsZTogXCJNaWRkbGUgU2Nob29sIFBhY2luZyBHdWlkZVwiXG4jICAgIHBhY2luZ19ndWlkZXNfaGlnaDogXCJIaWdoIFNjaG9vbCBQYWNpbmcgR3VpZGVcIlxuIyAgICBnZXR0aW5nX3N0YXJ0ZWQ6IFwiR2V0dGluZyBTdGFydGVkXCJcbiMgICAgZWR1Y2F0b3JfZmFxOiBcIkVkdWNhdG9yIEZBUVwiXG4jICAgIGVkdWNhdG9yX2ZhcV9kZXNjOiBcIkZyZXF1ZW50bHkgYXNrZWQgcXVlc3Rpb25zIGFib3V0IHVzaW5nIENvZGVDb21iYXQgaW4geW91ciBjbGFzc3Jvb20gb3Igc2Nob29sLlwiXG4jICAgIHRlYWNoZXJfZ2V0dGluZ19zdGFydGVkOiBcIlRlYWNoZXIgR2V0dGluZyBTdGFydGVkIEd1aWRlXCJcbiMgICAgdGVhY2hlcl9nZXR0aW5nX3N0YXJ0ZWRfZGVzYzogXCJOZXcgdG8gQ29kZUNvbWJhdD8gRG93bmxvYWQgdGhpcyBUZWFjaGVyIEdldHRpbmcgU3RhcnRlZCBHdWlkZSB0byBzZXQgdXAgeW91ciBhY2NvdW50LCBjcmVhdGUgeW91ciBmaXJzdCBjbGFzcywgYW5kIGludml0ZSBzdHVkZW50cyB0byB0aGUgZmlyc3QgY291cnNlLlwiXG4jICAgIHN0dWRlbnRfZ2V0dGluZ19zdGFydGVkOiBcIlN0dWRlbnQgUXVpY2sgU3RhcnQgR3VpZGVcIlxuIyAgICBzdHVkZW50X2dldHRpbmdfc3RhcnRlZF9kZXNjOiBcIllvdSBjYW4gZGlzdHJpYnV0ZSB0aGlzIGd1aWRlIHRvIHlvdXIgc3R1ZGVudHMgYmVmb3JlIHN0YXJ0aW5nIENvZGVDb21iYXQgc28gdGhhdCB0aGV5IGNhbiBmYW1pbGlhcml6ZSB0aGVtc2VsdmVzIHdpdGggdGhlIGNvZGUgZWRpdG9yLiBUaGlzIGd1aWRlIGNhbiBiZSB1c2VkIGZvciBib3RoIFB5dGhvbiBhbmQgSmF2YVNjcmlwdCBjbGFzc3Jvb21zLlwiXG4jICAgIGFwX2NzX3ByaW5jaXBsZXM6IFwiQVAgQ29tcHV0ZXIgU2NpZW5jZSBQcmluY2lwbGVzXCJcbiMgICAgYXBfY3NfcHJpbmNpcGxlc19kZXNjOiBcIkFQIENvbXB1dGVyIFNjaWVuY2UgUHJpbmNpcGxlcyBnaXZlcyBzdHVkZW50cyBhIGJyb2FkIGludHJvZHVjdGlvbiB0byB0aGUgcG93ZXIsIGltcGFjdCwgYW5kIHBvc3NpYmlsaXRpZXMgb2YgQ29tcHV0ZXIgU2NpZW5jZS4gVGhlIGNvdXJzZSBlbXBoYXNpemVzIGNvbXB1dGF0aW9uYWwgdGhpbmtpbmcgYW5kIHByb2JsZW0gc29sdmluZyB3aGlsZSBhbHNvIHRlYWNoaW5nIHRoZSBiYXNpY3Mgb2YgcHJvZ3JhbW1pbmcuXCJcbiMgICAgY3MxOiBcIkludHJvZHVjdGlvbiB0byBDb21wdXRlciBTY2llbmNlXCJcbiMgICAgY3MyOiBcIkNvbXB1dGVyIFNjaWVuY2UgMlwiXG4jICAgIGNzMzogXCJDb21wdXRlciBTY2llbmNlIDNcIlxuIyAgICBjczQ6IFwiQ29tcHV0ZXIgU2NpZW5jZSA0XCJcbiMgICAgY3M1OiBcIkNvbXB1dGVyIFNjaWVuY2UgNVwiXG4jICAgIGNzMV9zeW50YXhfcHl0aG9uOiBcIkNvdXJzZSAxIFB5dGhvbiBTeW50YXggR3VpZGVcIlxuIyAgICBjczFfc3ludGF4X3B5dGhvbl9kZXNjOiBcIkNoZWF0c2hlZXQgd2l0aCByZWZlcmVuY2VzIHRvIGNvbW1vbiBQeXRob24gc3ludGF4IHRoYXQgc3R1ZGVudHMgd2lsbCBsZWFybiBpbiBJbnRyb2R1Y3Rpb24gdG8gQ29tcHV0ZXIgU2NpZW5jZS5cIlxuIyAgICBjczFfc3ludGF4X2phdmFzY3JpcHQ6IFwiQ291cnNlIDEgSmF2YVNjcmlwdCBTeW50YXggR3VpZGVcIlxuIyAgICBjczFfc3ludGF4X2phdmFzY3JpcHRfZGVzYzogXCJDaGVhdHNoZWV0IHdpdGggcmVmZXJlbmNlcyB0byBjb21tb24gSmF2YVNjcmlwdCBzeW50YXggdGhhdCBzdHVkZW50cyB3aWxsIGxlYXJuIGluIEludHJvZHVjdGlvbiB0byBDb21wdXRlciBTY2llbmNlLlwiXG4jICAgIGNvbWluZ19zb29uOiBcIkFkZGl0aW9uYWwgZ3VpZGVzIGNvbWluZyBzb29uIVwiXG4jICAgIGVuZ2luZWVyaW5nX2N5Y2xlX3dvcmtzaGVldDogXCJFbmdpbmVlcmluZyBDeWNsZSBXb3Jrc2hlZXRcIlxuIyAgICBlbmdpbmVlcmluZ19jeWNsZV93b3Jrc2hlZXRfZGVzYzogXCJVc2UgdGhpcyB3b3Jrc2hlZXQgdG8gdGVhY2ggc3R1ZGVudHMgdGhlIGJhc2ljcyBvZiB0aGUgZW5naW5lZXJpbmcgY3ljbGU6IEFzc2VzcywgRGVzaWduLCBJbXBsZW1lbnQgYW5kIERlYnVnLiBSZWZlciB0byB0aGUgY29tcGxldGVkIGV4YW1wbGUgd29ya3NoZWV0IGFzIGEgZ3VpZGUuXCJcbiMgICAgZW5naW5lZXJpbmdfY3ljbGVfd29ya3NoZWV0X2xpbms6IFwiVmlldyBleGFtcGxlXCJcbiMgICAgcHJvZ3Jlc3Nfam91cm5hbDogXCJQcm9ncmVzcyBKb3VybmFsXCJcbiMgICAgcHJvZ3Jlc3Nfam91cm5hbF9kZXNjOiBcIkVuY291cmFnZSBzdHVkZW50cyB0byBrZWVwIHRyYWNrIG9mIHRoZWlyIHByb2dyZXNzIHZpYSBhIHByb2dyZXNzIGpvdXJuYWwuXCJcbiMgICAgY3MxX2N1cnJpY3VsdW06IFwiSW50cm9kdWN0aW9uIHRvIENvbXB1dGVyIFNjaWVuY2UgLSBDdXJyaWN1bHVtIEd1aWRlXCJcbiMgICAgY3MxX2N1cnJpY3VsdW1fZGVzYzogXCJTY29wZSBhbmQgc2VxdWVuY2UsIGxlc3NvbiBwbGFucywgYWN0aXZpdGllcyBhbmQgbW9yZSBmb3IgQ291cnNlIDEuXCJcbiMgICAgYXJlbmFzX2N1cnJpY3VsdW06IFwiQXJlbmEgTGV2ZWxzIC0gVGVhY2hlciBHdWlkZVwiXG4jICAgIGFyZW5hc19jdXJyaWN1bHVtX2Rlc2M6IFwiSW5zdHJ1Y3Rpb25zIG9uIGhvdyB0byBydW4gV2Fra2EgTWF1bCwgQ3Jvc3MgQm9uZXMgYW5kIFBvd2VyIFBlYWsgbXVsdGlwbGF5ZXIgYXJlbmFzIHdpdGggeW91ciBjbGFzcy5cIlxuIyAgICBjczJfY3VycmljdWx1bTogXCJDb21wdXRlciBTY2llbmNlIDIgLSBDdXJyaWN1bHVtIEd1aWRlXCJcbiMgICAgY3MyX2N1cnJpY3VsdW1fZGVzYzogXCJTY29wZSBhbmQgc2VxdWVuY2UsIGxlc3NvbiBwbGFucywgYWN0aXZpdGllcyBhbmQgbW9yZSBmb3IgQ291cnNlIDIuXCJcbiMgICAgY3MzX2N1cnJpY3VsdW06IFwiQ29tcHV0ZXIgU2NpZW5jZSAzIC0gQ3VycmljdWx1bSBHdWlkZVwiXG4jICAgIGNzM19jdXJyaWN1bHVtX2Rlc2M6IFwiU2NvcGUgYW5kIHNlcXVlbmNlLCBsZXNzb24gcGxhbnMsIGFjdGl2aXRpZXMgYW5kIG1vcmUgZm9yIENvdXJzZSAzLlwiXG4jICAgIGNzNF9jdXJyaWN1bHVtOiBcIkNvbXB1dGVyIFNjaWVuY2UgNCAtIEN1cnJpY3VsdW0gR3VpZGVcIlxuIyAgICBjczRfY3VycmljdWx1bV9kZXNjOiBcIlNjb3BlIGFuZCBzZXF1ZW5jZSwgbGVzc29uIHBsYW5zLCBhY3Rpdml0aWVzIGFuZCBtb3JlIGZvciBDb3Vyc2UgNC5cIlxuIyAgICBjczVfY3VycmljdWx1bV9qczogXCJDb21wdXRlciBTY2llbmNlIDUgLSBDdXJyaWN1bHVtIEd1aWRlIChKYXZhU2NyaXB0KVwiXG4jICAgIGNzNV9jdXJyaWN1bHVtX2Rlc2NfanM6IFwiU2NvcGUgYW5kIHNlcXVlbmNlLCBsZXNzb24gcGxhbnMsIGFjdGl2aXRpZXMgYW5kIG1vcmUgZm9yIENvdXJzZSA1IGNsYXNzZXMgdXNpbmcgSmF2YVNjcmlwdC5cIlxuIyAgICBjczVfY3VycmljdWx1bV9weTogXCJDb21wdXRlciBTY2llbmNlIDUgLSBDdXJyaWN1bHVtIEd1aWRlIChQeXRob24pXCJcbiMgICAgY3M1X2N1cnJpY3VsdW1fZGVzY19weTogXCJTY29wZSBhbmQgc2VxdWVuY2UsIGxlc3NvbiBwbGFucywgYWN0aXZpdGllcyBhbmQgbW9yZSBmb3IgQ291cnNlIDUgY2xhc3NlcyB1c2luZyBQeXRob24uXCJcbiMgICAgY3MxX3BhaXJwcm9ncmFtbWluZzogXCJQYWlyIFByb2dyYW1taW5nIEFjdGl2aXR5XCJcbiMgICAgY3MxX3BhaXJwcm9ncmFtbWluZ19kZXNjOiBcIkludHJvZHVjZSBzdHVkZW50cyB0byBhIHBhaXIgcHJvZ3JhbW1pbmcgZXhlcmNpc2UgdGhhdCB3aWxsIGhlbHAgdGhlbSBiZWNvbWUgYmV0dGVyIGxpc3RlbmVycyBhbmQgY29tbXVuaWNhdG9ycy5cIlxuIyAgICBnZDE6IFwiR2FtZSBEZXZlbG9wbWVudCAxXCJcbiMgICAgZ2QxX2d1aWRlOiBcIkdhbWUgRGV2ZWxvcG1lbnQgMSAtIFByb2plY3QgR3VpZGVcIlxuIyAgICBnZDFfZ3VpZGVfZGVzYzogXCJVc2UgdGhpcyB0byBndWlkZSB5b3VyIHN0dWRlbnRzIGFzIHRoZXkgY3JlYXRlIHRoZWlyIGZpcnN0IHNoYXJlYWJsZSBnYW1lIHByb2plY3QgaW4gNSBkYXlzLlwiXG4jICAgIGdkMV9ydWJyaWM6IFwiR2FtZSBEZXZlbG9wbWVudCAxIC0gUHJvamVjdCBSdWJyaWNcIlxuIyAgICBnZDFfcnVicmljX2Rlc2M6IFwiVXNlIHRoaXMgcnVicmljIHRvIGFzc2VzcyBzdHVkZW50IHByb2plY3RzIGF0IHRoZSBlbmQgb2YgR2FtZSBEZXZlbG9wbWVudCAxLlwiXG4jICAgIGdkMjogXCJHYW1lIERldmVsb3BtZW50IDJcIlxuIyAgICBnZDJfY3VycmljdWx1bTogXCJHYW1lIERldmVsb3BtZW50IDIgLSBDdXJyaWN1bHVtIEd1aWRlXCJcbiMgICAgZ2QyX2N1cnJpY3VsdW1fZGVzYzogXCJMZXNzb24gcGxhbnMgZm9yIEdhbWUgRGV2ZWxvcG1lbnQgMi5cIlxuIyAgICBnZDM6IFwiR2FtZSBEZXZlbG9wbWVudCAzXCJcbiMgICAgZ2QzX2N1cnJpY3VsdW06IFwiR2FtZSBEZXZlbG9wbWVudCAzIC0gQ3VycmljdWx1bSBHdWlkZVwiXG4jICAgIGdkM19jdXJyaWN1bHVtX2Rlc2M6IFwiTGVzc29uIHBsYW5zIGZvciBHYW1lIERldmVsb3BtZW50IDMuXCJcbiMgICAgd2QxOiBcIldlYiBEZXZlbG9wbWVudCAxXCJcbiMgICAgd2QxX2hlYWRsaW5lczogXCJIZWFkbGluZXMgJiBIZWFkZXJzIEFjdGl2aXR5XCJcbiMgICAgd2QxX2hlYWRsaW5lc19leGFtcGxlOiBcIlZpZXcgc2FtcGxlIHNvbHV0aW9uXCJcbiMgICAgd2QxX2hlYWRsaW5lc19kZXNjOiBcIldoeSBhcmUgcGFyYWdyYXBoIGFuZCBoZWFkZXIgdGFncyBpbXBvcnRhbnQ/IFVzZSB0aGlzIGFjdGl2aXR5IHRvIHNob3cgaG93IHdlbGwtY2hvc2VuIGhlYWRlcnMgbWFrZSB3ZWIgcGFnZXMgZWFzaWVyIHRvIHJlYWQuIFRoZXJlIGFyZSBtYW55IGNvcnJlY3Qgc29sdXRpb25zIHRvIHRoaXMhXCJcbiMgICAgd2QxX2h0bWxfc3ludGF4OiBcIkhUTUwgU3ludGF4IEd1aWRlXCJcbiMgICAgd2QxX2h0bWxfc3ludGF4X2Rlc2M6IFwiT25lLXBhZ2UgcmVmZXJlbmNlIGZvciB0aGUgSFRNTCBzdHlsZSBzdHVkZW50cyB3aWxsIGxlYXJuIGluIFdlYiBEZXZlbG9wbWVudCAxLlwiXG4jICAgIHdkMV9jc3Nfc3ludGF4OiBcIkNTUyBTeW50YXggR3VpZGVcIlxuIyAgICB3ZDFfY3NzX3N5bnRheF9kZXNjOiBcIk9uZS1wYWdlIHJlZmVyZW5jZSBmb3IgdGhlIENTUyBhbmQgU3R5bGUgc3ludGF4IHN0dWRlbnRzIHdpbGwgbGVhcm4gaW4gV2ViIERldmVsb3BtZW50IDEuXCJcbiMgICAgd2QyOiBcIldlYiBEZXZlbG9wbWVudCAyXCJcbiMgICAgd2QyX2pxdWVyeV9zeW50YXg6IFwialF1ZXJ5IEZ1bmN0aW9ucyBTeW50YXggR3VpZGVcIlxuIyAgICB3ZDJfanF1ZXJ5X3N5bnRheF9kZXNjOiBcIk9uZS1wYWdlIHJlZmVyZW5jZSBmb3IgdGhlIGpRdWVyeSBmdW5jdGlvbnMgc3R1ZGVudHMgd2lsbCBsZWFybiBpbiBXZWIgRGV2ZWxvcG1lbnQgMi5cIlxuIyAgICB3ZDJfcXVpemxldF93b3Jrc2hlZXQ6IFwiUXVpemxldCBQbGFubmluZyBXb3Jrc2hlZXRcIlxuIyAgICB3ZDJfcXVpemxldF93b3Jrc2hlZXRfaW5zdHJ1Y3Rpb25zOiBcIlZpZXcgaW5zdHJ1Y3Rpb25zICYgZXhhbXBsZXNcIlxuIyAgICB3ZDJfcXVpemxldF93b3Jrc2hlZXRfZGVzYzogXCJCZWZvcmUgeW91ciBzdHVkZW50cyBidWlsZCB0aGVpciBwZXJzb25hbGl0eSBxdWl6IHByb2plY3QgYXQgdGhlIGVuZCBvZiBXZWIgRGV2ZWxvcG1lbnQgMiwgdGhleSBzaG91bGQgcGxhbiBvdXQgdGhlaXIgcXVpeiBxdWVzdGlvbnMsIG91dGNvbWVzIGFuZCByZXNwb25zZXMgdXNpbmcgdGhpcyB3b3Jrc2hlZXQuIFRlYWNoZXJzIGNhbiBkaXN0cmlidXRlIHRoZSBpbnN0cnVjdGlvbnMgYW5kIGV4YW1wbGVzIGZvciBzdHVkZW50cyB0byByZWZlciB0by5cIlxuIyAgICBzdHVkZW50X292ZXJ2aWV3OiBcIk92ZXJ2aWV3XCJcbiMgICAgc3R1ZGVudF9kZXRhaWxzOiBcIlN0dWRlbnQgRGV0YWlsc1wiXG4jICAgIHN0dWRlbnRfbmFtZTogXCJTdHVkZW50IE5hbWVcIlxuIyAgICBub19uYW1lOiBcIk5vIG5hbWUgcHJvdmlkZWQuXCJcbiMgICAgbm9fdXNlcm5hbWU6IFwiTm8gdXNlcm5hbWUgcHJvdmlkZWQuXCJcbiMgICAgbm9fZW1haWw6IFwiU3R1ZGVudCBoYXMgbm8gZW1haWwgYWRkcmVzcyBzZXQuXCJcbiMgICAgc3R1ZGVudF9wcm9maWxlOiBcIlN0dWRlbnQgUHJvZmlsZVwiXG4jICAgIHBsYXl0aW1lX2RldGFpbDogXCJQbGF5dGltZSBEZXRhaWxcIlxuIyAgICBzdHVkZW50X2NvbXBsZXRlZDogXCJTdHVkZW50IENvbXBsZXRlZFwiXG4jICAgIHN0dWRlbnRfaW5fcHJvZ3Jlc3M6IFwiU3R1ZGVudCBpbiBQcm9ncmVzc1wiXG4jICAgIGNsYXNzX2F2ZXJhZ2U6IFwiQ2xhc3MgQXZlcmFnZVwiXG4jICAgIG5vdF9hc3NpZ25lZDogXCJoYXMgbm90IGJlZW4gYXNzaWduZWQgdGhlIGZvbGxvd2luZyBjb3Vyc2VzXCJcbiMgICAgcGxheXRpbWVfYXhpczogXCJQbGF5dGltZSBpbiBTZWNvbmRzXCJcbiMgICAgbGV2ZWxzX2F4aXM6IFwiTGV2ZWxzIGluXCJcbiMgICAgc3R1ZGVudF9zdGF0ZTogXCJIb3cgaXNcIlxuIyAgICBzdHVkZW50X3N0YXRlXzI6IFwiZG9pbmc/XCJcbiMgICAgc3R1ZGVudF9nb29kOiBcImlzIGRvaW5nIHdlbGwgaW5cIlxuIyAgICBzdHVkZW50X2dvb2RfZGV0YWlsOiBcIlRoaXMgc3R1ZGVudCBpcyBrZWVwaW5nIHBhY2Ugd2l0aCB0aGUgY2xhc3MuXCJcbiMgICAgc3R1ZGVudF93YXJuOiBcIm1pZ2h0IG5lZWQgc29tZSBoZWxwIGluXCJcbiMgICAgc3R1ZGVudF93YXJuX2RldGFpbDogXCJUaGlzIHN0dWRlbnQgbWlnaHQgbmVlZCBzb21lIGhlbHAgd2l0aCBuZXcgY29uY2VwdHMgdGhhdCBoYXZlIGJlZW4gaW50cm9kdWNlZCBpbiB0aGlzIGNvdXJzZS5cIlxuIyAgICBzdHVkZW50X2dyZWF0OiBcImlzIGRvaW5nIGdyZWF0IGluXCJcbiMgICAgc3R1ZGVudF9ncmVhdF9kZXRhaWw6IFwiVGhpcyBzdHVkZW50IG1pZ2h0IGJlIGEgZ29vZCBjYW5kaWRhdGUgdG8gaGVscCBvdGhlciBzdHVkZW50cyB3b3JraW5nIHRocm91Z2ggdGhpcyBjb3Vyc2UuXCJcbiMgICAgZnVsbF9saWNlbnNlOiBcIkZ1bGwgTGljZW5zZVwiXG4jICAgIHN0YXJ0ZXJfbGljZW5zZTogXCJTdGFydGVyIExpY2Vuc2VcIlxuIyAgICB0cmlhbDogXCJUcmlhbFwiXG4jICAgIGhvY193ZWxjb21lOiBcIkhhcHB5IENvbXB1dGVyIFNjaWVuY2UgRWR1Y2F0aW9uIFdlZWtcIlxuIyAgICBob2NfaW50cm86IFwiVGhlcmUgYXJlIHRocmVlIHdheXMgZm9yIHlvdXIgY2xhc3MgdG8gcGFydGljaXBhdGUgaW4gSG91ciBvZiBDb2RlIHdpdGggQ29kZUNvbWJhdFwiXG4jICAgIGhvY19zZWxmX2xlZDogXCJTZWxmLUxlZCBHYW1lcGxheVwiXG4jICAgIGhvY19zZWxmX2xlZF9kZXNjOiBcIlN0dWRlbnRzIGNhbiBwbGF5IHRocm91Z2ggdHdvIEhvdXIgb2YgQ29kZSBDb2RlQ29tYmF0IHR1dG9yaWFscyBvbiB0aGVpciBvd25cIlxuIyAgICBob2NfZ2FtZV9kZXY6IFwiR2FtZSBEZXZlbG9wbWVudFwiXG4jICAgIGhvY19hbmQ6IFwiYW5kXCJcbiMgICAgaG9jX3Byb2dyYW1taW5nOiBcIkphdmFTY3JpcHQvUHl0aG9uIFByb2dyYW1taW5nXCJcbiMgICAgaG9jX3RlYWNoZXJfbGVkOiBcIlRlYWNoZXItTGVkIExlc3NvbnNcIlxuIyAgICBob2NfdGVhY2hlcl9sZWRfZGVzYzE6IFwiRG93bmxvYWQgb3VyXCJcbiMgICAgaG9jX3RlYWNoZXJfbGVkX2xpbms6IFwiSW50cm9kdWN0aW9uIHRvIENvbXB1dGVyIFNjaWVuY2UgbGVzc29uIHBsYW5zXCJcbiMgICAgaG9jX3RlYWNoZXJfbGVkX2Rlc2MyOiBcInRvIGludHJvZHVjZSB5b3VyIHN0dWRlbnRzIHRvIHByb2dyYW1taW5nIGNvbmNlcHRzIHVzaW5nIG9mZmxpbmUgYWN0aXZpdGllc1wiXG4jICAgIGhvY19ncm91cDogXCJHcm91cCBHYW1lcGxheVwiXG4jICAgIGhvY19ncm91cF9kZXNjXzE6IFwiVGVhY2hlcnMgY2FuIHVzZSB0aGUgbGVzc29ucyBpbiBjb25qdW5jdGlvbiB3aXRoIG91ciBJbnRyb2R1Y3Rpb24gdG8gQ29tcHV0ZXIgU2NpZW5jZSBjb3Vyc2UgdG8gdHJhY2sgc3R1ZGVudCBwcm9ncmVzcy4gU2VlIG91clwiXG4jICAgIGhvY19ncm91cF9saW5rOiBcIkdldHRpbmcgU3RhcnRlZCBHdWlkZVwiXG4jICAgIGhvY19ncm91cF9kZXNjXzI6IFwiZm9yIG1vcmUgZGV0YWlsc1wiXG4jICAgIGhvY19hZGRpdGlvbmFsX2Rlc2MxOiBcIkZvciBhZGRpdGlvbmFsIENvZGVDb21iYXQgcmVzb3VyY2VzIGFuZCBhY3Rpdml0aWVzLCBzZWUgb3VyXCJcbiMgICAgaG9jX2FkZGl0aW9uYWxfZGVzYzI6IFwiUXVlc3Rpb25zXCJcbiMgICAgaG9jX2FkZGl0aW9uYWxfY29udGFjdDogXCJHZXQgaW4gdG91Y2hcIlxuIyAgICByZXZva2VfY29uZmlybTogXCJBcmUgeW91IHN1cmUgeW91IHdhbnQgdG8gcmV2b2tlIGEgRnVsbCBMaWNlbnNlIGZyb20ge3tzdHVkZW50X25hbWV9fT8gVGhlIGxpY2Vuc2Ugd2lsbCBiZWNvbWUgYXZhaWxhYmxlIHRvIGFzc2lnbiB0byBhbm90aGVyIHN0dWRlbnQuXCJcbiMgICAgcmV2b2tpbmc6IFwiUmV2b2tpbmcuLi5cIlxuIyAgICB1bnVzZWRfbGljZW5zZXM6IFwiWW91IGhhdmUgdW51c2VkIExpY2Vuc2VzIHRoYXQgYWxsb3cgeW91IHRvIGFzc2lnbiBzdHVkZW50cyBwYWlkIGNvdXJzZXMgd2hlbiB0aGV5J3JlIHJlYWR5IHRvIGxlYXJuIG1vcmUhXCJcbiMgICAgcmVtZW1iZXJfbmV3X2NvdXJzZXM6IFwiUmVtZW1iZXIgdG8gYXNzaWduIG5ldyBjb3Vyc2VzIVwiXG4jICAgIG1vcmVfaW5mbzogXCJNb3JlIEluZm9cIlxuIyAgICBob3dfdG9fYXNzaWduX2NvdXJzZXM6IFwiSG93IHRvIEFzc2lnbiBDb3Vyc2VzXCJcbiMgICAgc2VsZWN0X3N0dWRlbnRzOiBcIlNlbGVjdCBTdHVkZW50c1wiXG4jICAgIHNlbGVjdF9pbnN0cnVjdGlvbnM6IFwiQ2xpY2sgdGhlIGNoZWNrYm94IG5leHQgdG8gZWFjaCBzdHVkZW50IHlvdSB3YW50IHRvIGFzc2lnbiBjb3Vyc2VzIHRvLlwiXG4jICAgIGNob29zZV9jb3Vyc2U6IFwiQ2hvb3NlIENvdXJzZVwiXG4jICAgIGNob29zZV9pbnN0cnVjdGlvbnM6IFwiU2VsZWN0IHRoZSBjb3Vyc2UgZnJvbSB0aGUgZHJvcGRvd24gbWVudSB5b3XigJlkIGxpa2UgdG8gYXNzaWduLCB0aGVuIGNsaWNrIOKAnEFzc2lnbiB0byBTZWxlY3RlZCBTdHVkZW50cy7igJ1cIlxuIyAgICBwdXNoX3Byb2plY3RzOiBcIldlIHJlY29tbWVuZCBhc3NpZ25pbmcgV2ViIERldmVsb3BtZW50IDEgb3IgR2FtZSBEZXZlbG9wbWVudCAxIGFmdGVyIHN0dWRlbnRzIGhhdmUgZmluaXNoZWQgSW50cm9kdWN0aW9uIHRvIENvbXB1dGVyIFNjaWVuY2UhIFNlZSBvdXIge3tyZXNvdXJjZV9odWJ9fSBmb3IgbW9yZSBkZXRhaWxzIG9uIHRob3NlIGNvdXJzZXMuXCJcbiMgICAgdGVhY2hlcl9xdWVzdDogXCJUZWFjaGVyJ3MgUXVlc3QgZm9yIFN1Y2Nlc3NcIlxuIyAgICBxdWVzdHNfY29tcGxldGU6IFwiUXVlc3RzIENvbXBsZXRlXCJcbiMgICAgdGVhY2hlcl9xdWVzdF9jcmVhdGVfY2xhc3Nyb29tOiBcIkNyZWF0ZSBDbGFzc3Jvb21cIlxuIyAgICB0ZWFjaGVyX3F1ZXN0X2FkZF9zdHVkZW50czogXCJBZGQgU3R1ZGVudHNcIlxuIyAgICB0ZWFjaGVyX3F1ZXN0X3RlYWNoX21ldGhvZHM6IFwiSGVscCB5b3VyIHN0dWRlbnRzIGxlYXJuIGhvdyB0byBgY2FsbCBtZXRob2RzYC5cIlxuIyAgICB0ZWFjaGVyX3F1ZXN0X3RlYWNoX21ldGhvZHNfc3RlcDE6IFwiR2V0IDc1JSBvZiBhdCBsZWFzdCBvbmUgY2xhc3MgdGhyb3VnaCB0aGUgZmlyc3QgbGV2ZWwsIF9fRHVuZ2VvbnMgb2YgS2l0aGdhcmRfX1wiXG4jICAgIHRlYWNoZXJfcXVlc3RfdGVhY2hfbWV0aG9kc19zdGVwMjogXCJQcmludCBvdXQgdGhlIFtTdHVkZW50IFF1aWNrIFN0YXJ0IEd1aWRlXShodHRwOi8vZmlsZXMuY29kZWNvbWJhdC5jb20vZG9jcy9yZXNvdXJjZXMvU3R1ZGVudFF1aWNrU3RhcnRHdWlkZS5wZGYpIGluIHRoZSBSZXNvdXJjZSBIdWIuXCJcbiMgICAgdGVhY2hlcl9xdWVzdF90ZWFjaF9zdHJpbmdzOiBcIkRvbid0IHN0cmluZyB5b3VyIHN0dWRlbnRzIGFsb25nLCB0ZWFjaCB0aGVtIGBzdHJpbmdzYC5cIlxuIyAgICB0ZWFjaGVyX3F1ZXN0X3RlYWNoX3N0cmluZ3Nfc3RlcDE6IFwiR2V0IDc1JSBvZiBhdCBsZWFzdCBvbmUgY2xhc3MgdGhyb3VnaCBfX1RydWUgTmFtZXNfX1wiXG4jICAgIHRlYWNoZXJfcXVlc3RfdGVhY2hfc3RyaW5nc19zdGVwMjogXCJVc2UgdGhlIFRlYWNoZXIgTGV2ZWwgU2VsZWN0b3Igb24gW0NvdXJzZSBHdWlkZXNdKC90ZWFjaGVycy9jb3Vyc2VzKSBwYWdlIHRvIHByZXZpZXcgX19UcnVlIE5hbWVzX18uXCJcbiMgICAgdGVhY2hlcl9xdWVzdF90ZWFjaF9sb29wczogXCJLZWVwIHlvdXIgc3R1ZGVudHMgaW4gdGhlIGxvb3AgYWJvdXQgYGxvb3BzYC5cIlxuIyAgICB0ZWFjaGVyX3F1ZXN0X3RlYWNoX2xvb3BzX3N0ZXAxOiBcIkdldCA3NSUgb2YgYXQgbGVhc3Qgb25lIGNsYXNzIHRocm91Z2ggX19GaXJlIERhbmNpbmdfXy5cIlxuIyAgICB0ZWFjaGVyX3F1ZXN0X3RlYWNoX2xvb3BzX3N0ZXAyOiBcIlVzZSB0aGUgX19Mb29wcyBBY3Rpdml0eV9fIGluIHRoZSBbQ1MxIEN1cnJpY3VsdW0gZ3VpZGVdKC90ZWFjaGVycy9yZXNvdXJjZXMvY3MxKSB0byByZWluZm9yY2UgdGhpcyBjb25jZXB0LlwiXG4jICAgIHRlYWNoZXJfcXVlc3RfdGVhY2hfdmFyaWFibGVzOiBcIlZhcnkgaXQgdXAgd2l0aCBgdmFyaWFibGVzYC5cIlxuIyAgICB0ZWFjaGVyX3F1ZXN0X3RlYWNoX3ZhcmlhYmxlc19zdGVwMTogXCJHZXQgNzUlIG9mIGF0IGxlYXN0IG9uZSBjbGFzcyB0aHJvdWdoIF9fS25vd24gRW5lbXlfXy5cIlxuIyAgICB0ZWFjaGVyX3F1ZXN0X3RlYWNoX3ZhcmlhYmxlc19zdGVwMjogXCJFbmNvdXJhZ2UgY29sbGFib3JhdGlvbiBieSB1c2luZyB0aGUgW1BhaXIgUHJvZ3JhbW1pbmcgQWN0aXZpdHldKC90ZWFjaGVycy9yZXNvdXJjZXMvcGFpci1wcm9ncmFtbWluZykuXCJcbiMgICAgdGVhY2hlcl9xdWVzdF9raXRoZ2FyZF9nYXRlc18xMDA6IFwiRXNjYXBlIHRoZSBLaXRoZ2FyZCBHYXRlcyB3aXRoIHlvdXIgY2xhc3MuXCJcbiMgICAgdGVhY2hlcl9xdWVzdF9raXRoZ2FyZF9nYXRlc18xMDBfc3RlcDE6IFwiR2V0IDc1JSBvZiBhdCBsZWFzdCBvbmUgY2xhc3MgdGhyb3VnaCBfX0tpdGhnYXJkIEdhdGVzX18uXCJcbiMgICAgdGVhY2hlcl9xdWVzdF9raXRoZ2FyZF9nYXRlc18xMDBfc3RlcDI6IFwiR3VpZGUgc3R1ZGVudHMgdG8gdGhpbmsgdGhyb3VnaCBoYXJkIHByb2JsZW1zIHVzaW5nIHRoZSBbRW5naW5lZXJpbmcgQ3ljbGUgV29ya3NoZWV0XShodHRwOi8vZmlsZXMuY29kZWNvbWJhdC5jb20vZG9jcy9yZXNvdXJjZXMvRW5naW5lZXJpbmdDeWNsZVdvcmtzaGVldC5wZGYpLlwiXG4jICAgIHRlYWNoZXJfcXVlc3Rfd2Fra2FfbWF1bF8xMDA6IFwiUHJlcGFyZSB0byBkdWVsIGluIFdha2thIE1hdWwuXCJcbiMgICAgdGVhY2hlcl9xdWVzdF93YWtrYV9tYXVsXzEwMF9zdGVwMTogXCJHZXQgNzUlIG9mIGF0IGxlYXN0IG9uZSBjbGFzcyB0byBfX1dha2thIE1hdWxfXy5cIlxuIyAgICB0ZWFjaGVyX3F1ZXN0X3dha2thX21hdWxfMTAwX3N0ZXAyOiBcIlNlZSB0aGUgW0FyZW5hIEd1aWRlXSgvdGVhY2hlcnMvcmVzb3VyY2VzL2FyZW5hcykgaW4gdGhlIFtSZXNvdXJjZSBIdWJdKC90ZWFjaGVycy9yZXNvdXJjZXMpIGZvciB0aXBzIG9uIGhvdyB0byBydW4gYSBzdWNjZXNzZnVsIGFyZW5hIGRheS5cIlxuIyAgICB0ZWFjaGVyX3F1ZXN0X3JlYWNoX2dhbWVkZXY6IFwiRXhwbG9yZSBuZXcgd29ybGRzIVwiXG4jICAgIHRlYWNoZXJfcXVlc3RfcmVhY2hfZ2FtZWRldl9zdGVwMTogXCJbR2V0IGxpY2Vuc2VzXSgvdGVhY2hlcnMvbGljZW5zZXMpIHNvIHRoYXQgeW91ciBzdHVkZW50cyBjYW4gZXhwbG9yZSBuZXcgd29ybGRzLCBsaWtlIEdhbWUgRGV2ZWxvcG1lbnQgYW5kIFdlYiBEZXZlbG9wbWVudCFcIlxuIyAgICB0ZWFjaGVyX3F1ZXN0X2RvbmU6IFwiV2FudCB5b3VyIHN0dWRlbnRzIHRvIGxlYXJuIGV2ZW4gbW9yZSBjb2RlPyBHZXQgaW4gdG91Y2ggd2l0aCBvdXIgW3NjaG9vbCBzcGVjaWFsaXN0c10obWFpbHRvOnNjaG9vbHNAY29kZWNvbWJhdC5jb20pIHRvZGF5IVwiXG4jICAgIHRlYWNoZXJfcXVlc3Rfa2VlcF9nb2luZzogXCJLZWVwIGdvaW5nISBIZXJlJ3Mgd2hhdCB5b3UgY2FuIGRvIG5leHQ6XCJcbiMgICAgdGVhY2hlcl9xdWVzdF9tb3JlOiBcIlNlZSBhbGwgcXVlc3RzXCJcbiMgICAgdGVhY2hlcl9xdWVzdF9sZXNzOiBcIlNlZSBmZXdlciBxdWVzdHNcIlxuIyAgICByZWZyZXNoX3RvX3VwZGF0ZTogXCIocmVmcmVzaCB0aGUgcGFnZSB0byBzZWUgdXBkYXRlcylcIlxuIyAgICB2aWV3X3Byb2plY3RfZ2FsbGVyeTogXCJWaWV3IFByb2plY3QgR2FsbGVyeVwiXG4jICAgIG9mZmljZV9ob3VyczogXCJUZWFjaGVyIFdlYmluYXJzXCJcbiMgICAgb2ZmaWNlX2hvdXJzX2RldGFpbDogXCJMZWFybiBob3cgdG8ga2VlcCB1cCB3aXRoIHdpdGggeW91ciBzdHVkZW50cyBhcyB0aGV5IGNyZWF0ZSBnYW1lcyBhbmQgZW1iYXJrIG9uIHRoZWlyIGNvZGluZyBqb3VybmV5ISBDb21lIGFuZCBhdHRlbmQgb3VyXCJcbiMgICAgb2ZmaWNlX2hvdXJzX2xpbms6IFwidGVhY2hlciB3ZWJpbmFyXCJcbiMgICAgb2ZmaWNlX2hvdXJzX2RldGFpbF8yOiBcInNlc3Npb25zLlwiXG4jICAgIHN1Y2Nlc3M6IFwiU3VjY2Vzc1wiXG4jICAgIGluX3Byb2dyZXNzOiBcIkluIFByb2dyZXNzXCJcbiMgICAgbm90X3N0YXJ0ZWQ6IFwiTm90IFN0YXJ0ZWRcIlxuIyAgICBtaWRfY291cnNlOiBcIk1pZC1Db3Vyc2VcIlxuIyAgICBlbmRfY291cnNlOiBcIkVuZCBvZiBDb3Vyc2VcIlxuIyAgICBub25lOiBcIk5vbmUgZGV0ZWN0ZWQgeWV0XCJcbiMgICAgZXhwbGFpbl9vcGVuX2VuZGVkOiBcIk5vdGU6IFN0dWRlbnRzIGFyZSBlbmNvdXJhZ2VkIHRvIHNvbHZlIHRoaXMgbGV2ZWwgY3JlYXRpdmVseSDigJQgb25lIHBvc3NpYmxlIHNvbHV0aW9uIGlzIHByb3ZpZGVkIGJlbG93LlwiXG4jICAgIGxldmVsX2xhYmVsOiBcIkxldmVsOlwiXG4jICAgIHRpbWVfcGxheWVkX2xhYmVsOiBcIlRpbWUgUGxheWVkOlwiXG4jICAgIGJhY2tfdG9fcmVzb3VyY2VfaHViOiBcIkJhY2sgdG8gUmVzb3VyY2UgSHViXCJcbiMgICAgcHJpbnRfZ3VpZGU6IFwiUHJpbnQgdGhpcyBndWlkZVwiXG4jICAgIGNvbWJvOiBcIkNvbWJvXCJcbiMgICAgY29tYm9fZXhwbGFuYXRpb246IFwiU3R1ZGVudHMgcGFzcyBDb21ibyBjaGFsbGVuZ2UgbGV2ZWxzIGJ5IHVzaW5nIGF0IGxlYXN0IG9uZSBsaXN0ZWQgY29uY2VwdC4gUmV2aWV3IHN0dWRlbnQgY29kZSBieSBjbGlja2luZyB0aGUgcHJvZ3Jlc3MgZG90LlwiXG4jICAgIGNvbmNlcHQ6IFwiQ29uY2VwdFwiXG5cbiMgIHNoYXJlX2xpY2Vuc2VzOlxuIyAgICBzaGFyZV9saWNlbnNlczogXCJTaGFyZSBMaWNlbnNlc1wiXG4jICAgIHNoYXJlZF9ieTogXCJTaGFyZWQgQnk6XCJcbiMgICAgYWRkX3RlYWNoZXJfbGFiZWw6IFwiRW50ZXIgZXhhY3QgdGVhY2hlciBlbWFpbDpcIlxuIyAgICBhZGRfdGVhY2hlcl9idXR0b246IFwiQWRkIFRlYWNoZXJcIlxuIyAgICBzdWJoZWFkZXI6IFwiWW91IGNhbiBtYWtlIHlvdXIgbGljZW5zZXMgYXZhaWxhYmxlIHRvIG90aGVyIHRlYWNoZXJzIGluIHlvdXIgb3JnYW5pemF0aW9uLiBFYWNoIGxpY2Vuc2UgY2FuIG9ubHkgYmUgdXNlZCBmb3Igb25lIHN0dWRlbnQgYXQgYSB0aW1lLlwiXG4jICAgIHRlYWNoZXJfbm90X2ZvdW5kOiBcIlRlYWNoZXIgbm90IGZvdW5kLiBQbGVhc2UgbWFrZSBzdXJlIHRoaXMgdGVhY2hlciBoYXMgYWxyZWFkeSBjcmVhdGVkIGEgVGVhY2hlciBBY2NvdW50LlwiXG4jICAgIHRlYWNoZXJfbm90X3ZhbGlkOiBcIlRoaXMgaXMgbm90IGEgdmFsaWQgVGVhY2hlciBBY2NvdW50LiBPbmx5IHRlYWNoZXIgYWNjb3VudHMgY2FuIHNoYXJlIGxpY2Vuc2VzLlwiXG4jICAgIGFscmVhZHlfc2hhcmVkOiBcIllvdSd2ZSBhbHJlYWR5IHNoYXJlZCB0aGVzZSBsaWNlbnNlcyB3aXRoIHRoYXQgdGVhY2hlci5cIlxuIyAgICB0ZWFjaGVyc191c2luZ190aGVzZTogXCJUZWFjaGVycyB3aG8gY2FuIGFjY2VzcyB0aGVzZSBsaWNlbnNlczpcIlxuIyAgICBmb290ZXI6IFwiV2hlbiB0ZWFjaGVycyByZXZva2UgbGljZW5zZXMgZnJvbSBzdHVkZW50cywgdGhlIGxpY2Vuc2VzIHdpbGwgYmUgcmV0dXJuZWQgdG8gdGhlIHNoYXJlZCBwb29sIGZvciBvdGhlciB0ZWFjaGVycyBpbiB0aGlzIGdyb3VwIHRvIHVzZS5cIlxuIyAgICB5b3U6IFwiKHlvdSlcIlxuIyAgICBvbmVfbGljZW5zZV91c2VkOiBcIigxIGxpY2Vuc2UgdXNlZClcIlxuIyAgICBsaWNlbnNlc191c2VkOiBcIihfX2xpY2Vuc2VzVXNlZF9fIGxpY2Vuc2VzIHVzZWQpXCJcbiMgICAgbW9yZV9pbmZvOiBcIk1vcmUgaW5mb1wiXG5cbiAgc2hhcmluZzpcbiAgICBnYW1lOiBcIlBlbGlcIlxuICAgIHdlYnBhZ2U6IFwiTmV0dGlzaXZ1XCJcbiMgICAgeW91cl9zdHVkZW50c19wcmV2aWV3OiBcIllvdXIgc3R1ZGVudHMgd2lsbCBjbGljayBoZXJlIHRvIHNlZSB0aGVpciBmaW5pc2hlZCBwcm9qZWN0cyEgVW5hdmFpbGFibGUgaW4gdGVhY2hlciBwcmV2aWV3LlwiXG4jICAgIHVuYXZhaWxhYmxlOiBcIkxpbmsgc2hhcmluZyBub3QgYXZhaWxhYmxlIGluIHRlYWNoZXIgcHJldmlldy5cIlxuICAgIHNoYXJlX2dhbWU6IFwiSmFhIHTDpG3DpCBwZWxpXCJcbiAgICBzaGFyZV93ZWI6IFwiSmFhIHTDpG3DpCBuZXR0aXNpdnVcIlxuICAgIHZpY3Rvcnlfc2hhcmVfcHJlZml4OiBcIkt1dHN1IHTDpGxsw6QgbGlua2lsbMOkIHlzdMOkdsOkc2kgamEgcGVyaGVlc2lcIlxuIyAgICB2aWN0b3J5X3NoYXJlX3ByZWZpeF9zaG9ydDogXCJJbnZpdGUgcGVvcGxlIHRvXCJcbiAgICB2aWN0b3J5X3NoYXJlX2dhbWU6IFwicGVsYWFtYWFuIHNpbnVuIHRhc29hc2lcIlxuICAgIHZpY3Rvcnlfc2hhcmVfd2ViOiBcImthdHNvbWFhbiBuZXR0aXNpdnVhc2lcIlxuICAgIHZpY3Rvcnlfc2hhcmVfc3VmZml4OiBcIi5cIlxuICAgIHZpY3RvcnlfY291cnNlX3NoYXJlX3ByZWZpeDogXCJUw6Rtw6QgbGlua2tpIGFudGFhIHlzdMOkdmllc2kgamEgcGVyaGVlc2lcIlxuICAgIHZpY3RvcnlfY291cnNlX3NoYXJlX2dhbWU6IFwicGVsYXRhIHBlbGnDpCxcIlxuICAgIHZpY3RvcnlfY291cnNlX3NoYXJlX3dlYjogXCJrYXRzb2EgbmV0dGlzaXZ1YSxcIlxuICAgIHZpY3RvcnlfY291cnNlX3NoYXJlX3N1ZmZpeDogXCJqb25rYSBzaW7DpCBqdXVyaSBsb2l0LlwiXG4gICAgY29weV91cmw6IFwiS29waW8gVVJMLW9zb2l0ZVwiXG4gICAgc2hhcmVfd2l0aF90ZWFjaGVyX2VtYWlsOiBcIkzDpGhldMOkIG9wZXR0YWphbGxlc2lcIlxuXG4gIGdhbWVfZGV2OlxuICAgIGNyZWF0b3I6IFwiVGVraWrDpFwiXG5cbiAgd2ViX2RldjpcbiAgICBpbWFnZV9nYWxsZXJ5X3RpdGxlOiBcIkt1dmFnYWxsZXJpYVwiXG4gICAgc2VsZWN0X2FuX2ltYWdlOiBcIlZhbGl0c2Uga3V2YSwgam90YSBoYWx1YXQga8OkeXR0w6TDpFwiXG4gICAgc2Nyb2xsX2Rvd25fZm9yX21vcmVfaW1hZ2VzOiBcIih2aWVyaXTDpCBhbGFzcMOkaW4gbsOkaGTDpGtzZXNpIGxpc8Okw6Qga3V2aWEpXCJcbiAgICBjb3B5X3RoZV91cmw6IFwiS29waW9pIFVSTC1vc29pdGUgYWxhcHVvbGVsdGFcIlxuICAgIGNvcHlfdGhlX3VybF9kZXNjcmlwdGlvbjogXCJIecO2ZHlsbGluZW4gam9zIGhhbHVhdCBrb3J2YXRhIG9sZW1hc3Nhb2xldmFuIGt1dmFuLlwiXG4gICAgY29weV90aGVfaW1nX3RhZzogXCJLb3Bpb2kgPGltZz4gdGFnaVwiXG4gICAgY29weV90aGVfaW1nX3RhZ19kZXNjcmlwdGlvbjogXCJIecO2ZHlsbGluZW4gam9zIGhhbHVhdCBsaXPDpHTDpCB1dWRlbiBrdXZhbi5cIlxuICAgIGNvcHlfdXJsOiBcIktvcGlvaSBVUkwtb3NvaXRlXCJcbiAgICBjb3B5X2ltZzogXCJLb3Bpb2kgPGltZz5cIlxuICAgIGhvd190b19jb3B5X3Bhc3RlOiBcIk1pdGVuIEtvcGlvaWRhL0xpaXR0w6TDpFwiXG4gICAgY29weTogXCJLb3Bpb2lcIlxuICAgIHBhc3RlOiBcIkxpaXTDpFwiXG4gICAgYmFja190b19lZGl0aW5nOiBcIlRha2Fpc2luIG11b2trYWFtYWFuXCJcblxuICBjbGFzc2VzOlxuICAgIGFyY2htYWdlX3RpdGxlOiBcIkFya2tpbWFhZ2lcIlxuICAgIGFyY2htYWdlX3RpdGxlX2Rlc2NyaXB0aW9uOiBcIihLb29kYWFqYSlcIlxuIyAgICBhcmNobWFnZV9zdW1tYXJ5OiBcIklmIHlvdSBhcmUgYSBkZXZlbG9wZXIgaW50ZXJlc3RlZCBpbiBjb2RpbmcgZWR1Y2F0aW9uYWwgZ2FtZXMsIGJlY29tZSBhbiBhcmNobWFnZSB0byBoZWxwIHVzIGJ1aWxkIENvZGVDb21iYXQhXCJcbiAgICBhcnRpc2FuX3RpdGxlOiBcIkvDpHNpdHnDtmzDpGluZW5cIlxuICAgIGFydGlzYW5fdGl0bGVfZGVzY3JpcHRpb246IFwiKEtlbnR0w6RzdXVubml0dGVsaWphKVwiXG4jICAgIGFydGlzYW5fc3VtbWFyeTogXCJCdWlsZCBhbmQgc2hhcmUgbGV2ZWxzIGZvciB5b3UgYW5kIHlvdXIgZnJpZW5kcyB0byBwbGF5LiBCZWNvbWUgYW4gQXJ0aXNhbiB0byBsZWFybiB0aGUgYXJ0IG9mIHRlYWNoaW5nIG90aGVycyB0byBwcm9ncmFtLlwiXG4gICAgYWR2ZW50dXJlcl90aXRsZTogXCJTZWlra2FpbGlqYVwiXG4gICAgYWR2ZW50dXJlcl90aXRsZV9kZXNjcmlwdGlvbjogXCIoS2VudHTDpHRlc3RhYWphKVwiXG4jICAgIGFkdmVudHVyZXJfc3VtbWFyeTogXCJHZXQgb3VyIG5ldyBsZXZlbHMgKGV2ZW4gb3VyIHN1YnNjcmliZXIgY29udGVudCkgZm9yIGZyZWUgb25lIHdlZWsgZWFybHkgYW5kIGhlbHAgdXMgd29yayBvdXQgYnVncyBiZWZvcmUgb3VyIHB1YmxpYyByZWxlYXNlLlwiXG4gICAgc2NyaWJlX3RpdGxlOiBcIktpcmp1cmlcIlxuICAgIHNjcmliZV90aXRsZV9kZXNjcmlwdGlvbjogXCIoVG9pbWl0dGFqYSlcIlxuIyAgICBzY3JpYmVfc3VtbWFyeTogXCJHb29kIGNvZGUgbmVlZHMgZ29vZCBkb2N1bWVudGF0aW9uLiBXcml0ZSwgZWRpdCwgYW5kIGltcHJvdmUgdGhlIGRvY3MgcmVhZCBieSBtaWxsaW9ucyBvZiBwbGF5ZXJzIGFjcm9zcyB0aGUgZ2xvYmUuXCJcbiAgICBkaXBsb21hdF90aXRsZTogXCJEaXBsb21hYXR0aVwiXG4gICAgZGlwbG9tYXRfdGl0bGVfZGVzY3JpcHRpb246IFwiKEvDpMOkbnTDpGrDpClcIlxuIyAgICBkaXBsb21hdF9zdW1tYXJ5OiBcIkNvZGVDb21iYXQgaXMgbG9jYWxpemVkIGluIDQ1KyBsYW5ndWFnZXMgYnkgb3VyIERpcGxvbWF0cy4gSGVscCB1cyBvdXQgYW5kIGNvbnRyaWJ1dGUgdHJhbnNsYXRpb25zLlwiXG4gICAgYW1iYXNzYWRvcl90aXRsZTogXCJTdXVybMOkaGV0dGlsw6RzXCJcbiAgICBhbWJhc3NhZG9yX3RpdGxlX2Rlc2NyaXB0aW9uOiBcIihUdWtpKVwiXG4jICAgIGFtYmFzc2Fkb3Jfc3VtbWFyeTogXCJUYW1lIG91ciBmb3J1bSB1c2VycyBhbmQgcHJvdmlkZSBkaXJlY3Rpb24gZm9yIHRob3NlIHdpdGggcXVlc3Rpb25zLiBPdXIgYW1iYXNzYWRvcnMgcmVwcmVzZW50IENvZGVDb21iYXQgdG8gdGhlIHdvcmxkLlwiXG4jICAgIHRlYWNoZXJfdGl0bGU6IFwiVGVhY2hlclwiXG5cbiMgIGVkaXRvcjpcbiMgICAgbWFpbl90aXRsZTogXCJDb2RlQ29tYmF0IEVkaXRvcnNcIlxuIyAgICBhcnRpY2xlX3RpdGxlOiBcIkFydGljbGUgRWRpdG9yXCJcbiMgICAgdGhhbmdfdGl0bGU6IFwiVGhhbmcgRWRpdG9yXCJcbiMgICAgbGV2ZWxfdGl0bGU6IFwiTGV2ZWwgRWRpdG9yXCJcbiMgICAgY291cnNlX3RpdGxlOiBcIkNvdXJzZSBFZGl0b3JcIlxuIyAgICBhY2hpZXZlbWVudF90aXRsZTogXCJBY2hpZXZlbWVudCBFZGl0b3JcIlxuIyAgICBwb2xsX3RpdGxlOiBcIlBvbGwgRWRpdG9yXCJcbiMgICAgYmFjazogXCJCYWNrXCJcbiMgICAgcmV2ZXJ0OiBcIlJldmVydFwiXG4jICAgIHJldmVydF9tb2RlbHM6IFwiUmV2ZXJ0IE1vZGVsc1wiXG4jICAgIHBpY2tfYV90ZXJyYWluOiBcIlBpY2sgQSBUZXJyYWluXCJcbiMgICAgZHVuZ2VvbjogXCJEdW5nZW9uXCJcbiMgICAgaW5kb29yOiBcIkluZG9vclwiXG4jICAgIGRlc2VydDogXCJEZXNlcnRcIlxuIyAgICBncmFzc3k6IFwiR3Jhc3N5XCJcbiMgICAgbW91bnRhaW46IFwiTW91bnRhaW5cIlxuIyAgICBnbGFjaWVyOiBcIkdsYWNpZXJcIlxuIyAgICBzbWFsbDogXCJTbWFsbFwiXG4jICAgIGxhcmdlOiBcIkxhcmdlXCJcbiMgICAgZm9ya190aXRsZTogXCJGb3JrIE5ldyBWZXJzaW9uXCJcbiMgICAgZm9ya19jcmVhdGluZzogXCJDcmVhdGluZyBGb3JrLi4uXCJcbiMgICAgZ2VuZXJhdGVfdGVycmFpbjogXCJHZW5lcmF0ZSBUZXJyYWluXCJcbiMgICAgbW9yZTogXCJNb3JlXCJcbiMgICAgd2lraTogXCJXaWtpXCJcbiMgICAgbGl2ZV9jaGF0OiBcIkxpdmUgQ2hhdFwiXG4jICAgIHRoYW5nX21haW46IFwiTWFpblwiXG4jICAgIHRoYW5nX3Nwcml0ZXNoZWV0czogXCJTcHJpdGVzaGVldHNcIlxuIyAgICB0aGFuZ19jb2xvcnM6IFwiQ29sb3JzXCJcbiMgICAgbGV2ZWxfc29tZV9vcHRpb25zOiBcIlNvbWUgT3B0aW9ucz9cIlxuIyAgICBsZXZlbF90YWJfdGhhbmdzOiBcIlRoYW5nc1wiXG4jICAgIGxldmVsX3RhYl9zY3JpcHRzOiBcIlNjcmlwdHNcIlxuIyAgICBsZXZlbF90YWJfY29tcG9uZW50czogXCJDb21wb25lbnRzXCJcbiMgICAgbGV2ZWxfdGFiX3N5c3RlbXM6IFwiU3lzdGVtc1wiXG4jICAgIGxldmVsX3RhYl9kb2NzOiBcIkRvY3VtZW50YXRpb25cIlxuIyAgICBsZXZlbF90YWJfdGhhbmdzX3RpdGxlOiBcIkN1cnJlbnQgVGhhbmdzXCJcbiMgICAgbGV2ZWxfdGFiX3RoYW5nc19hbGw6IFwiQWxsXCJcbiMgICAgbGV2ZWxfdGFiX3RoYW5nc19jb25kaXRpb25zOiBcIlN0YXJ0aW5nIENvbmRpdGlvbnNcIlxuIyAgICBsZXZlbF90YWJfdGhhbmdzX2FkZDogXCJBZGQgVGhhbmdzXCJcbiMgICAgbGV2ZWxfdGFiX3RoYW5nc19zZWFyY2g6IFwiU2VhcmNoIHRoYW5nc1wiXG4jICAgIGFkZF9jb21wb25lbnRzOiBcIkFkZCBDb21wb25lbnRzXCJcbiMgICAgY29tcG9uZW50X2NvbmZpZ3M6IFwiQ29tcG9uZW50IENvbmZpZ3VyYXRpb25zXCJcbiMgICAgY29uZmlnX3RoYW5nOiBcIkRvdWJsZSBjbGljayB0byBjb25maWd1cmUgYSB0aGFuZ1wiXG4jICAgIGRlbGV0ZTogXCJEZWxldGVcIlxuIyAgICBkdXBsaWNhdGU6IFwiRHVwbGljYXRlXCJcbiMgICAgc3RvcF9kdXBsaWNhdGU6IFwiU3RvcCBEdXBsaWNhdGVcIlxuIyAgICByb3RhdGU6IFwiUm90YXRlXCJcbiMgICAgbGV2ZWxfY29tcG9uZW50X3RhYl90aXRsZTogXCJDdXJyZW50IENvbXBvbmVudHNcIlxuIyAgICBsZXZlbF9jb21wb25lbnRfYnRuX25ldzogXCJDcmVhdGUgTmV3IENvbXBvbmVudFwiXG4jICAgIGxldmVsX3N5c3RlbXNfdGFiX3RpdGxlOiBcIkN1cnJlbnQgU3lzdGVtc1wiXG4jICAgIGxldmVsX3N5c3RlbXNfYnRuX25ldzogXCJDcmVhdGUgTmV3IFN5c3RlbVwiXG4jICAgIGxldmVsX3N5c3RlbXNfYnRuX2FkZDogXCJBZGQgU3lzdGVtXCJcbiMgICAgbGV2ZWxfY29tcG9uZW50c190aXRsZTogXCJCYWNrIHRvIEFsbCBUaGFuZ3NcIlxuIyAgICBsZXZlbF9jb21wb25lbnRzX3R5cGU6IFwiVHlwZVwiXG4jICAgIGxldmVsX2NvbXBvbmVudF9lZGl0X3RpdGxlOiBcIkVkaXQgQ29tcG9uZW50XCJcbiMgICAgbGV2ZWxfY29tcG9uZW50X2NvbmZpZ19zY2hlbWE6IFwiQ29uZmlnIFNjaGVtYVwiXG4jICAgIGxldmVsX3N5c3RlbV9lZGl0X3RpdGxlOiBcIkVkaXQgU3lzdGVtXCJcbiMgICAgY3JlYXRlX3N5c3RlbV90aXRsZTogXCJDcmVhdGUgTmV3IFN5c3RlbVwiXG4jICAgIG5ld19jb21wb25lbnRfdGl0bGU6IFwiQ3JlYXRlIE5ldyBDb21wb25lbnRcIlxuIyAgICBuZXdfY29tcG9uZW50X2ZpZWxkX3N5c3RlbTogXCJTeXN0ZW1cIlxuIyAgICBuZXdfYXJ0aWNsZV90aXRsZTogXCJDcmVhdGUgYSBOZXcgQXJ0aWNsZVwiXG4jICAgIG5ld190aGFuZ190aXRsZTogXCJDcmVhdGUgYSBOZXcgVGhhbmcgVHlwZVwiXG4jICAgIG5ld19sZXZlbF90aXRsZTogXCJDcmVhdGUgYSBOZXcgTGV2ZWxcIlxuIyAgICBuZXdfYXJ0aWNsZV90aXRsZV9sb2dpbjogXCJMb2cgSW4gdG8gQ3JlYXRlIGEgTmV3IEFydGljbGVcIlxuIyAgICBuZXdfdGhhbmdfdGl0bGVfbG9naW46IFwiTG9nIEluIHRvIENyZWF0ZSBhIE5ldyBUaGFuZyBUeXBlXCJcbiMgICAgbmV3X2xldmVsX3RpdGxlX2xvZ2luOiBcIkxvZyBJbiB0byBDcmVhdGUgYSBOZXcgTGV2ZWxcIlxuIyAgICBuZXdfYWNoaWV2ZW1lbnRfdGl0bGU6IFwiQ3JlYXRlIGEgTmV3IEFjaGlldmVtZW50XCJcbiMgICAgbmV3X2FjaGlldmVtZW50X3RpdGxlX2xvZ2luOiBcIkxvZyBJbiB0byBDcmVhdGUgYSBOZXcgQWNoaWV2ZW1lbnRcIlxuIyAgICBuZXdfcG9sbF90aXRsZTogXCJDcmVhdGUgYSBOZXcgUG9sbFwiXG4jICAgIG5ld19wb2xsX3RpdGxlX2xvZ2luOiBcIkxvZyBJbiB0byBDcmVhdGUgYSBOZXcgUG9sbFwiXG4jICAgIGFydGljbGVfc2VhcmNoX3RpdGxlOiBcIlNlYXJjaCBBcnRpY2xlcyBIZXJlXCJcbiMgICAgdGhhbmdfc2VhcmNoX3RpdGxlOiBcIlNlYXJjaCBUaGFuZyBUeXBlcyBIZXJlXCJcbiMgICAgbGV2ZWxfc2VhcmNoX3RpdGxlOiBcIlNlYXJjaCBMZXZlbHMgSGVyZVwiXG4jICAgIGFjaGlldmVtZW50X3NlYXJjaF90aXRsZTogXCJTZWFyY2ggQWNoaWV2ZW1lbnRzXCJcbiMgICAgcG9sbF9zZWFyY2hfdGl0bGU6IFwiU2VhcmNoIFBvbGxzXCJcbiMgICAgcmVhZF9vbmx5X3dhcm5pbmcyOiBcIk5vdGU6IHlvdSBjYW4ndCBzYXZlIGFueSBlZGl0cyBoZXJlLCBiZWNhdXNlIHlvdSdyZSBub3QgbG9nZ2VkIGluLlwiXG4jICAgIG5vX2FjaGlldmVtZW50czogXCJObyBhY2hpZXZlbWVudHMgaGF2ZSBiZWVuIGFkZGVkIGZvciB0aGlzIGxldmVsIHlldC5cIlxuIyAgICBhY2hpZXZlbWVudF9xdWVyeV9taXNjOiBcIktleSBhY2hpZXZlbWVudCBvZmYgb2YgbWlzY2VsbGFuZWFcIlxuIyAgICBhY2hpZXZlbWVudF9xdWVyeV9nb2FsczogXCJLZXkgYWNoaWV2ZW1lbnQgb2ZmIG9mIGxldmVsIGdvYWxzXCJcbiMgICAgbGV2ZWxfY29tcGxldGlvbjogXCJMZXZlbCBDb21wbGV0aW9uXCJcbiMgICAgcG9wX2kxOG46IFwiUG9wdWxhdGUgSTE4TlwiXG4jICAgIHRhc2tzOiBcIlRhc2tzXCJcbiMgICAgY2xlYXJfc3RvcmFnZTogXCJDbGVhciB5b3VyIGxvY2FsIGNoYW5nZXNcIlxuIyAgICBhZGRfc3lzdGVtX3RpdGxlOiBcIkFkZCBTeXN0ZW1zIHRvIExldmVsXCJcbiMgICAgZG9uZV9hZGRpbmc6IFwiRG9uZSBBZGRpbmdcIlxuXG4gIGFydGljbGU6XG4gICAgZWRpdF9idG5fcHJldmlldzogXCJFc2lrYXRzZWx1XCJcbiAgICBlZGl0X2FydGljbGVfdGl0bGU6IFwiTXVva2thYSBhcnRpa2tlbGlhXCJcblxuICBwb2xsczpcbiAgICBwcmlvcml0eTogXCJQcmlvcml0ZWV0dGlcIlxuXG4jICBjb250cmlidXRlOlxuIyAgICBwYWdlX3RpdGxlOiBcIkNvbnRyaWJ1dGluZ1wiXG4jICAgIGludHJvX2JsdXJiOiBcIkNvZGVDb21iYXQgaXMgMTAwJSBvcGVuIHNvdXJjZSEgSHVuZHJlZHMgb2YgZGVkaWNhdGVkIHBsYXllcnMgaGF2ZSBoZWxwZWQgdXMgYnVpbGQgdGhlIGdhbWUgaW50byB3aGF0IGl0IGlzIHRvZGF5LiBKb2luIHVzIGFuZCB3cml0ZSB0aGUgbmV4dCBjaGFwdGVyIGluIENvZGVDb21iYXQncyBxdWVzdCB0byB0ZWFjaCB0aGUgd29ybGQgdG8gY29kZSFcIlxuIyAgICBhbGVydF9hY2NvdW50X21lc3NhZ2VfaW50cm86IFwiSGV5IHRoZXJlIVwiXG4jICAgIGFsZXJ0X2FjY291bnRfbWVzc2FnZTogXCJUbyBzdWJzY3JpYmUgZm9yIGNsYXNzIGVtYWlscywgeW91J2xsIG5lZWQgdG8gYmUgbG9nZ2VkIGluIGZpcnN0LlwiXG4jICAgIGFyY2htYWdlX2ludHJvZHVjdGlvbjogXCJPbmUgb2YgdGhlIGJlc3QgcGFydHMgYWJvdXQgYnVpbGRpbmcgZ2FtZXMgaXMgdGhleSBzeW50aGVzaXplIHNvIG1hbnkgZGlmZmVyZW50IHRoaW5ncy4gR3JhcGhpY3MsIHNvdW5kLCByZWFsLXRpbWUgbmV0d29ya2luZywgc29jaWFsIG5ldHdvcmtpbmcsIGFuZCBvZiBjb3Vyc2UgbWFueSBvZiB0aGUgbW9yZSBjb21tb24gYXNwZWN0cyBvZiBwcm9ncmFtbWluZywgZnJvbSBsb3ctbGV2ZWwgZGF0YWJhc2UgbWFuYWdlbWVudCwgYW5kIHNlcnZlciBhZG1pbmlzdHJhdGlvbiB0byB1c2VyIGZhY2luZyBkZXNpZ24gYW5kIGludGVyZmFjZSBidWlsZGluZy4gVGhlcmUncyBhIGxvdCB0byBkbywgYW5kIGlmIHlvdSdyZSBhbiBleHBlcmllbmNlZCBwcm9ncmFtbWVyIHdpdGggYSBoYW5rZXJpbmcgdG8gcmVhbGx5IGRpdmUgaW50byB0aGUgbml0dHktZ3JpdHR5IG9mIENvZGVDb21iYXQsIHRoaXMgY2xhc3MgbWlnaHQgYmUgZm9yIHlvdS4gV2Ugd291bGQgbG92ZSB0byBoYXZlIHlvdXIgaGVscCBidWlsZGluZyB0aGUgYmVzdCBwcm9ncmFtbWluZyBnYW1lIGV2ZXIuXCJcbiMgICAgY2xhc3NfYXR0cmlidXRlczogXCJDbGFzcyBBdHRyaWJ1dGVzXCJcbiMgICAgYXJjaG1hZ2VfYXR0cmlidXRlXzFfcHJlZjogXCJLbm93bGVkZ2UgaW4gXCJcbiMgICAgYXJjaG1hZ2VfYXR0cmlidXRlXzFfc3VmOiBcIiwgb3IgYSBkZXNpcmUgdG8gbGVhcm4uIE1vc3Qgb2Ygb3VyIGNvZGUgaXMgaW4gdGhpcyBsYW5ndWFnZS4gSWYgeW91J3JlIGEgZmFuIG9mIFJ1Ynkgb3IgUHl0aG9uLCB5b3UnbGwgZmVlbCByaWdodCBhdCBob21lLiBJdCdzIEphdmFTY3JpcHQsIGJ1dCB3aXRoIGEgbmljZXIgc3ludGF4LlwiXG4jICAgIGFyY2htYWdlX2F0dHJpYnV0ZV8yOiBcIlNvbWUgZXhwZXJpZW5jZSBpbiBwcm9ncmFtbWluZyBhbmQgcGVyc29uYWwgaW5pdGlhdGl2ZS4gV2UnbGwgaGVscCB5b3UgZ2V0IG9yaWVudGVkLCBidXQgd2UgY2FuJ3Qgc3BlbmQgbXVjaCB0aW1lIHRyYWluaW5nIHlvdS5cIlxuIyAgICBob3dfdG9fam9pbjogXCJIb3cgVG8gSm9pblwiXG4jICAgIGpvaW5fZGVzY18xOiBcIkFueW9uZSBjYW4gaGVscCBvdXQhIEp1c3QgY2hlY2sgb3V0IG91ciBcIlxuIyAgICBqb2luX2Rlc2NfMjogXCJ0byBnZXQgc3RhcnRlZCwgYW5kIGNoZWNrIHRoZSBib3ggYmVsb3cgdG8gbWFyayB5b3Vyc2VsZiBhcyBhIGJyYXZlIEFyY2htYWdlIGFuZCBnZXQgdGhlIGxhdGVzdCBuZXdzIGJ5IGVtYWlsLiBXYW50IHRvIGNoYXQgYWJvdXQgd2hhdCB0byBkbyBvciBob3cgdG8gZ2V0IG1vcmUgZGVlcGx5IGludm9sdmVkPyBcIlxuIyAgICBqb2luX2Rlc2NfMzogXCIsIG9yIGZpbmQgdXMgaW4gb3VyIFwiXG4jICAgIGpvaW5fZGVzY180OiBcImFuZCB3ZSdsbCBnbyBmcm9tIHRoZXJlIVwiXG4jICAgIGpvaW5fdXJsX2VtYWlsOiBcIkVtYWlsIHVzXCJcbiMgICAgam9pbl91cmxfc2xhY2s6IFwicHVibGljIFNsYWNrIGNoYW5uZWxcIlxuIyAgICBhcmNobWFnZV9zdWJzY3JpYmVfZGVzYzogXCJHZXQgZW1haWxzIG9uIG5ldyBjb2Rpbmcgb3Bwb3J0dW5pdGllcyBhbmQgYW5ub3VuY2VtZW50cy5cIlxuIyAgICBhcnRpc2FuX2ludHJvZHVjdGlvbl9wcmVmOiBcIldlIG11c3QgY29uc3RydWN0IGFkZGl0aW9uYWwgbGV2ZWxzISBQZW9wbGUgYmUgY2xhbW9yaW5nIGZvciBtb3JlIGNvbnRlbnQsIGFuZCB3ZSBjYW4gb25seSBidWlsZCBzbyBtYW55IG91cnNlbHZlcy4gUmlnaHQgbm93IHlvdXIgd29ya3N0YXRpb24gaXMgbGV2ZWwgb25lOyBvdXIgbGV2ZWwgZWRpdG9yIGlzIGJhcmVseSB1c2FibGUgZXZlbiBieSBpdHMgY3JlYXRvcnMsIHNvIGJlIHdhcnkuIElmIHlvdSBoYXZlIHZpc2lvbnMgb2YgY2FtcGFpZ25zIHNwYW5uaW5nIGZvci1sb29wcyB0b1wiXG4jICAgIGFydGlzYW5faW50cm9kdWN0aW9uX3N1ZjogXCIsIHRoZW4gdGhpcyBjbGFzcyBtaWdodCBiZSBmb3IgeW91LlwiXG4jICAgIGFydGlzYW5fYXR0cmlidXRlXzE6IFwiQW55IGV4cGVyaWVuY2UgaW4gYnVpbGRpbmcgY29udGVudCBsaWtlIHRoaXMgd291bGQgYmUgbmljZSwgc3VjaCBhcyB1c2luZyBCbGl6emFyZCdzIGxldmVsIGVkaXRvcnMuIEJ1dCBub3QgcmVxdWlyZWQhXCJcbiMgICAgYXJ0aXNhbl9hdHRyaWJ1dGVfMjogXCJBIGhhbmtlcmluZyB0byBkbyBhIHdob2xlIGxvdCBvZiB0ZXN0aW5nIGFuZCBpdGVyYXRpb24uIFRvIG1ha2UgZ29vZCBsZXZlbHMsIHlvdSBuZWVkIHRvIHRha2UgaXQgdG8gb3RoZXJzIGFuZCB3YXRjaCB0aGVtIHBsYXkgaXQsIGFuZCBiZSBwcmVwYXJlZCB0byBmaW5kIGEgbG90IG9mIHRoaW5ncyB0byBmaXguXCJcbiMgICAgYXJ0aXNhbl9hdHRyaWJ1dGVfMzogXCJGb3IgdGhlIHRpbWUgYmVpbmcsIGVuZHVyYW5jZSBlbiBwYXIgd2l0aCBhbiBBZHZlbnR1cmVyLiBPdXIgTGV2ZWwgRWRpdG9yIGlzIHN1cGVyIHByZWxpbWluYXJ5IGFuZCBmcnVzdHJhdGluZyB0byB1c2UuIFlvdSBoYXZlIGJlZW4gd2FybmVkIVwiXG4jICAgIGFydGlzYW5fam9pbl9kZXNjOiBcIlVzZSB0aGUgTGV2ZWwgRWRpdG9yIGluIHRoZXNlIHN0ZXBzLCBnaXZlIG9yIHRha2U6XCJcbiMgICAgYXJ0aXNhbl9qb2luX3N0ZXAxOiBcIlJlYWQgdGhlIGRvY3VtZW50YXRpb24uXCJcbiMgICAgYXJ0aXNhbl9qb2luX3N0ZXAyOiBcIkNyZWF0ZSBhIG5ldyBsZXZlbCBhbmQgZXhwbG9yZSBleGlzdGluZyBsZXZlbHMuXCJcbiMgICAgYXJ0aXNhbl9qb2luX3N0ZXAzOiBcIkZpbmQgdXMgaW4gb3VyIHB1YmxpYyBTbGFjayBjaGFubmVsIGZvciBoZWxwLlwiXG4jICAgIGFydGlzYW5fam9pbl9zdGVwNDogXCJQb3N0IHlvdXIgbGV2ZWxzIG9uIHRoZSBmb3J1bSBmb3IgZmVlZGJhY2suXCJcbiMgICAgYXJ0aXNhbl9zdWJzY3JpYmVfZGVzYzogXCJHZXQgZW1haWxzIG9uIGxldmVsIGVkaXRvciB1cGRhdGVzIGFuZCBhbm5vdW5jZW1lbnRzLlwiXG4jICAgIGFkdmVudHVyZXJfaW50cm9kdWN0aW9uOiBcIkxldCdzIGJlIGNsZWFyIGFib3V0IHlvdXIgcm9sZTogeW91IGFyZSB0aGUgdGFuay4gWW91J3JlIGdvaW5nIHRvIHRha2UgaGVhdnkgZGFtYWdlLiBXZSBuZWVkIHBlb3BsZSB0byB0cnkgb3V0IGJyYW5kLW5ldyBsZXZlbHMgYW5kIGhlbHAgaWRlbnRpZnkgaG93IHRvIG1ha2UgdGhpbmdzIGJldHRlci4gVGhlIHBhaW4gd2lsbCBiZSBlbm9ybW91czsgbWFraW5nIGdvb2QgZ2FtZXMgaXMgYSBsb25nIHByb2Nlc3MgYW5kIG5vIG9uZSBnZXRzIGl0IHJpZ2h0IHRoZSBmaXJzdCB0aW1lLiBJZiB5b3UgY2FuIGVuZHVyZSBhbmQgaGF2ZSBhIGhpZ2ggY29uc3RpdHV0aW9uIHNjb3JlLCB0aGVuIHRoaXMgY2xhc3MgbWlnaHQgYmUgZm9yIHlvdS5cIlxuIyAgICBhZHZlbnR1cmVyX2F0dHJpYnV0ZV8xOiBcIkEgdGhpcnN0IGZvciBsZWFybmluZy4gWW91IHdhbnQgdG8gbGVhcm4gaG93IHRvIGNvZGUgYW5kIHdlIHdhbnQgdG8gdGVhY2ggeW91IGhvdyB0byBjb2RlLiBZb3UnbGwgcHJvYmFibHkgYmUgZG9pbmcgbW9zdCBvZiB0aGUgdGVhY2hpbmcgaW4gdGhpcyBjYXNlLCB0aG91Z2guXCJcbiMgICAgYWR2ZW50dXJlcl9hdHRyaWJ1dGVfMjogXCJDaGFyaXNtYXRpYy4gQmUgZ2VudGxlIGJ1dCBhcnRpY3VsYXRlIGFib3V0IHdoYXQgbmVlZHMgaW1wcm92aW5nLCBhbmQgb2ZmZXIgc3VnZ2VzdGlvbnMgb24gaG93IHRvIGltcHJvdmUuXCJcbiMgICAgYWR2ZW50dXJlcl9qb2luX3ByZWY6IFwiRWl0aGVyIGdldCB0b2dldGhlciB3aXRoIChvciByZWNydWl0ISkgYW4gQXJ0aXNhbiBhbmQgd29yayB3aXRoIHRoZW0sIG9yIGNoZWNrIHRoZSBib3ggYmVsb3cgdG8gcmVjZWl2ZSBlbWFpbHMgd2hlbiB0aGVyZSBhcmUgbmV3IGxldmVscyB0byB0ZXN0LiBXZSdsbCBhbHNvIGJlIHBvc3RpbmcgYWJvdXQgbGV2ZWxzIHRvIHJldmlldyBvbiBvdXIgbmV0d29ya3MgbGlrZVwiXG4jICAgIGFkdmVudHVyZXJfZm9ydW1fdXJsOiBcIm91ciBmb3J1bVwiXG4jICAgIGFkdmVudHVyZXJfam9pbl9zdWY6IFwic28gaWYgeW91IHByZWZlciB0byBiZSBub3RpZmllZCB0aG9zZSB3YXlzLCBzaWduIHVwIHRoZXJlIVwiXG4jICAgIGFkdmVudHVyZXJfc3Vic2NyaWJlX2Rlc2M6IFwiR2V0IGVtYWlscyB3aGVuIHRoZXJlIGFyZSBuZXcgbGV2ZWxzIHRvIHRlc3QuXCJcbiMgICAgc2NyaWJlX2ludHJvZHVjdGlvbl9wcmVmOiBcIkNvZGVDb21iYXQgaXNuJ3QganVzdCBnb2luZyB0byBiZSBhIGJ1bmNoIG9mIGxldmVscy4gSXQgd2lsbCBhbHNvIGluY2x1ZGUgYSByZXNvdXJjZSBmb3Iga25vd2xlZGdlLCBhIHdpa2kgb2YgcHJvZ3JhbW1pbmcgY29uY2VwdHMgdGhhdCBsZXZlbHMgY2FuIGhvb2sgaW50by4gVGhhdCB3YXkgcmF0aGVyIHRoYW4gZWFjaCBBcnRpc2FuIGhhdmluZyB0byBkZXNjcmliZSBpbiBkZXRhaWwgd2hhdCBhIGNvbXBhcmlzb24gb3BlcmF0b3IgaXMsIHRoZXkgY2FuIHNpbXBseSBsaW5rIHRoZWlyIGxldmVsIHRvIHRoZSBBcnRpY2xlIGRlc2NyaWJpbmcgdGhlbSB0aGF0IGlzIGFscmVhZHkgd3JpdHRlbiBmb3IgdGhlIHBsYXllcidzIGVkaWZpY2F0aW9uLiBTb21ldGhpbmcgYWxvbmcgdGhlIGxpbmVzIG9mIHdoYXQgdGhlIFwiXG4jICAgIHNjcmliZV9pbnRyb2R1Y3Rpb25fdXJsX21vemlsbGE6IFwiTW96aWxsYSBEZXZlbG9wZXIgTmV0d29ya1wiXG4jICAgIHNjcmliZV9pbnRyb2R1Y3Rpb25fc3VmOiBcIiBoYXMgYnVpbHQuIElmIHlvdXIgaWRlYSBvZiBmdW4gaXMgYXJ0aWN1bGF0aW5nIHRoZSBjb25jZXB0cyBvZiBwcm9ncmFtbWluZyBpbiBNYXJrZG93biBmb3JtLCB0aGVuIHRoaXMgY2xhc3MgbWlnaHQgYmUgZm9yIHlvdS5cIlxuIyAgICBzY3JpYmVfYXR0cmlidXRlXzE6IFwiU2tpbGwgaW4gd29yZHMgaXMgcHJldHR5IG11Y2ggYWxsIHlvdSBuZWVkLiBOb3Qgb25seSBncmFtbWFyIGFuZCBzcGVsbGluZywgYnV0IGFibGUgdG8gY29udmV5IGNvbXBsaWNhdGVkIGlkZWFzIHRvIG90aGVycy5cIlxuIyAgICBjb250YWN0X3VzX3VybDogXCJDb250YWN0IFVzXCJcbiMgICAgc2NyaWJlX2pvaW5fZGVzY3JpcHRpb246IFwidGVsbCB1cyBhIGxpdHRsZSBhYm91dCB5b3Vyc2VsZiwgeW91ciBleHBlcmllbmNlIHdpdGggcHJvZ3JhbW1pbmcgYW5kIHdoYXQgc29ydCBvZiB0aGluZ3MgeW91J2QgbGlrZSB0byB3cml0ZSBhYm91dC4gV2UnbGwgZ28gZnJvbSB0aGVyZSFcIlxuIyAgICBzY3JpYmVfc3Vic2NyaWJlX2Rlc2M6IFwiR2V0IGVtYWlscyBhYm91dCBhcnRpY2xlIHdyaXRpbmcgYW5ub3VuY2VtZW50cy5cIlxuIyAgICBkaXBsb21hdF9pbnRyb2R1Y3Rpb25fcHJlZjogXCJTbywgaWYgdGhlcmUncyBvbmUgdGhpbmcgd2UgbGVhcm5lZCBmcm9tIHRoZSBcIlxuIyAgICBkaXBsb21hdF9sYXVuY2hfdXJsOiBcImxhdW5jaCBpbiBPY3RvYmVyXCJcbiMgICAgZGlwbG9tYXRfaW50cm9kdWN0aW9uX3N1ZjogXCJpdCdzIHRoYXQgdGhlcmUgaXMgc2l6ZWFibGUgaW50ZXJlc3QgaW4gQ29kZUNvbWJhdCBpbiBvdGhlciBjb3VudHJpZXMhIFdlJ3JlIGJ1aWxkaW5nIGEgY29ycHMgb2YgdHJhbnNsYXRvcnMgZWFnZXIgdG8gdHVybiBvbmUgc2V0IG9mIHdvcmRzIGludG8gYW5vdGhlciBzZXQgb2Ygd29yZHMgdG8gZ2V0IENvZGVDb21iYXQgYXMgYWNjZXNzaWJsZSBhY3Jvc3MgdGhlIHdvcmxkIGFzIHBvc3NpYmxlLiBJZiB5b3UgbGlrZSBnZXR0aW5nIHNuZWFrIHBlZWtzIGF0IHVwY29taW5nIGNvbnRlbnQgYW5kIGdldHRpbmcgdGhlc2UgbGV2ZWxzIHRvIHlvdXIgZmVsbG93IG5hdGlvbmFscyBBU0FQLCB0aGVuIHRoaXMgY2xhc3MgbWlnaHQgYmUgZm9yIHlvdS5cIlxuIyAgICBkaXBsb21hdF9hdHRyaWJ1dGVfMTogXCJGbHVlbmN5IGluIEVuZ2xpc2ggYW5kIHRoZSBsYW5ndWFnZSB5b3Ugd291bGQgbGlrZSB0byB0cmFuc2xhdGUgdG8uIFdoZW4gY29udmV5aW5nIGNvbXBsaWNhdGVkIGlkZWFzLCBpdCdzIGltcG9ydGFudCB0byBoYXZlIGEgc3Ryb25nIGdyYXNwIGluIGJvdGghXCJcbiMgICAgZGlwbG9tYXRfaTE4bl9wYWdlX3ByZWZpeDogXCJZb3UgY2FuIHN0YXJ0IHRyYW5zbGF0aW5nIG91ciBsZXZlbHMgYnkgZ29pbmcgdG8gb3VyXCJcbiMgICAgZGlwbG9tYXRfaTE4bl9wYWdlOiBcInRyYW5zbGF0aW9ucyBwYWdlXCJcbiMgICAgZGlwbG9tYXRfaTE4bl9wYWdlX3N1ZmZpeDogXCIsIG9yIG91ciBpbnRlcmZhY2UgYW5kIHdlYnNpdGUgb24gR2l0SHViLlwiXG4jICAgIGRpcGxvbWF0X2pvaW5fcHJlZl9naXRodWI6IFwiRmluZCB5b3VyIGxhbmd1YWdlIGxvY2FsZSBmaWxlIFwiXG4jICAgIGRpcGxvbWF0X2dpdGh1Yl91cmw6IFwib24gR2l0SHViXCJcbiMgICAgZGlwbG9tYXRfam9pbl9zdWZfZ2l0aHViOiBcIiwgZWRpdCBpdCBvbmxpbmUsIGFuZCBzdWJtaXQgYSBwdWxsIHJlcXVlc3QuIEFsc28sIGNoZWNrIHRoaXMgYm94IGJlbG93IHRvIGtlZXAgdXAtdG8tZGF0ZSBvbiBuZXcgaW50ZXJuYXRpb25hbGl6YXRpb24gZGV2ZWxvcG1lbnRzIVwiXG4jICAgIGRpcGxvbWF0X3N1YnNjcmliZV9kZXNjOiBcIkdldCBlbWFpbHMgYWJvdXQgaTE4biBkZXZlbG9wbWVudHMgYW5kIGxldmVscyB0byB0cmFuc2xhdGUuXCJcbiMgICAgYW1iYXNzYWRvcl9pbnRyb2R1Y3Rpb246IFwiVGhpcyBpcyBhIGNvbW11bml0eSB3ZSdyZSBidWlsZGluZywgYW5kIHlvdSBhcmUgdGhlIGNvbm5lY3Rpb25zLiBXZSd2ZSBnb3QgZm9ydW1zLCBlbWFpbHMsIGFuZCBzb2NpYWwgbmV0d29ya3Mgd2l0aCBsb3RzIG9mIHBlb3BsZSB0byB0YWxrIHdpdGggYW5kIGhlbHAgZ2V0IGFjcXVhaW50ZWQgd2l0aCB0aGUgZ2FtZSBhbmQgbGVhcm4gZnJvbS4gSWYgeW91IHdhbnQgdG8gaGVscCBwZW9wbGUgZ2V0IGludm9sdmVkIGFuZCBoYXZlIGZ1biwgYW5kIGdldCBhIGdvb2QgZmVlbCBvZiB0aGUgcHVsc2Ugb2YgQ29kZUNvbWJhdCBhbmQgd2hlcmUgd2UncmUgZ29pbmcsIHRoZW4gdGhpcyBjbGFzcyBtaWdodCBiZSBmb3IgeW91LlwiXG4jICAgIGFtYmFzc2Fkb3JfYXR0cmlidXRlXzE6IFwiQ29tbXVuaWNhdGlvbiBza2lsbHMuIEJlIGFibGUgdG8gaWRlbnRpZnkgdGhlIHByb2JsZW1zIHBsYXllcnMgYXJlIGhhdmluZyBhbmQgaGVscCB0aGVtIHNvbHZlIHRoZW0uIEFsc28sIGtlZXAgdGhlIHJlc3Qgb2YgdXMgaW5mb3JtZWQgYWJvdXQgd2hhdCBwbGF5ZXJzIGFyZSBzYXlpbmcsIHdoYXQgdGhleSBsaWtlIGFuZCBkb24ndCBsaWtlIGFuZCB3YW50IG1vcmUgb2YhXCJcbiMgICAgYW1iYXNzYWRvcl9qb2luX2Rlc2M6IFwidGVsbCB1cyBhIGxpdHRsZSBhYm91dCB5b3Vyc2VsZiwgd2hhdCB5b3UndmUgZG9uZSBhbmQgd2hhdCB5b3UnZCBiZSBpbnRlcmVzdGVkIGluIGRvaW5nLiBXZSdsbCBnbyBmcm9tIHRoZXJlIVwiXG4jICAgIGFtYmFzc2Fkb3Jfam9pbl9ub3RlX3N0cm9uZzogXCJOb3RlXCJcbiMgICAgYW1iYXNzYWRvcl9qb2luX25vdGVfZGVzYzogXCJPbmUgb2Ygb3VyIHRvcCBwcmlvcml0aWVzIGlzIHRvIGJ1aWxkIG11bHRpcGxheWVyIHdoZXJlIHBsYXllcnMgaGF2aW5nIGRpZmZpY3VsdHkgc29sdmluZyBsZXZlbHMgY2FuIHN1bW1vbiBoaWdoZXIgbGV2ZWwgd2l6YXJkcyB0byBoZWxwIHRoZW0uIFRoaXMgd2lsbCBiZSBhIGdyZWF0IHdheSBmb3IgYW1iYXNzYWRvcnMgdG8gZG8gdGhlaXIgdGhpbmcuIFdlJ2xsIGtlZXAgeW91IHBvc3RlZCFcIlxuIyAgICBhbWJhc3NhZG9yX3N1YnNjcmliZV9kZXNjOiBcIkdldCBlbWFpbHMgb24gc3VwcG9ydCB1cGRhdGVzIGFuZCBtdWx0aXBsYXllciBkZXZlbG9wbWVudHMuXCJcbiMgICAgdGVhY2hlcl9zdWJzY3JpYmVfZGVzYzogXCJHZXQgZW1haWxzIG9uIHVwZGF0ZXMgYW5kIGFubm91bmNlbWVudHMgZm9yIHRlYWNoZXJzLlwiXG4jICAgIGNoYW5nZXNfYXV0b19zYXZlOiBcIkNoYW5nZXMgYXJlIHNhdmVkIGF1dG9tYXRpY2FsbHkgd2hlbiB5b3UgdG9nZ2xlIGNoZWNrYm94ZXMuXCJcbiMgICAgZGlsaWdlbnRfc2NyaWJlczogXCJPdXIgRGlsaWdlbnQgU2NyaWJlczpcIlxuIyAgICBwb3dlcmZ1bF9hcmNobWFnZXM6IFwiT3VyIFBvd2VyZnVsIEFyY2htYWdlczpcIlxuIyAgICBjcmVhdGl2ZV9hcnRpc2FuczogXCJPdXIgQ3JlYXRpdmUgQXJ0aXNhbnM6XCJcbiMgICAgYnJhdmVfYWR2ZW50dXJlcnM6IFwiT3VyIEJyYXZlIEFkdmVudHVyZXJzOlwiXG4jICAgIHRyYW5zbGF0aW5nX2RpcGxvbWF0czogXCJPdXIgVHJhbnNsYXRpbmcgRGlwbG9tYXRzOlwiXG4jICAgIGhlbHBmdWxfYW1iYXNzYWRvcnM6IFwiT3VyIEhlbHBmdWwgQW1iYXNzYWRvcnM6XCJcblxuIyAgbGFkZGVyOlxuIyAgICBteV9tYXRjaGVzOiBcIk15IE1hdGNoZXNcIlxuIyAgICBzaW11bGF0ZTogXCJTaW11bGF0ZVwiXG4jICAgIHNpbXVsYXRpb25fZXhwbGFuYXRpb246IFwiQnkgc2ltdWxhdGluZyBnYW1lcyB5b3UgY2FuIGdldCB5b3VyIGdhbWUgcmFua2VkIGZhc3RlciFcIlxuIyAgICBzaW11bGF0aW9uX2V4cGxhbmF0aW9uX2xlYWd1ZXM6IFwiWW91IHdpbGwgbWFpbmx5IGhlbHAgc2ltdWxhdGUgZ2FtZXMgZm9yIGFsbGllZCBwbGF5ZXJzIGluIHlvdXIgY2xhbnMgYW5kIGNvdXJzZXMuXCJcbiMgICAgc2ltdWxhdGVfZ2FtZXM6IFwiU2ltdWxhdGUgR2FtZXMhXCJcbiMgICAgZ2FtZXNfc2ltdWxhdGVkX2J5OiBcIkdhbWVzIHNpbXVsYXRlZCBieSB5b3U6XCJcbiMgICAgZ2FtZXNfc2ltdWxhdGVkX2ZvcjogXCJHYW1lcyBzaW11bGF0ZWQgZm9yIHlvdTpcIlxuIyAgICBnYW1lc19pbl9xdWV1ZTogXCJHYW1lcyBjdXJyZW50bHkgaW4gdGhlIHF1ZXVlOlwiXG4jICAgIGdhbWVzX3NpbXVsYXRlZDogXCJHYW1lcyBzaW11bGF0ZWRcIlxuIyAgICBnYW1lc19wbGF5ZWQ6IFwiR2FtZXMgcGxheWVkXCJcbiMgICAgcmF0aW86IFwiUmF0aW9cIlxuIyAgICBsZWFkZXJib2FyZDogXCJMZWFkZXJib2FyZFwiXG4jICAgIGJhdHRsZV9hczogXCJCYXR0bGUgYXMgXCJcbiMgICAgc3VtbWFyeV95b3VyOiBcIllvdXIgXCJcbiMgICAgc3VtbWFyeV9tYXRjaGVzOiBcIk1hdGNoZXMgLSBcIlxuIyAgICBzdW1tYXJ5X3dpbnM6IFwiIFdpbnMsIFwiXG4jICAgIHN1bW1hcnlfbG9zc2VzOiBcIiBMb3NzZXNcIlxuIyAgICByYW5rX25vX2NvZGU6IFwiTm8gTmV3IENvZGUgdG8gUmFua1wiXG4jICAgIHJhbmtfbXlfZ2FtZTogXCJSYW5rIE15IEdhbWUhXCJcbiMgICAgcmFua19zdWJtaXR0aW5nOiBcIlN1Ym1pdHRpbmcuLi5cIlxuIyAgICByYW5rX3N1Ym1pdHRlZDogXCJTdWJtaXR0ZWQgZm9yIFJhbmtpbmdcIlxuIyAgICByYW5rX2ZhaWxlZDogXCJGYWlsZWQgdG8gUmFua1wiXG4jICAgIHJhbmtfYmVpbmdfcmFua2VkOiBcIkdhbWUgQmVpbmcgUmFua2VkXCJcbiMgICAgcmFua19sYXN0X3N1Ym1pdHRlZDogXCJzdWJtaXR0ZWQgXCJcbiMgICAgaGVscF9zaW11bGF0ZTogXCJIZWxwIHNpbXVsYXRlIGdhbWVzP1wiXG4jICAgIGNvZGVfYmVpbmdfc2ltdWxhdGVkOiBcIllvdXIgbmV3IGNvZGUgaXMgYmVpbmcgc2ltdWxhdGVkIGJ5IG90aGVyIHBsYXllcnMgZm9yIHJhbmtpbmcuIFRoaXMgd2lsbCByZWZyZXNoIGFzIG5ldyBtYXRjaGVzIGNvbWUgaW4uXCJcbiMgICAgbm9fcmFua2VkX21hdGNoZXNfcHJlOiBcIk5vIHJhbmtlZCBtYXRjaGVzIGZvciB0aGUgXCJcbiMgICAgbm9fcmFua2VkX21hdGNoZXNfcG9zdDogXCIgdGVhbSEgUGxheSBhZ2FpbnN0IHNvbWUgY29tcGV0aXRvcnMgYW5kIHRoZW4gY29tZSBiYWNrIGhlcmUgdG8gZ2V0IHlvdXIgZ2FtZSByYW5rZWQuXCJcbiMgICAgY2hvb3NlX29wcG9uZW50OiBcIkNob29zZSBhbiBPcHBvbmVudFwiXG4jICAgIHNlbGVjdF95b3VyX2xhbmd1YWdlOiBcIlNlbGVjdCB5b3VyIGxhbmd1YWdlIVwiXG4jICAgIHR1dG9yaWFsX3BsYXk6IFwiUGxheSBUdXRvcmlhbFwiXG4jICAgIHR1dG9yaWFsX3JlY29tbWVuZGVkOiBcIlJlY29tbWVuZGVkIGlmIHlvdSd2ZSBuZXZlciBwbGF5ZWQgYmVmb3JlXCJcbiMgICAgdHV0b3JpYWxfc2tpcDogXCJTa2lwIFR1dG9yaWFsXCJcbiMgICAgdHV0b3JpYWxfbm90X3N1cmU6IFwiTm90IHN1cmUgd2hhdCdzIGdvaW5nIG9uP1wiXG4jICAgIHR1dG9yaWFsX3BsYXlfZmlyc3Q6IFwiUGxheSB0aGUgVHV0b3JpYWwgZmlyc3QuXCJcbiMgICAgc2ltcGxlX2FpOiBcIlNpbXBsZSBDUFVcIlxuIyAgICB3YXJtdXA6IFwiV2FybXVwXCJcbiMgICAgZnJpZW5kc19wbGF5aW5nOiBcIkZyaWVuZHMgUGxheWluZ1wiXG4jICAgIGxvZ19pbl9mb3JfZnJpZW5kczogXCJMb2cgaW4gdG8gcGxheSB3aXRoIHlvdXIgZnJpZW5kcyFcIlxuIyAgICBzb2NpYWxfY29ubmVjdF9ibHVyYjogXCJDb25uZWN0IGFuZCBwbGF5IGFnYWluc3QgeW91ciBmcmllbmRzIVwiXG4jICAgIGludml0ZV9mcmllbmRzX3RvX2JhdHRsZTogXCJJbnZpdGUgeW91ciBmcmllbmRzIHRvIGpvaW4geW91IGluIGJhdHRsZSFcIlxuIyAgICBmaWdodDogXCJGaWdodCFcIlxuIyAgICB3YXRjaF92aWN0b3J5OiBcIldhdGNoIHlvdXIgdmljdG9yeVwiXG4jICAgIGRlZmVhdF90aGU6IFwiRGVmZWF0IHRoZVwiXG4jICAgIHdhdGNoX2JhdHRsZTogXCJXYXRjaCB0aGUgYmF0dGxlXCJcbiMgICAgdG91cm5hbWVudF9zdGFydGVkOiBcIiwgc3RhcnRlZFwiXG4jICAgIHRvdXJuYW1lbnRfZW5kczogXCJUb3VybmFtZW50IGVuZHNcIlxuIyAgICB0b3VybmFtZW50X2VuZGVkOiBcIlRvdXJuYW1lbnQgZW5kZWRcIlxuIyAgICB0b3VybmFtZW50X3J1bGVzOiBcIlRvdXJuYW1lbnQgUnVsZXNcIlxuIyAgICB0b3VybmFtZW50X2JsdXJiOiBcIldyaXRlIGNvZGUsIGNvbGxlY3QgZ29sZCwgYnVpbGQgYXJtaWVzLCBjcnVzaCBmb2VzLCB3aW4gcHJpemVzLCBhbmQgdXBncmFkZSB5b3VyIGNhcmVlciBpbiBvdXIgJDQwLDAwMCBHcmVlZCB0b3VybmFtZW50ISBDaGVjayBvdXQgdGhlIGRldGFpbHNcIlxuIyAgICB0b3VybmFtZW50X2JsdXJiX2NyaXNzX2Nyb3NzOiBcIldpbiBiaWRzLCBjb25zdHJ1Y3QgcGF0aHMsIG91dHdpdCBvcHBvbmVudHMsIGdyYWIgZ2VtcywgYW5kIHVwZ3JhZGUgeW91ciBjYXJlZXIgaW4gb3VyIENyaXNzLUNyb3NzIHRvdXJuYW1lbnQhIENoZWNrIG91dCB0aGUgZGV0YWlsc1wiXG4jICAgIHRvdXJuYW1lbnRfYmx1cmJfemVyb19zdW06IFwiVW5sZWFzaCB5b3VyIGNvZGluZyBjcmVhdGl2aXR5IGluIGJvdGggZ29sZCBnYXRoZXJpbmcgYW5kIGJhdHRsZSB0YWN0aWNzIGluIHRoaXMgYWxwaW5lIG1pcnJvciBtYXRjaCBiZXR3ZWVuIHJlZCBzb3JjZXJlciBhbmQgYmx1ZSBzb3JjZXJlci4gVGhlIHRvdXJuYW1lbnQgYmVnYW4gb24gRnJpZGF5LCBNYXJjaCAyNyBhbmQgd2lsbCBydW4gdW50aWwgTW9uZGF5LCBBcHJpbCA2IGF0IDVQTSBQRFQuIENvbXBldGUgZm9yIGZ1biBhbmQgZ2xvcnkhIENoZWNrIG91dCB0aGUgZGV0YWlsc1wiXG4jICAgIHRvdXJuYW1lbnRfYmx1cmJfYWNlX29mX2NvZGVyczogXCJCYXR0bGUgaXQgb3V0IGluIHRoZSBmcm96ZW4gZ2xhY2llciBpbiB0aGlzIGRvbWluYXRpb24tc3R5bGUgbWlycm9yIG1hdGNoISBUaGUgdG91cm5hbWVudCBiZWdhbiBvbiBXZWRuZXNkYXksIFNlcHRlbWJlciAxNiBhbmQgd2lsbCBydW4gdW50aWwgV2VkbmVzZGF5LCBPY3RvYmVyIDE0IGF0IDVQTSBQRFQuIENoZWNrIG91dCB0aGUgZGV0YWlsc1wiXG4jICAgIHRvdXJuYW1lbnRfYmx1cmJfYmxvZzogXCJvbiBvdXIgYmxvZ1wiXG4jICAgIHJ1bGVzOiBcIlJ1bGVzXCJcbiMgICAgd2lubmVyczogXCJXaW5uZXJzXCJcbiMgICAgbGVhZ3VlOiBcIkxlYWd1ZVwiXG4jICAgIHJlZF9haTogXCJSZWQgQ1BVXCIgIyBcIlJlZCBBSSBXaW5zXCIsIGF0IGVuZCBvZiBtdWx0aXBsYXllciBtYXRjaCBwbGF5YmFja1xuIyAgICBibHVlX2FpOiBcIkJsdWUgQ1BVXCJcbiMgICAgd2luczogXCJXaW5zXCIgIyBBdCBlbmQgb2YgbXVsdGlwbGF5ZXIgbWF0Y2ggcGxheWJhY2tcbiMgICAgaHVtYW5zOiBcIlJlZFwiICMgTGFkZGVyIHBhZ2UgZGlzcGxheSB0ZWFtIG5hbWVcbiMgICAgb2dyZXM6IFwiQmx1ZVwiXG5cbiAgdXNlcjpcbiAgICBzdGF0czogXCJUaWxhc3RvdFwiXG4gICAgc2luZ2xlcGxheWVyX3RpdGxlOiBcIllrc2lucGVsaXRhc290XCJcbiAgICBtdWx0aXBsYXllcl90aXRsZTogXCJNb25pbnBlbGl0YXNvdFwiXG4gICAgYWNoaWV2ZW1lbnRzX3RpdGxlOiBcIlNhYXZ1dHVrc2V0XCJcbiAgICBsYXN0X3BsYXllZDogXCJWaWltZWlzaW4gcGVsaVwiXG4gICAgc3RhdHVzOiBcIlRpbGFubmVcIlxuICAgIHN0YXR1c19jb21wbGV0ZWQ6IFwiVmFsbWlzXCJcbiAgICBzdGF0dXNfdW5maW5pc2hlZDogXCJLZXNrZW5cIlxuICAgIG5vX3NpbmdsZXBsYXllcjogXCJFaSB5a3NpbnBlbGVqw6QgcGVsYXR0dW5hLlwiXG4gICAgbm9fbXVsdGlwbGF5ZXI6IFwiRWkgbW9uaW5wZWxlasOkIHBlbGF0dHVuYS5cIlxuICAgIG5vX2FjaGlldmVtZW50czogXCJFaSBzYWF2dXR1a3NpYS5cIlxuICAgIGZhdm9yaXRlX3ByZWZpeDogXCJTdW9zaWtraSBvaGplbG1vaW50aWtpZWxlbmkgb24gXCJcbiAgICBmYXZvcml0ZV9wb3N0Zml4OiBcIi5cIlxuICAgIG5vdF9tZW1iZXJfb2ZfY2xhbnM6IFwiRWkga2xhYW5pZW4gasOkc2VueXlrc2nDpC5cIlxuXG4gIGFjaGlldmVtZW50czpcbiAgICBsYXN0X2Vhcm5lZDogXCJWaWltZWlzaW4gc2FhdnV0dXNcIlxuICAgIGFtb3VudF9hY2hpZXZlZDogXCJZaHRlZW5zw6RcIlxuICAgIGFjaGlldmVtZW50OiBcIlNhYXZ1dHVzXCJcbiAgICBjdXJyZW50X3hwX3ByZWZpeDogXCJcIlxuICAgIGN1cnJlbnRfeHBfcG9zdGZpeDogXCIgeWh0ZWVuc8OkXCJcbiAgICBuZXdfeHBfcHJlZml4OiBcIlwiXG4gICAgbmV3X3hwX3Bvc3RmaXg6IFwiIGFuc2FpdHR1XCJcbiAgICBsZWZ0X3hwX3ByZWZpeDogXCJcIlxuICAgIGxlZnRfeHBfaW5maXg6IFwiIGrDpGxqZWxsw6QgdGFzb29uIFwiXG4gICAgbGVmdF94cF9wb3N0Zml4OiBcIlwiXG5cbiAgYWNjb3VudDpcbiAgICBwYXltZW50czogXCJPc3RvdFwiXG4gICAgcHJlcGFpZF9jb2RlczogXCJQcmVwYWlkIGtvb2RpXCJcbiAgICBwdXJjaGFzZWQ6IFwiT3N0ZXR0dVwiXG4jICAgIHN1YnNjcmliZV9mb3JfZ2VtczogXCJTdWJzY3JpYmUgZm9yIGdlbXNcIlxuICAgIHN1YnNjcmlwdGlvbjogXCJLdXVrYXVzaXRpbGF1c1wiXG4gICAgaW52b2ljZXM6IFwiTGFza3V0XCJcbiAgICBzZXJ2aWNlX2FwcGxlOiBcIkFwcGxlXCJcbiAgICBzZXJ2aWNlX3dlYjogXCJOZXR0aVwiXG4gICAgcGFpZF9vbjogXCJNYWtzZXR0dVwiXG4gICAgc2VydmljZTogXCJQYWx2ZWx1XCJcbiAgICBwcmljZTogXCJIaW50YVwiXG4gICAgZ2VtczogXCJKYWxva2l2ZXRcIlxuICAgIGFjdGl2ZTogXCJWb2ltYXNzYVwiXG4gICAgc3Vic2NyaWJlZDogXCJLaXJqYXV0dW51dFwiXG4gICAgdW5zdWJzY3JpYmVkOiBcIkVpIGtpcmphdXR1bnV0XCJcbiAgICBhY3RpdmVfdW50aWw6IFwiVm9pbWFzc2EgYXN0aVwiXG4gICAgY29zdDogXCJIaW50YVwiXG4gICAgbmV4dF9wYXltZW50OiBcIlNldXJhYXZhIG1ha3N1XCJcbiAgICBjYXJkOiBcIktvcnR0aVwiXG4gICAgc3RhdHVzX3Vuc3Vic2NyaWJlZF9hY3RpdmU6IFwiVGlsYXVrc2VzaSBlaSBvbGUgYWt0aWl2aW5lbiBqYSBzaW51YSBlaSBsYXNrdXRldGEsIG11dHRhIGV0dXNpIG92YXQgdmllbMOkIHZvaW1hc3NhLlwiXG4gICAgc3RhdHVzX3Vuc3Vic2NyaWJlZDogXCJIYW5raSBrw6R5dHTDtsO2c2kgdXVzaWEgdGFzb2phLCBzYW5rYXJlaXRhLCBlc2luZWl0w6QgamEgbGlzw6TDpCBqYWxva2l2acOkIENvZGVDb21iYXQga3V1a2F1c2l0aWxhdXNrZWxsYSFcIlxuICAgIG5vdF95ZXRfdmVyaWZpZWQ6IFwiRWkgdmllbMOkIHZhaHZpc3RldHR1LlwiXG4gICAgcmVzZW5kX2VtYWlsOiBcIkzDpGhldMOkIHZpZXN0aSB1dWRlbGxlZW5cIlxuICAgIGVtYWlsX3NlbnQ6IFwiVmllc3RpIGzDpGhldGV0dHkhIFRhcmtpc3RhIHPDpGhrw7Zwb3N0aXNpLlwiXG4gICAgdmVyaWZ5aW5nX2VtYWlsOiBcIlZhaHZpc3RldGFhbiBzw6Roa8O2cG9zdGlvc29pdGV0dGFzaS4uLlwiXG4gICAgc3VjY2Vzc2Z1bGx5X3ZlcmlmaWVkOiBcIlZhaHZpc3RpdCBzw6Roa8O2cG9zdGlvc29pdHRlZXNpIG9ubmlzdHVuZWVzdGkhXCJcbiAgICB2ZXJpZnlfZXJyb3I6IFwiSm90YWluIG1lbmkgcGllbGVlbiBzw6Roa8O2cG9zdGlhc2kgdmFodmlzdGV0dGFlc3NhLiA6KFwiXG5cbiAgYWNjb3VudF9pbnZvaWNlczpcbiAgICBhbW91bnQ6IFwiSGludGEgVVMgZG9sbGFyZWluYVwiXG4gICAgZGVjbGluZWQ6IFwiTHVvdHRva29ydHRpc2ltYWtzdSBoeWzDpHR0eVwiXG4gICAgaW52YWxpZF9hbW91bnQ6IFwiT2xlIGh5dsOkIGphIHN5w7Z0w6QgbcOkw6Ryw6QgVVMgZG9sbGFyZWluYS5cIlxuICAgIG5vdF9sb2dnZWRfaW46IFwiS2lyamF1ZHUgc2lzw6TDpG4gdGFpIGx1byB0aWxpIGthdG9zYWtzaSBsYXNrdWphbm5lLlwiXG4gICAgcGF5OiBcIlN1b3JpdGEgbWFrc3VcIlxuICAgIHB1cmNoYXNpbmc6IFwiS8Okc2l0ZWxsw6TDpG4uLi5cIlxuICAgIHJldHJ5aW5nOiBcIlBhbHZlbGludmlyaGUsIHlyaXRldMOkw6RuIHV1ZGVsbGVlbi5cIlxuICAgIHN1Y2Nlc3M6IFwiTWFrc3Ugb25uaXN0dWkuIEtpaXRvcyFcIlxuXG4jICBhY2NvdW50X3ByZXBhaWQ6XG4jICAgIHB1cmNoYXNlX2NvZGU6IFwiUHVyY2hhc2UgYSBTdWJzY3JpcHRpb24gQ29kZVwiXG4jICAgIHB1cmNoYXNlX2NvZGUxOiBcIlN1YnNjcmlwdGlvbiBDb2RlcyBjYW4gYmUgcmVkZWVtZWQgdG8gYWRkIHByZW1pdW0gc3Vic2NyaXB0aW9uIHRpbWUgdG8gb25lIG9yIG1vcmUgYWNjb3VudHMgZm9yIHRoZSBIb21lIHZlcnNpb24gb2YgQ29kZUNvbWJhdC5cIiAjXG4jICAgIHB1cmNoYXNlX2NvZGUyOiBcIkVhY2ggQ29kZUNvbWJhdCBhY2NvdW50IGNhbiBvbmx5IHJlZGVlbSBhIHBhcnRpY3VsYXIgU3Vic2NyaXB0aW9uIENvZGUgb25jZS5cIlxuIyAgICBwdXJjaGFzZV9jb2RlMzogXCJTdWJzY3JpcHRpb24gQ29kZSBtb250aHMgd2lsbCBiZSBhZGRlZCB0byB0aGUgZW5kIG9mIGFueSBleGlzdGluZyBzdWJzY3JpcHRpb24gb24gdGhlIGFjY291bnQuXCJcbiMgICAgcHVyY2hhc2VfY29kZTQ6IFwiU3Vic2NyaXB0aW9uIENvZGVzIGFyZSBmb3IgYWNjb3VudHMgcGxheWluZyB0aGUgSG9tZSB2ZXJzaW9uIG9mIENvZGVDb21iYXQsIHRoZXkgY2Fubm90IGJlIHVzZWQgaW4gcGxhY2Ugb2YgU3R1ZGVudCBMaWNlbnNlcyBmb3IgdGhlIENsYXNzcm9vbSB2ZXJzaW9uLlwiXG4jICAgIHB1cmNoYXNlX2NvZGU1OiBcIkZvciBtb3JlIGluZm9ybWF0aW9uIG9uIFN0dWRlbnQgTGljZW5zZXMsIHJlYWNoIG91dCB0b1wiXG4jICAgIHVzZXJzOiBcIlVzZXJzXCJcbiMgICAgbW9udGhzOiBcIk1vbnRoc1wiXG4jICAgIHB1cmNoYXNlX3RvdGFsOiBcIlRvdGFsXCJcbiMgICAgcHVyY2hhc2VfYnV0dG9uOiBcIlN1Ym1pdCBQdXJjaGFzZVwiXG4jICAgIHlvdXJfY29kZXM6IFwiWW91ciBDb2Rlc1wiXG4jICAgIHJlZGVlbV9jb2RlczogXCJSZWRlZW0gYSBTdWJzY3JpcHRpb24gQ29kZVwiXG4jICAgIHByZXBhaWRfY29kZTogXCJQcmVwYWlkIENvZGVcIlxuIyAgICBsb29rdXBfY29kZTogXCJMb29rdXAgcHJlcGFpZCBjb2RlXCJcbiMgICAgYXBwbHlfYWNjb3VudDogXCJBcHBseSB0byB5b3VyIGFjY291bnRcIlxuIyAgICBjb3B5X2xpbms6IFwiWW91IGNhbiBjb3B5IHRoZSBjb2RlJ3MgbGluayBhbmQgc2VuZCBpdCB0byBzb21lb25lLlwiXG4jICAgIHF1YW50aXR5OiBcIlF1YW50aXR5XCJcbiMgICAgcmVkZWVtZWQ6IFwiUmVkZWVtZWRcIlxuIyAgICBub19jb2RlczogXCJObyBjb2RlcyB5ZXQhXCJcbiMgICAgeW91X2NhbjE6IFwiWW91IGNhblwiXG4jICAgIHlvdV9jYW4yOiBcInB1cmNoYXNlIGEgcHJlcGFpZCBjb2RlXCJcbiMgICAgeW91X2NhbjM6IFwidGhhdCBjYW4gYmUgYXBwbGllZCB0byB5b3VyIG93biBhY2NvdW50IG9yIGdpdmVuIHRvIG90aGVycy5cIlxuXG4gIGxvYWRpbmdfZXJyb3I6XG4gICAgY291bGRfbm90X2xvYWQ6IFwiVmlyaGUgbGFkYXR0YWVzc2EgdGlldG9qYSBwYWx2ZWxpbWVsdGFcIlxuICAgIGNvbm5lY3Rpb25fZmFpbHVyZTogXCJZaHRleXN2aXJoZS5cIlxuICAgIGNvbm5lY3Rpb25fZmFpbHVyZV9kZXNjOiBcIk7DpHl0dMOkw6Qgc2lsdMOkIGV0dMOkIGV0IG9sZSB5aHRleWRlc3PDpCBpbnRlcm5ldHRpaW4hIFRhcmtpc3RhIHlodGV5dGVzaSBqYSBsYXRhYSBzaXZ1IHV1ZGVsbGVlbi5cIlxuICAgIGxvZ2luX3JlcXVpcmVkOiBcIktpcmphdXR1bWluZW4gdmFhZGl0YWFuXCJcbiAgICBsb2dpbl9yZXF1aXJlZF9kZXNjOiBcIlNpbnVuIHTDpHl0eXkgb2xsYSBraXJqYXV0dW51dCBzaXPDpMOkbiBuw6RoZMOka3Nlc2kgdMOkbcOkbiBzaXZ1blwiXG4gICAgdW5hdXRob3JpemVkOiBcIlRlaWTDpG4gdHVsZWUgb2xsYSBraXJqYXV0dW5lZW5hIHNpc8Okw6RuLiBPdmF0a28gZXbDpHN0ZWV0IHNhbGxpdHR1bmE/XCJcbiAgICBmb3JiaWRkZW46IFwiRWkga8OkeXR0w7ZvaWtldXR0dGEuXCJcbiAgICBmb3JiaWRkZW5fZGVzYzogXCJWb2kgdm9pLCB0w6TDpGxsw6QgZWkgb2xlIG1pdMOkw6RuIG1pdMOkIHZvaW1tZSBuw6R5dHTDpMOkIHNpbnVsbGUhIFRhcmtpc3RhIGV0dMOkIG9sZXQga2lyamF1dHVudXQgb2lrZWFsbGEga8OkeXR0w6Rqw6RsbMOkIHRhaSBrYXRzbyBzZXVyYWF2YXQgbGlua2l0IHDDpMOkc3TDpGtzZXNpIHRha2Fpc2luIG9oamVsbW9pbWFhbiFcIlxuICAgIG5vdF9mb3VuZDogXCJFaSBsw7Z5ZGV0dHkuXCJcbiAgICBub3RfZm91bmRfZGVzYzogXCJIbW0sIHTDpMOkbGzDpCBlaSBvbGUgbWl0w6TDpG4uIEthdHNvIHNldXJhYXZhdCBsaW5raXQgcMOkw6RzdMOka3Nlc2kgdGFrYWlzaW4gb2hqZWxtb2ltYWFuIVwiXG4gICAgbm90X2FsbG93ZWQ6IFwiVG9pbWludG8gZWkgc2FsbGl0dHUuXCJcbiAgICB0aW1lb3V0OiBcIlRvaW1pbnRvIGFpa2FrYXRrYWlzdHUuXCIgIyB7Y2hhbmdlfVxuICAgIGNvbmZsaWN0OiBcIlJlc3Vyc3NpcmlzdGlyaWl0YS5cIlxuICAgIGJhZF9pbnB1dDogXCJWaXJoZWVsbGluZW4gc3nDtnRlLlwiXG4gICAgc2VydmVyX2Vycm9yOiBcIlBhbHZlbGludmlyaGUuXCJcbiAgICB1bmtub3duOiBcIlR1bnRlbWF0b24gdmlyaGUuXCIgIyB7Y2hhbmdlfVxuICAgIGVycm9yOiBcIlZJUkhFXCJcbiAgICBnZW5lcmFsX2Rlc2M6IFwiSm90YWluIG1lbmkgcGllbGVlbiBqYSBzZSBvbiBsdXVsdGF2YXN0aSBtZWlkw6RuIHN5eXTDpG1tZS4gT2RvdGEgaGV0a2kgamEgbGF0YWEgc2l2dSB1dWRlbGxlZW4gdGFpIGthdHNvIHNldXJhYXZhdCBsaW5raXQgcMOkw6RzdMOka3Nlc2kgdGFrYWlzaW4gb2hqZWxtb2ltYWFuIVwiXG5cbiAgcmVzb3VyY2VzOlxuICAgIGxldmVsOiBcIlRhc29cIlxuICAgIHBhdGNoOiBcIk11dXRvc3RpZWRvc3RvXCJcbiAgICBwYXRjaGVzOiBcIk11dXRvc3RpZWRvc3RvdFwiXG4gICAgc3lzdGVtOiBcIkrDpHJqZXN0ZWxtw6RcIlxuICAgIHN5c3RlbXM6IFwiSsOkcmplc3RlbG3DpHRcIlxuICAgIGNvbXBvbmVudDogXCJLb21wb25lbnR0aVwiXG4gICAgY29tcG9uZW50czogXCJLb21wb25lbnRpdFwiXG4gICAgaGVybzogXCJTYW5rYXJpXCJcbiAgICBjYW1wYWlnbnM6IFwiS2FtcGFuamF0XCJcblxuIyAgY29uY2VwdHM6XG4jICAgIGFkdmFuY2VkX2Nzc19ydWxlczogXCJBZHZhbmNlZCBDU1MgUnVsZXNcIlxuIyAgICBhZHZhbmNlZF9jc3Nfc2VsZWN0b3JzOiBcIkFkdmFuY2VkIENTUyBTZWxlY3RvcnNcIlxuIyAgICBhZHZhbmNlZF9odG1sX2F0dHJpYnV0ZXM6IFwiQWR2YW5jZWQgSFRNTCBBdHRyaWJ1dGVzXCJcbiMgICAgYWR2YW5jZWRfaHRtbF90YWdzOiBcIkFkdmFuY2VkIEhUTUwgVGFnc1wiXG4jICAgIGFsZ29yaXRobV9hdmVyYWdlOiBcIkFsZ29yaXRobSBBdmVyYWdlXCJcbiMgICAgYWxnb3JpdGhtX2ZpbmRfbWlubWF4OiBcIkFsZ29yaXRobSBGaW5kIE1pbi9NYXhcIlxuIyAgICBhbGdvcml0aG1fc2VhcmNoX2JpbmFyeTogXCJBbGdvcml0aG0gU2VhcmNoIEJpbmFyeVwiXG4jICAgIGFsZ29yaXRobV9zZWFyY2hfZ3JhcGg6IFwiQWxnb3JpdGhtIFNlYXJjaCBHcmFwaFwiXG4jICAgIGFsZ29yaXRobV9zb3J0OiBcIkFsZ29yaXRobSBTb3J0XCJcbiMgICAgYWxnb3JpdGhtX3N1bTogXCJBbGdvcml0aG0gU3VtXCJcbiMgICAgYXJndW1lbnRzOiBcIkFyZ3VtZW50c1wiXG4jICAgIGFyaXRobWV0aWM6IFwiQXJpdGhtZXRpY1wiXG4jICAgIGFycmF5XzJkOiBcIjJEIEFycmF5XCJcbiMgICAgYXJyYXlfaW5kZXg6IFwiQXJyYXkgSW5kZXhpbmdcIlxuIyAgICBhcnJheV9pdGVyYXRpbmc6IFwiSXRlcmF0aW5nIE92ZXIgQXJyYXlzXCJcbiMgICAgYXJyYXlfbGl0ZXJhbHM6IFwiQXJyYXkgTGl0ZXJhbHNcIlxuIyAgICBhcnJheV9zZWFyY2hpbmc6IFwiQXJyYXkgU2VhcmNoaW5nXCJcbiMgICAgYXJyYXlfc29ydGluZzogXCJBcnJheSBTb3J0aW5nXCJcbiMgICAgYXJyYXlzOiBcIkFycmF5c1wiXG4jICAgIGJhc2ljX2Nzc19ydWxlczogXCJCYXNpYyBDU1MgcnVsZXNcIlxuIyAgICBiYXNpY19jc3Nfc2VsZWN0b3JzOiBcIkJhc2ljIENTUyBzZWxlY3RvcnNcIlxuIyAgICBiYXNpY19odG1sX2F0dHJpYnV0ZXM6IFwiQmFzaWMgSFRNTCBBdHRyaWJ1dGVzXCJcbiMgICAgYmFzaWNfaHRtbF90YWdzOiBcIkJhc2ljIEhUTUwgVGFnc1wiXG4jICAgIGJhc2ljX3N5bnRheDogXCJCYXNpYyBTeW50YXhcIlxuIyAgICBiaW5hcnk6IFwiQmluYXJ5XCJcbiMgICAgYm9vbGVhbl9hbmQ6IFwiQm9vbGVhbiBBbmRcIlxuIyAgICBib29sZWFuX2VxdWFsaXR5OiBcIkJvb2xlYW4gRXF1YWxpdHlcIlxuIyAgICBib29sZWFuX2dyZWF0ZXJfbGVzczogXCJCb29sZWFuIEdyZWF0ZXIvTGVzc1wiXG4jICAgIGJvb2xlYW5fbG9naWNfc2hvcnRjaXJjdWl0OiBcIkJvb2xlYW4gTG9naWMgU2hvcnRjaXJjdWl0aW5nXCJcbiMgICAgYm9vbGVhbl9ub3Q6IFwiQm9vbGVhbiBOb3RcIlxuIyAgICBib29sZWFuX29wZXJhdG9yX3ByZWNlZGVuY2U6IFwiQm9vbGVhbiBPcGVyYXRvciBQcmVjZWRlbmNlXCJcbiMgICAgYm9vbGVhbl9vcjogXCJCb29sZWFuIE9yXCJcbiMgICAgYm9vdHN0cmFwOiBcIkJvb3RzdHJhcFwiXG4jICAgIGJyZWFrX3N0YXRlbWVudHM6IFwiQnJlYWsgU3RhdGVtZW50c1wiXG4jICAgIGNsYXNzZXM6IFwiQ2xhc3Nlc1wiXG4jICAgIGNvbnRpbnVlX3N0YXRlbWVudHM6IFwiQ29udGludWUgU3RhdGVtZW50c1wiXG4jICAgIGRvbV9ldmVudHM6IFwiRE9NIEV2ZW50c1wiXG4jICAgIGR5bmFtaWNfc3R5bGluZzogXCJEeW5hbWljIFN0eWxpbmdcIlxuIyAgICBldmVudF9jb25jdXJyZW5jeTogXCJFdmVudCBDb25jdXJyZW5jeVwiXG4jICAgIGV2ZW50X2RhdGE6IFwiRXZlbnQgRGF0YVwiXG4jICAgIGV2ZW50X2hhbmRsZXJzOiBcIkV2ZW50IEhhbmRsZXJzXCJcbiMgICAgZXZlbnRfc3Bhd246IFwiU3Bhd24gRXZlbnRcIlxuIyAgICBmb3JfbG9vcHM6IFwiRm9yIExvb3BzXCJcbiMgICAgZm9yX2xvb3BzX25lc3RlZDogXCJOZXN0ZWQgRm9yIExvb3BzXCJcbiMgICAgZm9yX2xvb3BzX3JhbmdlOiBcIkZvciBMb29wcyBSYW5nZVwiXG4jICAgIGZ1bmN0aW9uczogXCJGdW5jdGlvbnNcIlxuIyAgICBmdW5jdGlvbnNfcGFyYW1ldGVyczogXCJQYXJhbWV0ZXJzXCJcbiMgICAgZnVuY3Rpb25zX211bHRpcGxlX3BhcmFtZXRlcnM6IFwiTXVsdGlwbGUgUGFyYW1ldGVyc1wiXG4jICAgIGdhbWVfYWk6IFwiR2FtZSBBSVwiXG4jICAgIGdhbWVfZ29hbHM6IFwiR2FtZSBHb2Fsc1wiXG4jICAgIGdhbWVfc3Bhd246IFwiR2FtZSBTcGF3blwiXG4jICAgIGdyYXBoaWNzOiBcIkdyYXBoaWNzXCJcbiMgICAgZ3JhcGhzOiBcIkdyYXBoc1wiXG4jICAgIGhlYXBzOiBcIkhlYXBzXCJcbiMgICAgaWZfY29uZGl0aW9uOiBcIkNvbmRpdGlvbmFsIElmIFN0YXRlbWVudHNcIlxuIyAgICBpZl9lbHNlX2lmOiBcIklmL0Vsc2UgSWYgU3RhdGVtZW50c1wiXG4jICAgIGlmX2Vsc2Vfc3RhdGVtZW50czogXCJJZi9FbHNlIFN0YXRlbWVudHNcIlxuIyAgICBpZl9zdGF0ZW1lbnRzOiBcIklmIFN0YXRlbWVudHNcIlxuIyAgICBpZl9zdGF0ZW1lbnRzX25lc3RlZDogXCJOZXN0ZWQgSWYgU3RhdGVtZW50c1wiXG4jICAgIGluZGV4aW5nOiBcIkFycmF5IEluZGV4ZXNcIlxuIyAgICBpbnB1dF9oYW5kbGluZ19mbGFnczogXCJJbnB1dCBIYW5kbGluZyAtIEZsYWdzXCJcbiMgICAgaW5wdXRfaGFuZGxpbmdfa2V5Ym9hcmQ6IFwiSW5wdXQgSGFuZGxpbmcgLSBLZXlib2FyZFwiXG4jICAgIGlucHV0X2hhbmRsaW5nX21vdXNlOiBcIklucHV0IEhhbmRsaW5nIC0gTW91c2VcIlxuIyAgICBpbnRlcm1lZGlhdGVfY3NzX3J1bGVzOiBcIkludGVybWVkaWF0ZSBDU1MgUnVsZXNcIlxuIyAgICBpbnRlcm1lZGlhdGVfY3NzX3NlbGVjdG9yczogXCJJbnRlcm1lZGlhdGUgQ1NTIFNlbGVjdG9yc1wiXG4jICAgIGludGVybWVkaWF0ZV9odG1sX2F0dHJpYnV0ZXM6IFwiSW50ZXJtZWRpYXRlIEhUTUwgQXR0cmlidXRlc1wiXG4jICAgIGludGVybWVkaWF0ZV9odG1sX3RhZ3M6IFwiSW50ZXJtZWRpYXRlIEhUTUwgVGFnc1wiXG4jICAgIGpxdWVyeTogXCJqUXVlcnlcIlxuIyAgICBqcXVlcnlfYW5pbWF0aW9uczogXCJqUXVlcnkgQW5pbWF0aW9uc1wiXG4jICAgIGpxdWVyeV9maWx0ZXJpbmc6IFwialF1ZXJ5IEVsZW1lbnQgRmlsdGVyaW5nXCJcbiMgICAganF1ZXJ5X3NlbGVjdG9yczogXCJqUXVlcnkgU2VsZWN0b3JzXCJcbiMgICAgbGVuZ3RoOiBcIkFycmF5IExlbmd0aFwiXG4jICAgIG1hdGhfZ2VvbWV0cnk6IFwiR2VvbWV0cnlcIlxuIyAgICBtYXRoX29wZXJhdGlvbnM6IFwiTWF0aCBMaWJyYXJ5IE9wZXJhdGlvbnNcIlxuIyAgICBtYXRoX3RyaWdvbm9tZXRyeTogXCJUcmlnb25vbWV0cnlcIlxuIyAgICBvYmplY3RfbGl0ZXJhbHM6IFwiT2JqZWN0IExpdGVyYWxzXCJcbiMgICAgcGFyYW1ldGVyczogXCJQYXJhbWV0ZXJzXCJcbiMgICAgcHJvcGVydHlfYWNjZXNzOiBcIkFjY2Vzc2luZyBQcm9wZXJ0aWVzXCJcbiMgICAgcHJvcGVydHlfYXNzaWdubWVudDogXCJBc3NpZ25pbmcgUHJvcGVydGllc1wiXG4jICAgIHF1ZXVlczogXCJEYXRhIFN0cnVjdHVyZXMgLSBRdWV1ZXNcIlxuIyAgICByZWFkaW5nX2RvY3M6IFwiUmVhZGluZyB0aGUgRG9jc1wiXG4jICAgIHJlY3Vyc2lvbjogXCJSZWN1cnNpb25cIlxuIyAgICByZXR1cm5fc3RhdGVtZW50czogXCJSZXR1cm4gU3RhdGVtZW50c1wiXG4jICAgIHN0YWNrczogXCJEYXRhIFN0cnVjdHVyZXMgLSBTdGFja3NcIlxuIyAgICBzdHJpbmdzOiBcIlN0cmluZ3NcIlxuIyAgICBzdHJpbmdzX2NvbmNhdGVuYXRpb246IFwiU3RyaW5nIENvbmNhdGVuYXRpb25cIlxuIyAgICBzdHJpbmdzX3N1YnN0cmluZ3M6IFwiU3Vic3RyaW5nXCJcbiMgICAgdHJlZXM6IFwiRGF0YSBTdHJ1Y3R1cmVzIC0gVHJlZXNcIlxuIyAgICB2YXJpYWJsZXM6IFwiVmFyaWFibGVzXCJcbiMgICAgdmVjdG9yczogXCJWZWN0b3JzXCJcbiMgICAgd2hpbGVfY29uZGl0aW9uX2xvb3BzOiBcIldoaWxlIExvb3BzIHdpdGggQ29uZGl0aW9uYWxzXCJcbiMgICAgd2hpbGVfbG9vcHNfc2ltcGxlOiBcIldoaWxlIExvb3BzXCJcbiMgICAgd2hpbGVfbG9vcHNfbmVzdGVkOiBcIk5lc3RlZCBXaGlsZSBMb29wc1wiXG4jICAgIHh5X2Nvb3JkaW5hdGVzOiBcIkNhcnRlc2lhbiBDb29yZGluYXRlc1wiXG4jICAgIGFkdmFuY2VkX3N0cmluZ3M6IFwiQWR2YW5jZWQgU3RyaW5nc1wiICMgUmVzdCBvZiBjb25jZXB0cyBhcmUgZGVwcmVjYXRlZFxuIyAgICBhbGdvcml0aG1zOiBcIkFsZ29yaXRobXNcIlxuIyAgICBib29sZWFuX2xvZ2ljOiBcIkJvb2xlYW4gTG9naWNcIlxuIyAgICBiYXNpY19odG1sOiBcIkJhc2ljIEhUTUxcIlxuIyAgICBiYXNpY19jc3M6IFwiQmFzaWMgQ1NTXCJcbiMgICAgYmFzaWNfd2ViX3NjcmlwdGluZzogXCJCYXNpYyBXZWIgU2NyaXB0aW5nXCJcbiMgICAgaW50ZXJtZWRpYXRlX2h0bWw6IFwiSW50ZXJtZWRpYXRlIEhUTUxcIlxuIyAgICBpbnRlcm1lZGlhdGVfY3NzOiBcIkludGVybWVkaWF0ZSBDU1NcIlxuIyAgICBpbnRlcm1lZGlhdGVfd2ViX3NjcmlwdGluZzogXCJJbnRlcm1lZGlhdGUgV2ViIFNjcmlwdGluZ1wiXG4jICAgIGFkdmFuY2VkX2h0bWw6IFwiQWR2YW5jZWQgSFRNTFwiXG4jICAgIGFkdmFuY2VkX2NzczogXCJBZHZhbmNlZCBDU1NcIlxuIyAgICBhZHZhbmNlZF93ZWJfc2NyaXB0aW5nOiBcIkFkdmFuY2VkIFdlYiBTY3JpcHRpbmdcIlxuIyAgICBpbnB1dF9oYW5kbGluZzogXCJJbnB1dCBIYW5kbGluZ1wiXG4jICAgIHdoaWxlX2xvb3BzOiBcIldoaWxlIExvb3BzXCJcbiMgICAgcGxhY2VfZ2FtZV9vYmplY3RzOiBcIlBsYWNlIGdhbWUgb2JqZWN0c1wiXG4jICAgIGNvbnN0cnVjdF9tYXplczogXCJDb25zdHJ1Y3QgbWF6ZXNcIlxuIyAgICBjcmVhdGVfcGxheWFibGVfZ2FtZTogXCJDcmVhdGUgYSBwbGF5YWJsZSwgc2hhcmFibGUgZ2FtZSBwcm9qZWN0XCJcbiMgICAgYWx0ZXJfZXhpc3Rpbmdfd2ViX3BhZ2VzOiBcIkFsdGVyIGV4aXN0aW5nIHdlYiBwYWdlc1wiXG4jICAgIGNyZWF0ZV9zaGFyYWJsZV93ZWJfcGFnZTogXCJDcmVhdGUgYSBzaGFyYWJsZSB3ZWIgcGFnZVwiXG4jICAgIGJhc2ljX2lucHV0X2hhbmRsaW5nOiBcIkJhc2ljIElucHV0IEhhbmRsaW5nXCJcbiMgICAgYmFzaWNfZ2FtZV9haTogXCJCYXNpYyBHYW1lIEFJXCJcbiMgICAgYmFzaWNfamF2YXNjcmlwdDogXCJCYXNpYyBKYXZhU2NyaXB0XCJcbiMgICAgYmFzaWNfZXZlbnRfaGFuZGxpbmc6IFwiQmFzaWMgRXZlbnQgSGFuZGxpbmdcIlxuIyAgICBjcmVhdGVfc2hhcmFibGVfaW50ZXJhY3RpdmVfd2ViX3BhZ2U6IFwiQ3JlYXRlIGEgc2hhcmFibGUgaW50ZXJhY3RpdmUgd2ViIHBhZ2VcIlxuXG4jICBhbm9ueW1vdXNfdGVhY2hlcjpcbiMgICAgbm90aWZ5X3RlYWNoZXI6IFwiTm90aWZ5IFRlYWNoZXJcIlxuIyAgICBjcmVhdGVfdGVhY2hlcl9hY2NvdW50OiBcIkNyZWF0ZSBmcmVlIHRlYWNoZXIgYWNjb3VudFwiXG4jICAgIGVudGVyX3N0dWRlbnRfbmFtZTogXCJZb3VyIG5hbWU6XCJcbiMgICAgZW50ZXJfdGVhY2hlcl9lbWFpbDogXCJZb3VyIHRlYWNoZXIncyBlbWFpbDpcIlxuIyAgICB0ZWFjaGVyX2VtYWlsX3BsYWNlaG9sZGVyOiBcInRlYWNoZXIuZW1haWxAZXhhbXBsZS5jb21cIlxuIyAgICBzdHVkZW50X25hbWVfcGxhY2Vob2xkZXI6IFwidHlwZSB5b3VyIG5hbWUgaGVyZVwiXG4jICAgIHRlYWNoZXJzX3NlY3Rpb246IFwiVGVhY2hlcnM6XCJcbiMgICAgc3R1ZGVudHNfc2VjdGlvbjogXCJTdHVkZW50czpcIlxuIyAgICB0ZWFjaGVyX25vdGlmaWVkOiBcIldlJ3ZlIG5vdGlmaWVkIHlvdXIgdGVhY2hlciB0aGF0IHlvdSB3YW50IHRvIHBsYXkgbW9yZSBDb2RlQ29tYmF0IGluIHlvdXIgY2xhc3Nyb29tIVwiXG5cbiMgIGRlbHRhOlxuIyAgICBhZGRlZDogXCJBZGRlZFwiXG4jICAgIG1vZGlmaWVkOiBcIk1vZGlmaWVkXCJcbiMgICAgbm90X21vZGlmaWVkOiBcIk5vdCBNb2RpZmllZFwiXG4jICAgIGRlbGV0ZWQ6IFwiRGVsZXRlZFwiXG4jICAgIG1vdmVkX2luZGV4OiBcIk1vdmVkIEluZGV4XCJcbiMgICAgdGV4dF9kaWZmOiBcIlRleHQgRGlmZlwiXG4jICAgIG1lcmdlX2NvbmZsaWN0X3dpdGg6IFwiTUVSR0UgQ09ORkxJQ1QgV0lUSFwiXG4jICAgIG5vX2NoYW5nZXM6IFwiTm8gQ2hhbmdlc1wiXG5cbiMgIGxlZ2FsOlxuIyAgICBwYWdlX3RpdGxlOiBcIkxlZ2FsXCJcbiMgICAgb3BlbnNvdXJjZV9pbnRybzogXCJDb2RlQ29tYmF0IGlzIGNvbXBsZXRlbHkgb3BlbiBzb3VyY2UuXCJcbiMgICAgb3BlbnNvdXJjZV9kZXNjcmlwdGlvbl9wcmVmaXg6IFwiQ2hlY2sgb3V0IFwiXG4jICAgIGdpdGh1Yl91cmw6IFwib3VyIEdpdEh1YlwiXG4jICAgIG9wZW5zb3VyY2VfZGVzY3JpcHRpb25fY2VudGVyOiBcImFuZCBoZWxwIG91dCBpZiB5b3UgbGlrZSEgQ29kZUNvbWJhdCBpcyBidWlsdCBvbiBkb3plbnMgb2Ygb3BlbiBzb3VyY2UgcHJvamVjdHMsIGFuZCB3ZSBsb3ZlIHRoZW0uIFNlZSBcIlxuIyAgICBhcmNobWFnZV93aWtpX3VybDogXCJvdXIgQXJjaG1hZ2Ugd2lraVwiXG4jICAgIG9wZW5zb3VyY2VfZGVzY3JpcHRpb25fc3VmZml4OiBcImZvciBhIGxpc3Qgb2YgdGhlIHNvZnR3YXJlIHRoYXQgbWFrZXMgdGhpcyBnYW1lIHBvc3NpYmxlLlwiXG4jICAgIHByYWN0aWNlc190aXRsZTogXCJSZXNwZWN0ZnVsIEJlc3QgUHJhY3RpY2VzXCJcbiMgICAgcHJhY3RpY2VzX2Rlc2NyaXB0aW9uOiBcIlRoZXNlIGFyZSBvdXIgcHJvbWlzZXMgdG8geW91LCB0aGUgcGxheWVyLCBpbiBzbGlnaHRseSBsZXNzIGxlZ2FsZXNlLlwiXG4jICAgIHByaXZhY3lfdGl0bGU6IFwiUHJpdmFjeVwiXG4jICAgIHByaXZhY3lfZGVzY3JpcHRpb246IFwiV2Ugd2lsbCBub3Qgc2VsbCBhbnkgb2YgeW91ciBwZXJzb25hbCBpbmZvcm1hdGlvbi5cIlxuIyAgICBzZWN1cml0eV90aXRsZTogXCJTZWN1cml0eVwiXG4jICAgIHNlY3VyaXR5X2Rlc2NyaXB0aW9uOiBcIldlIHN0cml2ZSB0byBrZWVwIHlvdXIgcGVyc29uYWwgaW5mb3JtYXRpb24gc2FmZS4gQXMgYW4gb3BlbiBzb3VyY2UgcHJvamVjdCwgb3VyIHNpdGUgaXMgZnJlZWx5IG9wZW4gdG8gYW55b25lIHRvIHJldmlldyBhbmQgaW1wcm92ZSBvdXIgc2VjdXJpdHkgc3lzdGVtcy5cIlxuIyAgICBlbWFpbF90aXRsZTogXCJFbWFpbFwiXG4jICAgIGVtYWlsX2Rlc2NyaXB0aW9uX3ByZWZpeDogXCJXZSB3aWxsIG5vdCBpbnVuZGF0ZSB5b3Ugd2l0aCBzcGFtLiBUaHJvdWdoXCJcbiMgICAgZW1haWxfc2V0dGluZ3NfdXJsOiBcInlvdXIgZW1haWwgc2V0dGluZ3NcIlxuIyAgICBlbWFpbF9kZXNjcmlwdGlvbl9zdWZmaXg6IFwib3IgdGhyb3VnaCBsaW5rcyBpbiB0aGUgZW1haWxzIHdlIHNlbmQsIHlvdSBjYW4gY2hhbmdlIHlvdXIgcHJlZmVyZW5jZXMgYW5kIGVhc2lseSB1bnN1YnNjcmliZSBhdCBhbnkgdGltZS5cIlxuIyAgICBjb3N0X3RpdGxlOiBcIkNvc3RcIlxuIyAgICBjb3N0X2Rlc2NyaXB0aW9uOiBcIkNvZGVDb21iYXQgaXMgZnJlZSB0byBwbGF5IGZvciBhbGwgb2YgaXRzIGNvcmUgbGV2ZWxzLCB3aXRoIGEgJHt7cHJpY2V9fSBVU0QvbW8gc3Vic2NyaXB0aW9uIGZvciBhY2Nlc3MgdG8gZXh0cmEgbGV2ZWwgYnJhbmNoZXMgYW5kIHt7Z2Vtc319IGJvbnVzIGdlbXMgcGVyIG1vbnRoLiBZb3UgY2FuIGNhbmNlbCB3aXRoIGEgY2xpY2ssIGFuZCB3ZSBvZmZlciBhIDEwMCUgbW9uZXktYmFjayBndWFyYW50ZWUuXCJcbiMgICAgY29weXJpZ2h0c190aXRsZTogXCJDb3B5cmlnaHRzIGFuZCBMaWNlbnNlc1wiXG4jICAgIGNvbnRyaWJ1dG9yX3RpdGxlOiBcIkNvbnRyaWJ1dG9yIExpY2Vuc2UgQWdyZWVtZW50XCJcbiMgICAgY29udHJpYnV0b3JfZGVzY3JpcHRpb25fcHJlZml4OiBcIkFsbCBjb250cmlidXRpb25zLCBib3RoIG9uIHRoZSBzaXRlIGFuZCBvbiBvdXIgR2l0SHViIHJlcG9zaXRvcnksIGFyZSBzdWJqZWN0IHRvIG91clwiXG4jICAgIGNsYV91cmw6IFwiQ0xBXCJcbiMgICAgY29udHJpYnV0b3JfZGVzY3JpcHRpb25fc3VmZml4OiBcInRvIHdoaWNoIHlvdSBzaG91bGQgYWdyZWUgYmVmb3JlIGNvbnRyaWJ1dGluZy5cIlxuIyAgICBjb2RlX3RpdGxlOiBcIkNvZGUgLSBNSVRcIlxuIyAgICBjb2RlX2Rlc2NyaXB0aW9uX3ByZWZpeDogXCJBbGwgY29kZSBvd25lZCBieSBDb2RlQ29tYmF0IG9yIGhvc3RlZCBvbiBjb2RlY29tYmF0LmNvbSwgYm90aCBpbiB0aGUgR2l0SHViIHJlcG9zaXRvcnkgb3IgaW4gdGhlIGNvZGVjb21iYXQuY29tIGRhdGFiYXNlLCBpcyBsaWNlbnNlZCB1bmRlciB0aGVcIlxuIyAgICBtaXRfbGljZW5zZV91cmw6IFwiTUlUIGxpY2Vuc2VcIlxuIyAgICBjb2RlX2Rlc2NyaXB0aW9uX3N1ZmZpeDogXCJUaGlzIGluY2x1ZGVzIGFsbCBjb2RlIGluIFN5c3RlbXMgYW5kIENvbXBvbmVudHMgdGhhdCBhcmUgbWFkZSBhdmFpbGFibGUgYnkgQ29kZUNvbWJhdCBmb3IgdGhlIHB1cnBvc2Ugb2YgY3JlYXRpbmcgbGV2ZWxzLlwiXG4jICAgIGFydF90aXRsZTogXCJBcnQvTXVzaWMgLSBDcmVhdGl2ZSBDb21tb25zIFwiXG4jICAgIGFydF9kZXNjcmlwdGlvbl9wcmVmaXg6IFwiQWxsIGNvbW1vbiBjb250ZW50IGlzIGF2YWlsYWJsZSB1bmRlciB0aGVcIlxuIyAgICBjY19saWNlbnNlX3VybDogXCJDcmVhdGl2ZSBDb21tb25zIEF0dHJpYnV0aW9uIDQuMCBJbnRlcm5hdGlvbmFsIExpY2Vuc2VcIlxuIyAgICBhcnRfZGVzY3JpcHRpb25fc3VmZml4OiBcIkNvbW1vbiBjb250ZW50IGlzIGFueXRoaW5nIG1hZGUgZ2VuZXJhbGx5IGF2YWlsYWJsZSBieSBDb2RlQ29tYmF0IGZvciB0aGUgcHVycG9zZSBvZiBjcmVhdGluZyBMZXZlbHMuIFRoaXMgaW5jbHVkZXM6XCJcbiMgICAgYXJ0X211c2ljOiBcIk11c2ljXCJcbiMgICAgYXJ0X3NvdW5kOiBcIlNvdW5kXCJcbiMgICAgYXJ0X2FydHdvcms6IFwiQXJ0d29ya1wiXG4jICAgIGFydF9zcHJpdGVzOiBcIlNwcml0ZXNcIlxuIyAgICBhcnRfb3RoZXI6IFwiQW55IGFuZCBhbGwgb3RoZXIgbm9uLWNvZGUgY3JlYXRpdmUgd29ya3MgdGhhdCBhcmUgbWFkZSBhdmFpbGFibGUgd2hlbiBjcmVhdGluZyBMZXZlbHMuXCJcbiMgICAgYXJ0X2FjY2VzczogXCJDdXJyZW50bHkgdGhlcmUgaXMgbm8gdW5pdmVyc2FsLCBlYXN5IHN5c3RlbSBmb3IgZmV0Y2hpbmcgdGhlc2UgYXNzZXRzLiBJbiBnZW5lcmFsLCBmZXRjaCB0aGVtIGZyb20gdGhlIFVSTHMgYXMgdXNlZCBieSB0aGUgc2l0ZSwgY29udGFjdCB1cyBmb3IgYXNzaXN0YW5jZSwgb3IgaGVscCB1cyBpbiBleHRlbmRpbmcgdGhlIHNpdGUgdG8gbWFrZSB0aGVzZSBhc3NldHMgbW9yZSBlYXNpbHkgYWNjZXNzaWJsZS5cIlxuIyAgICBhcnRfcGFyYWdyYXBoXzE6IFwiRm9yIGF0dHJpYnV0aW9uLCBwbGVhc2UgbmFtZSBhbmQgbGluayB0byBjb2RlY29tYmF0LmNvbSBuZWFyIHdoZXJlIHRoZSBzb3VyY2UgaXMgdXNlZCBvciB3aGVyZSBhcHByb3ByaWF0ZSBmb3IgdGhlIG1lZGl1bS4gRm9yIGV4YW1wbGU6XCJcbiMgICAgdXNlX2xpc3RfMTogXCJJZiB1c2VkIGluIGEgbW92aWUgb3IgYW5vdGhlciBnYW1lLCBpbmNsdWRlIGNvZGVjb21iYXQuY29tIGluIHRoZSBjcmVkaXRzLlwiXG4jICAgIHVzZV9saXN0XzI6IFwiSWYgdXNlZCBvbiBhIHdlYnNpdGUsIGluY2x1ZGUgYSBsaW5rIG5lYXIgdGhlIHVzYWdlLCBmb3IgZXhhbXBsZSB1bmRlcm5lYXRoIGFuIGltYWdlLCBvciBpbiBhIGdlbmVyYWwgYXR0cmlidXRpb25zIHBhZ2Ugd2hlcmUgeW91IG1pZ2h0IGFsc28gbWVudGlvbiBvdGhlciBDcmVhdGl2ZSBDb21tb25zIHdvcmtzIGFuZCBvcGVuIHNvdXJjZSBzb2Z0d2FyZSBiZWluZyB1c2VkIG9uIHRoZSBzaXRlLiBTb21ldGhpbmcgdGhhdCdzIGFscmVhZHkgY2xlYXJseSByZWZlcmVuY2luZyBDb2RlQ29tYmF0LCBzdWNoIGFzIGEgYmxvZyBwb3N0IG1lbnRpb25pbmcgQ29kZUNvbWJhdCwgZG9lcyBub3QgbmVlZCBzb21lIHNlcGFyYXRlIGF0dHJpYnV0aW9uLlwiXG4jICAgIGFydF9wYXJhZ3JhcGhfMjogXCJJZiB0aGUgY29udGVudCBiZWluZyB1c2VkIGlzIGNyZWF0ZWQgbm90IGJ5IENvZGVDb21iYXQgYnV0IGluc3RlYWQgYnkgYSB1c2VyIG9mIGNvZGVjb21iYXQuY29tLCBhdHRyaWJ1dGUgdGhlbSBpbnN0ZWFkLCBhbmQgZm9sbG93IGF0dHJpYnV0aW9uIGRpcmVjdGlvbnMgcHJvdmlkZWQgaW4gdGhhdCByZXNvdXJjZSdzIGRlc2NyaXB0aW9uIGlmIHRoZXJlIGFyZSBhbnkuXCJcbiMgICAgcmlnaHRzX3RpdGxlOiBcIlJpZ2h0cyBSZXNlcnZlZFwiXG4jICAgIHJpZ2h0c19kZXNjOiBcIkFsbCByaWdodHMgYXJlIHJlc2VydmVkIGZvciBMZXZlbHMgdGhlbXNlbHZlcy4gVGhpcyBpbmNsdWRlc1wiXG4jICAgIHJpZ2h0c19zY3JpcHRzOiBcIlNjcmlwdHNcIlxuIyAgICByaWdodHNfdW5pdDogXCJVbml0IGNvbmZpZ3VyYXRpb25cIlxuIyAgICByaWdodHNfd3JpdGluZ3M6IFwiV3JpdGluZ3NcIlxuIyAgICByaWdodHNfbWVkaWE6IFwiTWVkaWEgKHNvdW5kcywgbXVzaWMpIGFuZCBhbnkgb3RoZXIgY3JlYXRpdmUgY29udGVudCBtYWRlIHNwZWNpZmljYWxseSBmb3IgdGhhdCBMZXZlbCBhbmQgbm90IG1hZGUgZ2VuZXJhbGx5IGF2YWlsYWJsZSB3aGVuIGNyZWF0aW5nIExldmVscy5cIlxuIyAgICByaWdodHNfY2xhcmlmaWNhdGlvbjogXCJUbyBjbGFyaWZ5LCBhbnl0aGluZyB0aGF0IGlzIG1hZGUgYXZhaWxhYmxlIGluIHRoZSBMZXZlbCBFZGl0b3IgZm9yIHRoZSBwdXJwb3NlIG9mIG1ha2luZyBsZXZlbHMgaXMgdW5kZXIgQ0MsIHdoZXJlYXMgdGhlIGNvbnRlbnQgY3JlYXRlZCB3aXRoIHRoZSBMZXZlbCBFZGl0b3Igb3IgdXBsb2FkZWQgaW4gdGhlIGNvdXJzZSBvZiBjcmVhdGlvbiBvZiBMZXZlbHMgaXMgbm90LlwiXG4jICAgIG51dHNoZWxsX3RpdGxlOiBcIkluIGEgTnV0c2hlbGxcIlxuIyAgICBudXRzaGVsbF9kZXNjcmlwdGlvbjogXCJBbnkgcmVzb3VyY2VzIHdlIHByb3ZpZGUgaW4gdGhlIExldmVsIEVkaXRvciBhcmUgZnJlZSB0byB1c2UgYXMgeW91IGxpa2UgZm9yIGNyZWF0aW5nIExldmVscy4gQnV0IHdlIHJlc2VydmUgdGhlIHJpZ2h0IHRvIHJlc3RyaWN0IGRpc3RyaWJ1dGlvbiBvZiB0aGUgTGV2ZWxzIHRoZW1zZWx2ZXMgKHRoYXQgYXJlIGNyZWF0ZWQgb24gY29kZWNvbWJhdC5jb20pIHNvIHRoYXQgdGhleSBtYXkgYmUgY2hhcmdlZCBmb3IuXCJcbiMgICAgY2Fub25pY2FsOiBcIlRoZSBFbmdsaXNoIHZlcnNpb24gb2YgdGhpcyBkb2N1bWVudCBpcyB0aGUgZGVmaW5pdGl2ZSwgY2Fub25pY2FsIHZlcnNpb24uIElmIHRoZXJlIGFyZSBhbnkgZGlzY3JlcGFuY2llcyBiZXR3ZWVuIHRyYW5zbGF0aW9ucywgdGhlIEVuZ2xpc2ggZG9jdW1lbnQgdGFrZXMgcHJlY2VkZW5jZS5cIlxuIyAgICB0aGlyZF9wYXJ0eV90aXRsZTogXCJUaGlyZCBQYXJ0eSBTZXJ2aWNlc1wiXG4jICAgIHRoaXJkX3BhcnR5X2Rlc2NyaXB0aW9uOiBcIkNvZGVDb21iYXQgdXNlcyB0aGUgZm9sbG93aW5nIHRoaXJkIHBhcnR5IHNlcnZpY2VzIChhbW9uZyBvdGhlcnMpOlwiXG5cbiMgIGxhZGRlcl9wcml6ZXM6XG4jICAgIHRpdGxlOiBcIlRvdXJuYW1lbnQgUHJpemVzXCIgIyBUaGlzIHNlY3Rpb24gd2FzIGZvciBhbiBvbGQgdG91cm5hbWVudCBhbmQgZG9lc24ndCBuZWVkIG5ldyB0cmFuc2xhdGlvbnMgbm93LlxuIyAgICBibHVyYl8xOiBcIlRoZXNlIHByaXplcyB3aWxsIGJlIGF3YXJkZWQgYWNjb3JkaW5nIHRvXCJcbiMgICAgYmx1cmJfMjogXCJ0aGUgdG91cm5hbWVudCBydWxlc1wiXG4jICAgIGJsdXJiXzM6IFwidG8gdGhlIHRvcCBodW1hbiBhbmQgb2dyZSBwbGF5ZXJzLlwiXG4jICAgIGJsdXJiXzQ6IFwiVHdvIHRlYW1zIG1lYW5zIGRvdWJsZSB0aGUgcHJpemVzIVwiXG4jICAgIGJsdXJiXzU6IFwiKFRoZXJlIHdpbGwgYmUgdHdvIGZpcnN0IHBsYWNlIHdpbm5lcnMsIHR3byBzZWNvbmQtcGxhY2Ugd2lubmVycywgZXRjLilcIlxuIyAgICByYW5rOiBcIlJhbmtcIlxuIyAgICBwcml6ZXM6IFwiUHJpemVzXCJcbiMgICAgdG90YWxfdmFsdWU6IFwiVG90YWwgVmFsdWVcIlxuIyAgICBpbl9jYXNoOiBcImluIGNhc2hcIlxuIyAgICBjdXN0b21fd2l6YXJkOiBcIkN1c3RvbSBDb2RlQ29tYmF0IFdpemFyZFwiXG4jICAgIGN1c3RvbV9hdmF0YXI6IFwiQ3VzdG9tIENvZGVDb21iYXQgYXZhdGFyXCJcbiMgICAgaGVhcDogXCJmb3Igc2l4IG1vbnRocyBvZiBcXFwiU3RhcnR1cFxcXCIgYWNjZXNzXCJcbiMgICAgY3JlZGl0czogXCJjcmVkaXRzXCJcbiMgICAgb25lX21vbnRoX2NvdXBvbjogXCJjb3Vwb246IGNob29zZSBlaXRoZXIgUmFpbHMgb3IgSFRNTFwiXG4jICAgIG9uZV9tb250aF9kaXNjb3VudDogXCJkaXNjb3VudCwgMzAlIG9mZjogY2hvb3NlIGVpdGhlciBSYWlscyBvciBIVE1MXCJcbiMgICAgbGljZW5zZTogXCJsaWNlbnNlXCJcbiMgICAgb3JlaWxseTogXCJlYm9vayBvZiB5b3VyIGNob2ljZVwiXG5cbiAgY2FsZW5kYXI6XG4gICAgeWVhcjogXCJWdW9zaVwiXG4gICAgZGF5OiBcIlDDpGl2w6RcIlxuICAgIG1vbnRoOiBcIkt1dWthdXNpXCJcbiAgICBqYW51YXJ5OiBcIlRhbW1pa3V1XCJcbiAgICBmZWJydWFyeTogXCJIZWxtaWt1dVwiXG4gICAgbWFyY2g6IFwiTWFhbGlza3V1XCJcbiAgICBhcHJpbDogXCJIdWh0aWt1dVwiXG4gICAgbWF5OiBcIlRvdWtva3V1XCJcbiAgICBqdW5lOiBcIktlc8Oka3V1XCJcbiAgICBqdWx5OiBcIkhlaW7DpGt1dVwiXG4gICAgYXVndXN0OiBcIkVsb2t1dVwiXG4gICAgc2VwdGVtYmVyOiBcIlN5eXNrdXVcIlxuICAgIG9jdG9iZXI6IFwiTG9rYWt1dVwiXG4gICAgbm92ZW1iZXI6IFwiTWFycmFza3V1XCJcbiAgICBkZWNlbWJlcjogXCJKb3VsdWt1dVwiXG5cbiMgIGNvZGVfcGxheV9jcmVhdGVfYWNjb3VudF9tb2RhbDpcbiMgICAgdGl0bGU6IFwiWW91IGRpZCBpdCFcIiAjIFRoaXMgc2VjdGlvbiBpcyBvbmx5IG5lZWRlZCBpbiBVUywgVUssIE1leGljbywgSW5kaWEsIGFuZCBHZXJtYW55XG4jICAgIGJvZHk6IFwiWW91IGFyZSBub3cgb24geW91ciB3YXkgdG8gYmVjb21pbmcgYSBtYXN0ZXIgY29kZXIuIFNpZ24gdXAgdG8gcmVjZWl2ZSBhbiBleHRyYSA8c3Ryb25nPjEwMCBHZW1zPC9zdHJvbmc+ICYgeW91IHdpbGwgYWxzbyBiZSBlbnRlcmVkIGZvciBhIGNoYW5jZSB0byA8c3Ryb25nPndpbiAkMiw1MDAgJiBvdGhlciBMZW5vdm8gUHJpemVzPC9zdHJvbmc+LlwiXG4jICAgIHNpZ25fdXA6IFwiU2lnbiB1cCAmIGtlZXAgY29kaW5nIOKWtlwiXG4jICAgIHZpY3Rvcnlfc2lnbl91cF9wb2tlOiBcIkNyZWF0ZSBhIGZyZWUgYWNjb3VudCB0byBzYXZlIHlvdXIgY29kZSAmIGJlIGVudGVyZWQgZm9yIGEgY2hhbmNlIHRvIHdpbiBwcml6ZXMhXCJcbiMgICAgdmljdG9yeV9zaWduX3VwOiBcIlNpZ24gdXAgJiBiZSBlbnRlcmVkIHRvIDxzdHJvbmc+d2luICQyLDUwMDwvc3Ryb25nPlwiXG5cbiMgIHNlcnZlcl9lcnJvcjpcbiMgICAgZW1haWxfdGFrZW46IFwiRW1haWwgYWxyZWFkeSB0YWtlblwiXG4jICAgIHVzZXJuYW1lX3Rha2VuOiBcIlVzZXJuYW1lIGFscmVhZHkgdGFrZW5cIlxuXG4jICBlc3BlcjpcbiMgICAgbGluZV9ubzogXCJMaW5lICQxOiBcIlxuIyAgICB1bmNhdWdodDogXCJVbmNhdWdodCAkMVwiICMgJDEgd2lsbCBiZSBhbiBlcnJvciB0eXBlLCBlZyBcIlVuY2F1Z2h0IFN5bnRheEVycm9yXCJcbiMgICAgcmVmZXJlbmNlX2Vycm9yOiBcIlJlZmVyZW5jZUVycm9yOiBcIlxuIyAgICBhcmd1bWVudF9lcnJvcjogXCJBcmd1bWVudEVycm9yOiBcIlxuIyAgICB0eXBlX2Vycm9yOiBcIlR5cGVFcnJvcjogXCJcbiMgICAgc3ludGF4X2Vycm9yOiBcIlN5bnRheEVycm9yOiBcIlxuIyAgICBlcnJvcjogXCJFcnJvcjogXCJcbiMgICAgeF9ub3RfYV9mdW5jdGlvbjogXCIkMSBpcyBub3QgYSBmdW5jdGlvblwiXG4jICAgIHhfbm90X2RlZmluZWQ6IFwiJDEgaXMgbm90IGRlZmluZWRcIlxuIyAgICBzcGVsbGluZ19pc3N1ZXM6IFwiTG9vayBvdXQgZm9yIHNwZWxsaW5nIGlzc3VlczogZGlkIHlvdSBtZWFuIGAkMWAgaW5zdGVhZCBvZiBgJDJgP1wiXG4jICAgIGNhcGl0YWxpemF0aW9uX2lzc3VlczogXCJMb29rIG91dCBmb3IgY2FwaXRhbGl6YXRpb246IGAkMWAgc2hvdWxkIGJlIGAkMmAuXCJcbiMgICAgcHlfZW1wdHlfYmxvY2s6IFwiRW1wdHkgJDEuIFB1dCA0IHNwYWNlcyBpbiBmcm9udCBvZiBzdGF0ZW1lbnRzIGluc2lkZSB0aGUgJDIgc3RhdGVtZW50LlwiXG4jICAgIGZ4X21pc3NpbmdfcGFyZW46IFwiSWYgeW91IHdhbnQgdG8gY2FsbCBgJDFgIGFzIGEgZnVuY3Rpb24sIHlvdSBuZWVkIGAoKWAnc1wiXG4jICAgIHVubWF0Y2hlZF90b2tlbjogXCJVbm1hdGNoZWQgYCQxYC4gIEV2ZXJ5IG9wZW5pbmcgYCQyYCBuZWVkcyBhIGNsb3NpbmcgYCQzYCB0byBtYXRjaCBpdC5cIlxuIyAgICB1bnRlcm1pbmF0ZWRfc3RyaW5nOiBcIlVudGVybWluYXRlZCBzdHJpbmcuIEFkZCBhIG1hdGNoaW5nIGBcXFwiYCBhdCB0aGUgZW5kIG9mIHlvdXIgc3RyaW5nLlwiXG4jICAgIG1pc3Npbmdfc2VtaWNvbG9uOiBcIk1pc3Npbmcgc2VtaWNvbG9uLlwiXG4jICAgIG1pc3NpbmdfcXVvdGVzOiBcIk1pc3NpbmcgcXVvdGVzLiBUcnkgYCQxYFwiXG4jICAgIGFyZ3VtZW50X3R5cGU6IFwiYCQxYCdzIGFyZ3VtZW50IGAkMmAgc2hvdWxkIGhhdmUgdHlwZSBgJDNgLCBidXQgZ290IGAkNGA6IGAkNWAuXCJcbiMgICAgYXJndW1lbnRfdHlwZTI6IFwiYCQxYCdzIGFyZ3VtZW50IGAkMmAgc2hvdWxkIGhhdmUgdHlwZSBgJDNgLCBidXQgZ290IGAkNGAuXCJcbiMgICAgdGFyZ2V0X2FfdW5pdDogXCJUYXJnZXQgYSB1bml0LlwiXG4jICAgIGF0dGFja19jYXBpdGFsaXphdGlvbjogXCJBdHRhY2sgJDEsIG5vdCAkMi4gKENhcGl0YWwgbGV0dGVycyBhcmUgaW1wb3J0YW50LilcIlxuIyAgICBlbXB0eV93aGlsZTogXCJFbXB0eSB3aGlsZSBzdGF0ZW1lbnQuIFB1dCA0IHNwYWNlcyBpbiBmcm9udCBvZiBzdGF0ZW1lbnRzIGluc2lkZSB0aGUgd2hpbGUgc3RhdGVtZW50LlwiXG4jICAgIGxpbmVfb2Zfc2l0ZTogXCJgJDFgJ3MgYXJndW1lbnQgYCQyYCBoYXMgYSBwcm9ibGVtLiBJcyB0aGVyZSBhbiBlbmVteSB3aXRoaW4geW91ciBsaW5lLW9mLXNpZ2h0IHlldD9cIlxuIyAgICBuZWVkX2FfYWZ0ZXJfd2hpbGU6IFwiTmVlZCBhIGAkMWAgYWZ0ZXIgYCQyYC5cIlxuIyAgICB0b29fbXVjaF9pbmRlbnRhdGlvbjogXCJUb28gbXVjaCBpbmRlbnRhdGlvbiBhdCB0aGUgYmVnaW5uaW5nIG9mIHRoaXMgbGluZS5cIlxuIyAgICBtaXNzaW5nX2hlcm86IFwiTWlzc2luZyBgJDFgIGtleXdvcmQ7IHNob3VsZCBiZSBgJDJgLlwiXG4jICAgIHRha2VzX25vX2FyZ3VtZW50czogXCJgJDFgIHRha2VzIG5vIGFyZ3VtZW50cy5cIlxuIyAgICBub19vbmVfbmFtZWQ6IFwiVGhlcmUncyBubyBvbmUgbmFtZWQgXFxcIiQxXFxcIiB0byB0YXJnZXQuXCJcbiMgICAgc2VwYXJhdGVkX2J5X2NvbW1hOiBcIkZ1bmN0aW9uIGNhbGxzIHBhcmFtYXRlcnMgbXVzdCBiZSBzZXBlcmF0ZWQgYnkgYCxgc1wiXG4jICAgIHByb3RlY3RlZF9wcm9wZXJ0eTogXCJDYW4ndCByZWFkIHByb3RlY3RlZCBwcm9wZXJ0eTogJDFcIlxuIyAgICBuZWVkX3BhcmVuc190b19jYWxsOiBcIklmIHlvdSB3YW50IHRvIGNhbGwgYCQxYCBhcyBmdW5jdGlvbiwgeW91IG5lZWQgYCgpYCdzXCJcbiMgICAgZXhwZWN0ZWRfYW5faWRlbnRpZmllcjogXCJFeHBlY3RlZCBhbiBpZGVudGlmaWVyIGFuZCBpbnN0ZWFkIHNhdyAnJDEnLlwiXG4jICAgIHVuZXhwZWN0ZWRfaWRlbnRpZmllcjogXCJVbmV4cGVjdGVkIGlkZW50aWZpZXJcIlxuIyAgICB1bmV4cGVjdGVkX2VuZF9vZjogXCJVbmV4cGVjdGVkIGVuZCBvZiBpbnB1dFwiXG4jICAgIHVubmVjZXNzYXJ5X3NlbWljb2xvbjogXCJVbm5lY2Vzc2FyeSBzZW1pY29sb24uXCJcbiMgICAgdW5leHBlY3RlZF90b2tlbl9leHBlY3RlZDogXCJVbmV4cGVjdGVkIHRva2VuOiBleHBlY3RlZCAkMSBidXQgZm91bmQgJDIgd2hpbGUgcGFyc2luZyAkM1wiXG4jICAgIHVuZXhwZWN0ZWRfdG9rZW46IFwiVW5leHBlY3RlZCB0b2tlbiAkMVwiXG4jICAgIHVuZXhwZWN0ZWRfdG9rZW4yOiBcIlVuZXhwZWN0ZWQgdG9rZW5cIlxuIyAgICB1bmV4cGVjdGVkX251bWJlcjogXCJVbmV4cGVjdGVkIG51bWJlclwiXG4jICAgIHVuZXhwZWN0ZWQ6IFwiVW5leHBlY3RlZCAnJDEnLlwiXG4jICAgIGVzY2FwZV9wcmVzc2VkX2NvZGU6IFwiRXNjYXBlIHByZXNzZWQ7IGNvZGUgYWJvcnRlZC5cIlxuIyAgICB0YXJnZXRfYW5fZW5lbXk6IFwiVGFyZ2V0IGFuIGVuZW15IGJ5IG5hbWUsIGxpa2UgYCQxYCwgbm90IHRoZSBzdHJpbmcgYCQyYC5cIlxuIyAgICB0YXJnZXRfYW5fZW5lbXlfMjogXCJUYXJnZXQgYW4gZW5lbXkgYnkgbmFtZSwgbGlrZSAkMS5cIlxuIyAgICBjYW5ub3RfcmVhZF9wcm9wZXJ0eTogXCJDYW5ub3QgcmVhZCBwcm9wZXJ0eSAnJDEnIG9mIHVuZGVmaW5lZFwiXG4jICAgIGF0dGVtcHRlZF90b19hc3NpZ246IFwiQXR0ZW1wdGVkIHRvIGFzc2lnbiB0byByZWFkb25seSBwcm9wZXJ0eS5cIlxuIyAgICB1bmV4cGVjdGVkX2Vhcmx5X2VuZDogXCJVbmV4cGVjdGVkIGVhcmx5IGVuZCBvZiBwcm9ncmFtLlwiXG4jICAgIHlvdV9uZWVkX2Ffc3RyaW5nOiBcIllvdSBuZWVkIGEgc3RyaW5nIHRvIGJ1aWxkOyBvbmUgb2YgJDFcIlxuIyAgICB1bmFibGVfdG9fZ2V0X3Byb3BlcnR5OiBcIlVuYWJsZSB0byBnZXQgcHJvcGVydHkgJyQxJyBvZiB1bmRlZmluZWQgb3IgbnVsbCByZWZlcmVuY2VcIiAjIFRPRE86IERvIHdlIHRyYW5zbGF0ZSB1bmRlZmluZWQvbnVsbD9cbiMgICAgY29kZV9uZXZlcl9maW5pc2hlZF9pdHM6IFwiQ29kZSBuZXZlciBmaW5pc2hlZC4gSXQncyBlaXRoZXIgcmVhbGx5IHNsb3cgb3IgaGFzIGFuIGluZmluaXRlIGxvb3AuXCJcbiMgICAgdW5jbG9zZWRfc3RyaW5nOiBcIlVuY2xvc2VkIHN0cmluZy5cIlxuIyAgICB1bm1hdGNoZWQ6IFwiVW5tYXRjaGVkICckMScuXCJcbiMgICAgZXJyb3JfeW91X3NhaWRfYWNob286IFwiWW91IHNhaWQ6ICQxLCBidXQgdGhlIHBhc3N3b3JkIGlzOiAkMi4gKENhcGl0YWwgbGV0dGVycyBhcmUgaW1wb3J0YW50LilcIlxuIyAgICBpbmRlbnRhdGlvbl9lcnJvcl91bmluZGVudF9kb2VzOiBcIkluZGVudGF0aW9uIEVycm9yOiB1bmluZGVudCBkb2VzIG5vdCBtYXRjaCBhbnkgb3V0ZXIgaW5kZW50YXRpb24gbGV2ZWxcIlxuIyAgICBpbmRlbnRhdGlvbl9lcnJvcjogXCJJbmRlbnRhdGlvbiBlcnJvci5cIlxuIyAgICBuZWVkX2Ffb25fdGhlOiBcIk5lZWQgYSBgOmAgb24gdGhlIGVuZCBvZiB0aGUgbGluZSBmb2xsb3dpbmcgYCQxYC5cIlxuIyAgICBhdHRlbXB0X3RvX2NhbGxfdW5kZWZpbmVkOiBcImF0dGVtcHQgdG8gY2FsbCAnJDEnIChhIG5pbCB2YWx1ZSlcIlxuIyAgICB1bnRlcm1pbmF0ZWQ6IFwiVW50ZXJtaW5hdGVkIGAkMWBcIlxuIyAgICB0YXJnZXRfYW5fZW5lbXlfdmFyaWFibGU6IFwiVGFyZ2V0IGFuICQxIHZhcmlhYmxlLCBub3QgdGhlIHN0cmluZyAkMi4gKFRyeSB1c2luZyAkMy4pXCJcbiMgICAgZXJyb3JfdXNlX3RoZV92YXJpYWJsZTogXCJVc2UgdGhlIHZhcmlhYmxlIG5hbWUgbGlrZSBgJDFgIGluc3RlYWQgb2YgYSBzdHJpbmcgbGlrZSBgJDJgXCJcbiMgICAgaW5kZW50YXRpb25fdW5pbmRlbnRfZG9lc19ub3Q6IFwiSW5kZW50YXRpb24gdW5pbmRlbnQgZG9lcyBub3QgbWF0Y2ggYW55IG91dGVyIGluZGVudGF0aW9uIGxldmVsXCJcbiMgICAgdW5jbG9zZWRfcGFyZW5faW5fZnVuY3Rpb25fYXJndW1lbnRzOiBcIlVuY2xvc2VkICQxIGluIGZ1bmN0aW9uIGFyZ3VtZW50cy5cIlxuIyAgICB1bmV4cGVjdGVkX2VuZF9vZl9pbnB1dDogXCJVbmV4cGVjdGVkIGVuZCBvZiBpbnB1dFwiXG4jICAgIHRoZXJlX2lzX25vX2VuZW15OiBcIlRoZXJlIGlzIG5vIGAkMWAuIFVzZSBgJDJgIGZpcnN0LlwiICMgSGludHMgc3RhcnQgaGVyZVxuIyAgICB0cnlfaGVyb2ZpbmRuZWFyZXN0ZW5lbXk6IFwiVHJ5IGAkMWBcIlxuIyAgICB0aGVyZV9pc19ub19mdW5jdGlvbjogXCJUaGVyZSBpcyBubyBmdW5jdGlvbiBgJDFgLCBidXQgYCQyYCBoYXMgYSBtZXRob2QgYCQzYC5cIlxuIyAgICBhdHRhY2tzX2FyZ3VtZW50X2VuZW15X2hhczogXCJgJDFgJ3MgYXJndW1lbnQgYCQyYCBoYXMgYSBwcm9ibGVtLlwiXG4jICAgIGlzX3RoZXJlX2FuX2VuZW15OiBcIklzIHRoZXJlIGFuIGVuZW15IHdpdGhpbiB5b3VyIGxpbmUtb2Ytc2lnaHQgeWV0P1wiXG4jICAgIHRhcmdldF9pc19udWxsX2lzOiBcIlRhcmdldCBpcyAkMS4gSXMgdGhlcmUgYWx3YXlzIGEgdGFyZ2V0IHRvIGF0dGFjaz8gKFVzZSAkMj8pXCJcbiMgICAgaGVyb19oYXNfbm9fbWV0aG9kOiBcImAkMWAgaGFzIG5vIG1ldGhvZCBgJDJgLlwiXG4jICAgIHRoZXJlX2lzX2FfcHJvYmxlbTogXCJUaGVyZSBpcyBhIHByb2JsZW0gd2l0aCB5b3VyIGNvZGUuXCJcbiMgICAgZGlkX3lvdV9tZWFuOiBcIkRpZCB5b3UgbWVhbiAkMT8gWW91IGRvIG5vdCBoYXZlIGFuIGl0ZW0gZXF1aXBwZWQgd2l0aCB0aGF0IHNraWxsLlwiXG4jICAgIG1pc3NpbmdfYV9xdW90YXRpb25fbWFyazogXCJNaXNzaW5nIGEgcXVvdGF0aW9uIG1hcmsuIFwiXG4jICAgIG1pc3NpbmdfdmFyX3VzZV92YXI6IFwiTWlzc2luZyBgJDFgLiBVc2UgYCQyYCB0byBtYWtlIGEgbmV3IHZhcmlhYmxlLlwiXG4jICAgIHlvdV9kb19ub3RfaGF2ZTogXCJZb3UgZG8gbm90IGhhdmUgYW4gaXRlbSBlcXVpcHBlZCB3aXRoIHRoZSAkMSBza2lsbC5cIlxuIyAgICBwdXRfZWFjaF9jb21tYW5kX29uOiBcIlB1dCBlYWNoIGNvbW1hbmQgb24gYSBzZXBhcmF0ZSBsaW5lXCJcbiMgICAgYXJlX3lvdV9taXNzaW5nX2E6IFwiQXJlIHlvdSBtaXNzaW5nIGEgJyQxJyBhZnRlciAnJDInPyBcIlxuIyAgICB5b3VyX3BhcmVudGhlc2VzX211c3RfbWF0Y2g6IFwiWW91ciBwYXJlbnRoZXNlcyBtdXN0IG1hdGNoLlwiXG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9hcHAvbG9jYWxlL2ZpLmNvZmZlZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///229\n");

/***/ })

});