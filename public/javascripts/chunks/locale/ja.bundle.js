/*! hash:ae6a15474fa7d9a1f9f8, chunkhash:1104e5fca3c0861b4ff2, name:locale/ja, filebase:ja.bundle.js, query:, file:javascripts/chunks/locale/ja.bundle.js */
webpackJsonp([45],{

/***/ 240:
/***/ (function(module, exports) {

eval("module.exports = {\n  nativeDescription: \"日本語\",\n  englishDescription: \"Japanese\",\n  translation: {\n    new_home: {\n      slogan: \"一番ステキなプログラミング学習ゲーム\",\n      classroom_edition: \"教室版:\",\n      learn_to_code: \"コードを学ぼう:\",\n      play_now: \"今すぐプレイ\",\n      im_a_teacher: \"私は先生です\",\n      im_a_student: \"私は学生です\",\n      learn_more: \"もっと知りたい\",\n      classroom_in_a_box: \"コンピュータサイエンスが学べる箱の中の教室\",\n      codecombat_is: \"CodeCombatは<strong>生徒のための</strong>実際にゲームを遊びながらコンピュータサイエンスを学べるプラットフォームです\",\n      our_courses: \"私たちのコースはそれまでプログラミング経験がなかった先生でも<strong>教室ですばらしい</strong>プレイテストをされています。\",\n      top_screenshots_hint: \"生徒がコードを書くとリアルタイムでその変更による変化を見れます\",\n      designed_with: \"先生のための設計\",\n      real_code: \"実際に,コードをタイピング\",\n      from_the_first_level: \"それもはじめから\",\n      getting_students: \"生徒にできるだけ早くコードを書かせることがプログラミングの文法や正しい構造を学ぶのに重要です。\",\n      educator_resources: \"教育資源\",\n      course_guides: \"とコースガイド\",\n      teaching_computer_science: \"コンピュータサイエンスを教えるのに高い学位はいりません、私たちがすべての背景を持つ教育者にサポートするツールを提供します。\",\n      accessible_to: \"みんなが\",\n      everyone: \"アクセスできる\",\n      democratizing: \"すべての人へのコーディング学習が私たちの哲学の中心です。みんながコードを学べるようになりましょう。\"\n    },\n    nav: {\n      map: \"マップ\",\n      play: \"ゲームマップへ\",\n      community: \"コミュニティー\",\n      courses: \"コース\",\n      blog: \"ブログ\",\n      forum: \"掲示板\",\n      account: \"アカウント\",\n      my_account: \"マイアカウント\",\n      profile: \"プロフィール\",\n      home: \"ホーム\",\n      contribute: \"コントリビュート\",\n      legal: \"規約\",\n      privacy: \"プライバシー\",\n      about: \"CoCoについて\",\n      contact: \"お問い合わせ\",\n      twitter_follow: \"フォロー\",\n      my_classrooms: \"マイクラス\",\n      my_courses: \"マイコース\",\n      careers: \"経歴\",\n      facebook: \"Facebook\",\n      twitter: \"Twitter\",\n      create_a_class: \"クラスを作る\",\n      other: \"その他\",\n      learn_to_code: \"コードを学ぶ!\",\n      toggle_nav: \"ナビゲーションを下す\",\n      schools: \"学校\",\n      get_involved: \"参加しましょう\",\n      open_source: \"オープンソース(GitHub)\",\n      support: \"サポート\",\n      faqs: \"FAQ\",\n      help_pref: \"ヘルプが必要ですか? Email\",\n      help_suff: \"をくれれば協力します！\",\n      resource_hub: \"Resource Hub\"\n    },\n    modal: {\n      close: \"閉じる\",\n      okay: \"OK\"\n    },\n    not_found: {\n      page_not_found: \"ページが見つかりません\"\n    },\n    diplomat_suggestion: {\n      title: \"CodeCombatを翻訳しましょう！\",\n      sub_heading: \"あなたの言語力が必要です。\",\n      pitch_body: \"CodeCombatは英語で開発されています。日本語でプレイしたい方がたくさんいますが、ゲームの多くはまだ英語のままです。もし、あなたが英語が得意であれば、外交官（翻訳者）として登録し、CodeCombatのレベルやサイトの翻訳にご協力ください。\",\n      missing_translations: \"翻訳が完了していない部分は、英語で表示されます。\",\n      learn_more: \"外交官について情報\",\n      subscribe_as_diplomat: \"外交官登録\"\n    },\n    play: {\n      play_as: \"プレイモード\",\n      compete: \"コンプリート!\",\n      spectate: \"観戦\",\n      players: \"プレイヤー\",\n      hours_played: \"プレイ時間\",\n      items: \"アイテム\",\n      unlock: \"アンロック\",\n      confirm: \"ロックを解除？\",\n      owned: \"所有品\",\n      locked: \"ロック\",\n      available: \"使用可能\",\n      skills_granted: \"追加されるスキル\",\n      heroes: \"ヒーロー\",\n      achievements: \"実績\",\n      settings: \"設定\",\n      poll: \"投票\",\n      next: \"次へ\",\n      change_hero: \"ヒーローの選択\",\n      buy_gems: \"ジェムを購入\",\n      subscribers_only: \"サブスクリプション限定!\",\n      subscribe_unlock: \"サブスクリプションで解放!\",\n      anonymous: \"名無しのプレイヤー\",\n      level_difficulty: \"難易度: \",\n      awaiting_levels_adventurer_prefix: \"私たちは毎週新しいレベルをリリースします\",\n      awaiting_levels_adventurer: \"冒険者として登録すると、\",\n      awaiting_levels_adventurer_suffix: \"新たなレベルを最初に遊ぶ事ができます\",\n      adjust_volume: \"音量を調整する\",\n      campaign_multiplayer: \"マルチプレイ・アリーナ\",\n      campaign_multiplayer_description: \"コーディングで他のプレイヤーに対して格闘しましょう\",\n      brain_pop_done: \"勝利！コードでオーガを倒した！\",\n      brain_pop_challenge: \"違うプログラミング言語での再挑戦で自分自身にチャレンジ!\",\n      replay: \"リプレイ\",\n      back_to_classroom: \"クラスルームに戻る\",\n      teacher_button: \"先生へ\",\n      get_more_codecombat: \"Code Combatについてもっと知る\"\n    },\n    code: {\n      \"if\": \"もし\",\n      \"else\": \"でなければ\",\n      elif: \"でなければ もし\",\n      \"while\": \"まで繰り返す\",\n      loop: \"ずっと\",\n      \"for\": \"まで繰り返す\",\n      \"break\": \"繰り返しを終わる\",\n      \"continue\": \"次の繰り返しに続ける\",\n      pass: \"パス\",\n      \"return\": \"返す\",\n      then: \"なら\",\n      \"do\": \"実行する\",\n      end: \"終わり\",\n      \"function\": \"関数\",\n      def: \"宣言\",\n      \"var\": \"変数\",\n      self: \"自分自身\",\n      hero: \"ヒーロー\",\n      \"this\": \"この\",\n      or: \"または\",\n      \"||\": \"または\",\n      and: \"かつ\",\n      \"&&\": \"かつ\",\n      not: \"ではなく\",\n      \"!\": \"ではなく\",\n      \"=\": \"代入\",\n      \"==\": \"等しい\",\n      \"===\": \"完全に等しい\",\n      \"!=\": \"等しくない\",\n      \"!==\": \"完全には等しくない\",\n      \">\": \"より大きい\",\n      \">=\": \"以上\",\n      \"<\": \"より小さい\",\n      \"<=\": \"以下\",\n      \"*\": \"掛ける\",\n      \"/\": \"割る\",\n      \"+\": \"足す\",\n      \"-\": \"引く\",\n      \"+=\": \"足して代入\",\n      \"-=\": \"引いて代入\",\n      True: \"真\",\n      \"true\": \"真\",\n      False: \"偽\",\n      \"false\": \"偽\",\n      undefined: \"定義されていない\",\n      \"null\": \"空\",\n      nil: \"空\",\n      None: \"空\"\n    },\n    share_progress_modal: {\n      blurb: \"あなたは進歩している！ CodeCombatでどんなに学んだかについて、誰かに伝えてください。\",\n      email_invalid: \"メールアドレスが無効です\",\n      form_blurb: \"下にメールアドレスを入力してください\",\n      form_label: \"メールアドレス\",\n      placeholder: \"メールアドレス\",\n      title: \"良くやった、弟子よ\"\n    },\n    login: {\n      sign_up: \"アカウント登録\",\n      email_or_username: \"Eメールまたはユーザー名\",\n      log_in: \"ログイン\",\n      logging_in: \"ログイン中\",\n      log_out: \"ログアウト\",\n      forgot_password: \"パスワードをお忘れですか？\",\n      finishing: \"仕上げ中\",\n      sign_in_with_facebook: \"Facebookでログイン\",\n      sign_in_with_gplus: \"Google+でログイン\",\n      signup_switch: \"アカウントを作成しますか？\"\n    },\n    signup: {\n      complete_subscription: \"サブスクリプション完了\",\n      create_student_header: \"学生用アカウントを作成\",\n      create_teacher_header: \"先生用アカウントを作成\",\n      create_individual_header: \"個人用アカウントを作成\",\n      email_announcements: \"新しいCodeCombatのレベルと機能についてのお知らせをメールで受け取る\",\n      sign_in_to_continue: \"サインインまたはアカウントを作成して続ける\",\n      creating: \"アカウントを作成しています...\",\n      sign_up: \"アカウント登録\",\n      log_in: \"パスワードでログイン\",\n      required: \"ログインする必要があります\",\n      login_switch: \"すでにアカウントをお持ちですか？\",\n      optional: \"オプション\",\n      connected_gplus_header: \"Google+との連携に成功しました!\",\n      connected_gplus_p: \"Google+での登録が完了しました。\",\n      connected_facebook_header: \"Facebookとの連携に成功しました!\",\n      connected_facebook_p: \"Facebookでの登録が完了しました。.\"\n    },\n    recover: {\n      recover_account_title: \"パスワードを忘れた場合\",\n      send_password: \"パスワードを送信する\",\n      recovery_sent: \"復旧メールが送信されました\"\n    },\n    items: {\n      primary: \"武器\",\n      secondary: \"防具\",\n      armor: \"鎧\",\n      accessories: \"アクセサリー\",\n      misc: \"その他\",\n      books: \"書物\"\n    },\n    common: {\n      back: \"戻る\",\n      coming_soon: \"近日公開!\",\n      \"continue\": \"続ける\",\n      next: \"次へ\",\n      default_code: \"元のコード\",\n      loading: \"ロード中\",\n      overview: \"あらすじ\",\n      processing: \"処理中...\",\n      solution: \"回答\",\n      table_of_contents: \"コンテンツテーブル\",\n      intro: \"はじめに\",\n      saving: \"セーブ中...\",\n      sending: \"送信中...\",\n      send: \"送信\",\n      sent: \"送信済\",\n      cancel: \"キャンセル\",\n      save: \"セーブ\",\n      publish: \"発行\",\n      create: \"作成\",\n      fork: \"分かれ\",\n      play: \"ゲームスタート\",\n      retry: \"リトライ\",\n      actions: \"アクション\",\n      info: \"情報\",\n      help: \"ヘルプ\",\n      watch: \"見る\",\n      unwatch: \"見ない\",\n      submit_patch: \"パッチを送信\",\n      submit_changes: \"変更を送信\",\n      save_changes: \"変更を保存\",\n      required_field: \"記入漏れ\"\n    },\n    general: {\n      and: \"と\",\n      name: \"名前\",\n      date: \"日付\",\n      body: \"体\",\n      version: \"バージョン\",\n      pending: \"ペンディング\",\n      accepted: \"容認済み\",\n      rejected: \"拒否済み\",\n      withdrawn: \"取り下げ済み\",\n      accept: \"容認\",\n      reject: \"拒否\",\n      withdraw: \"取り下げ\",\n      submitter: \"提出者\",\n      submitted: \"提出されました\",\n      commit_msg: \"コミットメッセージ\",\n      version_history: \"バージョン履歴\",\n      version_history_for: \"バージョン履歴：\",\n      select_changes: \"違いを見るには以下の二つの変更を選んで下さい\",\n      undo_prefix: \"取り消す\",\n      undo_shortcut: \"(Ctrl+Z)\",\n      redo_prefix: \"やり直す\",\n      redo_shortcut: \"(Ctrl+Shift+Z)\",\n      play_preview: \"現在のレベルのプレビューを再生\",\n      result: \"結果\",\n      results: \"結果\",\n      description: \"説明\",\n      or: \"又は\",\n      subject: \"件名\",\n      email: \"メール\",\n      password: \"パスワード\",\n      confirm_password: \"パスワードの確認\",\n      message: \"メッセージ\",\n      code: \"コード\",\n      ladder: \"ラダー\",\n      when: \"いつ\",\n      opponent: \"対戦者\",\n      rank: \"ランク\",\n      score: \"スコア\",\n      win: \"勝ち\",\n      loss: \"負け\",\n      tie: \"引分\",\n      easy: \"イージー\",\n      medium: \"ミディアム\",\n      hard: \"ハード\",\n      player: \"プレイヤー\",\n      player_level: \"プレイヤーレベル\",\n      warrior: \"戦士\",\n      ranger: \"レンジャー\",\n      wizard: \"ウィザード\",\n      first_name: \"First Name(名)\",\n      last_name: \"Last Name(姓)\",\n      last_initial: \"イニシヤル\",\n      username: \"ユーザー名\",\n      contact_us: \"私たちにコンタクトをとる\",\n      close_window: \"ウィンドウを閉じる\",\n      learn_more: \"もっとみる\",\n      more: \"もっと\",\n      fewer: \"少なく\",\n      \"with\": \"と\"\n    },\n    units: {\n      second: \"秒\",\n      seconds: \"秒\",\n      sec: \"秒\",\n      minute: \"分\",\n      minutes: \"分\",\n      hour: \"時\",\n      hours: \"時\",\n      day: \"日\",\n      days: \"日\",\n      week: \"週\",\n      weeks: \"週\",\n      month: \"月\",\n      months: \"月\",\n      year: \"年\",\n      years: \"年\"\n    },\n    play_level: {\n      back_to_map: \"マップに戻る\",\n      directions: \"使用法\",\n      edit_level: \"編集レベル\",\n      keep_learning: \"学習を続ける\",\n      explore_codecombat: \"CodeCombatを探検\",\n      finished_hoc: \"コードの時間は終了\",\n      get_certificate: \"証明書をゲットしよう!\",\n      level_complete: \"レベルコンプリート\",\n      completed_level: \"コンプリートレベル:\",\n      course: \"コース:\",\n      done: \"完了\",\n      next_level: \"次のレベル\",\n      challenge_unlocked: \"チャレンジを解放した\",\n      start_challenge: \"チャレンジを始める\",\n      next_game: \"次のゲーム\",\n      languages: \"言語\",\n      programming_language: \"プログラミング言語\",\n      show_menu: \"ゲームメニューを見る\",\n      home: \"ホーム\",\n      level: \"ゲームレベル\",\n      skip: \"スキップ\",\n      game_menu: \"ゲームメニュー\",\n      restart: \"再始動\",\n      goals: \"目標\",\n      goal: \"目標\",\n      challenge_level_goals: \"チャレンジレベルの目標\",\n      challenge_level_goal: \"チャレンジレベルの目標\",\n      running: \"コンパイル中...\",\n      success: \"成功！\",\n      incomplete: \"不完全\",\n      timed_out: \"時間切れ\",\n      failing: \"失敗中\",\n      reload: \"リロード\",\n      reload_title: \"コードを再読み込ますか？\",\n      reload_really: \"レベルをリセットします。よろしいですか？\",\n      reload_confirm: \"リセットする\",\n      test_level: \"テストレベル\",\n      victory: \"勝利\",\n      victory_title_prefix: \"\",\n      victory_title_suffix: \"クリア\",\n      victory_sign_up: \"進行状況をセーブするにはアカウント登録をしてください\",\n      victory_sign_up_poke: \"あなたのコードをセーブしてみませんか? 無料アカウント登録!\",\n      victory_rate_the_level: \"このレベルは楽しめましたか?\",\n      victory_return_to_ladder: \"ラダーに戻る\",\n      victory_saving_progress: \"セーブ中\",\n      victory_go_home: \"ホームに戻る\",\n      victory_review: \"フィードバック\",\n      victory_review_placeholder: \"どのレベルでしたか?\",\n      victory_hour_of_code_done: \"完了してよろしいですか?\",\n      victory_hour_of_code_done_yes: \"はい、構いません\",\n      victory_experience_gained: \"XP獲得\",\n      victory_gems_gained: \"ジェム獲得\",\n      victory_new_item: \"ニューアイテム\",\n      victory_new_hero: \"ニューヒーロー\",\n      victory_viking_code_school: \"あなたはハードレベルのホーリー・スモークを打ち破りました! もしあなたが既にソフトウェア開発者でないなら, ぜひやってみましょう. あなたはちょうどViking Code Scoolで受け入れられるための出世街道にいます,そこでは次のレベルへのスキルを取得でき、14週間でプロのWeb開発者になれます。\",\n      victory_become_a_viking: \"バイキングになる\",\n      victory_no_progress_for_teachers: \"教師用の進捗は保存されません。しかし自分の教室に学生アカウントを加えることができます.\",\n      tome_cast_button_run: \"実行\",\n      tome_cast_button_running: \"実行中\",\n      tome_cast_button_ran: \"実行済み\",\n      tome_submit_button: \"送信\",\n      tome_reload_method: \"このメソッドの元のコードをリロードする\",\n      tome_available_spells: \"利用できる呪文\",\n      tome_your_skills: \"あなたのスキル\",\n      hints: \"ヒント\",\n      hints_title: \"ヒント {{number}}\",\n      code_saved: \"コードがセーブされました\",\n      skip_tutorial: \"スキップ (esc)\",\n      keyboard_shortcuts: \"キーショートカット\",\n      loading_start: \"レベルスタート\",\n      problem_alert_title: \"コードを修正して下さい\",\n      time_current: \"今：\",\n      time_total: \"最大：\",\n      time_goto: \"行く：\",\n      non_user_code_problem_title: \"レベルをロードできません\",\n      infinite_loop_title: \"無限ループが見つかりました\",\n      infinite_loop_description: \"最初のワールドを作るコードが終わりません。単に遅いか、無限ループになっているかでしょう。バグがあるのかもしれません。再試行してみたり、リセットしてデフォルトに戻すこともできます。もし直せないなら私たちに報告してください。\",\n      check_dev_console: \"開発者コンソールをみてなにが間違っているか見ることもできます。\",\n      check_dev_console_link: \"(説明書)\",\n      infinite_loop_try_again: \"再試行する\",\n      infinite_loop_reset_level: \"レベルをリセット\",\n      infinite_loop_comment_out: \"マイコードをコメントアウト\",\n      tip_toggle_play: \"Ctrl+Pで、プレイ／ポーズをトグルする\",\n      tip_scrub_shortcut: \"Ctrl+[ と Ctrl+] で早戻し、早送りする\",\n      tip_guide_exists: \"ゲームメニュー内のガイド（ページの上部）をクリックし、便利な情報 を見よう。\",\n      tip_open_source: \"CodeCombatは、100％オープンソースです！\",\n      tip_tell_friends: \"コードコンバットを楽しんでますか？このことを友達にも伝えましょう！\",\n      tip_beta_launch: \"CodeCombatは、2013年10月にベータ版を開始しました。\",\n      tip_think_solution: \"問題より、解決策を考えろ。\",\n      tip_theory_practice: \"理論的には、理論と実践の間には違いはない。でも実際には、ある。- ヨギ・ベラ\",\n      tip_error_free: \"エラーのないプログラムを書くためには二つの方法がある：第三の方法だけ働く。-アラン・パリス\",\n      tip_debugging_program: \"デバッグがバグを除去するプロセスならば、プログラミングはバグを書き入れるプロセスだ。- エドガー•ダイクストラ\",\n      tip_forums: \"フォーラムで、あなたのご意見をお聞かせください！\",\n      tip_baby_coders: \"将来的には、赤ちゃんでもアークメイジになれる。\",\n      tip_morale_improves: \"士気が向上するまで、ローディングは続く。\",\n      tip_all_species: \"我々は、全ての種族が機会均等のもとでプログラミングを学べることを信じている。\",\n      tip_reticulating: \"スプラインを網状にしています...\",\n      tip_harry: \"君はウィザードだ\",\n      tip_great_responsibility: \"偉大なコーディングスキルを持つと、偉大なデバッグ責任も付属してきます。\",\n      tip_munchkin: \"野菜を食べなければ、眠ってる間にマンチキンに襲われるぞ。\",\n      tip_binary: \"世界には10種類の人がいる：バイナリーを理解する人と、そうでない人。\",\n      tip_commitment_yoda: \"プログラマーは、最も深いコミットメントを持つ必要がある, 最も深刻な心。- ヨーダ\",\n      tip_no_try: \"やるか、やらないかだ。試すことはない。- ヨーダ\",\n      tip_patience: \"忍耐を持つ必要がある、若きパダワンよ。- ヨーダ\",\n      tip_documented_bug: \"文書化されたバグはバグではありません。それは仕様です。\",\n      tip_impossible: \"何かをやり遂げるまでは、常にそれが不可能に思える。- ネルソン・マンデラ\",\n      tip_talk_is_cheap: \"話はもう良い、コードを見せろ。- リーナス・トーバルズ\",\n      tip_first_language: \"最初のプログラミング言語を学ぶ時が、最も悲惨な事を学ぶ時だ。- アラン・ケイ\",\n      tip_hardware_problem: \"Q：電球を変更するのにプログラマが何人必要ですか？ A：一人もいらない、それはハードウェアの問題だ。\",\n      tip_hofstadters_law: \"ホフスタッターの法則：いつでも予測以上の時間がかかるものである。ホフスタッターの法則を計算に入れても。\",\n      tip_premature_optimization: \"早すぎる最適化は諸悪の根源である。-ドナルド・クヌース\",\n      tip_brute_force: \"疑わしい時は、暴力を使え。- ケン・トンプソン\",\n      tip_extrapolation: \"人間は二種類に分けることができる。不完全なデータを挿入する者と、しない者だ。\",\n      tip_superpower: \"プログラミングは、私達のスーパーパワーに最も近い物\",\n      tip_control_destiny: \"本当のオープンソースでは、自分自身の運命をコントロールする権利を持っている。- リーナス・トーバルズ\",\n      tip_no_code: \"コードがないプログラムが一番高速である。\",\n      tip_code_never_lies: \"コードは決して嘘をつかない、コメントは時々嘘をつく。- ロン・ジェフリーズ\",\n      tip_reusable_software: \"ソフトウェアを再利用できる前には、最初に使用可能である事が必要である。\",\n      tip_optimization_operator: \"すべての言語は、最適化演算子を持っている。殆どの言語では、その演算子は '//' である。\",\n      tip_lines_of_code: \"コードを行数でプログラミングの進捗状況を測定するのは、重量で航空機の設計の進捗状況を測定するみたいな事だ。- ビル・ゲイツ\",\n      tip_source_code: \"私は世界を変えたい、でも彼らは私にソースコードを与えてはくれない。\",\n      tip_javascript_java: \"カー(Car, 車)は'カー'ペット(Carpet)にあるように Java は「Java」Script にもある。- クリス・ハイルマン\",\n      tip_move_forward: \"何をするにしても、前進し続けること。- マーティン・ルーサー・キング・ジュニア\",\n      tip_google: \"解決できない問題があるだって？ググっちゃえ！\",\n      tip_adding_evil: \"悪を少々加える。\",\n      tip_hate_computers: \"コンピュータを憎む人が本当に嫌いなのは下手なプログラマーだ。- ラリー・ニーヴン\",\n      tip_open_source_contribute: \"あなたは CodeCombat をより良くすることができます！\",\n      tip_recurse: \"繰り返しは人間、再帰は神。 - L・ピーター・ドイツ\",\n      tip_free_your_mind: \"全ての雑念を捨てろ、恐怖、疑いも不信も 心を解き放つんだ - モーフィアス\",\n      tip_strong_opponents: \"どんな強者にも弱点というものはあるんだ… - うちは　イタチ\",\n      tip_paper_and_pen: \"コーディングを始める前に、 必ず紙とペンを用意して計画を立てましょう。\",\n      tip_solve_then_write: \"まず、問題を解決しよう。それから、コードを書こう。 - ジョン・ジョンソン\",\n      tip_compiler_ignores_comments: \"時々コンパイラは僕のコメントを無視してるんじゃないかと思う。\",\n      tip_understand_recursion: \"再帰を理解するための唯一の方法は再帰を理解することだ。\",\n      tip_life_and_polymorphism: \"オープンソースとは多相型異種構造のようなもの:どんなタイプの人もウェルカムです。\",\n      tip_mistakes_proof_of_trying: \"コードのミスはあなたがやろうとしていることの証明しているだけだ。\",\n      tip_adding_orgres: \"オーガを狩れ。\",\n      tip_sharpening_swords: \"剣を研ぎ澄ませ。\",\n      tip_ratatouille: \"どこで生まれ育とうが他人に限界を決めさせてはいけない あきらめなければなんでもできるのです。- グストー, レミーのおいしいレストラン\",\n      tip_nemo: \"人生にがっくりきたとき、何をすべきか知りたくない? 泳ぎましょ、 泳ぎましょ。 - ドリー、 ファインディング・ニモ\",\n      tip_internet_weather: \"インターネットに引っ越したけど、ここはすごい。中に住んでると天気がやばい。 - ジョン・グリーン\",\n      tip_nerds: \"オタクにはモノを愛することが許されています。こんな風に 上・下・上・下・椅子の・下で・愛・制御・不能。 - ジョン・グリーン\",\n      tip_self_taught: \"私は私自身に学んだことの90%を教えました。それが当然です！ - ハンク・グリーン\",\n      tip_luna_lovegood: \"心配ないよ。あなたは私と同じくらい正気だよ。 - ルーナ・ラブグッド\",\n      tip_good_idea: \"優れたアイディアを得る最善の方法は、多くのアイディアを得ることだ。 - ライナス・ポーリング\",\n      tip_programming_not_about_computers: \"天文学が望遠鏡に関する学問でないのと同様に、計算機科学はコンピュータに関する学問ではない。 - エドガー・ダイクストラ\",\n      tip_mulan: \"できると信じていれば、できる。 - ムーラン\",\n      project_complete: \"プロジェクトを完了!\"\n    },\n    play_game_dev_level: {\n      created_by: \"作成者：{{name}}\",\n      restart: \"レベルをリセット\",\n      play: \"プレイレベル\",\n      play_more_codecombat: \"もっとCodeCombatで遊ぶ\",\n      default_student_instructions: \"ヒーローをクリックしてゲームに勝ちましょう!\",\n      goal_survive: \"生き残る.\",\n      goal_survive_time: \"__seconds__ 秒生き残る.\",\n      goal_defeat: \"敵を全て倒す.\",\n      goal_defeat_amount: \"敵を __amount__ 体を倒す.\",\n      goal_move: \"全ての赤いX印に移動.\",\n      goal_collect: \"全てのアイテムを集める.\",\n      goal_collect_amount: \"__amount__ 個のアイテムを集める.\"\n    },\n    game_menu: {\n      inventory_tab: \"インベントリー\",\n      save_load_tab: \"セーブ//ロード\",\n      options_tab: \"設定\",\n      guide_tab: \"ガイド\",\n      guide_video_tutorial: \"チュートリアル動画\",\n      guide_tips: \"ヒント\",\n      multiplayer_tab: \"マルチプレイ\",\n      auth_tab: \"登録する\",\n      inventory_caption: \"ヒーローの装備を選ぶ\",\n      choose_hero_caption: \"ヒーロー、言語と\",\n      options_caption: \"設定を行う\",\n      guide_caption: \"ガイドとヒント\",\n      multiplayer_caption: \"友達とプレイ！\",\n      auth_caption: \"進行状況をセーブする\"\n    },\n    leaderboard: {\n      view_other_solutions: \"リーダーボードを見る\",\n      scores: \"スコア\",\n      top_players: \"上位プレイヤー順\",\n      day: \"今日\",\n      week: \"今週\",\n      all: \"オールタイム\",\n      latest: \"最新\",\n      time: \"時間\",\n      damage_taken: \"受けたダメージ\",\n      damage_dealt: \"与えたダメージ\",\n      difficulty: \"難易度\",\n      gold_collected: \"集めたゴールド\",\n      survival_time: \"生き残った\",\n      defeated: \"敵を倒した\",\n      code_length: \"コードの行数\"\n    },\n    inventory: {\n      equipped_item: \"装備済み\",\n      required_purchase_title: \"必須品\",\n      available_item: \"使用可能\",\n      restricted_title: \"制限品\",\n      should_equip: \"(ダブルクリックで装備)\",\n      equipped: \"(装備済み)\",\n      locked: \"(ロック)\",\n      restricted: \"(このレベルでは制限品)\",\n      equip: \"装備する\",\n      unequip: \"装備を外す\"\n    },\n    buy_gems: {\n      few_gems: \"少し購入\",\n      pile_gems: \"多く購入\",\n      chest_gems: \"宝箱を購入\",\n      purchasing: \"購入中...\",\n      declined: \"カードが拒否されました。\",\n      retrying: \"サーバーエラー、再試行中。\",\n      prompt_title: \"ジェムが不足\",\n      prompt_body: \"もっと購入しますか？\",\n      prompt_button: \"ショップに入る\",\n      recovered: \"前のジェム購入をリカバリーしました。ページを更新してください。\",\n      price: \"x{{gems}} / 月\",\n      buy_premium: \"プラチナを購入\",\n      purchase: \"購入\",\n      purchased: \"購入完了\"\n    },\n    earn_gems: {\n      prompt_title: \"ジェムが足りません\",\n      prompt_body: \"プレイを続けてさらに稼ごう！\"\n    },\n    subscribe: {\n      best_deal: \"最高の取引!\",\n      confirmation: \"おめでとうございます! Code Combatのプレミアムサブスクリプションを手に入れました!\",\n      premium_already_subscribed: \"すでにプレミアムサブスクリプションを持っています!\",\n      subscribe_modal_title: \"CodeCombatプレミアム\",\n      comparison_blurb: \"CodeCombatへ課金してスキルを磨きましょう！\",\n      must_be_logged: \"まずログインしてください。 アカウントを作るかメニューの上からログインをお願いします。\",\n      subscribe_title: \"課金\",\n      unsubscribe: \"無課金\",\n      confirm_unsubscribe: \"課金の解約確認\",\n      never_mind: \"気にしないでください, それでもあなたが好きです\",\n      thank_you_months_prefix: \"私達を \",\n      thank_you_months_suffix: \"ヶ月サポートしてくださりありがとうございます。\",\n      thank_you: \"CodeCombatをサポートして下さりありがとうございます。\"\n    },\n    choose_hero: {\n      choose_hero: \"ヒーロー選択\",\n      programming_language: \"プログラミング言語\",\n      programming_language_description: \"どのプログラミング言語を使いますか？\",\n      \"default\": \"デフォルト\",\n      experimental: \"実験的\",\n      python_blurb: \"シンプルで強力、初心者や専門家でも使える。\",\n      javascript_blurb: \"ウェブの言語。(Java と同じではありません)\",\n      coffeescript_blurb: \"より良い JavaScript の構文が使えます。\",\n      lua_blurb: \"ゲーム専用のスクリプト言語。\",\n      java_blurb: \"(サブスクリプション限定) Androidや企業.\",\n      status: \"ステータス\",\n      weapons: \"武器\",\n      weapons_warrior: \"剣 - 攻撃範囲:短い- 魔法使用不可\",\n      weapons_ranger: \"クロスボウ, 銃 - 攻撃範囲:長い- 魔法使用不可\",\n      weapons_wizard: \"ワンド、杖- 攻撃範囲:長い- 魔法使用可能\",\n      attack: \"攻撃力\",\n      health: \"体力\",\n      speed: \"移動速度\",\n      regeneration: \"自動回復度\",\n      range: \"攻撃範囲\",\n      blocks: \"ブロックパワー\",\n      backstab: \"バックスタブ\",\n      skills: \"スキル\",\n      attack_1: \"取引\",\n      attack_2: \"リスト\",\n      attack_3: \"武器攻撃力\",\n      health_1: \"収益\",\n      health_2: \"リスト\",\n      health_3: \"防具防御力\",\n      speed_1: \"移動速度\",\n      speed_2: \"メートル/秒\",\n      available_for_purchase: \"購入可能\",\n      level_to_unlock: \"解放レベル：\",\n      restricted_to_certain_heroes: \"特定のヒーローのみ、このレベルをプレイする事が出来ます。\"\n    },\n    skill_docs: {\n      \"function\": \"function(関数)\",\n      method: \"method(メソッド)\",\n      snippet: \"スニペット\",\n      number: \"数値\",\n      array: \"配列\",\n      object: \"オブジェクト\",\n      string: \"文字列\",\n      writable: \"書き込み可能な\",\n      read_only: \"読み込み限定\",\n      action: \"アクション\",\n      spell: \"呪文\",\n      action_name: \"アクション名\",\n      action_cooldown: \"テイク\",\n      action_specific_cooldown: \"クールダウン\",\n      action_damage: \"ダメージ\",\n      action_range: \"レンジ\",\n      action_radius: \"ラジウス\",\n      action_duration: \"デュレーション\",\n      example: \"例\",\n      ex: \"例\",\n      current_value: \"現在値\",\n      default_value: \"デフォルト値\",\n      parameters: \"パラメータ\",\n      required_parameters: \"必須パラメーター\",\n      optional_parameters: \"任意パラメーター\",\n      returns: \"リターン\",\n      granted_by: \"スキルを与えてくれるアイテム：\"\n    },\n    save_load: {\n      granularity_saved_games: \"セーブされました\",\n      granularity_change_history: \"履歴\"\n    },\n    options: {\n      general_options: \"一般設定\",\n      volume_label: \"音量\",\n      music_label: \"音楽\",\n      music_description: \"BGM をオン/オフ\",\n      editor_config_title: \"エディターの設定\",\n      editor_config_livecompletion_label: \"ライブオートコンプリート\",\n      editor_config_livecompletion_description: \"コード入力中、オートコンプリートの提案を表示する。\",\n      editor_config_invisibles_label: \"編集記号の表示\",\n      editor_config_invisibles_description: \"スペースやタブなどの編集記号を表示する。\",\n      editor_config_indentguides_label: \"インデントガイドの表示\",\n      editor_config_indentguides_description: \"より良いインデントを見るために垂直線を表示する。\",\n      editor_config_behaviors_label: \"スマートビヘイビア\",\n      editor_config_behaviors_description: \"カッコ、中括弧、および引用符をオートコンプリートする。\"\n    },\n    about: {\n      main_title: \"もしプログラムを学びたいなら、（たくさん）コードを書きましょう。\",\n      main_description: \"CodeCombatでの私たちの仕事はあなたが笑顔でプレイするのを確かめることです。\",\n      mission_link: \"ミッション\",\n      team_link: \"チーム\",\n      story_link: \"ストーリー\",\n      press_link: \"記事\",\n      mission_title: \"私たちのミッション: プログラミングを地球上の学生にとどけること.\",\n      nick_title: \"創設者, CEO\",\n      matt_title: \"創設者, CTO\",\n      cat_title: \"ゲームデザイナー\",\n      scott_title: \"創設者, ソフトウェアエンジニア\",\n      maka_title: \"顧客主義\",\n      robin_title: \"デザイン＆研究\",\n      nolan_title: \"地区担当マネージャー\",\n      lisa_title: \"市場開発代表\",\n      sean_title: \"地域部長\",\n      liz_title: \"地域部長\",\n      retrostyle_title: \"イラスト\",\n      retrostyle_blurb: \"レトロスタイルのゲーム\"\n    },\n    versions: {\n      save_version_title: \"新しいバージョンをセーブ\",\n      new_major_version: \"メジャーバージョンを新しくする\",\n      submitting_patch: \"パッチを送信中...\",\n      cla_prefix: \"変更を適用するには, 私達のCLAに同意する必要があります。\",\n      cla_url: \"CLA\",\n      cla_suffix: \"。\",\n      cla_agree: \"同意する\",\n      owner_approve: \"ユーザーは変更が実際に表示される前に同意する必要があります。\"\n    },\n    contact: {\n      contact_us: \"お問い合わせ\",\n      welcome: \"あなたからの連絡に感謝します。私達にメールを送信するには、このフォームを使ってください。\",\n      forum_prefix: \"公開で様々な人と議論したい場合は \",\n      forum_page: \"こちらのフォーラム\",\n      forum_suffix: \" でお願いします。\",\n      faq_prefix: \"他のサポートもあります：\",\n      faq: \"よくある質問(FAQ)\",\n      subscribe_prefix: \"レベルをクリアする情報が必要ならば、\",\n      subscribe: \"CodeCombatのサブスクリプション\",\n      subscribe_suffix: \"を購入頂けると喜んであなたのコードを手伝います。\",\n      subscriber_support: \"あなたはCodeCombatにすでに加入しているので、メールは優先サポートされます。\",\n      screenshot_included: \"スクリーンショットが含まれています。\",\n      where_reply: \"何処へ返信すれば宜しいですか？\",\n      send: \"フィードバックを送信\"\n    },\n    account_settings: {\n      title: \"アカウント設定\",\n      not_logged_in: \"設定を変更するにはログインまたはアカウント登録してください\",\n      me_tab: \"自分\",\n      picture_tab: \"画像\",\n      delete_account_tab: \"アカウントの削除\",\n      wrong_email: \"間違ったメールアドレス\",\n      wrong_password: \"間違ったパスワード\",\n      delete_this_account: \"アカウントを完全削除する\",\n      reset_progress_tab: \"すべての進捗をリセットする\",\n      reset_your_progress: \"すべての進捗をリセットしやり直す\",\n      god_mode: \"ゴッドモード\",\n      emails_tab: \"メール\",\n      admin: \"管理者\",\n      manage_subscription: \"購読を管理するにはここをクリックしてください。\",\n      new_password: \"新パスワード\",\n      new_password_verify: \"新パスワードを再入力\",\n      type_in_email: \"アカウントの削除を確認するために、メールアドレスを入力して下さい。\",\n      type_in_email_progress: \"進捗を消すために、メールアドレスを入力してください。\",\n      type_in_password: \"そして、パスワードを入力してください。\",\n      email_subscriptions: \"ニュースレターの購読\",\n      email_subscriptions_none: \"ニュースレターの購読はありません。\",\n      email_announcements: \"お知らせ\",\n      email_announcements_description: \"CodeCombatの最新のニュースや進展をメールで受け取る\",\n      email_notifications: \"通知\",\n      email_notifications_summary: \"CodeCombatアクティビティに関する自動電子メール通知の管理。\",\n      email_any_notes: \"すべての通知\",\n      email_any_notes_description: \"アクティビティすべての通知メールを停止することを無効にします。\",\n      email_news: \"ニュース\",\n      email_recruit_notes: \"求人\",\n      email_recruit_notes_description: \"上手にプレイしてくれる場合、（更に良い）仕事を紹介するためにこちらから連絡を差し上げる場合があります。\",\n      contributor_emails: \"開発を手伝ってくれる人向けのメール\",\n      contribute_prefix: \"私達は開発を手伝ってくれる人を探しています。 詳しくは \",\n      contribute_page: \"こちらのページ\",\n      contribute_suffix: \" を確認して下さい。\",\n      email_toggle: \"すべて\",\n      error_saving: \"セーブ中にエラーが発生しました\",\n      saved: \"変更しました\",\n      password_mismatch: \"パスワードが違います\",\n      password_repeat: \"もう一度パスワードを入力してください\"\n    },\n    keyboard_shortcuts: {\n      keyboard_shortcuts: \"キーボードショートカット\",\n      space: \"スペース\",\n      enter: \"エンター\",\n      press_enter: \"エンターを押す\",\n      escape: \"エスケープ\",\n      shift: \"シフト\",\n      run_code: \"現在のコードを実行\",\n      run_real_time: \"リアルタイムで実行\",\n      continue_script: \"以前のスクリプトを続ける。\",\n      skip_scripts: \"過去のスキップできるスクリプトをスキップする。\",\n      toggle_playback: \"トグル:プレイ/ポーズ\",\n      scrub_playback: \"早戻し・早送り.\",\n      single_scrub_playback: \"１フレームごとに早戻し・早送りをする。\",\n      scrub_execution: \"現在のスペルの実行まで早戻し・早送り。\",\n      toggle_debug: \"トグル：ディスプレイのデバッグ\",\n      toggle_grid: \"トグル：オーバーレイをグリッド\",\n      toggle_pathfinding: \"トグル：オーバーレイの経路探索\",\n      beautify: \"フォーマットを標準化してコードを美しくする。\",\n      maximize_editor: \"コードエディターの最大化/最小化。\"\n    },\n    community: {\n      main_title: \"CodeCombatコミュニティー\",\n      introduction: \"あなたが最も楽しいと思う方法で私たちを手伝ってください。私たちはあなたと働くことを楽しみにしています！\",\n      level_editor_prefix: \"CodeCombat の\",\n      level_editor_suffix: \"を使ってレベルを作成したり編集しましょう。ユーザはクラスのひとや、友人、ハッカソン仲間、学生、兄弟姉妹のためにレベルを作成しています。素晴らしいレベルを作るためにフォークすることから始めましょう。\",\n      thang_editor_prefix: \"私たちはゲーム中のユニットを「サング」と呼んでいます。\",\n      thang_editor_suffix: \"を使って CodeCombat のアートワークを加工しましょう。ユニットが投射物を投げることを許可したり、アニメーションの方向を変えたり、ユニットのヒットポイントを変えたり、あなたのベクタースプライトをアップロードすることもできます。\",\n      article_editor_prefix: \"私たちのドキュメントにミスを見つけましたか？自分の作品のチュートリアルを作りたいですか？\",\n      article_editor_suffix: \"を使って CodeCombat のプレイヤーを助けて彼らのプレイタイムを最大限に活用できるようにしましょう。\",\n      find_us: \"各サイトで私たちを見る\",\n      social_github: \"GitHubで私達のコードをチェックする\",\n      social_blog: \"Sett の CodeCombat ブログを読む\",\n      social_discource: \"Discourse のフォーラムで議論しよう\",\n      social_facebook: \"Facebook で CodeCombat にいいね！する\",\n      social_twitter: \"Twitter の CodeCombat をフォローする\",\n      social_gplus: \"Google+ の CodeCombat に参加する\",\n      social_slack: \"公開CodeCombat Slackチャンネルで私たちと話す\",\n      contribute_to_the_project: \"プロジェクトに貢献する\"\n    },\n    clans: {\n      clan: \"クラン\",\n      clans: \"クラン\",\n      new_name: \"新規クラン名\",\n      new_description: \"新規クラン紹介文\",\n      make_private: \"クランをプライベートにする\",\n      subs_only: \"課金者限定\",\n      create_clan: \"新規クラン作成\",\n      private_preview: \"プレビュー\",\n      private_clans: \"非公開クランmptクラン\",\n      public_clans: \"公開クラン\",\n      my_clans: \"マイ・クラン\",\n      clan_name: \"クラン名\",\n      name: \"名前\",\n      chieftain: \"リーダー\",\n      edit_clan_name: \"クラン名の編集\",\n      edit_clan_description: \"クランの紹介文の編集\",\n      edit_name: \"名前の編集\",\n      edit_description: \"紹介文の編集\",\n      \"private\": \"(プライベート)\",\n      summary: \"概要\",\n      average_level: \"平均レベル\",\n      average_achievements: \"平均業績\",\n      delete_clan: \"クランの削除\",\n      leave_clan: \"クランの脱退\",\n      join_clan: \"クランの参加\",\n      invite_1: \"招待:\",\n      invite_2: \"*このリンクを送信してクランに招待してください。\",\n      members: \"メンバー\",\n      progress: \"進捗\",\n      not_started_1: \"未着手\",\n      started_1: \"進行中\",\n      complete_1: \"完了\",\n      exp_levels: \"レベルの拡大\",\n      rem_hero: \"ヒーローの削除\",\n      status: \"状態\",\n      complete_2: \"完了\",\n      started_2: \"進行中\",\n      not_started_2: \"未着手\",\n      view_solution: \"ソリューションを見る。\",\n      view_attempt: \"アテンプトを見る.\",\n      latest_achievement: \"最新業績\",\n      playtime: \"プレイ時間\",\n      last_played: \"最終プレイ\",\n      leagues_explanation: \"リーグで他のマルチアリーナインスタンス内の他のクランメンバーとプレイ\"\n    },\n    game_dev: {\n      creator: \"クリエーター\"\n    },\n    classes: {\n      archmage_title: \"アークメイジ\",\n      archmage_title_description: \"(プログラマ)\",\n      archmage_summary: \"もしあなたが教育的なゲームに興味のあるデベロッパーであれば、CodeCombat を作るアーキメイジになれます！\",\n      artisan_title: \"アーチザン\",\n      artisan_title_description: \"(レベルデザイナー)\",\n      artisan_summary: \"レベルを作成し、友達にプレイしてもらおう。アーチザンになって他の人にプログラムを教える術を学ぼう！\",\n      adventurer_title: \"冒険者\",\n      adventurer_title_description: \"(レベルのテストプレイヤー)\",\n      adventurer_summary: \"我々の新しいレベル(我々のサブスクライバーコンテンツ)を1週間早くゲットして、パブリックリリースの前にバグを見つける手伝いをするのが冒険者です。\",\n      scribe_title: \"代書人\",\n      scribe_title_description: \"(記事の編集者)\",\n      scribe_summary: \"良いコードは良いドキュメントが必要です。書いて、編集して数百万人が読むドキュメントを改善しよう。\",\n      diplomat_title: \"外交官\",\n      diplomat_title_description: \"(翻訳者)\",\n      diplomat_summary: \"CodeCombat は私たちの外交官により45ヶ国語以上の言語にローカライズされています。翻訳に貢献し、私たちを手伝ってください。\",\n      ambassador_title: \"大使\",\n      ambassador_title_description: \"(サポート)\",\n      ambassador_summary: \"フォーラムのユーザが投稿する質問に答えます。私たちの大使が CodeCombat を世界に表現します。\",\n      teacher_title: \"先生\"\n    },\n    editor: {\n      main_title: \"CodeCombatエディター\",\n      article_title: \"アーティクル エディター\",\n      thang_title: \"サングエディター\",\n      level_title: \"レベルエディター\",\n      course_title: \"コースエディター\",\n      achievement_title: \"実績エディター\",\n      poll_title: \"投票エディター\",\n      back: \"バック\",\n      revert: \"戻す\",\n      revert_models: \"モデルを戻す\",\n      pick_a_terrain: \"地形を選択してください\",\n      dungeon: \"ダンジョン\",\n      indoor: \"屋内\",\n      desert: \"砂漠\",\n      grassy: \"草原\",\n      mountain: \"山岳\",\n      glacier: \"氷河\",\n      small: \"小さい\",\n      large: \"大きい\",\n      fork_title: \"新しいバージョンをフォークする\",\n      fork_creating: \"フォークを作成中\",\n      generate_terrain: \"地形を生成\",\n      more: \"さらに見る\",\n      wiki: \"ウィキ\",\n      live_chat: \"ライブチャット\",\n      thang_main: \"メイン\",\n      thang_spritesheets: \"スプライトシート\",\n      thang_colors: \"色\",\n      level_some_options: \"オプションを付けますか?\",\n      level_tab_thangs: \"サング\",\n      level_tab_scripts: \"スクリプト\",\n      level_tab_components: \"コンポーネント\",\n      level_tab_systems: \"システム\",\n      level_tab_docs: \"文章\",\n      level_tab_thangs_title: \"現在のサング\",\n      level_tab_thangs_all: \"すべて\",\n      level_tab_thangs_conditions: \"コンディションの開始\",\n      level_tab_thangs_add: \"サングの追加\",\n      level_tab_thangs_search: \"サングの検索\",\n      add_components: \"コンポーネントの追加\",\n      component_configs: \"コンポーネントの設定\",\n      config_thang: \"ダブルクリックでサングの設定\",\n      \"delete\": \"削除\",\n      duplicate: \"重複\",\n      stop_duplicate: \"重複をやめる\",\n      rotate: \"回転\",\n      level_component_tab_title: \"現在の部品\",\n      level_component_btn_new: \"新しい部品を作る\",\n      level_systems_tab_title: \"現在のシステム\",\n      level_systems_btn_new: \"新しいシステムを作る\",\n      level_systems_btn_add: \"システムの追加\",\n      level_components_title: \"全てびサングに戻る\",\n      level_components_type: \"タイプ\",\n      level_component_edit_title: \"部品の編集\",\n      level_component_config_schema: \"スキーマの設定\",\n      level_system_edit_title: \"システムの編集\",\n      create_system_title: \"新しいシステムの作成\",\n      new_component_title: \"新しい部品の作成\",\n      new_component_field_system: \"システム\",\n      new_article_title: \"新しい記事の作成\",\n      new_thang_title: \"新しいサングの型の作成\",\n      new_level_title: \"新しいレベルの作成\",\n      new_article_title_login: \"ログインして新しい記事の作成\",\n      new_thang_title_login: \"ログインして新しいサングの型の作成\",\n      new_level_title_login: \"ログインして新しいレベルの作成\",\n      new_achievement_title: \"新しい実績の作成\",\n      new_achievement_title_login: \"ログインして新しい実績の作成\"\n    },\n    article: {\n      edit_btn_preview: \"プレビュー\",\n      edit_article_title: \"アーティクルの設定\"\n    },\n    polls: {\n      priority: \"プライオリティ\"\n    },\n    contribute: {\n      page_title: \"コントリビュート\",\n      intro_blurb: \"CodeCombat は100%オープンソースです！何百もの熱心なプレイヤーが私たちがゲームを作るのを手伝っています。私たちと一緒に CodeCombat の次のチャプターを作って世界中のプレイヤーにプログラミングを教えましょう！\",\n      alert_account_message_intro: \"やあ、こんにちは!\",\n      alert_account_message: \"クラスのメールを購読するには,まずログインが必要です。\",\n      archmage_introduction: \"ゲームを作る上で一番重要なのは、たくさんの要素を合成することです。グラフィック、サウンド、リアルタイムネットワーキング、ソーシャルネットワーキング、一般的なプログラミング、ローレベルのデータベースマネジメント、管理画面のデザインやインターフェイスなど多岐に渡ります。やらなくてはいけないことはたくさんあります。もしあなたが経験豊富なプログラマであればアーキメイジになって CodeCombat のコアにコミットしましょう。ぜひとも私たちの最高のプログラミングゲームを手伝ってください。\",\n      class_attributes: \"クラスの属性\",\n      archmage_attribute_1_pref: \"\",\n      archmage_attribute_1_suf: \" の知識か、それを学ぶ欲求。ほとんどの私たちのコードはこの言語で書かれています。もしあなたが Ruby や Python のファンなら親しく感じるでしょう。JavaScript ですが、より素敵なシンタックスです。\",\n      archmage_attribute_2: \"プログラミングの経験や、自ら率先して行動すること。私たちは慣れるのをお手伝いしますが、あなたをトレーニングする時間はありません。\",\n      how_to_join: \"参加の方法\",\n      join_desc_1: \"誰でも\",\n      join_desc_2: \"からはじめることができます。また、下のチェックボックをオンにするとアークメイジと CodeCombat の最新情報がメールで届きます。さらに深く一翼を担いたいですか？\",\n      join_desc_3: \"をするか、私たちの\",\n      join_desc_4: \"で私たちに連絡してください！\",\n      join_url_email: \"メール\",\n      join_url_slack: \"公開Slackチャンネル\",\n      archmage_subscribe_desc: \"コーディングの機会やアナウンスをメールで受け取る\",\n      artisan_introduction_pref: \"私たちは、追加のレベルを建設しなければなりません！皆さんはもっとコンテンツを、と叫んでいますが、私達がつくれるのは自分たちの分だけです。今、あなたのワークステーションはレベル１です。私達のレベルエディタをつかえばそんなクリエイターでもギリギリ使えます、そう警戒しないで。あなたがfor-loopにまたがるキャンペーンのビジョンを\",\n      artisan_introduction_suf: \"にもっているなら、このクラスはあなたにピッタリです。\",\n      artisan_attribute_1: \"Blizzardのレベルエディタなどの構築経験は歓迎しますが、必須ではありません!\",\n      artisan_attribute_2: \"全体のテストを何度もすることを願ってます。 よいレベルを作るには 他の人のを真似て見てプレイしてみることが必要です。そしてそこから修正のための多くのものを見つけて準備しましょう。\",\n      artisan_attribute_3: \"時間がかかることで, 冒険者と並ぶくらい我慢しなければなりません。 私達のレベルエディターは予備動作が長く使っているとイライラするかもしれません。気をつけてくださいね!\",\n      artisan_join_desc: \"レベルエディタを使うために以下のステップを利用してください。\",\n      artisan_join_step1: \"ドキュメントを読む\",\n      artisan_join_step2: \"新しいレベルを作成し、すでにあるレベルか探す\",\n      artisan_join_step3: \"ヘルプが必要なとき公開Slackルームで私達を探す\",\n      artisan_join_step4: \"フィードバックのためフォーラムにあなたのレベルを投稿する\",\n      artisan_subscribe_desc: \"レベルエディタアップデートやアナウンスをメールで受け取る\",\n      adventurer_introduction: \"あなたの役割をはっきりしましょう。あなたは戦車です。あなたには大きなダメージを負ってもらいます。私たちには新しいレベルを試し、どう改善するか見分けるの役立つ人が必要です。その苦痛は大きなものです。よいゲームを作ることは長い道のりで、最初から正しく動くものなどないのです。もしあなたが耐えることができ、高い生命力を持っているならこのクラスはあなたにピッタリでしょう。\",\n      adventurer_attribute_1: \"学習することへの渇き。あなたがコーディングのやり方を学びたいなら私たちはコーディングの方法を教えたいと思っています。おそらくこの授業のほとんどを受けているでしょうけど。\",\n      adventurer_attribute_2: \"カリスマ。紳士的であり、改善に必要なことをはっきり表し、改善する方法について提案をします。\",\n      adventurer_join_pref: \"アーチザンを獲得（新会員に）し彼らと働き、テストをし新しいレベルがあるときにメールを受信するには以下のチェックボックスをオンにしてください。また、私達はレベルのレビューの投稿をを私達のネットワーク\",\n      adventurer_forum_url: \"フォーラム\",\n      adventurer_join_suf: \"などで通知する場合はそこでもサインアップをしてください。\",\n      adventurer_subscribe_desc: \"新しいレベルをテストするためのメールを受け取る。\",\n      powerful_archmages: \"私たちの強力なアークメイジたち:\",\n      creative_artisans: \"私たちのクリエイティブなアーチザンたち:\",\n      brave_adventurers: \"私たちの勇敢な冒険者たち:\",\n      translating_diplomats: \"私たちの翻訳をしてくれる外交官たち:\",\n      helpful_ambassadors: \"私たちの有能な大使たち:\"\n    },\n    ladder: {\n      my_matches: \"勝負\",\n      simulate: \"シミュレート\",\n      simulation_explanation: \"試合のシミュレートはより早くランク付けすることができます!\",\n      simulation_explanation_leagues: \"同盟を組んだクランやコースのプレイヤーの試合のシミュレーションを助ける。\",\n      simulate_games: \"試合をシミュレート!\",\n      games_simulated_by: \"あなたからシミュレートした試合:\",\n      games_simulated_for: \"あなたへシミュレートされた試合:\",\n      games_in_queue: \"試合は現在列待ちです:\",\n      games_simulated: \"試合のシミュレーション完了\",\n      games_played: \"試合開始完了\",\n      ratio: \"比率  \",\n      leaderboard: \"リーダーボード\",\n      battle_as: \"対戦  \",\n      summary_your: \"あなたの \",\n      summary_matches: \"戦闘数 - \",\n      summary_wins: \" 勝利数, \",\n      summary_losses: \" 敗北数\",\n      rank_no_code: \"新しいコードがランクにありません\",\n      rank_my_game: \"試合をランキングに送信!\",\n      rank_submitting: \"送信中...\",\n      rank_submitted: \"ランキングに送信されました。\",\n      rank_failed: \"ランキングに送信できませんでした。\",\n      rank_being_ranked: \"ランキングにのっています\",\n      rank_last_submitted: \"送信\",\n      help_simulate: \"試合のシミュレートのヘルプ?\",\n      choose_opponent: \"相手を選んでください\",\n      select_your_language: \"使う言語を選んでください！\",\n      tutorial_play: \"チュートリアルで遊ぶ\",\n      tutorial_recommended: \"はじめて遊ぶ人におすすめ\",\n      tutorial_skip: \"チュートリアルをスキップする\",\n      tutorial_not_sure: \"なにが起きているのかわかりませんか？\",\n      tutorial_play_first: \"はじめからチュートリアルを遊ぶ\",\n      simple_ai: \"単純なCPU\",\n      warmup: \"ウォームアップ\",\n      friends_playing: \"友達と遊ぶ\",\n      log_in_for_friends: \"ログインして友達と遊ぼう\",\n      rules: \"ルール\",\n      winners: \"勝者\",\n      league: \"リーグ\",\n      red_ai: \"レッドCPU\",\n      blue_ai: \"ブルーCPU\",\n      wins: \"勝利\",\n      humans: \"レッド\",\n      ogres: \"ブルー\"\n    },\n    user: {\n      stats: \"ステータス\",\n      singleplayer_title: \"シングルプレイヤーレベル\",\n      multiplayer_title: \"マルチプレイヤーレベル\",\n      achievements_title: \"アーカイブ\",\n      last_played: \"最終プレイ\",\n      status: \"ステータス\",\n      status_completed: \"コンプリート\",\n      status_unfinished: \"未完了\",\n      no_singleplayer: \"まだシングルプレイヤーのゲームをプレイしていません。\",\n      no_multiplayer: \"まだマルチプレイヤーのゲームをプレイしていません。\",\n      no_achievements: \"まだアーカイブはありません。\",\n      favorite_prefix: \"お気に入りの言語は \",\n      favorite_postfix: \"。\",\n      not_member_of_clans: \"まだどのクランにも所属していません。\"\n    },\n    legal: {\n      email_title: \"メール\",\n      art_music: \"音楽\",\n      art_sound: \"音\"\n    },\n    calendar: {\n      year: \"年\",\n      day: \"日\",\n      month: \"月\",\n      january: \"１月\",\n      february: \"２月\",\n      march: \"３月\",\n      april: \"４月\",\n      may: \"５月\",\n      june: \"６月\",\n      july: \"７月\",\n      august: \"８月\",\n      september: \"９月\",\n      october: \"１０月\",\n      november: \"１１月\",\n      december: \"１２月\"\n    }\n  }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///240\n");

/***/ })

});