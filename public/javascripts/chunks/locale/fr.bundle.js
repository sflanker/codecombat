/*! hash:ae6a15474fa7d9a1f9f8, chunkhash:7b6b7dfd57b45a94720d, name:locale/fr, filebase:fr.bundle.js, query:, file:javascripts/chunks/locale/fr.bundle.js */
webpackJsonp([54],{

/***/ 231:
/***/ (function(module, exports) {

eval("module.exports = {\n  nativeDescription: \"français\",\n  englishDescription: \"French\",\n  translation: {\n    new_home: {\n      slogan: \"Le jeu le plus engageant pour apprendre la programmation.\",\n      classroom_edition: \"Édition Salle de Classe:\",\n      learn_to_code: \"Apprend à programmer:\",\n      play_now: \"Allons-y !\",\n      im_a_teacher: \"Je suis un enseignant\",\n      im_a_student: \"Je suis un étudiant\",\n      learn_more: \"Apprenez-en plus\",\n      classroom_in_a_box: \"Une classe tout-inclus pour enseigner l'informatique.\",\n      codecombat_is: \"CodeCombat est une plateforme <strong>pour les étudiants</strong> afin d'apprendre l'informatique tout en jouant.\",\n      our_courses: \"Nos cours ont été testés spécifiquement pour <strong>exceller en classe</strong>, même si les enseignants ont peu ou pas d'expérience en programmation.\",\n      watch_how: \"Regardez comment CodeCombat transforme la façon pour les gens d'apprendre l'informatique\",\n      top_screenshots_hint: \"Les étudiants écrivent du code et voient leurs changements s'appliquer en temps-réel\",\n      designed_with: \"Concu en pensant aux enseignants\",\n      real_code: \"Vrai code entré au clavier\",\n      from_the_first_level: \"à partir du premier niveau\",\n      getting_students: \"Encourager les étudiants à écrire du code aussi rapidement que possible est primordial afin qu'ils apprennent comment bien structurer et écrire un programme.\",\n      educator_resources: \"Ressources pour les enseignants\",\n      course_guides: \"et les guides de cours\",\n      teaching_computer_science: \"Enseigner l'informatique ne nécessite pas un diplôme dispendieux, parce que nous fournissons des outils afin d'aider les enseignants, peu importe leurs curriculums.\",\n      accessible_to: \"Accessible à\",\n      everyone: \"tout le monde\",\n      democratizing: \"Démocratiser le processus d'apprendre à programmer est au coeur de notre philosophie. Tout le monde devrait être capable d'apprendre la programmation.\",\n      forgot_learning: \"Je crois qu'ils ont oublié qu'ils étaient en train d'apprendre quelquechose.\",\n      wanted_to_do: \" Programmer est quelquechose que j'ai toujours voulu faire, et je n'ai jamais pensé que je pourrais l'apprendre à l'école.\",\n      why_games: \"Pourquoi est-ce qu'apprendre en jouant est important?\",\n      games_reward: \"Les jeux récompensent l'effort productif.\",\n      encourage: \"Le jeu est une plateforme qui encourage l'interaction, la découverte et l'essaie et erreur. Un bon jeu défit le joeur d'apprendre à maîtriser de nouvelles habiletés au fil du temps, ce qui correspond au même processus critique que l'on retrouve au niveau de l'éducation.\",\n      excel: \"Les jeux sont excellents afin de récompenser\",\n      struggle: \"l'effort productif\",\n      kind_of_struggle: \"le type d'effort qui permet d'apprendre, qui nous engage et\",\n      motivating: \"qui nous motive\",\n      not_tedious: \"non pas fastidieux.\",\n      gaming_is_good: \"Des études suggèrent que jouer est bon pour le cerveau des enfants. (C'est vrai!)\",\n      game_based: \"Quand les systèmes d'apprentissage basés sur le jeu sont\",\n      compared: \"comparés\",\n      conventional: \"aux méthodes d'évaluation conventionnelles, la différence est claire: les jeux sont meilleurs afin d'aider les enfants à retenir ce qu'ils apprennent, à se concentrer et\",\n      perform_at_higher_level: \"à performer à un niveau supérieur d'accomplissement\",\n      feedback: \"Les jeux procurent aussi des résultats en temps réel qui permettent aux étudiants d'ajuster leur solution et de comprendre des concepts de façon plus holistique, au lieu d'être limité aux simples réponses “correct” ou “incorrect”.\",\n      real_game: \"Un vrai jeu, joué en programmant pour de vrai.\",\n      great_game: \"Un bon jeu c'est plus qu'une série d'insignes et d'accomplissements - c'est à propos de l'aventure d'un joueur, des énigmes bien conçues et la capacité d'entreprendre des défis avec confiance et détermination.\",\n      agency: \"CodeCombat est un jeu qui donne aux joueurs cette confiance et détermination à l'aide de notre interpretteur de lignes de code, qui aide les étudiants débutants ainsi qu'avancés à concevoir des programmes bien écrits et valides.\",\n      request_demo_title: \"Débutez avec vos étudiants aujourd'hui!\",\n      request_demo_subtitle: \"Demandez une démonstration et permettez à vos étudiants de démarrer en moins d'une heure.\",\n      get_started_title: \"Mettez en place votre classe aujourd'hui\",\n      get_started_subtitle: \"Mettez en place une classe, ajoutez vos étudiants et surveillez leurs progrès au fur et à mesure qu'ils apprennent l'informatique.\",\n      request_demo: \"Demandez une Démonstration\",\n      setup_a_class: \"Mettre en place une classe\",\n      have_an_account: \"Avez-vous un compte?\",\n      logged_in_as: \"Vous êtes présentement enregistré en tant que\",\n      computer_science: \"Des cours d'informatique pour tous âges\",\n      ffa: \"Gratuis pour tous les étudiants\",\n      coming_soon: \"Bientôt disponible!\",\n      courses_available_in: \"Les cours sont disponibles en JavaScript, Python et Java (bientôt disponible!)\",\n      boast: \"Comprend des énigmes assez complexes pour fasciner autant les joueurs que les programmeurs.\",\n      winning: \"Une combinaison gagnante d'élément de jeux de rôles et programmation qui permet aux enfants d'apprendre de façon légitimement plaisante.\",\n      run_class: \"Tous ce dont vous avez besoin pour enseigner l'informatique dans votre classe aujourd'hui, sans expérience préalable en informatique.\",\n      goto_classes: \"Aller à Mes Classes\",\n      view_profile: \"Voir Mon Profil\",\n      view_progress: \"Voir Progrès\",\n      go_to_courses: \"Aller à Mes Cours\",\n      want_coco: \"Voulez-vous CodeCombat à votre école?\"\n    },\n    nav: {\n      map: \"Carte\",\n      play: \"Jouer\",\n      community: \"Communauté\",\n      courses: \"Cours\",\n      blog: \"Blog\",\n      forum: \"Forum\",\n      account: \"Compte\",\n      my_account: \"Mon compte\",\n      profile: \"Profil\",\n      home: \"Accueil\",\n      contribute: \"Contribuer\",\n      legal: \"Mentions légales\",\n      privacy: \"Confidentiel\",\n      about: \"À propos\",\n      contact: \"Contact\",\n      twitter_follow: \"Suivre\",\n      my_classrooms: \"Mes Classes\",\n      my_courses: \"Mes Cours\",\n      careers: \"Emplois\",\n      facebook: \"Facebook\",\n      twitter: \"Twitter\",\n      create_a_class: \"Créer une classe\",\n      other: \"Autre\",\n      learn_to_code: \"Apprenez à programmer !\",\n      toggle_nav: \"Basculer la navigation\",\n      schools: \"Écoles\",\n      get_involved: \"Devenez impliqué\",\n      open_source: \"Code libre (GitHub)\",\n      support: \"Support\",\n      faqs: \"FAQs\",\n      help_pref: \"Besoin d'aide? Email\",\n      help_suff: \"et nous entrerons en contact!\",\n      resource_hub: \"Centre de ressource\"\n    },\n    modal: {\n      close: \"Fermer\",\n      okay: \"D'accord\"\n    },\n    not_found: {\n      page_not_found: \"Page introuvable\"\n    },\n    diplomat_suggestion: {\n      title: \"Aidez à traduire CodeCombat !\",\n      sub_heading: \"Nous avons besoin de vos compétences linguistiques.\",\n      pitch_body: \"Nous développons CodeCombat en anglais, mais nous avons déjà des joueurs de partout dans le monde. Beaucoup d'entre eux veulent jouer en français mais ne parlent pas anglais, donc si vous parlez aussi bien l'anglais que le français, aidez-nous en devenant traducteur et aidez à traduire aussi bien le site que tous les niveaux en français.\",\n      missing_translations: \"Jusqu'à ce que nous ayons tout traduit en français, vous verrez de l'anglais quand le français ne sera pas disponible.\",\n      learn_more: \"Apprenez-en plus sur les traducteurs\",\n      subscribe_as_diplomat: \"S'inscrire en tant que traducteur\"\n    },\n    play: {\n      play_as: \"Jouer comme \",\n      get_course_for_class: \"Assigner le Développement de jeu et plus à vos classes.\",\n      request_licenses: \"Contacter nos spécialistes de l'école pour plus de détails.\",\n      compete: \"Participer !\",\n      spectate: \"Spectateur\",\n      players: \"Joueurs\",\n      hours_played: \"Heures jouées\",\n      items: \"Objets\",\n      unlock: \"Déverrouiller\",\n      confirm: \"Confirmer\",\n      owned: \"Acquis\",\n      locked: \"Verrouillé\",\n      available: \"Disponible\",\n      skills_granted: \"Compétences acquises\",\n      heroes: \"Héros\",\n      achievements: \"Succès\",\n      settings: \"Réglages\",\n      poll: \"Sondage\",\n      next: \"Suivant\",\n      change_hero: \"Changer le héros\",\n      buy_gems: \"Acheter des gemmes\",\n      subscribers_only: \"Abonnés Seulement!\",\n      subscribe_unlock: \"Abonnez-vous pour debloquer!\",\n      subscriber_heroes: \"Abonnez-vous aujourd'hui pour debloquer immédiatement Amara, Hushbaum et Hattori!\",\n      subscriber_gems: \"Abonnez-vous aujourd'hui pour acheter ce héros avec des gemmes!\",\n      anonymous: \"Joueur anonyme\",\n      level_difficulty: \"Difficulté : \",\n      awaiting_levels_adventurer_prefix: \"Nous produisons cinq niveaux par semaine.\",\n      awaiting_levels_adventurer: \"S'inscrire comme aventurier\",\n      awaiting_levels_adventurer_suffix: \"afin d'être le premier à jouer de nouveaux niveaux.\",\n      adjust_volume: \"Ajuster le volume\",\n      campaign_multiplayer: \"Campagne multi-joueurs\",\n      campaign_multiplayer_description: \"... dans laquelle vous coderez en face-à-face contre d'autres joueurs.\",\n      brain_pop_done: \"Vous avez vaincu les Ogres avec le code! Vous avez gagné!\",\n      brain_pop_challenge: \"Relevez le défi en jouant à nouveau avec d'autres langages de programmation\",\n      replay: \"Rejouer\",\n      back_to_classroom: \"Retour à la Classe\",\n      teacher_button: \"Pour les enseignants\",\n      get_more_codecombat: \"Avoir plus de CodeCombat\"\n    },\n    code: {\n      \"if\": \"Si\",\n      \"else\": \"Sinon\",\n      elif: \"Sinon si\",\n      \"while\": \"tant que\",\n      loop: \"boucle\",\n      \"for\": \"pour\",\n      \"break\": \"sortir\",\n      \"continue\": \"continuer\",\n      pass: \"passer\",\n      \"return\": \"retour\",\n      then: \"alors\",\n      \"do\": \"fait\",\n      end: \"fin\",\n      \"function\": \"fonction\",\n      def: \"definir\",\n      \"var\": \"variable\",\n      self: \"soi-même\",\n      hero: \"héros\",\n      \"this\": \"ceci\",\n      or: \"ou\",\n      \"||\": \"ou\",\n      and: \"et\",\n      \"&&\": \"et\",\n      not: \"non\",\n      \"!\": \"non\",\n      \"=\": \"assigner\",\n      \"==\": \"équivalent à\",\n      \"===\": \"strictement équivalent à\",\n      \"!=\": \"non équivalent à\",\n      \"!==\": \"non strictement équivalent à\",\n      \">\": \"est plus grand que\",\n      \">=\": \"est plus grand que ou équivalent à\",\n      \"<\": \"est plus petit que\",\n      \"<=\": \"est plus petit que ou équivalent à\",\n      \"*\": \"multiplié par\",\n      \"/\": \"divisé par\",\n      \"+\": \"ajouté à\",\n      \"-\": \"soustrait à\",\n      \"+=\": \"ajouté et assigné\",\n      \"-=\": \"soustrait et assigné\",\n      True: \"Vrai\",\n      \"true\": \"vrai\",\n      False: \"Faux\",\n      \"false\": \"faux\",\n      undefined: \"non défini\",\n      \"null\": \"nul\",\n      nil: \"nil\",\n      None: \"Aucune valeur\"\n    },\n    share_progress_modal: {\n      blurb: \"Vous faites beaucoup de progrès ! Partagez ce que vous avez appris grâce à CodeCombat avec vos amis !\",\n      email_invalid: \"Adresse e-mail non valide\",\n      form_blurb: \"Entres leur adresse e-mail ci-dessous, on leur montrera !\",\n      form_label: \"Adresse e-mail\",\n      placeholder: \"adresse e-mail\",\n      title: \"Très bon travail apprenti !\"\n    },\n    login: {\n      sign_up: \"Créer un compte\",\n      email_or_username: \"Email ou nom d'utilisateur\",\n      log_in: \"Connexion\",\n      logging_in: \"Connecter\",\n      log_out: \"Déconnexion\",\n      forgot_password: \"Avez-vous oublié votre mot de passe ?\",\n      finishing: \"Finalisation\",\n      sign_in_with_facebook: \"Connecter avec Facebook\",\n      sign_in_with_gplus: \"Connecter avec Google+\",\n      signup_switch: \"Voulez-vous créer un compte ?\"\n    },\n    signup: {\n      complete_subscription: \"Abonnement complet\",\n      create_student_header: \"Créer un compte étudiant\",\n      create_teacher_header: \"Créer un compte enseignant\",\n      create_individual_header: \"Créer un compte individuel\",\n      email_announcements: \"Recevoir les annonces par e-mail\",\n      sign_in_to_continue: \"Connectez-vous ou créez un compte pour continuer\",\n      teacher_email_announcements: \"Tenez moi informé des nouvelles ressources, curriculum et cours pour les enseignants!\",\n      creating: \"Création du compte en cours...\",\n      sign_up: \"S'abonner\",\n      log_in: \"se connecter avec votre mot de passe\",\n      required: \"Vous devez être connecté pour voir cela\",\n      login_switch: \"Avez-vous déjà un compte ?\",\n      optional: \"optionnel\",\n      connected_gplus_header: \"Vous avez réussi à vous connecter avec votre compte Google+!\",\n      connected_gplus_p: \"Finissez de vous abonnez pour pouvoir vous connecter avec votre compte Google+.\",\n      connected_facebook_header: \"Vous avez réussi à vous connecter avec votre compte Facebook!\",\n      connected_facebook_p: \"Finissez de vous abonnez pour pouvoir vous connecter avec votre compte Facebook.\",\n      hey_students: \"Étudiants, entrez le code de cours de votre enseignant.\",\n      birthday: \"Anniversaire\",\n      parent_email_blurb: \"Nous savons que vous êtes impatient d'apprendre à programmer &mdash; Nous en sommes excités nous aussi! Vos parents recevrons un email avec des instructions supplémentaires sur la création d'un compte pour vous. Envoyez un email à {{email_link}} si vous avez la moindre question.\",\n      classroom_not_found: \"Aucune classe existe avec ce code de classe. Vérifiez votre syntaxe ou demandez à votre enseignant de vous aider.\",\n      checking: \"Vérification...\",\n      account_exists: \"Cette adresse email est déjà utilisée:\",\n      sign_in: \"S'identifier\",\n      email_good: \"L'adresse email est correcte!\",\n      name_taken: \"Ce nom est déjà pris! Essayez {{suggestedName}}?\",\n      name_available: \"Nom disponible!\",\n      name_is_email: \"Le nom ne devrait pas être une adresse email\",\n      choose_type: \"Choisissez votre type de compte:\",\n      teacher_type_1: \"Enseignez la programmation avec CodeCombat!\",\n      teacher_type_2: \"Configurez votre classe\",\n      teacher_type_3: \"Guides d'accès aux cours\",\n      teacher_type_4: \"Voir la progression de l'étudiant\",\n      signup_as_teacher: \"Inscrivez-vous en tant que Enseignant\",\n      student_type_1: \"Apprenez à programmer tout en jouant un jeu stimulant!\",\n      student_type_2: \"Jouez avec votre classe\",\n      student_type_3: \"Compétitionner dans les arènes!\",\n      student_type_4: \"Choisissez votre héros!\",\n      student_type_5: \"Ayez votre code de classe prête!\",\n      signup_as_student: \"Inscrivez-vous en tant que Etudiant\",\n      individuals_or_parents: \"Individus & Parents\",\n      individual_type: \"Pour les joueurs apprenant à coder en dehors de la classe. Les parents doivent s'incrire pour un nouveau compte ici.\",\n      signup_as_individual: \"Inscrivez-vous en tant que Individu\",\n      enter_class_code: \"Entrez votre code de classe\",\n      enter_birthdate: \"Entrez votre date de naissance:\",\n      parent_use_birthdate: \"Parents, utilisez votre date de naissance.\",\n      ask_teacher_1: \"Demandez votre code de classe à votre enseignant.\",\n      ask_teacher_2: \"Vous ne faites pas parti d'une classe? Créez un\",\n      ask_teacher_3: \"Compte Individuel\",\n      ask_teacher_4: \" plutôt.\",\n      about_to_join: \"Vous êtes sur le point de joindre:\",\n      enter_parent_email: \"Entrez l'adresse email de vos parents:\",\n      parent_email_error: \"Il y a eu un problème lors de l'envoi de l'email. Vérifiez l'adresse email et recommencez.\",\n      parent_email_sent: \"Nous avons envoyé un email avec des instructions supplémentaires sur la création d'un compte. Demandez à vos parents de vérifier leur boite de reception.\",\n      account_created: \"Compte Crée!\",\n      confirm_student_blurb: \"Notez vos informations pour ne pas les oublier. Votre enseignant peut également vous aider à réinitialiser votre mot de passe à tout moment.\",\n      confirm_individual_blurb: \"Notez vos identifiants dans le cas que vous en auriez besoin plus tard. Vérifiez votre email pour pouvoir récupérer votre compte si jamais vous oubliez votre mot de passe - vérifiez votre boite de réception!\",\n      write_this_down: \"Notez ceci:\",\n      start_playing: \"Commencer à jouer!\",\n      sso_connected: \"Connecté avec succès avec:\",\n      select_your_starting_hero: \"Choisissez votre héros de départ:\",\n      you_can_always_change_your_hero_later: \"Vous pouvez toujours changer votre héros plus tard.\",\n      finish: \"Finir\",\n      teacher_ready_to_create_class: \"Vous êtes prêt à créer votre premiere classe!\",\n      teacher_students_can_start_now: \"Vos étudiants vont pouvoir commencer à jouer leur premier cours, Initiation à l'Informatique, immédiatement.\",\n      teacher_list_create_class: \"Au prochain écran, vous pourrez créer une nouvelle classe.\",\n      teacher_list_add_students: \"Ajouter des élèves à la classe en cliquant sur le lien Afficher la classe, puis envoyer à vos élèves le code ou le lien URL du cours. Vous pouvez également les inviter par e-mail s'ils ont des adresses e-mail.\",\n      teacher_list_resource_hub_1: \"Aller voir le\",\n      teacher_list_resource_hub_2: \"Guides de cours\",\n      teacher_list_resource_hub_3: \"Pour des solutions pour tous les niveaux et au\",\n      teacher_list_resource_hub_4: \"Centre de ressources\",\n      teacher_list_resource_hub_5: \"pour les guides de programme, les activités, et plus encore!\",\n      teacher_additional_questions: \"C'est tout! Si vous avez besoin d'aide supplémentaire ou si vous avez des questions, contactez __supportEmail__.\",\n      dont_use_our_email_silly: \"Ne mettez pas votre email ici! Mettez celui de votre parent.\",\n      want_codecombat_in_school: \"Avez-vous envie de jouer à CodeCombat tout le temps ?\"\n    },\n    recover: {\n      recover_account_title: \"Récupérer son compte\",\n      send_password: \"Envoyer le mot de passe de récupération\",\n      recovery_sent: \"Email de récupération envoyé\"\n    },\n    items: {\n      primary: \"Primaire\",\n      secondary: \"Secondaire\",\n      armor: \"Armure\",\n      accessories: \"Accessoires\",\n      misc: \"Divers\",\n      books: \"Livres\"\n    },\n    common: {\n      back: \"Retour\",\n      coming_soon: \"Arrive prochainement !\",\n      \"continue\": \"Continuer\",\n      next: \"Prochain\",\n      default_code: \"Code par défaut\",\n      loading: \"Chargement...\",\n      overview: \"Vue d'ensemble\",\n      processing: \"En traitement...\",\n      solution: \"Solution\",\n      table_of_contents: \"Table des matières\",\n      intro: \"Intro\",\n      saving: \"Sauvegarde...\",\n      sending: \"Envoi...\",\n      send: \"Envoyer\",\n      sent: \"Envoyé\",\n      cancel: \"Annuler\",\n      save: \"Sauvegarder\",\n      publish: \"Publier\",\n      create: \"Créer\",\n      fork: \"Répliquer\",\n      play: \"Jouer\",\n      retry: \"Réessayer\",\n      actions: \"Actions\",\n      info: \"Info\",\n      help: \"Au-Secours !\",\n      watch: \"Regarder\",\n      unwatch: \"Ne plus regarder\",\n      submit_patch: \"Soumettre un correctif\",\n      submit_changes: \"Soumettre des Changements\",\n      save_changes: \"Sauvegarder les modifications\",\n      required_field: \"Champ requis\"\n    },\n    general: {\n      and: \"et\",\n      name: \"Nom\",\n      date: \"Date\",\n      body: \"Corps\",\n      version: \"Version\",\n      pending: \"En attente\",\n      accepted: \"Accepté\",\n      rejected: \"Rejeté\",\n      withdrawn: \"Retiré\",\n      accept: \"Accepter\",\n      reject: \"Refuser\",\n      withdraw: \"Abandonner\",\n      submitter: \"Soumissionnaire\",\n      submitted: \"Soumis\",\n      commit_msg: \"Message de mise à jour\",\n      version_history: \"Historique des versions\",\n      version_history_for: \"Historique des versions pour : \",\n      select_changes: \"Sélectionner deux changements plus bas pour voir la différence.\",\n      undo_prefix: \"Annuler\",\n      undo_shortcut: \"(Ctrl+Z)\",\n      redo_prefix: \"Refaire\",\n      redo_shortcut: \"(Ctrl+Shift+Z)\",\n      play_preview: \"Jouer un aperçu du niveau actuel\",\n      result: \"Résultat\",\n      results: \"Résultats\",\n      description: \"Description\",\n      or: \"ou\",\n      subject: \"Sujet\",\n      email: \"E-mail\",\n      password: \"Mot de passe\",\n      confirm_password: \"Confirmez votre mot de passe\",\n      message: \"Message\",\n      code: \"Code\",\n      ladder: \"Companion\",\n      when: \"Quand\",\n      opponent: \"Adversaire\",\n      rank: \"Rang\",\n      score: \"Score\",\n      win: \"Victoire\",\n      loss: \"Défaite\",\n      tie: \"Ex-aequo\",\n      easy: \"Facile\",\n      medium: \"Moyen\",\n      hard: \"Difficile\",\n      player: \"Joueur\",\n      player_level: \"Niveau\",\n      warrior: \"Guerrier\",\n      ranger: \"Ranger\",\n      wizard: \"Magicien\",\n      first_name: \"Prénom\",\n      last_name: \"Nom de famille\",\n      last_initial: \"Dernière Initiale\",\n      username: \"Nom d'utilisateur\",\n      contact_us: \"Contactez-nous\",\n      close_window: \"Fermer la fenêtre\",\n      learn_more: \"En savoir plus\",\n      more: \"Plus\",\n      fewer: \"Moins\",\n      \"with\": \"avec\"\n    },\n    units: {\n      second: \"seconde\",\n      seconds: \"secondes\",\n      minute: \"minute\",\n      minutes: \"minutes\",\n      hour: \"heure\",\n      hours: \"heures\",\n      day: \"jour\",\n      days: \"journées\",\n      week: \"semaine\",\n      weeks: \"semaines\",\n      month: \"mois\",\n      months: \"mois\",\n      year: \"année\",\n      years: \"années\"\n    },\n    play_level: {\n      edit_level: \"Modifier Niveau\",\n      explore_codecombat: \"Explorez CodeCombat\",\n      finished_hoc: \"J'ai fini mon Heure de Code\",\n      level_complete: \"Niveau terminé\",\n      completed_level: \"Niveau terminé:\",\n      course: \"Cours:\",\n      done: \"Terminé\",\n      next_level: \"Niveau Suivant\",\n      next_game: \"Prochaine jeu\",\n      languages: \"Langues\",\n      programming_language: \"Langage de programmation\",\n      show_menu: \"Afficher le menu\",\n      home: \"Accueil\",\n      level: \"Niveau\",\n      skip: \"Passer\",\n      game_menu: \"Menu du jeu\",\n      restart: \"Relancer\",\n      goals: \"Objectifs\",\n      goal: \"Objectif\",\n      running: \"en cours...\",\n      success: \"Succès\",\n      incomplete: \"Incomplet\",\n      timed_out: \"temps écoulé\",\n      failing: \"Échec\",\n      reload: \"Recommencer\",\n      reload_title: \"Recommencer tout le code ?\",\n      reload_really: \"Êtes-vous sûr de vouloir recommencer ce niveau et retourner au début ?\",\n      reload_confirm: \"Tout recommencer\",\n      victory: \"Victoire\",\n      victory_title_prefix: \"\",\n      victory_title_suffix: \" Terminé\",\n      victory_sign_up: \"Inscrivez-vous pour recevoir les mises à jour\",\n      victory_sign_up_poke: \"Vous voulez recevoir les dernières actualités par e-mail ? Créez un compte gratuitement et nous vous tiendrons informés !\",\n      victory_rate_the_level: \"Notez ce niveau: \",\n      victory_return_to_ladder: \"Retourner à l'échelle\",\n      victory_saving_progress: \"Sauvegarder la progression\",\n      victory_go_home: \"Retourner à l'accueil\",\n      victory_review: \"Dites-nous en plus !\",\n      victory_review_placeholder: \"Comment était ce niveau?\",\n      victory_hour_of_code_done: \"Déjà fini ?\",\n      victory_hour_of_code_done_yes: \"Oui, j'ai fini mon Heure de Code !\",\n      victory_experience_gained: \"XP gagnée\",\n      victory_gems_gained: \"Gemmes gagnées\",\n      victory_new_item: \"Nouvel item\",\n      victory_new_hero: \"Nouveau héros\",\n      victory_viking_code_school: \"Par la barbe d'Odin, c'est un niveau difficile que tu viens de compléter! Si tu n'est pas un développeur de logiciel, tu devrais l'être ! Ceci vient de te propulser dans l'école de Code Vikings où tu pourras amener tes habilités au prochain niveau et devenir un développer web profesionnel en deux semaines.\",\n      victory_become_a_viking: \"Devenez un viking\",\n      victory_no_progress_for_teachers: \"La progression n'est pas sauvegardé pour les enseignants. Mais vous pouvez ajouter un compte étudiant à votre salle de cours pour vous.\",\n      tome_cast_button_run: \"Exécuter\",\n      tome_cast_button_running: \"En cours d'exécution\",\n      tome_cast_button_ran: \"Exécuter\",\n      tome_submit_button: \"Envoyer\",\n      tome_reload_method: \"Recharger le code original pour cette méthode\",\n      tome_available_spells: \"Sorts diponibles\",\n      tome_your_skills: \"Vos compétences\",\n      hints: \"Aide\",\n      hints_title: \"Aide {{number}}\",\n      code_saved: \"Code sauvergardé\",\n      skip_tutorial: \"Passer (esc)\",\n      keyboard_shortcuts: \"Raccourcis clavier\",\n      loading_start: \"Démarrer niveau\",\n      problem_alert_title: \"Corriger votre code\",\n      time_current: \"Maintenant :\",\n      time_total: \"Max :\",\n      time_goto: \"Allez à :\",\n      non_user_code_problem_title: \"Chargement du niveau impossible\",\n      infinite_loop_title: \"Détection d'une boucle infinie\",\n      infinite_loop_description: \"Le code initial pour initialiser le monde n'a jamais terminé de s'exécuter. Soit la connection internet est trop lente ou soit il y a une présence d'une boucle infinie. Peut-être il s'agit d'un bug. Essayez de soit relancer le code à nouveau ou reinitialiser le code à son état par défaut. Si la situation ne change pas, veuillez nous aviser.\",\n      check_dev_console: \"Vous pouvez ouvrir la console du développeur et tenter d'observer ce qui se passe qui causerait un souci.\",\n      check_dev_console_link: \"(instructions)\",\n      infinite_loop_try_again: \"Réessayer\",\n      infinite_loop_reset_level: \"Redémarrer le niveau\",\n      infinite_loop_comment_out: \"Supprimez les commentaires de mon code\",\n      tip_toggle_play: \"Jouer/Pause avec Ctrl+P.\",\n      tip_scrub_shortcut: \"Ctrl+[ and Ctrl+] : rembobinage et avance rapide.\",\n      tip_guide_exists: \"Cliquez sur le guide en haut de la page pour des informations utiles.\",\n      tip_open_source: \"CodeCombat est 100% open source !\",\n      tip_tell_friends: \"Vous aimez CodeCombat? Parlez de nous à vos amis !\",\n      tip_beta_launch: \"La beta de CodeCombat a été lancée en Octobre 2013\",\n      tip_think_solution: \"Reflechissez à propos de la solution et non du problème.\",\n      tip_theory_practice: \"En théorie, il n'y a pas de différence entre la théorie et la pratique. Mais en pratique, il y en a. - Yogi Berra\",\n      tip_error_free: \"Il ya deux façons d'écrire des programmes sans erreur; seulement la troisième marche. - Alan Perlis\",\n      tip_debugging_program: \"Si débugger est l'art de corriger les bugs, alors programmer est l'art d'en créer. - Edsger W. Dijkstra\",\n      tip_forums: \"Rendez-vous sur le forum et dites-nous ce que vous en pensez !\",\n      tip_baby_coders: \"Dans le futur, même les bébés seront des archimages.\",\n      tip_morale_improves: \"Le chargement se poursuivra jusqu'à ce que la morale s'améliore.\",\n      tip_all_species: \"Nous croyons en l'égalité des chances d'apprendre la programmation pour toutes les espèces.\",\n      tip_reticulating: \"Réticulation des spines.\",\n      tip_harry: \"T'es un magicien, \",\n      tip_great_responsibility: \"Avec de grandes compétences en programmation vient une grande responsabilité de débogage.\",\n      tip_munchkin: \"Si vous ne mangez pas vos légumes, un munchkin viendra après vous pendant que vous dormirez.\",\n      tip_binary: \"Il ya seulement 10 types de personnes dans le monde: ceux qui comprennent le binaire, et ceux qui ne le comprennent pas.\",\n      tip_commitment_yoda: \"Un programmeur doit avoir l'engagement le plus profond, l'esprit le plus grave. ~ Yoda\",\n      tip_no_try: \"Faire. Ou ne pas faire. Il n'y a pas d'essai. - Yoda\",\n      tip_patience: \"Patience tu dois avoir, jeune Padawan. - Yoda\",\n      tip_documented_bug: \"Un bug documenté n'est pas un bug; c'est une caractéristique\",\n      tip_impossible: \"Cela semble toujours impossible jusqu'à ce que l'on y arrive. - Nelson Mandela\",\n      tip_talk_is_cheap: \"Discuter est facile. Montrez-moi le code. - Linus Torvalds\",\n      tip_first_language: \"La chose la plus désastreuse que vous ne pourrez jamais apprendre est votre premier langage de programmation. - Alan Kay\",\n      tip_hardware_problem: \"Q: Combien de programmeurs faut-il pour changer une ampoule ? R: Aucun, c'est un problème de matériel.\",\n      tip_hofstadters_law: \"Loi de Hofstadter : Il faut toujours plus de temps que prévu, même si vous prenez en compte la loi de Hofstadter.\",\n      tip_premature_optimization: \"L'optimisation prématurée est la racine de tous les maux. - Donald Knuth\",\n      tip_brute_force: \"En cas de doute, utiliser la force brute. - Ken Thompson\",\n      tip_extrapolation: \"Il y a seulement deux types de personnes : celles qui peuvent extrapoler à partir de données incomplètes...\",\n      tip_superpower: \"Le développement est la chose la plus proche d'un super pouvoir.\",\n      tip_control_destiny: \"Dans le vrai open source, vous avez le controle sur votre propre destinée. - Linus Torvalds\",\n      tip_no_code: \"Aucun code n'est plus rapide qu'aucun code.\",\n      tip_code_never_lies: \"Le code ne ment jamais, les commentaires... parfois — Ron Jeffries\",\n      tip_reusable_software: \"Avant qu'un logiciel soit réutilisable, il doit être utilisable\",\n      tip_optimization_operator: \"Tout les langages ont un opérateur d'optimisation. Dans la plupart des langages, cet opérateur est ‘//’\",\n      tip_lines_of_code: \"Mesurer l'avancé d'un programme par le nombre de lignes de code, c'est comme mesurer l'avancé d'un avion par son poid. - Bill Gates\",\n      tip_source_code: \"Je voudrais changer le monde, mais ils ne veulent pas me donner le code source.\",\n      tip_javascript_java: \"le Java est au Javascript ce que le tapis est à la tapisserie\",\n      tip_move_forward: \"Quoi que vous fassiez, continuez d'avancer. - Martin Luther King Jr.\",\n      tip_google: \"*Vous avez un problème que vous n'arrivez pas à résoudre ? Googlez le !\",\n      tip_adding_evil: \"Ajout d'une pincée de méchanceté\",\n      tip_hate_computers: \"C'est ça le problème avec les gens qui pensent qu'ils détestent les ordinateur. Ce qu'ils détestent vraiment, c'est des piètres programmeurs. - Larry Niven\",\n      tip_open_source_contribute: \"Vous pouvez aider CodeCombat à s'améliorer !\",\n      tip_recurse: \"Itérer c'est humain, mais faire des récursion, c'est divin. - L. Peter Deutsch\",\n      tip_free_your_mind: \"Vous devez laisser aller , Neo . La peur , le doute et l'incrédulité . Libère ton esprit. - Morpheus\",\n      tip_strong_opponents: \"Même les ennemis les plus puissant ont une faiblesse. - Itachi Uchiha\",\n      tip_paper_and_pen: \"Avant de commencer à coder, vous pouvez plannifier les choses sur papier.\",\n      tip_solve_then_write: \"D'abord, résolvez le problème. Ensuite, écrivez le code. - John Johnson\",\n      tip_compiler_ignores_comments: \"Des fois, je pense que le compilateur ignore mes commentaires.\",\n      tip_understand_recursion: \"La seule manière de comprendre la récursion est de comprendre la récursion.\",\n      tip_life_and_polymorphism: \"Le code libre est une structure hétérogène polymorphique. Tous les types sont les bienvenues.\",\n      tip_mistakes_proof_of_trying: \"Les erreurs dans votre code sont la preuve que vous essayez.\",\n      tip_adding_orgres: \"Rassembler les ogres.\",\n      tip_sharpening_swords: \"Aiguiser les épées.\",\n      tip_ratatouille: \"Tu ne dois laisser personne définir où se trouvent tes limites. La seule vraie limite est c'est ton âme. - Gusteau, Ratatouille\",\n      tip_nemo: \"Quand la vie vous rabaisse, vous savez ce que vous devenez faire ? Juste continuer de nager, juste continuer de nager. - Dory, Finding Nemo\",\n      tip_internet_weather: \"Just move to the internet, it's great here. We get to live inside where the weather is always awesome. - John Green\",\n      tip_self_taught: \"Je me suis enseigné 90% de ce que j'ai appris. Et c'est normal! - Hank Green\",\n      tip_luna_lovegood: \"Ne t'en fais pas, tu es aussi sain que moi. - Luna Lovegood\",\n      tip_good_idea: \"La meilleure façon d'avoir une bonne idée est d'avoir beaucoup d'idées. - Linus Pauling\"\n    },\n    play_game_dev_level: {\n      play: \"Jouer le niveau\"\n    },\n    game_menu: {\n      inventory_tab: \"Inventaire\",\n      save_load_tab: \"Sauvegarder/Charger\",\n      options_tab: \"Options\",\n      guide_tab: \"Guide\",\n      guide_video_tutorial: \"Tutoriel vidéo\",\n      guide_tips: \"Astuces\",\n      multiplayer_tab: \"Multijoueur\",\n      auth_tab: \"S'inscrire\",\n      inventory_caption: \"Équipez votre héros\",\n      choose_hero_caption: \"Choisissez votre héros, langage\",\n      options_caption: \"Configurer les réglages\",\n      guide_caption: \"Docs et conseils\",\n      multiplayer_caption: \"Jouer avec des amis !\",\n      auth_caption: \"Sauvegarder votre progression.\"\n    },\n    leaderboard: {\n      view_other_solutions: \"Voir les autres solutions\",\n      scores: \"Scores\",\n      top_players: \"Classement des meilleurs joueurs\",\n      day: \"Aujourd'hui\",\n      week: \"Cette semaine\",\n      all: \"Tous les temps\",\n      time: \"Temps\",\n      damage_taken: \"Dégât subis\",\n      damage_dealt: \"Dégât infligés\",\n      difficulty: \"Difficulté\",\n      gold_collected: \"Or collecté\"\n    },\n    inventory: {\n      equipped_item: \"Equipé\",\n      required_purchase_title: \"Requis\",\n      available_item: \"Disponible\",\n      restricted_title: \"Limité\",\n      should_equip: \"(double-clic pour s'équiper)\",\n      equipped: \"(équipé)\",\n      locked: \"(verrouillé)\",\n      restricted: \"(verrouillé à ce niveau)\",\n      equip: \"Equiper\",\n      unequip: \"Retirer\",\n      warrior_only: \"Guerrier Seulement\",\n      ranger_only: \"Ranger Seulement\",\n      wizard_only: \"Magicien Seulement\"\n    },\n    buy_gems: {\n      few_gems: \"Quelques gemmes\",\n      pile_gems: \"Pile de gemmes\",\n      chest_gems: \"Coffre de gemmes\",\n      purchasing: \"Achat...\",\n      declined: \"Votre carte a été refusée\",\n      retrying: \"Erreur serveur, nouvelle tentative.\",\n      prompt_title: \"Pas assez de gemmes\",\n      prompt_body: \"En voulez-vous plus ?\",\n      prompt_button: \"Entrer dans la boutique\",\n      recovered: \"Gemmes précédemment achetées récupérées. Merci de rafraîchir la page.\",\n      price: \"x{{gems}} / mo\"\n    },\n    subscribe: {\n      comparison_blurb: \"Aiguisez vos compétences avec un abonnement CodeCombat !\",\n      must_be_logged: \"Vous devez être identifié. Veuillez créer un compte ou vous identifier depuis le menu ci-dessus.\",\n      subscribe_title: \"Abonnement\",\n      unsubscribe: \"Désinscription\",\n      confirm_unsubscribe: \"Confirmer la désinscription\",\n      never_mind: \"Ça ne fait rien, je t'aime toujours\",\n      thank_you_months_prefix: \"Merci de nous avoir supporté pendant\",\n      thank_you_months_suffix: \"mois.\",\n      thank_you: \"Merci de supporter CodeCombat.\",\n      sorry_to_see_you_go: \"Désolé de te voir partir ! Fais-nous savoir ce que nous aurions pu faire mieux\",\n      unsubscribe_feedback_placeholder: \"Nom de zeus, qu'avons nous fait ?\",\n      stripe_description: \"Inscription mensuelle\",\n      subscription_required_to_play: \"Vous avez besoin d'un abonnement pour jouer à ce niveau.\",\n      unlock_help_videos: \"Abonnez vous pour débloquer tous les tutoriels vidéo.\",\n      personal_sub: \"Abonnement individuel\",\n      loading_info: \"Chargement des informations sur votre abonnement...\",\n      managed_by: \"Gérer par\",\n      will_be_cancelled: \"Ceci va être annulé\",\n      currently_free: \"Vous avez un abonnement gratuit en ce moment\",\n      currently_free_until: \"Vous avez un abonnement gratuit jusqu'à\",\n      was_free_until: \"Vous aviez un abonnement gratuit jusqu'à\",\n      managed_subs: \"Gestion des abonnements\",\n      subscribing: \"S'inscrit...\",\n      current_recipients: \"Recipients courant\",\n      unsubscribing: \"Desincription en cours...\",\n      subscribe_prepaid: \"Cliquer S'abonner pour utiliser du code prépayé\",\n      using_prepaid: \"Utiliser le code prépayé pour un abonnement mensuel\"\n    },\n    choose_hero: {\n      choose_hero: \"Choisissez votre héros\",\n      programming_language: \"Langage de programmation\",\n      programming_language_description: \"Quel langage de programmation voulez-vous utiliser ?\",\n      \"default\": \"Défaut\",\n      experimental: \"Expérimental\",\n      python_blurb: \"Simple mais puissant, idéal pour les débutants et les experts.\",\n      javascript_blurb: \"Le langage du web. (Pas le même que Java.)\",\n      coffeescript_blurb: \"Une syntaxe Javascript plus agréable.\",\n      lua_blurb: \"Langage de script de jeu.\",\n      status: \"Statut\",\n      weapons: \"Arme\",\n      weapons_warrior: \"Epées - Courte portée, pas de magie\",\n      weapons_ranger: \"Arbalètes, pistolets - Longue portée, pas de magie\",\n      weapons_wizard: \"Baguettes, bâtons - Longue portée, Magie\",\n      attack: \"Dégâts\",\n      health: \"Santé\",\n      speed: \"Vitesse\",\n      regeneration: \"Régénération\",\n      range: \"Portée\",\n      blocks: \"Absorbe\",\n      backstab: \"Poignardé\",\n      skills: \"Compétences\",\n      attack_1: \"Inflige\",\n      attack_2: \"Classé de\",\n      attack_3: \"Dommage causé par l'arme\",\n      health_1: \"Gains\",\n      health_2: \"Provenance de la liste\",\n      health_3: \"Endurance de l'armure\",\n      speed_1: \"Se mouvoit à\",\n      speed_2: \"mètres par seconde\",\n      available_for_purchase: \"Disponible à l'achat\",\n      level_to_unlock: \"Niveau à débloquer :\",\n      restricted_to_certain_heroes: \"Seulement certains héros peuvent jouer ce niveau.\"\n    },\n    skill_docs: {\n      \"function\": \"fonction\",\n      method: \"méthode\",\n      number: \"nombre\",\n      array: \"tableau\",\n      object: \"objet\",\n      string: \"chaîne de charactères\",\n      writable: \"éditable\",\n      read_only: \"lecture seulement\",\n      action: \"Action\",\n      spell: \"Sort\",\n      action_name: \"Nom\",\n      action_cooldown: \"Durée\",\n      action_specific_cooldown: \"Rechargement\",\n      action_damage: \"Dégât\",\n      action_range: \"Portée\",\n      action_radius: \"Rayon\",\n      action_duration: \"Durée\",\n      example: \"Exemple\",\n      ex: \"ex\",\n      current_value: \"Valeur actuelle\",\n      default_value: \"Valeur par défaut\",\n      parameters: \"Paramètres\",\n      required_parameters: \"Paramètres requis\",\n      optional_parameters: \"Paramètres facultatifs\",\n      returns: \"Retour\",\n      granted_by: \"Accordé par\"\n    },\n    save_load: {\n      granularity_saved_games: \"Sauvegardé\",\n      granularity_change_history: \"Historique\"\n    },\n    options: {\n      general_options: \"Options Générales\",\n      volume_label: \"Volume\",\n      music_label: \"Musique\",\n      music_description: \"Arrêter/Reprendre la musique de fond.\",\n      editor_config_title: \"Configuration de l'éditeur\",\n      editor_config_livecompletion_label: \"Saisie semi-automatique en direct\",\n      editor_config_livecompletion_description: \"Afficher les suggestions de saisie semi-automatique lors de la frappe.\",\n      editor_config_invisibles_label: \"Afficher les caractères non-imprimables\",\n      editor_config_invisibles_description: \"Permet d'afficher les caractères comme les espaces et les tabulations.\",\n      editor_config_indentguides_label: \"Montrer les indentations\",\n      editor_config_indentguides_description: \"Affiche des guides verticaux qui permettent de visualiser l'indentation.\",\n      editor_config_behaviors_label: \"Auto-complétion\",\n      editor_config_behaviors_description: \"Ferme automatiquement les accolades, parenthèses, et chaînes de caractères.\"\n    },\n    about: {\n      main_title: \"Si tu veux apprendre la programmation, tu dois écrire beaucoup de code.\",\n      main_description: \"Chez CodeCombat, notre but est d'assurer que tu le fasses avec un sourire.\",\n      mission_link: \"Mission\",\n      team_link: \"Equipe\",\n      story_link: \"Histoire\",\n      press_link: \"Presse\",\n      mission_title: \"Notre mission: faire en sorte que la programmation soit accessible à chaque élève sur la Terre.\",\n      team_title: \"Rencontrez l'équipe CodeCombat.\",\n      nick_title: \"Cofondateur, CEO\",\n      matt_title: \"Cofondateur, CTO\",\n      cat_title: \"Chef Artisan\",\n      scott_title: \"Cofondateur, Programmeur\",\n      maka_title: \"Responsable clientèle\",\n      retrostyle_title: \"Illustration\",\n      retrostyle_blurb: \"Jeux RetroStyle\",\n      logo: \"Logo\"\n    },\n    special_offer: {\n      unlimited: \"Illimité\",\n      yes: \"Oui\",\n      courses_prefix: \"Cours\",\n      courses_suffix: \"\",\n      course_prefix: \"Cours\",\n      course_suffix: \"\"\n    },\n    teachers_quote: {\n      organization_label: \"École\",\n      city: \"Ville\",\n      state: \"État\",\n      country: \"Pays\"\n    },\n    versions: {\n      save_version_title: \"Enregistrer une nouvelle version\",\n      new_major_version: \"Nouvelle version majeure\",\n      submitting_patch: \"Soumission du correctif...\",\n      cla_prefix: \"Pour enregistrer vos modifications vous devez d'abord accepter notre\",\n      cla_url: \"Copyright\",\n      cla_suffix: \".\",\n      cla_agree: \"J'accepte\",\n      owner_approve: \"Un propriétaire devra l'approuver avant que vos changements ne soient visibles.\"\n    },\n    contact: {\n      contact_us: \"Contacter CodeCombat\",\n      welcome: \"Ravi d'avoir de vos nouvelles ! Utilisez ce formulaire pour nous envoyer un e-mail.\",\n      forum_prefix: \"Pour tout sujet d'ordre public, merci d'utiliser \",\n      forum_page: \"notre forum\",\n      forum_suffix: \" À la place.\",\n      faq_prefix: \"Il y a aussi une\",\n      faq: \"FAQ\",\n      subscribe_prefix: \"Si vous avez besoin d'aide pour la résolution d'un niveau\",\n      subscribe: \"achetez un abonnement CodeCombat\",\n      subscribe_suffix: \"et nous seront ravis de vous aider avec votre code.\",\n      subscriber_support: \"Etant donné que vous êtes abonné à CodeCombat, votre message sera traité en priorité par notre support.\",\n      screenshot_included: \"Capture d'écran ajoutée.\",\n      where_reply: \"Où devons-nous répondre ?\",\n      send: \"Envoyer un commentaire\"\n    },\n    account_settings: {\n      title: \"Préférences du compte\",\n      not_logged_in: \"Connectez-vous ou créez un compte pour modifier vos préférences.\",\n      me_tab: \"Moi\",\n      picture_tab: \"Photos\",\n      delete_account_tab: \"Supprimer votre compte\",\n      wrong_email: \"Mauvaise adresse e-mail\",\n      wrong_password: \"Mauvais mot de passe\",\n      delete_this_account: \"Supprimer votre compte définitivement\",\n      reset_progress_tab: \"Réinitialiser toute la progression\",\n      reset_your_progress: \"Supprimer toute votre progression et recommencer à zéro\",\n      god_mode: \"Puissance Divine\",\n      emails_tab: \"E-mails\",\n      admin: \"Admin\",\n      manage_subscription: \"Cliquez ici pour gérer votre abonnement..\",\n      new_password: \"Nouveau mot de passe\",\n      new_password_verify: \"Vérifier\",\n      type_in_email: \"Entrez votre adresse e-mail pour confirmer la supression de votre compte\",\n      type_in_email_progress: \"Entrez votre adresse e-mail pour confirmer la supression de votre progression.\",\n      type_in_password: \"Entrez aussi votre mot de passe.\",\n      email_subscriptions: \"Abonnements\",\n      email_subscriptions_none: \"Aucun e-mail d'abonnement.\",\n      email_announcements: \"Annonces\",\n      email_announcements_description: \"Recevoir des e-mails sur les dernières actualités et sur le développement de CodeCombat.\",\n      email_notifications: \"Notifications\",\n      email_notifications_summary: \"Commandes pour personaliser les notifications automatiques d'e-mail liées à votre activité sur CodeCombat.\",\n      email_any_notes: \"Toutes les notifications\",\n      email_any_notes_description: \"Désactivez pour ne plus recevoir de notifications par e-mail.\",\n      email_news: \"Actualités\",\n      email_recruit_notes: \"Offres d'emploi\",\n      email_recruit_notes_description: \"Si vous jouez vraiment bien, nous pouvons vous contacter pour vous proposer un (meilleur) emploi.\",\n      contributor_emails: \"E-mails des contributeurs\",\n      contribute_prefix: \"Nous recherchons des personnes pour se joindre à notre groupe ! Consultez la \",\n      contribute_page: \"page de contributions\",\n      contribute_suffix: \" pour en savoir plus.\",\n      email_toggle: \"Tout basculer\",\n      error_saving: \"Problème d'enregistrement\",\n      saved: \"Changements sauvegardés\",\n      password_mismatch: \"Le mot de passe ne correspond pas.\",\n      password_repeat: \"Veuillez s'il vous plaît répéter votre mot de passe\"\n    },\n    keyboard_shortcuts: {\n      keyboard_shortcuts: \"Raccourcis Clavier\",\n      space: \"Espace\",\n      enter: \"Entrer\",\n      press_enter: \"Appuyez sur entrée\",\n      escape: \"Echap\",\n      shift: \"Shift\",\n      run_code: \"Exécuter le code actuel.\",\n      run_real_time: \"Exécuter en temps réel.\",\n      continue_script: \"Continuer le script passé courant.\",\n      skip_scripts: \"Passer le plus de scripts possibles.\",\n      toggle_playback: \"Basculer entre lecture/pause.\",\n      scrub_playback: \"Avancer et reculer dans le temps.\",\n      single_scrub_playback: \"Avancer et reculer dans le temps au coup par coup.\",\n      scrub_execution: \"Avancer dans l'exécution du sort.\",\n      toggle_debug: \"Afficher la console de déboggage\",\n      toggle_grid: \"Afficher une grille\",\n      toggle_pathfinding: \"Toggle pathfinding overlay.\",\n      beautify: \"Embellissez votre code en normalisant sa mise en forme.\",\n      maximize_editor: \"Maximiser/minimiser l'éditeur de code.\"\n    },\n    community: {\n      main_title: \"Communauté CodeCombat\",\n      introduction: \"Découvrez les façons dont vous pouvez vous impliquer ci-dessous et décidez ce qui semble le plus amusant. Nous sommes impatients de travailler avec vous !\",\n      level_editor_prefix: \"Utiliser le CodeCombat\",\n      level_editor_suffix: \"pour créer et modifier des niveaux. Les utilisateurs ont créé des niveaux pour leurs classes, amis, hackathons, étudiants et leurs frères et sœurs. Si créer un nouveau niveau est intimidant, vous pouvez commencer par forker un des nôtres !\",\n      thang_editor_prefix: \"Nous appelons les unités dans le jeu 'thangs'. Utilisez-le\",\n      thang_editor_suffix: \"pour modifier l'illustration de la source de CodeCombat. Permettre aux unités de lancer des projectiles, de modifier la direction de l'animation, de changer les points de vie d'une unité, ou de télécharger vos propres sprites vectorielles.\",\n      article_editor_prefix: \"Vous voyez une erreur dans certaines de nos docs ? Vous voulez faire des instructions pour vos propres créations ? Découvrez-le\",\n      article_editor_suffix: \"et aidez les joueurs CodeCombat à tirer le meilleur parti de leur temps de jeu.\",\n      find_us: \"Trouvez-nous sur ces sites\",\n      social_github: \"Venez voir tous les codes sources sur Github\",\n      social_blog: \"Lire le blog CodeCombat sur Sett\",\n      social_discource: \"Participez à la discussion sur notre forum Discourse\",\n      social_facebook: \"Aimer CodeCombat sur Facebook\",\n      social_twitter: \"Suivre CodeCombat sur Twitter\",\n      social_gplus: \"Rejoindre CodeCombat sur Google+\",\n      social_slack: \"Bavardez avec nous sur la chaîne publique Slack de CodeCombat.\",\n      contribute_to_the_project: \"Contribuer au projet\"\n    },\n    clans: {\n      clan: \"Clan\",\n      clans: \"Clans\",\n      new_name: \"Nouveau nom de clan\",\n      new_description: \"Description du nouveau clan\",\n      make_private: \"Rendre le clan privé\",\n      subs_only: \"Abonnés seulement\",\n      create_clan: \"Créer un nouveau clan\",\n      private_preview: \"Aperçu\",\n      private_clans: \"Clans privés\",\n      public_clans: \"Clans publics\",\n      my_clans: \"Mes clans\",\n      clan_name: \"Nom du clan\",\n      name: \"Nom\",\n      chieftain: \"Chef\",\n      edit_clan_name: \"Modifier le nom du clan\",\n      edit_clan_description: \"Modifier la description du clan\",\n      edit_name: \"Modifier le nom\",\n      edit_description: \"modifier description\",\n      \"private\": \"(privé)\",\n      summary: \"Sommaire\",\n      average_level: \"Moyenne de niveau\",\n      average_achievements: \"Moyenne de réalisations\",\n      delete_clan: \"Délétion de clan\",\n      leave_clan: \"Partir du clan\",\n      join_clan: \"Rejoindre le clan\",\n      invite_1: \"Inviter:\",\n      invite_2: \"*Inviter des joueurs au Clan en leur envoyant le lien suivant.\",\n      members: \"Membres\",\n      progress: \"Progression\",\n      not_started_1: \"Non commencé\",\n      started_1: \"démarré\",\n      complete_1: \"compléter\",\n      exp_levels: \"Étendre les niveaux\",\n      rem_hero: \"Retirer l'héros\",\n      status: \"Status\",\n      complete_2: \"Compléter\",\n      started_2: \"Démarré\",\n      not_started_2: \"Non démarré\",\n      view_solution: \"Cliquer pour voir la solution\",\n      view_attempt: \"Cliquer pour voir la tentative.\",\n      latest_achievement: \"Réalisation Récentes\",\n      playtime: \"Temps de jeu\",\n      last_played: \"Dernière période de jeu\",\n      leagues_explanation: \"Jouer dans une ligue contre d'autres membres de clan dans cette arène multijoueurs..\",\n      track_concepts2a: \"appris par chaque élèves\",\n      track_concepts2b: \"appris par chaque membres\",\n      track_concepts3a: \"Suivre les niveaux complétés par chaque élève\",\n      track_concepts3b: \"Suivre les niveaux complétés par chaque membre\",\n      track_concepts4a: \"Voir vos élèves\",\n      track_concepts4b: \"Voir vos membres'\",\n      track_concepts5: \"Solutions\",\n      track_concepts6a: \"Classer les élèves par nom ou avancement\",\n      track_concepts6b: \"Classer les membres par nom ou avancement\",\n      track_concepts7: \"Nécessite une invitation\",\n      track_concepts8: \"Joindre\",\n      private_require_sub: \"Les clans privés nécessitent un abonnement pour être créés ou rejoins.\"\n    },\n    courses: {\n      create_new_class: \"Créer un nouveau cours\",\n      unnamed_class: \"Classe sans nom\",\n      edit_settings1: \"Modifier les Réglages de la Classe\",\n      add_students: \"Ajouter des Elèves\",\n      stats: \"Statistiques\",\n      total_students: \"Nombre total d'élèves:\",\n      average_time: \"Temps moyen de jeu par niveau:\",\n      total_time: \"Temps total de jeu:\",\n      average_levels: \"Nombre de niveaux moyen complétés:\",\n      total_levels: \"Total de niveaux complétés :\",\n      students: \"Elèves\",\n      concepts: \"Conceptes\",\n      play_time: \"Temps de jeu:\",\n      completed: \"Complété:\",\n      enter_emails: \"Entrez les adresses emails des élèves à inviter, à raison d'une par ligne\",\n      send_invites: \"Envoyer les invitations\",\n      enroll: \"Inscription\",\n      enroll_paid: \"Inscrire des élèves aux cours payants\",\n      get_enrollments: \"Obtenir plus d'inscriptions\",\n      change_language: \"Changez la langue du cours\",\n      keep_using: \"Continuer à utiliser\",\n      switch_to: \"Changer\",\n      greetings: \"Salutations!\",\n      back_classrooms: \"Retour à mes classes\",\n      back_courses: \"Retour à mes cours\",\n      edit_details: \"Modifier les informations de la classe\",\n      purchase_enrollments: \"Acheter des inscriptions\",\n      remove_student: \"enlever l'élève\",\n      assign: \"Assigner\",\n      student: \"Etudiant\",\n      teacher: \"Professeur\",\n      arena: \"Arène\",\n      available_levels: \"Niveaux disponibles\",\n      welcome_to_courses: \"Aventurier, bienvenu dans les leçons !\",\n      ready_to_play: \"Prêt à jouer ?\",\n      start_new_game: \"Nouvelle Partie\",\n      play_now_learn_header: \"Jouer pour apprendre\",\n      play_now_learn_1: \"la syntaxe basique pour controller votre personnage\",\n      play_now_learn_2: \"les boucles while pour résoudre des problèmes complexes\",\n      play_now_learn_3: \"des chaines de caractères & des variables pour personnaliser des actions\",\n      play_now_learn_4: \"comment battre un ogre (compétence importante dans la vie !)\",\n      welcome_to_page: \"Bienvenu sur la page des Cours !\",\n      my_classes: \"Mes Classes\",\n      class_added: \"Classe ajoutée avec succès !\",\n      view_levels: \"voir les niveaux\",\n      join_class: \"Rejoindre une classe\",\n      ask_teacher_for_code: \"Demandez à votre professeur si vous avez un code de classe CodeCombat ! Si c'est le cas, veuillez l'entrer ci-dessous :\",\n      enter_c_code: \"<Entrer le Code de la Classe>\",\n      join: \"Rejoindre\",\n      joining: \"En train de rejoindre la classe\",\n      course_complete: \"Cours Terminé\",\n      play_arena: \"Jouer à l'Arene\",\n      view_project: \"Voir Projet\",\n      start: \"Démarrer\",\n      last_level: \"Dernier Niveau\",\n      not_you: \"Pas vous ?\",\n      continue_playing: \"Continuer à Jouer\",\n      option1_header: \"Option 1 : Inviter les élèves par email\",\n      remove_student1: \"Supprimer l'élève\",\n      are_you_sure: \"Êtes-vous certain de vouloir supprimer cet élève de cette classe ?\",\n      remove_description1: \"L'élève n'aura plus accès à cette classe et les classes associées. L'évolution et les personnages ne seront pas supprimés, et l'élève pourra de nouveau rejoindre la classe n'importe quand.\",\n      remove_description2: \"Une licence payante activée ne sera pas remboursée.\",\n      keep_student: \"Conserver l'élève\",\n      removing_user: \"Suppression de l'utilisateur\",\n      select_language: \"Selectionner langue\",\n      select_level: \"Selectionner niveau\",\n      play_level: \"Jouer le niveau\",\n      concepts_covered: \"Conceptes Couverts\",\n      view_guide_online: \"Voir Guide En Ligne (PDF)\",\n      language_cannot_change: \"Le language ne peut être changé une fois qu'un élève à rejoins la classe.\",\n      create_class: \"Créer une Classe\",\n      class_name: \"Nom de la classe\",\n      update_account_am_teacher: \"Je suis un professeur\",\n      update_account_teachers_can: \"Les comptes professeurs peuvent :\",\n      update_account_teachers_can1: \"Créer/manager/ajouter des classes\",\n      update_account_am_student: \"Je suis un étudiant\",\n      update_account_students_can: \"Les comptes étudiant peuvent :\"\n    },\n    teacher: {\n      my_classes: \"Mes Classes\",\n      resources: \"Resources\",\n      help: \"Au-Secours !\",\n      language: \"Langue\",\n      archived_classes: \"Cours Archivés\",\n      view_class: \"Voir Cours\",\n      archive_class: \"Archiver Cours\",\n      unarchive_class: \"Désarchiver cours\",\n      unarchive_this_class: \"Désarchiver ce cours\",\n      no_students_yet: \"Ce cours n'a pas encore d'élèves.\",\n      create_new_class: \"Créer une Nouveau Cour\",\n      class_overview: \"Vue d'ensemble de la classe\",\n      course_progress: \"Progrès de cours\",\n      not_applicable: \"N/A\",\n      edit: \"modifier\",\n      edit_2: \"Modifier\",\n      remove: \"retirer\",\n      sort_by: \"Trier par\",\n      progress: \"Progrès\",\n      project_or_arena: \"Projet ou Arena\",\n      course_overview: \"Vue d'ensemble de cours\",\n      copy_class_code: \"Copier le code de la classe\",\n      copy_class_url: \"Copier l'URL de la classe\",\n      all_students: \"Tous les étudiants\",\n      email_sent: \"E-mail envoyé\",\n      send_recovery_email: \"Envoyer l'e-mail de récupération\",\n      change_password: \"Modifier le mot de passe\",\n      changed: \"Modifié\",\n      start_date: \"date de début:\",\n      end_date: \"date de fin:\",\n      select_all: \"Tout sélectionner\",\n      project: \"Projet\",\n      student_overview: \"Vue d'ensemble\",\n      student_details: \"Détails de l'étudiant\",\n      student_name: \"Nom de l'étudiant\"\n    },\n    sharing: {\n      game: \"Jeu\",\n      webpage: \"Page web\",\n      victory_share_suffix: \".\",\n      copy_url: \"Copier l'URL\"\n    },\n    game_dev: {\n      creator: \"Créateur\"\n    },\n    web_dev: {\n      copy_url: \"Copier l'URL\",\n      copy_img: \"Copier <img>\",\n      how_to_copy_paste: \"Comment copier/coller\",\n      copy: \"Copier\",\n      paste: \"Coller\",\n      back_to_editing: \"Retour à l'édition\"\n    },\n    classes: {\n      archmage_title: \"Archimage\",\n      archmage_title_description: \"(Développeur)\",\n      archmage_summary: \"Si vous êtes développeur, intéréssé par le développement de jeux éducatifs, devenez un Archimage et aidez-nous à construire CodeCombat !\",\n      artisan_title: \"Artisan\",\n      artisan_title_description: \"(Créateur de niveau)\",\n      artisan_summary: \"Créez et partagez des niveaux pour y jouer avec vos amis. Devenz un Artisan pour apprendre l'art d'enseigner la programmation.\",\n      adventurer_title: \"Aventurier\",\n      adventurer_title_description: \"(Testeur de niveau)\",\n      adventurer_summary: \"Jouez aux derniers niveaux (même ceux reservés aux abonnés) une semaine en avance gratuitement, et aidez-nous à déceler les bugs avant la sortie publique.\",\n      scribe_title: \"Scribe\",\n      scribe_title_description: \"(Rédacteur d'articles)\",\n      scribe_summary: \"Un bon code nécéssite une bonne documentation. Ecrivez, corrigez et améliorez la documentation lue par des millions de joueurs autour du monde.\",\n      diplomat_title: \"Diplomate\",\n      diplomat_title_description: \"(Traducteur)\",\n      diplomat_summary: \"CodeCombat est traduit dans plus de 45 langues par nos Diplomates. Aidez-nous, et contribuez à ces traductions.\",\n      ambassador_title: \"Ambassadeur\",\n      ambassador_title_description: \"(Aide)\",\n      ambassador_summary: \"Domptez les membres du forum, et guidez ceux qui ont besoin d'aide. Nos ambassadeurs représentent CodeCombat face au monde.\",\n      teacher_title: \"Professeur\"\n    },\n    editor: {\n      main_title: \"Éditeurs CodeCombat\",\n      article_title: \"Éditeur d'article\",\n      thang_title: \"Éditeur Thang\",\n      level_title: \"Éditeur de niveau\",\n      course_title: \"Éditeur de cours\",\n      achievement_title: \"Éditeur de succès\",\n      poll_title: \"Éditeur de sondage\",\n      back: \"Retour\",\n      revert: \"Annuler\",\n      revert_models: \"Annuler les modèles\",\n      pick_a_terrain: \"Choisir un terrain\",\n      dungeon: \"Donjon\",\n      indoor: \"Intérieur\",\n      desert: \"Desert\",\n      grassy: \"Herbeux\",\n      mountain: \"Montagne\",\n      glacier: \"Glacier\",\n      small: \"Petit\",\n      large: \"Large\",\n      fork_title: \"Fork une nouvelle version\",\n      fork_creating: \"Créer un Fork...\",\n      generate_terrain: \"Générer le terrain\",\n      more: \"Plus\",\n      wiki: \"Wiki\",\n      live_chat: \"Chat en direct\",\n      thang_main: \"Principal\",\n      thang_spritesheets: \"Feuilles des sprites\",\n      thang_colors: \"Couleurs\",\n      level_some_options: \"Quelques options ?\",\n      level_tab_thangs: \"Thangs\",\n      level_tab_scripts: \"Scripts\",\n      level_tab_components: \"Composants\",\n      level_tab_systems: \"Systèmes\",\n      level_tab_docs: \"Documentation\",\n      level_tab_thangs_title: \"Thangs actuels\",\n      level_tab_thangs_all: \"Tout\",\n      level_tab_thangs_conditions: \"Conditions de départ\",\n      level_tab_thangs_add: \"Ajouter des Thangs\",\n      level_tab_thangs_search: \"Rechercher des Thangs\",\n      add_components: \"Ajouter des composants\",\n      component_configs: \"Configuration des composants\",\n      config_thang: \"Double-cliquez pour configurer un Thang\",\n      \"delete\": \"Supprimer\",\n      duplicate: \"Dupliquer\",\n      stop_duplicate: \"Arrêter la duplication\",\n      rotate: \"Pivoter\",\n      level_component_tab_title: \"Composants actuels\",\n      level_component_btn_new: \"Créer un nouveau composant\",\n      level_systems_tab_title: \"Systèmes actuels\",\n      level_systems_btn_new: \"Créer un nouveau système\",\n      level_systems_btn_add: \"Ajouter un système\",\n      level_components_title: \"Retourner à tous les Thangs\",\n      level_components_type: \"Type\",\n      level_component_edit_title: \"Éditer le composant\",\n      level_component_config_schema: \"Configurer le schéma\",\n      level_system_edit_title: \"Éditer le système\",\n      create_system_title: \"Créer un nouveau système\",\n      new_component_title: \"Créer un nouveau composant\",\n      new_component_field_system: \"Système\",\n      new_article_title: \"Créer un nouvel article\",\n      new_thang_title: \"Créer un nouveau type de Thang\",\n      new_level_title: \"Créer un nouveau niveau\",\n      new_article_title_login: \"Identifiez-vous pour créer un nouvel article\",\n      new_thang_title_login: \"Identifiez-vous pour créer un nouveau type de Thang\",\n      new_level_title_login: \"Identifiez-vous pour créer un nouveau niveau\",\n      new_achievement_title: \"Créer un nouveau succès\",\n      new_achievement_title_login: \"Connectez vous pour créer un nouveau succès\",\n      new_poll_title: \"Créer un nouveau sondage\",\n      new_poll_title_login: \"Connectez vous pour créer un nouveau sondage\",\n      article_search_title: \"Rechercher dans les articles\",\n      thang_search_title: \"Rechercher dans les types de Thang\",\n      level_search_title: \"Rechercher dans les niveaux\",\n      achievement_search_title: \"Rechercher des succès\",\n      poll_search_title: \"Recherche de sondages\",\n      read_only_warning2: \"Note: vous ne pouvez sauvegarder aucune édition, car vous n'êtes pas identifié.\",\n      no_achievements: \"Aucun succès n'a encore été ajouté à ce niveau.\",\n      achievement_query_misc: \"Réalisations clés en provenance de miscellanea\",\n      achievement_query_goals: \"Succés important hors des objectifs de niveau\",\n      level_completion: \"Niveau d'achèvement\",\n      pop_i18n: \"Renseigner I18N\",\n      tasks: \"Tâches\",\n      clear_storage: \"Vider vos changements locaux\",\n      add_system_title: \"Ajouter des sysèmes au niveau\",\n      done_adding: \"Fait Ajouter\"\n    },\n    article: {\n      edit_btn_preview: \"Prévisualiser\",\n      edit_article_title: \"Éditer l'article\"\n    },\n    polls: {\n      priority: \"Priorité\"\n    },\n    contribute: {\n      page_title: \"Contribution\",\n      intro_blurb: \"CodeCombat est 100% open source ! Des centaines de joueurs dévoués nous ont aidé à construire le jeu tel qu'il est aujourd'hui. Rejoignez-nous et écrivez le prochain chapitre dans la quête de CodeCombat d'enseigner au monde à coder !\",\n      alert_account_message_intro: \"Et tiens !\",\n      alert_account_message: \"Pour souscrire aux e-mails, vous devez être connecté\",\n      archmage_introduction: \"L'une des meilleures parties de la création d'un jeu est qu'il regroupe tant de choses différentes. Graphismes, sons, réseau en temps réel, réseaux sociaux, et bien sûr bien d'autres aspects de la programmation, de la gestion bas niveau de base de données, et de l'administration de serveur à l'élaboration d'interfaces utilisateur. Il y a tant à faire, et si vous êtes un programmeur expérimenté avec une aspiration à vraiment plonger dans le fond de CodeCombat, cette classe est faite pour vous. Nous aimerions avoir votre aide pour le meilleur jeu de développement de tous les temps.\",\n      class_attributes: \"Attributs de classe\",\n      archmage_attribute_1_pref: \"Connaissance en \",\n      archmage_attribute_1_suf: \", ou le désir d'apprendre. La plupart de notre code est écrit avec ce langage. Si vous êtes fan de Ruby ou Python, vous vous sentirez chez vous. C'est du JavaScript, mais avec une syntaxe plus sympathique.\",\n      archmage_attribute_2: \"De l'expérience en développement et en initiatives personnelles. Nous vous aiderons à vous orienter, mais nous ne pouvons pas passer plus de temps à vous entraîner.\",\n      how_to_join: \"Comment nous rejoindre\",\n      join_desc_1: \"N'importe qui peut aider ! Vous avez seulement besoin de regarder \",\n      join_desc_2: \"pour commencer, et cochez la case ci-dessous pour vous marquer comme un courageux archimage et obtenir les dernières nouvelles par e-mail. Envie de discuter de ce qu'il y a à faire ou de comment être plus impliqué ? \",\n      join_desc_3: \", ou trouvez-nous dans nos \",\n      join_desc_4: \"et nous partirons de là !\",\n      join_url_email: \"Contactez-nous\",\n      join_url_slack: \"Slack chaîne publique\",\n      archmage_subscribe_desc: \"Recevoir un e-mail sur les nouvelles possibilités de développement et des annonces.\",\n      artisan_introduction_pref: \"Nous devons créer des niveaux additionnels ! Les gens veulent plus de contenu, et nous ne pouvons pas tous les créer nous-même. Maintenant votre station de travail est au niveau un ; notre éditeur de niveaux est à peine utilisable même par ses créateurs, donc méfiez-vous. Si vous avez des idées sur la boucle for de\",\n      artisan_introduction_suf: \", cette classe est faite pour vous.\",\n      artisan_attribute_1: \"Une expérience dans la création de contenu comme celui-ci serait un plus, comme utiliser l'éditeur de niveaux de Blizzard. Mais ce n'est pas nécessaire !\",\n      artisan_attribute_2: \"Vous aspirez à faire beaucoup de tests et d'itérations. Pour faire de bons niveaux, vous aurez besoin de les proposer aux autres et les regarder les jouer, et être prêt à trouver un grand nombre de choses à corriger.\",\n      artisan_attribute_3: \"Pour l'heure, endurance en binôme avec un Aventurier. Notre éditeur de niveaux est vraiment préliminaire et frustrant à l'utilisation. Vous êtes prévenus !\",\n      artisan_join_desc: \"Utilisez le créateur de niveaux pour à peu près ces étapes :\",\n      artisan_join_step1: \"Lire la documentation.\",\n      artisan_join_step2: \"Crééz un nouveau niveau et explorez les niveaux existants.\",\n      artisan_join_step3: \"Retrouvez-nous dans notre conversation Slack pour obtenir de l'aide.\",\n      artisan_join_step4: \"Postez vos niveaux dans le forum pour avoir des retours.\",\n      artisan_subscribe_desc: \"Recevoir un e-mail sur les annonces et mises à jour de l'éditeur de niveaux.\",\n      adventurer_introduction: \"Soyons clair à propos de votre rôle : vous êtes le tank. Vous allez subir beaucoup de dégâts. Nous avons besoin de gens pour essayer les nouveaux niveaux et aider à identifier comment améliorer les choses. La douleur sera énorme; faire de bons jeux est une longue tâche et personne n'y arrive du premier coup. Si vous pouvez résister et avez un gros score de constitution, alors cette classe est faite pour vous.\",\n      adventurer_attribute_1: \"Une soif d'apprendre. Vous voulez apprendre à développer et nous voulons vous apprendre. Vous allez toutefois faire la plupart de l'apprentissage.\",\n      adventurer_attribute_2: \"Charismatique. Soyez doux mais exprimez-vous sur ce qui a besoin d'être amélioré, et faites des propositions sur comment l'améliorer.\",\n      adventurer_join_pref: \"Soit faire équipe avec (ou recruter!) un artisan et travailler avec lui, ou cocher la case ci-dessous pour recevoir un e-mail quand il y aura de nouveaux niveaux à tester. Nous parlons aussi des niveaux à réviser sur notre réseau\",\n      adventurer_forum_url: \"notre forum\",\n      adventurer_join_suf: \"si vous préférez être avertis ainsi, inscrivez-vous ici !\",\n      adventurer_subscribe_desc: \"Recevoir un e-mail lorsqu'il y a de nouveaux niveaux à tester.\",\n      scribe_introduction_pref: \"CodeCombat n'est pas seulement un ensemble de niveaux. Il contiendra aussi des ressources pour la connaissance, un wiki des concepts de programmation que les niveaux pourront illustrer. Dans ce but, chaque Artisan pourra, au lieu d'avoir à décrire en détail ce qu'est un opérateur de comparaison, seulement lier son niveau à l'article qui le décrit et qui a été écrit pour aider les joueurs. Quelque chose dans le sens de ce que le \",\n      scribe_introduction_url_mozilla: \"Mozilla Developer Network\",\n      scribe_introduction_suf: \" a développé. Si votre définition de l'amusement passe par le format Markdown, alors cette classe est pour vous.\",\n      scribe_attribute_1: \"Les compétences rédactionnelles sont quasiment la seule chose dont vous aurez besoin. Pas seulement la grammaire et l'orthographe, mais être également capable de lier des idées ensembles.\",\n      contact_us_url: \"Contactez-nous\",\n      scribe_join_description: \"parlez-nous un peu de vous, de votre expérience en programmation et de quels sujets vous souhaitez traiter. Nous partirons de là !\",\n      scribe_subscribe_desc: \"Recevoir un e-mail sur les annonces d'écriture d'article.\",\n      diplomat_introduction_pref: \"Si nous avons appris quelque chose du \",\n      diplomat_launch_url: \"lancement en octobre\",\n      diplomat_introduction_suf: \"c'est qu'il y a un intérêt considérable pour CodeCombat dans d'autres pays, particulièrement au Brésil ! Nous créons une équipe de traducteurs pour changer une liste de mots en une autre pour que CodeCombat soit le plus accessible possible à travers le monde. Si vous souhaitez avoir un aperçu des prochains contenus et avoir les niveaux dans votre langue le plus tôt possible, alors cette classe est faite pour vous.\",\n      diplomat_attribute_1: \"Des facilités en anglais et dans la langue que vous souhaitez traduire. Pour transmettre des idées complexes, il est important d'avoir une solide compréhension des deux !\",\n      diplomat_i18n_page_prefix: \"Vous pouvez commencer à traduire nos niveaux en allant sur notre \",\n      diplomat_i18n_page: \"page de traduction\",\n      diplomat_i18n_page_suffix: \", ou notre interface et le site Web sur GitHub.\",\n      diplomat_join_pref_github: \"Trouvez le fichier de langue souhaité \",\n      diplomat_github_url: \"sur GitHub\",\n      diplomat_join_suf_github: \", modifiez en ligne, et soumettez des requêtes. Cochez aussi cette case ci-dessous pour vous tenir à jour sur les nouveaux développements d'internationalisation !\",\n      diplomat_subscribe_desc: \"Recevoir un e-mail sur le développement i18n et les niveaux à traduire.\",\n      ambassador_introduction: \"C'est la communauté que nous construisons, et vous en êtes les connexions. Nous avons des discussions via le chat Olark, e-mails et les réseaux sociaux avec plusieurs personnes, et l'aide vient à la fois du jeu lui-même et grâce à lui. Si vous voulez aider les gens, prendre part à l'aventure et vous amuser, avec un bon feeling de CodeCombat et ce vers quoi nous allons, alors cette classe est faite pour vous.\",\n      ambassador_attribute_1: \"Compétences en communication. Être capable d'identifier les problèmes que les joueurs ont et les aider à les résoudre. Mais aussi nous tenir informés de ce que les joueurs disent, ce qu'ils aiment et n'aiment pas et d'autres choses de ce genre !\",\n      ambassador_join_desc: \"parlez-nous un peu de vous, de ce que vous avez fait et ce qui vous aimeriez faire. Nous partirons de ça !\",\n      ambassador_join_note_strong: \"Note\",\n      ambassador_join_note_desc: \"Une de nos priorités est de développer un jeu multijoueur où les joueurs qui ont du mal à réussir un niveau peuvent demander de l'aide à un joueur de plus haut niveau. Ce sera un bon moyen pour que les ambassadeurs fassent leur travail. Nous vous garderons en ligne !\",\n      ambassador_subscribe_desc: \"Recevoir un e-mail sur les mises à jour de l'aide et les développements multijoueur.\",\n      changes_auto_save: \"Les changements sont sauvegardés automatiquement quand vous changez l'état des cases à cocher.\",\n      diligent_scribes: \"Nos Scribes assidus :\",\n      powerful_archmages: \"Nos puissants Archimages :\",\n      creative_artisans: \"Nos Artisans créatifs :\",\n      brave_adventurers: \"Nos braves Aventuriers :\",\n      translating_diplomats: \"Nos Diplomates traducteurs :\",\n      helpful_ambassadors: \"Nos serviables Ambassadeurs :\"\n    },\n    ladder: {\n      my_matches: \"Mes matchs\",\n      simulate: \"Simuler\",\n      simulation_explanation: \"En simulant une partie, tu peux classer ton rang plus rapidement !\",\n      simulate_games: \"Simuler une partie !\",\n      games_simulated_by: \"Parties que vous avez simulées :\",\n      games_simulated_for: \"Parties simulées pour vous :\",\n      games_in_queue: \"Parties actuellement en attente :\",\n      games_simulated: \"Parties simulées\",\n      games_played: \"Parties jouées\",\n      ratio: \"Moyenne\",\n      leaderboard: \"Classement\",\n      battle_as: \"Combattre comme \",\n      summary_your: \"Vos \",\n      summary_matches: \"Matchs - \",\n      summary_wins: \" Victoires, \",\n      summary_losses: \" Défaites\",\n      rank_no_code: \"Nouveau code à classer\",\n      rank_my_game: \"Classer ma partie !\",\n      rank_submitting: \"Soumission en cours...\",\n      rank_submitted: \"Soumis pour le classement\",\n      rank_failed: \"Erreur lors du classement\",\n      rank_being_ranked: \"Partie en cours de classement\",\n      rank_last_submitted: \"Envoyé \",\n      help_simulate: \"De l'aide pour simuler vos parties\",\n      code_being_simulated: \"Votre nouveau code est en cours de simulation par les autres joueurs pour le classement. Cela va se rafraîchir lorsque d'autres matchs auront lieu.\",\n      no_ranked_matches_pre: \"Pas de match classé pour l'équipe \",\n      no_ranked_matches_post: \"! Affronte d'autres compétiteurs et reviens ici pour classer ta partie.\",\n      choose_opponent: \"Choisir un Adversaire\",\n      select_your_language: \"Selectionnez votre langage !\",\n      tutorial_play: \"Jouer au tutoriel\",\n      tutorial_recommended: \"Recommandé si tu n'as jamais joué avant\",\n      tutorial_skip: \"Passer le tutoriel\",\n      tutorial_not_sure: \"Pas sûr de ce qu'il se passe ?\",\n      tutorial_play_first: \"Jouer au tutoriel d'abord.\",\n      simple_ai: \"IA simple\",\n      warmup: \"Échauffement\",\n      friends_playing: \"Amis en train de jouer\",\n      log_in_for_friends: \"Connectez-vous pour jouer avec vos amis !\",\n      social_connect_blurb: \"Connectez-vous pour jouer contre vos amis !\",\n      invite_friends_to_battle: \"Invitez vos amis à rejoindre la bataille !\",\n      fight: \"Combattez !\",\n      watch_victory: \"Regardez votre victoire\",\n      defeat_the: \"Vaincre le\",\n      watch_battle: \"Regarder le combat\",\n      tournament_started: \", a démarré\",\n      tournament_ends: \"Fin du tournoi\",\n      tournament_ended: \"Tournoi terminé\",\n      tournament_rules: \"Règles du tournoi\",\n      tournament_blurb: \"Écrire du code, collecter de l'or, construire des armées, écraser les ennemis, gagner des prix, et mettre à jour votre carrière dans notre tournoi $ 40,000 Greed! Découvrez les détails\",\n      tournament_blurb_criss_cross: \"Gagnez des offres, construisez des chemins, déjouez les adversaires, emparez-vous des gemmes, et améliorez votre carrière dans notre tournoi Criss-Cross! Découvrez les détails\",\n      tournament_blurb_zero_sum: \"Libérez votre créativité en programmation dans l'accumulation d'or et de tactiques de combat dans ce combat épique entre le sorcier rouge et bleu. Le tournoi a commencé vendredi le 27 mars et se déroulera jusqu'à lundi le 6 avril à 5PM PDT. Battez-vous pour le plaisir et l'honneur! Aller voir les détails.\",\n      tournament_blurb_blog: \"Sur notre blog\",\n      rules: \"Règles\",\n      winners: \"Gagnants\",\n      league: \"Ligue\",\n      red_ai: \"Rouge IA\",\n      blue_ai: \"Bleue IA\",\n      wins: \"Victoires\",\n      humans: \"Rouge\",\n      ogres: \"Bleue\"\n    },\n    user: {\n      stats: \"Stats\",\n      singleplayer_title: \"Niveaux solo\",\n      multiplayer_title: \"Niveaux multijoueurs\",\n      achievements_title: \"Succès\",\n      last_played: \"Dernier niveau joué\",\n      status: \"Statut\",\n      status_completed: \"Terminé\",\n      status_unfinished: \"Non terminé\",\n      no_singleplayer: \"Aucune partie jouée pour le moment\",\n      no_multiplayer: \"Aucune partie multijoueur pour le moment\",\n      no_achievements: \"Aucun succès gagné pour le moment.\",\n      favorite_prefix: \"Langage favori : \",\n      favorite_postfix: \".\",\n      not_member_of_clans: \"Ne fais partie d'aucun clan pour l'instant.\"\n    },\n    achievements: {\n      last_earned: \"Dernièrement gagné\",\n      amount_achieved: \"Quantité\",\n      achievement: \"Succès\",\n      current_xp_prefix: \"\",\n      current_xp_postfix: \" au total\",\n      new_xp_prefix: \"\",\n      new_xp_postfix: \" gagné\",\n      left_xp_prefix: \"\",\n      left_xp_infix: \" jusqu'au niveau \",\n      left_xp_postfix: \"\"\n    },\n    account: {\n      payments: \"Paiements\",\n      prepaid_codes: \"Codes prépayés\",\n      purchased: \"Acheté\",\n      subscription: \"Souscrit\",\n      invoices: \"Factures\",\n      service_apple: \"Apple\",\n      service_web: \"Web\",\n      paid_on: \"Payé\",\n      service: \"Service\",\n      price: \"Prix\",\n      gems: \"Gemmes\",\n      active: \"Actif\",\n      subscribed: \"Inscrit\",\n      unsubscribed: \"Désincrit\",\n      active_until: \"Actif jusqu'à\",\n      cost: \"Coût\",\n      next_payment: \"Prochain paiement\",\n      card: \"Carte\",\n      status_unsubscribed_active: \"Vous n'êtes pas inscrit et ne serez pas facturé, mais votre compte est toujours actif.\",\n      status_unsubscribed: \"Obtenez l'accès à de nouveaux niveaux, héros, objets et gemmes en bonus avec une inscription à CodeCombat !\",\n      resend_email: \"Ré-envoyer l'email\"\n    },\n    account_invoices: {\n      amount: \"Montant (Dollars US)\",\n      declined: \"Votre carte a été refusée\",\n      invalid_amount: \"Entrez un montant en dollars US.\",\n      not_logged_in: \"Connectez-vous ou créez un compte pour accéder aux factures.\",\n      pay: \"Paiement de facture\",\n      purchasing: \"Achat...\",\n      retrying: \"Erreur interne, réessayez\",\n      success: \"Paiement accepté, merci !\"\n    },\n    account_prepaid: {\n      purchase_code: \"Acheter un code d'abonnement\",\n      purchase_code1: \"Les codes d'abonnement peuvent seulement être racheter pour ajouter des comptes prenium à un ou plusieurs comptes de CodeCombat\",\n      users: \"Utilisateurs\",\n      months: \"Mois\",\n      purchase_total: \"Total\",\n      your_codes: \"Vos codes\",\n      quantity: \"Quantité\",\n      no_codes: \"Pas de code soumis\",\n      you_can1: \"Vous pouvez\",\n      you_can2: \"achetez un code pré-payé\",\n      you_can3: \"qui pourra être appliqué à votre compte ou donné à un autre.\"\n    },\n    loading_error: {\n      could_not_load: \"Erreur de chargement du serveur\",\n      connection_failure: \"La connexion a échoué.\",\n      unauthorized: \"Vous devez être identifié pour faire cela. Avez-vous désactivé les cookies ?\",\n      forbidden: \"Vous n'avez pas la permission.\",\n      not_found: \"Introuvable.\",\n      not_allowed: \"Méthode non autorisée.\",\n      timeout: \"Délai de connexion au serveur écoulé.\",\n      conflict: \"Conflit de ressources.\",\n      bad_input: \"Données incorrectes .\",\n      server_error: \"Erreur serveur.\",\n      unknown: \"Erreur inconnue\",\n      error: \"ERREUR\"\n    },\n    resources: {\n      level: \"Niveau\",\n      patch: \"Patch\",\n      patches: \"Patchs\",\n      system: \"Système\",\n      systems: \"Systèmes\",\n      component: \"Composant\",\n      components: \"Composants\",\n      hero: \"Héros\",\n      campaigns: \"Campagnes\"\n    },\n    concepts: {\n      advanced_css_rules: \"Règles CSS avancées\",\n      advanced_css_selectors: \"Sélecteurs CSS avancés\",\n      advanced_html_attributes: \"Attributs HTML avancés\",\n      advanced_html_tags: \"Balises HTML avancées\",\n      \"arguments\": \"Paramètres\",\n      arithmetic: \"Arithmétique\",\n      array_2d: \"Tableaux 2D\",\n      array_index: \"Indexage de tableau\",\n      array_literals: \"Tableaux littéraux\",\n      array_searching: \"Recherche de tableau\",\n      array_sorting: \"Ordonnance de tableau\",\n      arrays: \"Tableaux\",\n      basic_css_rules: \"Règles CSS basiques\",\n      basic_css_selectors: \"Sélecteurs CSS basiques\",\n      basic_html_attributes: \"Attributs HTML basiques\",\n      basic_html_tags: \"Balises HTML basiques\",\n      basic_syntax: \"Syntaxe basique\",\n      binary: \"Binaire\",\n      boolean_and: \"Opérateur booléen ET\",\n      boolean_equality: \"Opérateur booléen EGAL\",\n      boolean_greater_less: \"Opérateur booléen PLUS GRAND/PLUS PETIT\",\n      boolean_not: \"Opérateur booléen NON\",\n      boolean_or: \"Opérateur booléen OU\",\n      bootstrap: \"Bootstrap\",\n      break_statements: \"Déclarations de sortie\",\n      classes: \"Classes\",\n      continue_statements: \"Instructions Continuer\",\n      dom_events: \"Événements du DOM\",\n      for_loops: \"Boucles Pour\",\n      functions: \"Fonctions\",\n      game_ai: \"IA du jeu\",\n      game_goals: \"Objectifs du jeu\",\n      game_spawn: \"Point de départ du jeu\",\n      graphics: \"Graphiques\",\n      graphs: \"Graphes\",\n      heaps: \"Tas\",\n      if_statements: \"Déclarations conditionnelles Si\",\n      intermediate_css_rules: \"Règles CSS intermédiaires\",\n      intermediate_css_selectors: \"Sélecteurs CSS intermédiaires\",\n      intermediate_html_attributes: \"Attributs HTML intermédiaires\",\n      intermediate_html_tags: \"Balises HTML intermédiaires\",\n      jquery: \"jQuery\",\n      jquery_animations: \"Animations jQuery\",\n      jquery_filtering: \"jQuery Filtrage des éléments\",\n      jquery_selectors: \"Sélecteurs jQuery\",\n      math_geometry: \"Géométrie\",\n      math_operations: \"Opérations mathématiques\",\n      math_trigonometry: \"Trigonométrie\",\n      object_literals: \"Objets littéraux\",\n      parameters: \"Paramètres\",\n      recursion: \"Récursivité\",\n      strings: \"Chaînes de caractères\",\n      variables: \"Variables\",\n      vectors: \"Vecteurs\",\n      while_condition_loops: \"Boucles tant que avec les conditions\",\n      while_loops_simple: \"Boucles tant que\",\n      while_loops_nested: \"Boucles tant que imbriquées\",\n      xy_coordinates: \"Coordonnées Cartésiennes\",\n      advanced_strings: \"Chaînes de caractères avancés\",\n      algorithms: \"Algorithmes\",\n      boolean_logic: \"Logique Booléenne\",\n      basic_html: \"HTML basique\",\n      basic_css: \"CSS basique\",\n      intermediate_html: \"HTML intermédiaire\",\n      intermediate_css: \"CSS intermédiaire\",\n      advanced_html: \"HTML avancé\",\n      advanced_css: \"CSS avancé\",\n      input_handling: \"Manipulation des entrées\",\n      while_loops: \"Boucles tant que\",\n      basic_javascript: \"JavaScript basique\"\n    },\n    delta: {\n      added: \"Ajouté\",\n      modified: \"Modifié\",\n      not_modified: \"Non modifié\",\n      deleted: \"Supprimé\",\n      moved_index: \"Index changé\",\n      text_diff: \"Différence de texte\",\n      merge_conflict_with: \"Fusionner les conflits avec\",\n      no_changes: \"Aucuns changements\"\n    },\n    legal: {\n      page_title: \"Mentions légales\",\n      opensource_intro: \"CodeCombat est complètement gratuit et open source.\",\n      opensource_description_prefix: \"Regardez \",\n      github_url: \"notre GitHub\",\n      opensource_description_center: \"et aidez nous si vous voulez ! CodeCombat est construit sur plusieurs projets open source, et nous les aimons. Regardez \",\n      archmage_wiki_url: \"notre wiki des Archimages\",\n      opensource_description_suffix: \"pour trouver la liste des logiciels qui rendent ce jeu possible.\",\n      practices_title: \"Bonnes pratiques\",\n      practices_description: \"Ce sont les promesses que nous vous faisons à vous, les joueurs, en jargon un peu juridique.\",\n      privacy_title: \"Vie privée\",\n      privacy_description: \"Nous ne vendons aucune de vos informations personnelles.\",\n      security_title: \"Sécurité\",\n      security_description: \"Nous faisons tout notre possible pour conserver la confidentialité de vos informations personnelles. En tant que projet open source, notre site est ouvert à tous ceux qui souhaitent examiner et améliorer nos systèmes de sécurité.\",\n      email_title: \"E-mail\",\n      email_description_prefix: \"Nous ne vous innonderons pas d'e-mail. Grâce à\",\n      email_settings_url: \"vos paramètres d'e-mail \",\n      email_description_suffix: \"ou avec des liens disponibles dans nos e-mails, vous pouvez changer vos préférences ou vous désinscrire à tout moment.\",\n      cost_title: \"Coût\",\n      copyrights_title: \"Copyrights et Licences\",\n      contributor_title: \"Contributor License Agreement\",\n      contributor_description_prefix: \"Toute contribution, sur le site et sur le répertoire GitHub, est sujette à nos\",\n      cla_url: \"CLA\",\n      contributor_description_suffix: \"auxquelles vous devez vous soumettre avant de contribuer.\",\n      code_title: \"Code - MIT\",\n      code_description_prefix: \"Tout code siglé CodeCombat ou hébergé sur codecombat.com, sur le répertoire GitHub ou dans la base de données de codecombat.com, est sous la licence\",\n      mit_license_url: \"MIT\",\n      code_description_suffix: \"Cela inclut le code dans Systèmes et Composants qui est rendu disponible par CodeCombat dans le but de créer des niveaux.\",\n      art_title: \"Art/Musique - Creative Commons \",\n      art_description_prefix: \"Tout le contenu commun est sous licence\",\n      cc_license_url: \"Creative Commons Attribution 4.0 International\",\n      art_description_suffix: \"Le contenu commun est tout ce qui est rendu disponible par CodeCombat afin de créer des niveaux. Cela inclut :\",\n      art_music: \"La musique\",\n      art_sound: \"Le son\",\n      art_artwork: \"Les artworks\",\n      art_sprites: \"Les sprites\",\n      art_other: \"Tout le reste du contenu non-code qui est rendu accessible lors de la création de niveaux.\",\n      art_access: \"Pour l'instant il n'y a aucun système universel et facile pour rassembler ces ressources. En général, accédez-y par les URL comme le fait le site, contactez-nous pour de l'aide, ou aidez-nous à agrandir le site pour rendre ces ressources plus facilement accessibles.\",\n      art_paragraph_1: \"Pour l'attribution, s'il vous plaît, nommez et référencez codecombat.com près de la source utilisée ou dans un endroit approprié. Par exemple:\",\n      use_list_1: \"Si utilisé dans un film ou un autre jeu, incluez codecombat.com dans le générique.\",\n      use_list_2: \"Si utilisé sur un site web, incluez un lien près de l'utilisation, par exemple sous une image, ou sur une page d'attribution générale où vous pourrez aussi mentionner les autres travaux en Creative Commons et les logiciels open source utilisés sur votre site. Quelque chose qui fait clairement référence à CodeCombat, comme un article de blog mentionnant CodeCombat, n'a pas besoin d'attribution séparée.\",\n      art_paragraph_2: \"Si le contenu utilisé n'est pas créé par CodeCombat mais par un autre utilisateur de codecombat.com, attribuez-le à cet utilisateur, et suivez les recommandations fournies dans la ressource de la description s'il y en a.\",\n      rights_title: \"Droits réservés\",\n      rights_desc: \"Tous les droits sont réservés pour les niveaux eux-mêmes. Cela inclut\",\n      rights_scripts: \"Les scripts\",\n      rights_unit: \"La configuration unitaire\",\n      rights_writings: \"L'écriture\",\n      rights_media: \"Les médias (sons, musiques) et tous les autres contenus créatifs créés spécialement pour ce niveau et non rendus généralement accessibles en créant des niveaux.\",\n      rights_clarification: \"Pour clarifier, tout ce qui est rendu accessible dans l'éditeur de niveaux dans le but de créer des niveaux est sous licence CC, tandis que le contenu créé avec l'éditeur de niveaux ou uploadé dans le but de créer un niveau ne l'est pas.\",\n      nutshell_title: \"En un mot\",\n      nutshell_description: \"Chaque ressource que nous fournissons dans l'éditeur de niveau est libre d'utilisation pour créer des niveaux. Mais nous nous réservons le droit de restreindre la distribution des niveaux créés (qui sont créés sur codecombat.com) ils peuvent donc devenir payants dans le futur, si c'est ce qui doit arriver.\",\n      canonical: \"La version de ce document est la version définitive et canonique. En cas d'irrégularité dans les traductions, le document anglais fait foi.\",\n      third_party_title: \"Services tiers\",\n      third_party_description: \"CodeCombat utilise les services tiers suivants, entre autres :\"\n    },\n    ladder_prizes: {\n      title: \"Prix du tournoi\",\n      blurb_1: \"Ces prix seront décernés à\",\n      blurb_2: \"Régles du tournoi\",\n      blurb_3: \"aux meilleurs joueurs humains et ogre.\",\n      blurb_4: \"Deux équipes, les prix doubles !\",\n      blurb_5: \"(Il y aura deux gagnants en première place, deux gagnants en deuxième place, etc.)\",\n      rank: \"Rang\",\n      prizes: \"Prix\",\n      total_value: \"Valeur totale\",\n      in_cash: \"en espèces\",\n      custom_wizard: \"Magicien CodeCombat personnalisé\",\n      custom_avatar: \"Avatar CodeCombat personnalisé\",\n      credits: \"Crédits\",\n      one_month_coupon: \"coupon: choisir entre Rails ou HTML\",\n      one_month_discount: \"30% de réduction: choisir entre Rails ou HTML\",\n      license: \"Licence\",\n      oreilly: \"ebook de votre choix\"\n    },\n    calendar: {\n      year: \"Année\",\n      day: \"Jour\",\n      month: \"Mois\",\n      january: \"Janvier\",\n      february: \"Février\",\n      march: \"Mars\",\n      april: \"Avril\",\n      may: \"Mai\",\n      june: \"Juin\",\n      july: \"Juillet\",\n      august: \"Août\",\n      september: \"Septembre\",\n      october: \"Octobre\",\n      november: \"Novembre\",\n      december: \"Décembre\"\n    }\n  }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///231\n");

/***/ })

});