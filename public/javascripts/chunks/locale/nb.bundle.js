/*! hash:ae6a15474fa7d9a1f9f8, chunkhash:2f282fd2b384ea4cbee9, name:locale/nb, filebase:nb.bundle.js, query:, file:javascripts/chunks/locale/nb.bundle.js */
webpackJsonp([37],{

/***/ 248:
/***/ (function(module, exports) {

eval("module.exports = {\n  nativeDescription: \"Norsk Bokmål\",\n  englishDescription: \"Norwegian (Bokmål)\",\n  translation: {\n    new_home: {\n      classroom_edition: \"Klasseromsutgave:\",\n      learn_to_code: \"Lær å kode:\",\n      play_now: \"Spill nå\",\n      im_a_teacher: \"Jeg er en lærer\",\n      im_a_student: \"Jeg er en student\",\n      learn_more: \"Lær mer\",\n      top_screenshots_hint: \"Eveler skriver kode og ser endringene deres i santid\",\n      designed_with: \"Designet for lærere\",\n      real_code: \"Ekte kode\",\n      from_the_first_level: \"fra første level\",\n      getting_students: \"Det er viktig å få elevene til å bruke ekte kode tidlig for å lære programmeringssyntax og god struktur.\",\n      accessible_to: \"Tilgjengelig for\",\n      everyone: \"alle\",\n      forgot_learning: \"Jeg tror de glemte at de faktisk lærte noe.\",\n      why_games: \"Hvorfor er det viktig å lære gjennom spill?\",\n      games_reward: \"Spill belønner det produktive strevet.\",\n      excel: \"Spill føles givende for elevene\",\n      struggle: \"productivt strev\",\n      kind_of_struggle: \"den typen strev som resulterer i læring som er spennende og \",\n      motivating: \"motiverende\",\n      not_tedious: \"ikke langtekkelig.\",\n      gaming_is_good: \"Studier viser at spill er bra for barns hjerner.\",\n      game_based: \"Når spillbaserte læringssystemer blir\",\n      compared: \"sammenlignet med\",\n      conventional: \"normale metoder, er forskjellen klar: spill er bedre for å hjelpe elever med å konsentrere og huske det de lærer\",\n      ffa: \"Gratis for alle studenter\",\n      coming_soon: \"Kommer snart!\",\n      goto_classes: \"Gå til klassene mine\",\n      view_profile: \"Vis profilen min\",\n      view_progress: \"Vis Framgang\"\n    },\n    nav: {\n      play: \"Spill\",\n      community: \"Fellesskap\",\n      courses: \"Emner\",\n      blog: \"Blogg\",\n      forum: \"Forum\",\n      account: \"Konto\",\n      my_account: \"Min bruker\",\n      profile: \"Profil\",\n      home: \"Hjem\",\n      contribute: \"Bidra\",\n      legal: \"Juridisk\",\n      about: \"Om\",\n      contact: \"Kontakt\",\n      twitter_follow: \"Følg\",\n      careers: \"Karrierer\",\n      facebook: \"Facebook\",\n      twitter: \"Twitter\",\n      schools: \"Skoler\",\n      get_involved: \"Bli involvert\"\n    },\n    modal: {\n      close: \"Lukk\",\n      okay: \"OK\"\n    },\n    not_found: {\n      page_not_found: \"Finner ikke siden\"\n    },\n    diplomat_suggestion: {\n      title: \"Hjelp til å oversette CodeCombat!\",\n      sub_heading: \"Vi trenger dine språkkunnskaper.\",\n      pitch_body: \"Vi utvikler CodeCombat på engelsk, men vi har allerede spillere over hele verden. Mange av dem vil spille på norsk, men snakker ikke engelsk, så hvis du kan snakke begge språk, vennligst vurder å meld deg på som Diplomat og hjelp å oversette både CodeCombat websiden og alle brettene til norsk.\",\n      missing_translations: \"Inntil vi har oversatt alt til norsk vil du se engelsk der hvor norsk ikke er tilgjengelig.\",\n      learn_more: \"Lær mer om hvordan det er å være en Diplomat\",\n      subscribe_as_diplomat: \"Meld deg på som Diplomat\"\n    },\n    play: {\n      play_as: \"Spill som\",\n      compete: \"Konkurrer\",\n      spectate: \"Vær tilskuer\",\n      players: \"Spillere\",\n      hours_played: \"Timer spilt\",\n      items: \"Utstyr\",\n      unlock: \"Lås opp\",\n      confirm: \"Bekreft\",\n      owned: \"Eid\",\n      locked: \"Låst\",\n      available: \"Tilgjengelig\",\n      skills_granted: \"Gir Evnene\",\n      heroes: \"Helter\",\n      achievements: \"Prestasjoner\",\n      settings: \"Innstillinger\",\n      next: \"Neste\",\n      change_hero: \"Bytt Helt\",\n      buy_gems: \"Kjøp Juveler\",\n      anonymous: \"Anonym Spiller\",\n      level_difficulty: \"Vanskelighetsgrad: \",\n      awaiting_levels_adventurer_prefix: \"Vi lanserer fem nye nivåer hver uke\",\n      awaiting_levels_adventurer: \"Registrer deg som Eventyrer\",\n      awaiting_levels_adventurer_suffix: \"for å få spille nye nivåer før alle andre.\",\n      adjust_volume: \"Juster lydnivå\",\n      campaign_multiplayer: \"Flerspillerarenaer\",\n      campaign_multiplayer_description: \"... hvor du spiller direkte mot andre spillere.\"\n    },\n    code: {\n      \"if\": \"hvis\",\n      \"else\": \"eller\",\n      elif: \"eller hvis\",\n      \"while\": \"mens\",\n      loop: \"løkke\",\n      \"for\": \"for\",\n      \"break\": \"stopp\",\n      \"continue\": \"fortsett\",\n      \"return\": \"Returner\",\n      \"do\": \"gjør\",\n      end: \"slutt\",\n      \"function\": \"funksjon\",\n      def: \"definer\",\n      \"var\": \"variabel\",\n      self: \"selv\",\n      hero: \"helt\",\n      \"this\": \"dette\",\n      or: \"eller\",\n      \"||\": \"eller\",\n      and: \"og\",\n      \"&&\": \"og\",\n      not: \"ikke\",\n      \"!\": \"ikke\",\n      \"=\": \"tildel\",\n      \"==\": \"er lik\",\n      \"===\": \"er helt lik\",\n      \"!=\": \"er ikke lik\",\n      \"!==\": \"er ikke helt lik\",\n      \">\": \"større enn\",\n      \">=\": \"er større enn eller lik\",\n      \"<\": \"mindre enn\",\n      \"<=\": \"er mindre enn eller lik\",\n      \"*\": \"multiplisert med\",\n      \"/\": \"dividert med\",\n      \"+\": \"pluss\",\n      \"-\": \"minus\",\n      \"+=\": \"legg til og tildel\",\n      \"-=\": \"fjern og tildel\",\n      True: \"Sant\",\n      \"true\": \"sant\",\n      False: \"Galt\",\n      \"false\": \"galt\",\n      undefined: \"udefinert\",\n      \"null\": \"null\",\n      None: \"Ingen\"\n    },\n    share_progress_modal: {\n      blurb: \"Du gjør fantastisk fremgang! Fortell noen hvor mye du har lært gjennom CodeCombat.\",\n      email_invalid: \"E-postadressen er ugyldig.\",\n      form_blurb: \"Skriv ned e-postadressen deres nedenfor, så skal vi vise dem!\",\n      form_label: \"E-postadresse\",\n      placeholder: \"E-postadresse\",\n      title: \"Godt jobbet, lærling\"\n    },\n    login: {\n      sign_up: \"Lag konto\",\n      email_or_username: \"Epost eller brukernavn\",\n      log_in: \"Logg inn\",\n      logging_in: \"Logger inn\",\n      log_out: \"Logg ut\",\n      forgot_password: \"Glemt passord?\",\n      finishing: \"Fullfører\",\n      sign_in_with_facebook: \"Logg på med Facebook\",\n      sign_in_with_gplus: \"Logg på med G+\",\n      signup_switch: \"Vil du lage en konto?\"\n    },\n    signup: {\n      create_student_header: \"Lag elevbruker\",\n      create_teacher_header: \"Lag lærerbruker\",\n      create_individual_header: \"Lag privat bruker\",\n      email_announcements: \"Motta kunngjøringer på epost\",\n      creating: \"Oppretter Konto...\",\n      sign_up: \"Lag konto\",\n      log_in: \"logg inn med passord\",\n      required: \"Du må være logget inn for å gå dit.\",\n      login_switch: \"Har du allerede en konto?\",\n      optional: \"Valgfri\",\n      connected_gplus_header: \"Du har koblet til med Google+!\",\n      connected_facebook_header: \"Du har koblet til med Facebook!\",\n      hey_students: \"Elever, skriv inn klassekoden fra læreren\",\n      birthday: \"Bursdag\",\n      classroom_not_found: \"Det fins ingen klasser med denne klassekoden. Sjekk om du har stavet det riktig eller spør læreren din om hjelp.\",\n      checking: \"Sjekker...\",\n      account_exists: \"Denne emailen er allerede i bruk:\",\n      sign_in: \"Logg inn\",\n      email_good: \"Email ser bra ut!\",\n      name_taken: \"Brukernavnet er allerede tatt! Hva med {{suggestedName}}?\",\n      name_available: \"Brukernavn ledig!\",\n      name_is_email: \"Du kan ikke ha en email som brukernavn\",\n      choose_type: \"Velg en brukertype:\",\n      teacher_type_1: \"Lær bort programmering med CodeCombat!\",\n      teacher_type_2: \"Sett opp en klasse\",\n      teacher_type_3: \"Få tilgang på guider\",\n      teacher_type_4: \"Se fremgang på dine studenter\",\n      signup_as_teacher: \"Registrer deg som lærer\",\n      student_type_1: \"Lær programmering med ett spennende spill!\",\n      student_type_2: \"Spill med klassen!\",\n      student_type_3: \"Konkuranser i arenaer\",\n      student_type_4: \"Velg din helt!\",\n      student_type_5: \"Ha klassekoden klar!\",\n      signup_as_student: \"Registrer deg som elev\",\n      individuals_or_parents: \"Private & Foreldre\",\n      signup_as_individual: \"Registrer deg som privatperson\",\n      enter_class_code: \"Skriv inn din klassekode\",\n      enter_birthdate: \"Fødselsdato:\",\n      parent_use_birthdate: \"Foreldre, bruk deres egen fødselsdato.\",\n      ask_teacher_1: \"Spør læreren din om en klassekode.\",\n      ask_teacher_2: \"Ikke med i en klasse? Lag en \",\n      ask_teacher_3: \"privatbruker\",\n      ask_teacher_4: \" istedenfor.\",\n      about_to_join: \"Du er i ferd med å bli med i:\",\n      enter_parent_email: \"Foreldres epostaddresse:\",\n      parent_email_error: \"Noe gikk galt mens vi sendte emailen. Sjekk addressen og prøv igjen.\",\n      account_created: \"Bruker lagd!\",\n      write_this_down: \"Skriv dette ned:\",\n      start_playing: \"Begynn spillet!\",\n      sso_connected: \"Koblet til med:\",\n      select_your_starting_hero: \"Velg din helt:\",\n      you_can_always_change_your_hero_later: \"Du kan alltids bytte helt senere.\"\n    },\n    recover: {\n      recover_account_title: \"Tilbakestill Passord\",\n      send_password: \"Send nytt passord\",\n      recovery_sent: \"Epost sendt.\"\n    },\n    items: {\n      primary: \"Første\",\n      secondary: \"Andre\",\n      armor: \"Rustning\",\n      accessories: \"Tilbehør\",\n      misc: \"Diverse\",\n      books: \"Bøker\"\n    },\n    common: {\n      back: \"Tilbake\",\n      coming_soon: \"Kommer snart!\",\n      \"continue\": \"Fortsett\",\n      default_code: \"Standard kode\",\n      loading: \"Laster...\",\n      solution: \"Løsning\",\n      saving: \"Lagrer...\",\n      sending: \"Sender...\",\n      send: \"Send\",\n      cancel: \"Avbryt\",\n      save: \"Lagre\",\n      publish: \"Publiser\",\n      create: \"Opprett\",\n      fork: \"Forgrening\",\n      play: \"Spill\",\n      retry: \"Prøv igjen\",\n      actions: \"Handlinger\",\n      info: \"Informasjon\",\n      help: \"Hjelp\",\n      watch: \"Se på\",\n      unwatch: \"Ikke se på\",\n      submit_patch: \"Lever en Patch\",\n      submit_changes: \"Lever Endringer\",\n      save_changes: \"Lagre endringer\",\n      required_field: \"Påkrevet felt\"\n    },\n    general: {\n      and: \"og\",\n      name: \"Navn\",\n      date: \"Dato\",\n      body: \"Kropp\",\n      version: \"Versjon\",\n      pending: \"Avventer\",\n      accepted: \"Akseptert\",\n      rejected: \"Avvist\",\n      withdrawn: \"Trukket tilbake\",\n      accept: \"Godta\",\n      reject: \"Avslå\",\n      withdraw: \"trekke tilbake\",\n      submitter: \"Innsender\",\n      submitted: \"Levert\",\n      commit_msg: \"Commit-melding\",\n      version_history: \"Versjonshistorikk\",\n      version_history_for: \"Versjonshistorikk for: \",\n      select_changes: \"Velg to endringer under for å se forskjellene.\",\n      undo_prefix: \"Angre\",\n      undo_shortcut: \"(Ctrl+Z)\",\n      redo_prefix: \"Gjenta\",\n      redo_shortcut: \"(Ctrl+Shift+Z)\",\n      play_preview: \"Spill av forhåndsvisning av valgt brett\",\n      result: \"Resultat\",\n      results: \"Resultater\",\n      description: \"Beskrivelse\",\n      or: \"eller\",\n      subject: \"Emne\",\n      email: \"Epost\",\n      password: \"Passord\",\n      confirm_password: \"Godta passord\",\n      message: \"Melding\",\n      code: \"Kode\",\n      ladder: \"Stige\",\n      when: \"Når\",\n      opponent: \"Motstander\",\n      rank: \"Plassering\",\n      score: \"Poengsum\",\n      win: \"Seier\",\n      loss: \"Tap\",\n      tie: \"uavgjort\",\n      easy: \"Lett\",\n      medium: \"Middels\",\n      hard: \"Vanskelig\",\n      player: \"Spiller\",\n      player_level: \"Nivå\",\n      warrior: \"Kriger\",\n      ranger: \"Vokter\",\n      wizard: \"Trollmann\",\n      first_name: \"Fornavn\",\n      last_name: \"Etternavn\",\n      last_initial: \"Siste initial\",\n      username: \"Brukernavn\",\n      contact_us: \"Kontakt oss\",\n      close_window: \"Lukk vindu\",\n      learn_more: \"Lær mer\",\n      more: \"Mer\",\n      fewer: \"Mindre\",\n      \"with\": \"Med\"\n    },\n    units: {\n      second: \"sekund\",\n      seconds: \"sekunder\",\n      minute: \"minutt\",\n      minutes: \"minutter\",\n      hour: \"time\",\n      hours: \"timer\",\n      day: \"dag\",\n      days: \"dager\",\n      week: \"uke\",\n      weeks: \"uker\",\n      month: \"måned\",\n      months: \"måneder\",\n      year: \"år\",\n      years: \"år\"\n    },\n    play_level: {\n      level_complete: \"Nivået er ferdig\",\n      done: \"Ferdig\",\n      next_level: \"Neste nivå\",\n      next_game: \"Neste spill\",\n      languages: \"Språk\",\n      programming_language: \"Programmeringsspråk\",\n      show_menu: \"Vis spill meny\",\n      home: \"Hjem\",\n      level: \"Brett\",\n      skip: \"Hopp over\",\n      game_menu: \"Spillmeny\",\n      restart: \"Start på nytt\",\n      goals: \"Mål\",\n      goal: \"Mål\",\n      running: \"Kjører...\",\n      success: \"Suksess!\",\n      incomplete: \"Ufullstendig\",\n      timed_out: \"Tiden er ute\",\n      failing: \"Mislykkes\",\n      reload: \"Tilbakestill\",\n      reload_title: \"Tilbakestille all koden?\",\n      reload_really: \"Er du sikker på at du vil tilbakestille dette brettet til begynnelsen?\",\n      reload_confirm: \"Tilbakestill alt\",\n      victory: \"Seier\",\n      victory_title_prefix: \"\",\n      victory_title_suffix: \" Ferdig\",\n      victory_sign_up: \"Tegn deg på for Oppdateringer\",\n      victory_sign_up_poke: \"Vil du ha siste nytt på epost? Opprett en gratis konto, så vil vi holde deg oppdatert!\",\n      victory_rate_the_level: \"Bedøm nivået: \",\n      victory_return_to_ladder: \"Tilbake til stige\",\n      victory_saving_progress: \"Lagrer framskritt\",\n      victory_go_home: \"Gå Hjem\",\n      victory_review: \"Fortell oss mer!\",\n      victory_review_placeholder: \"Hvordan var nivået?\",\n      victory_hour_of_code_done: \"Er du ferdig?\",\n      victory_hour_of_code_done_yes: \"Ja, jeg er ferdig med min Kodetime!\",\n      victory_experience_gained: \"XP Opparbeidet\",\n      victory_gems_gained: \"Mottatte juveler\",\n      victory_new_item: \"Ny ting\",\n      victory_new_hero: \"Ny helt\",\n      victory_become_a_viking: \"Bli en Viking\",\n      tome_cast_button_run: \"Kjør\",\n      tome_cast_button_running: \"Kjører\",\n      tome_cast_button_ran: \"Kjørte\",\n      tome_submit_button: \"Send inn\",\n      tome_reload_method: \"Tilbakestill denne metoden til den orginale koden\",\n      tome_available_spells: \"Tilgjenglige Trylleformularer\",\n      tome_your_skills: \"Dine Ferdigheter\",\n      hints: \"Hint\",\n      code_saved: \"Kode lagret\",\n      skip_tutorial: \"Hopp over (esc)\",\n      keyboard_shortcuts: \"Hurtigtaster\",\n      loading_start: \"Start Brett\",\n      problem_alert_title: \"Fiks koden din\",\n      time_current: \"Nå:\",\n      time_total: \"Maks:\",\n      time_goto: \"Gå til:\",\n      non_user_code_problem_title: \"Klarer ikke å laste inn Nivået\",\n      infinite_loop_title: \"En uendelig løkke oppdaget\",\n      check_dev_console_link: \"(Instruksjoner)\",\n      infinite_loop_try_again: \"Prøv igjen\",\n      infinite_loop_reset_level: \"Tilbakestill Nivå\",\n      infinite_loop_comment_out: \"Kommenter ut koden min\",\n      tip_toggle_play: \"Ctrl+P er play/pause\",\n      tip_scrub_shortcut: \"Ctrl+[ and Ctrl+] spoler bakover og fremover på tidslinjen.\",\n      tip_guide_exists: \"Sjekk Guiden i spillmenyen på toppen av siden for nyttig informasjon.\",\n      tip_open_source: \"CodeCombat er en 100% åpen kildekode!\",\n      tip_tell_friends: \"Liker du CodeCombat? Fortell vennene dine om oss!\",\n      tip_beta_launch: \"CodeCombat ble lansert i betautgave i oktober 2013.\",\n      tip_think_solution: \"Tenk på løsningen, ikke på problemet.\",\n      tip_theory_practice: \"I teorien er det ikke forskjell på teori og praksis, men i praksis er det. - Yogi Berra\",\n      tip_error_free: \"Det er to måter å skrive feilfrie programmer på; bare den tredje virker. - Alan Perlis\",\n      tip_debugging_program: \"Hvis debugging er prosessen for å fjerne feil, så må programmering være prosessen for å legge dem inn. - Edsger W. Dijkstra\",\n      tip_forums: \"Stikk innom forumene og fortell oss hva du synes!\",\n      tip_baby_coders: \"I fremtiden vil selv babyer være Archmager.\",\n      tip_morale_improves: \"Lastingen vil fortsette til moralen forbedres.\",\n      tip_all_species: \"Vi tror på like muligheter til å lære programmering for alle arter.\",\n      tip_reticulating: \"Fletter sammen ryggraden.\",\n      tip_harry: \"Du er en trollmann, \",\n      tip_great_responsibility: \"Med gode programmeringsegenskaper følger det stort debuggingsansvar.\",\n      tip_munchkin: \"Hvis du ikke spiser grønnsakene dine kommer en munchkin og tar deg når du sover\",\n      tip_binary: \"Det finnes 10 typer mennesker i verden: de som forstår binærtall, og de som ikke gjør det.\",\n      tip_commitment_yoda: \"En programmerer må ha det dypeste engasjement, den mest seriøse sinn. ~ Yoda\",\n      tip_no_try: \"Gjør. Eller ikke gjør. Å forsøke finnes ikke. - Yoda\",\n      tip_patience: \"Tålmodighet du må ha, unge Padawan. - Yoda\",\n      tip_documented_bug: \"En dokumentert feil er ingen feil, det er en funksjon.\",\n      tip_impossible: \"Det virker alltid umulig før det er gjort. - Nelson Mandela\",\n      tip_talk_is_cheap: \"Snakk er billig. Vis meg koden. - Linus Torvalds\",\n      tip_first_language: \"Den mest katastrofale tingen du noen sinne kan lære er ditt første programmeringsspråk. - Alan Kay\",\n      tip_hardware_problem: \"Q: Hvor mange programmerere trengs det for å skifte en lyspære?  A: Ingen, det er et hardware problem.\",\n      tip_hofstadters_law: \"Hofstadters Lov: Ting tar alltid lenger tid enn du tror, selv når du tar Hofstadters Lov med i beregningen.\",\n      tip_premature_optimization: \"For tidlig optimalisering er roten til alt ondt - Donald Knuth\",\n      tip_brute_force: \"Når du er i tvil, bruk brute force - Ken Thompson\",\n      tip_extrapolation: \"Det finnes to typer mennesker: de som kan utlede ufullstendig data...\",\n      tip_superpower: \"Koding er det nærmeste vi kommer superkrefter.\",\n      tip_control_destiny: \"I ekte åpen kildekode, har du rett til å kontrollere din egen skjebne. - Linus Torvalds\",\n      tip_no_code: \"Ingen kode er raskere enn ingen kode.\",\n      tip_code_never_lies: \"Kode lyver aldri, kommentarer gjør det i blandt. — Ron Jeffries\",\n      tip_reusable_software: \"Før programvare kan være gjenbrukbart, må det først være brukbart.\",\n      tip_optimization_operator: \"Hvert språk har en optimaliseringsoperator. I de fleste språk er den operatøren ‘//’\",\n      tip_lines_of_code: \"Å måle programmeringsfremgang ved hjelp av antall linjer kode er som å måle flybyggingsfremgang ved hjelp av vekt. - Bill Gates\",\n      tip_source_code: \"Jeg vil forandre verden, men de vil ikke gi meg kildekoden.\",\n      tip_javascript_java: \"Java er for JavaScript, det bil er for teppe - Chris Heilman\",\n      tip_move_forward: \"Uansett hva du gjør, beveg deg fremover. - Martin Luther King Jr.\",\n      tip_google: \"Har du et problem du ikke kan løse? Google det!\",\n      tip_adding_evil: \"Legger til en klype ondskap!\",\n      tip_hate_computers: \"Folk hater ikke datamaskiner. De hater dårlige programerere - Larry Niven\",\n      tip_open_source_contribute: \"Du kan hjelpe CodeCombat med å bli bedre!\",\n      tip_sharpening_swords: \"Sliper sverdene.\",\n      tip_good_idea: \"Den beste måten å ha en god idè er å ha mange ideer. - Linus Pauling\",\n      tip_mulan: \"Tro du kan, da kan du. - Mulan\"\n    },\n    game_menu: {\n      inventory_tab: \"Utstyr\",\n      save_load_tab: \"Lagre/Laste\",\n      options_tab: \"Innstillinger\",\n      guide_tab: \"Guide\",\n      guide_video_tutorial: \"Videoveiledning\",\n      guide_tips: \"Tips\",\n      multiplayer_tab: \"Flerspiller\",\n      auth_tab: \"Lag konto\",\n      inventory_caption: \"Utstyr helten din\",\n      choose_hero_caption: \"Velg helt og språk\",\n      options_caption: \"Velg innstillinger\",\n      guide_caption: \"Dokumentasjon og tips\",\n      multiplayer_caption: \"Spill med venner\",\n      auth_caption: \"Lagre din fremgang.\"\n    },\n    leaderboard: {\n      view_other_solutions: \"Se andre løsninger\",\n      scores: \"Poeng\",\n      top_players: \"Beste spillere etter\",\n      day: \"I dag\",\n      week: \"Denne uken\",\n      all: \"All tid\",\n      time: \"Tid\",\n      damage_taken: \"Skade tatt\",\n      damage_dealt: \"Skade gitt\",\n      difficulty: \"Vanskelighetsgrad\",\n      gold_collected: \"Gull samlet\"\n    },\n    inventory: {\n      equipped_item: \"I Bruk\",\n      required_purchase_title: \"Krav\",\n      available_item: \"Tilgjengelig\",\n      restricted_title: \"Ikke tilgjengelig\",\n      should_equip: \"(dobbel-klikk for å bruke)\",\n      equipped: \"(i bruk)\",\n      locked: \"(låst)\",\n      restricted: \"(Ikke tilgjengelig på dette brettet)\",\n      equip: \"Bruk\",\n      unequip: \"Ikke bruk\"\n    },\n    buy_gems: {\n      few_gems: \"Noen få juveler\",\n      pile_gems: \"En haug juveler\",\n      chest_gems: \"Kiste med juveler\",\n      purchasing: \"Kjøper...\",\n      declined: \"Kortet ditt ble avvist\",\n      retrying: \"Server-feil, prøver igjen.\",\n      prompt_title: \"Ikke nok juveler\",\n      prompt_body: \"Har du lyst på flere?\",\n      prompt_button: \"Til Butikken\",\n      recovered: \"Tidligere juvelkjøp hentet. Vennligst last siden på nytt\"\n    },\n    subscribe: {\n      comparison_blurb: \"Spiss dine kunnskaper med et CodeCombat abonnement!\",\n      must_be_logged: \"Du må være logget inn først. Vennligst lag en bruker eller logg inn fra menyen ovenfor.\",\n      subscribe_title: \"Abonnér\",\n      unsubscribe: \"Si opp abonnement\",\n      confirm_unsubscribe: \"Bekreft oppsigelse\",\n      never_mind: \"Ikke tenk på det, jeg elsker deg for det\",\n      thank_you_months_prefix: \"Takk for at du støttet oss de siste\",\n      thank_you_months_suffix: \"månedene.\",\n      thank_you: \"Takk for at du støttet CodeCombat.\",\n      sorry_to_see_you_go: \"Leit at du forlater oss! Vennligst gi oss beskjed om hva vi kunne gjort bedre.\",\n      unsubscribe_feedback_placeholder: \"O, hva har vi gjort?\",\n      stripe_description: \"Månedlig abonnement\",\n      subscription_required_to_play: \"Du trenger abonnement for å spille dette nivået.\",\n      unlock_help_videos: \"Abonnér for å låse opp alle videoveiledningene.\"\n    },\n    choose_hero: {\n      choose_hero: \"Velg Din Helt\",\n      programming_language: \"Programmeringsspråk\",\n      programming_language_description: \"Hvilket programmeringsspråk vil du bruke??\",\n      \"default\": \"Standard\",\n      experimental: \"Eksperimentelt\",\n      python_blurb: \"Enkelt, men kraftig. Bra for både nybegynnere og eksperter.\",\n      javascript_blurb: \"Språket som brukes på websider. (Ikke det samme som Java.)\",\n      coffeescript_blurb: \"Hyggeligere JavaScript syntaks.\",\n      lua_blurb: \"Et skriptspråk for spill.\",\n      status: \"Status\",\n      weapons: \"Våpen\",\n      weapons_warrior: \"Sverd - Kort rekkevidde, ingen magi\",\n      weapons_ranger: \"Armbrøst, Gevær - Lang rekkevidde, ingen magi\",\n      weapons_wizard: \"Tryllestav, Tryllestokk - Lang rekkevidde, magi\",\n      attack: \"Angrep\",\n      health: \"Helse\",\n      speed: \"Fart\",\n      regeneration: \"Regenerering\",\n      range: \"Rekkevidde\",\n      blocks: \"Blokkerer\",\n      skills: \"Ferdigheter\",\n      speed_1: \"Beveger seg\",\n      speed_2: \"meter i sekundet.\",\n      available_for_purchase: \"Kan Kjøpes\",\n      level_to_unlock: \"Låses opp på nivå:\",\n      restricted_to_certain_heroes: \"Bare noen helter kan spille dette brettet.\"\n    },\n    skill_docs: {\n      number: \"Nummer\",\n      writable: \"skrivbar\",\n      read_only: \"skrivebeskyttet\",\n      action_name: \"navn\",\n      action_cooldown: \"Tar\",\n      action_specific_cooldown: \"Gjenopplading\",\n      action_damage: \"Skade\",\n      action_range: \"Rekkevidde\",\n      action_radius: \"Radius\",\n      action_duration: \"Varighet\",\n      example: \"Eksempel\",\n      ex: \"f.eks.\",\n      current_value: \"Nåværende verdi\",\n      default_value: \"Standard verdi\",\n      parameters: \"Parametere\",\n      returns: \"Returnerer\",\n      granted_by: \"Gitt av\"\n    },\n    save_load: {\n      granularity_saved_games: \"Lagret\",\n      granularity_change_history: \"Historikk\"\n    },\n    options: {\n      general_options: \"Generelle innstillinger\",\n      volume_label: \"Volum\",\n      music_label: \"Musikk\",\n      music_description: \"Bakgrunnsmusikk på/av.\",\n      editor_config_title: \"Editor Oppsett\",\n      editor_config_livecompletion_label: \"Autofullfør\",\n      editor_config_livecompletion_description: \"Viser forslag til autofullføring av tekst mens du skriver\",\n      editor_config_invisibles_label: \"Vis usynlige tegn\",\n      editor_config_invisibles_description: \"Viser usynlige tegn som mellomrom eller tab.\",\n      editor_config_indentguides_label: \"Vis innrykkslinjer\",\n      editor_config_indentguides_description: \"Viser vertikale linjer for å se antall innrykk bedre.\",\n      editor_config_behaviors_label: \"Smart oppførsel\",\n      editor_config_behaviors_description: \"Autofullfører parenteser, krøllparenteser, hakeparenteser og anførselstegn\"\n    },\n    about: {\n      mission_link: \"Oppdrag\",\n      team_link: \"Lag\",\n      nick_title: \"Programmerer\",\n      matt_title: \"Programmerer\",\n      cat_title: \"Spill Designer\",\n      scott_title: \"Programmerer\",\n      retrostyle_blurb: \"RetroStyle Games\",\n      community_description_2: \"For mer info.\",\n      story_title: \"Vår historie så langt\",\n      story_statistic_1a: \"5,000,000+\",\n      story_statistic_2b: \"200+ land\",\n      story_statistic_3a: \"Tilsammen har de skrevet\",\n      story_statistic_3b: \"1 milliard linjer med kode og det stiger fortsatt\",\n      jobs_custom_title: \"Lag din egen\",\n      screenshots_title: \"Skjermbilder av spillet\",\n      screenshots_hint: \"(trykk for å vise i full størrelse)\",\n      about_codecombat: \"Om CodeCombat\",\n      logo: \"Logo\",\n      screenshots: \"Skjermbilder\",\n      previous: \"Forrige\"\n    },\n    teachers_quote: {\n      parent: \"Forelder\",\n      city: \"By\",\n      state: \"Fylke\",\n      country: \"Land\"\n    },\n    versions: {\n      save_version_title: \"Lagre ny version\",\n      new_major_version: \"Ny hovedversjon\",\n      submitting_patch: \"Sender inn patch...\",\n      cla_prefix: \"For å lagre endringer må du først akseptere vår\",\n      cla_url: \"CLA\",\n      cla_suffix: \".\",\n      cla_agree: \"JEG AKSEPTERER\",\n      owner_approve: \"En eier må godta endringene før de blir synlige.\"\n    },\n    contact: {\n      contact_us: \"Kontakt CodeCombat\",\n      welcome: \"Vi setter pris på å høre fra deg! Bruk dette skjemaet for å sende oss en epost.\",\n      forum_prefix: \"For allment tilgjengelige henvendelser, vennligst prøv \",\n      forum_page: \"forumet vårt\",\n      forum_suffix: \" i stedet.\",\n      faq_prefix: \"Det finnes også en\",\n      faq: \"OSS\",\n      subscribe_prefix: \"Hvis du trenger hjelp med å forstå en level, vennligst\",\n      subscribe: \"kjøp et abonnement på CodeCombat\",\n      subscribe_suffix: \"og vi hjelper deg gjerne med koden din.\",\n      subscriber_support: \"Siden du er en CodeCombat-abonnent, vil din e-post få fortrinn hos kundestøtte.\",\n      screenshot_included: \"Skjermbilde vedlagt.\",\n      where_reply: \"Hvor skal vi sende svaret?\",\n      send: \"Send tilbakemelding\"\n    },\n    account_settings: {\n      title: \"Kontoinnstillinger\",\n      not_logged_in: \"Logg inn eller lag en konto for å endre innstillingene dine.\",\n      me_tab: \"Meg\",\n      picture_tab: \"Bilde\",\n      delete_account_tab: \"Slett brukeren din\",\n      wrong_email: \"Feil Email\",\n      wrong_password: \"Feil Passord\",\n      delete_this_account: \"Slett denne brukeren permanent\",\n      emails_tab: \"Epost\",\n      admin: \"Administrator\",\n      new_password: \"Nytt Passord\",\n      new_password_verify: \"Bekreft passord\",\n      type_in_password: \"Skriv inn passordet.\",\n      email_subscriptions: \"Epost Abonnement\",\n      email_subscriptions_none: \"Ingen Epost Abonnement.\",\n      email_announcements: \"Kunngjøringer\",\n      email_announcements_description: \"Få epost om siste nytt og utvikling fra CodeCombat.\",\n      email_notifications: \"Varsler\",\n      email_notifications_summary: \"Innstillinger for personlige, automatiske epostvarsler relatert til din CodeCombat aktivitet.\",\n      email_any_notes: \"Alle Varsler\",\n      email_any_notes_description: \"Skru av for å stoppe alle aktivitetsvarsler\",\n      email_news: \"Nyheter\",\n      email_recruit_notes: \"Jobbtilbud\",\n      email_recruit_notes_description: \"Hvis du spiller veldig godt kontakter vi deg kanskje angående en (bedre) jobb.\",\n      contributor_emails: \"Epost for bidragsyter-klasser\",\n      contribute_prefix: \"Vi leter etter folk som vil være med på moroa! Sjekk ut \",\n      contribute_page: \"bidragssiden\",\n      contribute_suffix: \" for å finne ut mer.\",\n      email_toggle: \"Alle på/av\",\n      error_saving: \"Lagring Feilet\",\n      saved: \"Endringer Lagret\",\n      password_mismatch: \"Passordene er ikke like.\",\n      password_repeat: \"Vennligst gjenta passordet.\"\n    },\n    keyboard_shortcuts: {\n      keyboard_shortcuts: \"Hurtigtaster\",\n      space: \"Mellomrom\",\n      enter: \"Enter\",\n      press_enter: \"Trykk enter\",\n      escape: \"Escape\",\n      shift: \"Shift\",\n      run_code: \"Kjør koden.\",\n      run_real_time: \"Kjør i sanntid.\",\n      continue_script: \"Fortsett forbi det kjørende skriptet.\",\n      skip_scripts: \"Hopp over alle skript som kan hoppes over.\",\n      toggle_playback: \"Play/Pause.\",\n      scrub_playback: \"Spol tiden frem og tilbake\",\n      single_scrub_playback: \"Spol tiden frem og tilbake, steg for steg\",\n      scrub_execution: \"Spol gjennom gjeldende trylleformular-kjøring.\",\n      toggle_debug: \"Skru på/av feilrettingsvindu\",\n      toggle_grid: \"Skru på/av rutenett\",\n      toggle_pathfinding: \"Skru på/av stifinnervindu\",\n      beautify: \"Gjør koden penere med standard formattering.\",\n      maximize_editor: \"Maksimer/minimer kode editor.\"\n    },\n    community: {\n      main_title: \"CodeCombat Fellesskapet\",\n      introduction: \"Sjekk ut de forskjellige måtene du kan involvere deg på og velg det du synes er gøy. Vi ser frem til å jobbe sammen med deg!\",\n      level_editor_prefix: \"Bruk CodeCombat's\",\n      level_editor_suffix: \"til å lage og redigere brett. Brukere har laget sine egne brett for klassen sin, venner, elever og søsken. Hvis det høres overveldende ut å lage et nytt brett kan du begynne med å kopiere et av våre!\",\n      thang_editor_prefix: \"Vi kaller gjenstander i spillet for 'thang'. Bruk vår\",\n      thang_editor_suffix: \"for å endre utseende og egenskapene til ting i spillet. La en figur kaste prosjektiler, endre retningen på en animasjon, endre helsen til en enhet eller last opp dine egne vektorfigurer.\",\n      article_editor_prefix: \"Funnet en feil i dokumentasjonen? Vil du skrive instruksjoner til noe du har laget selv? Sjekk ut vår\",\n      article_editor_suffix: \"og hjelp CodeCombat spillere til å få mest mulig ut av spillet.\",\n      find_us: \"Finn oss på disse tjenestene\",\n      social_github: \"Se koden vår på GitHub\",\n      social_blog: \"Les CodeCombat bloggen på Sett\",\n      social_discource: \"Diskuter CodeCombat i forumet vårt på Discourse\",\n      social_facebook: \"Lik CodeCombat på Facebook\",\n      social_twitter: \"Følg CodeCombat på Twitter\",\n      social_gplus: \"Følg CodeCombat på Google+\",\n      contribute_to_the_project: \"Bidra på prosjektet\"\n    },\n    clans: {\n      clan: \"Klan\",\n      clans: \"Klaner\",\n      new_name: \"Nytt klan navn\",\n      new_description: \"Ny klanbeskrivelse\",\n      make_private: \"Gjør klanen privat\",\n      create_clan: \"Lag en ny klan\",\n      private_preview: \"Forhåndsvisning\",\n      private_clans: \"Private Klaner\",\n      public_clans: \"Offentlige Klaner\",\n      my_clans: \"Mine klaner\",\n      clan_name: \"Klan navn\",\n      name: \"Navn\",\n      edit_clan_name: \"Endre Klan navn\",\n      edit_name: \"Endre navn\",\n      edit_description: \"Endre Beskrivelsen\",\n      \"private\": \"(privat)\",\n      average_level: \"Gjennomsnittlig Nivå\",\n      delete_clan: \"Slett Klan\",\n      leave_clan: \"Forlat Klan\",\n      join_clan: \"Bli med i en klan\",\n      invite_1: \"Inviter:\",\n      invite_2: \"*Inviter spillere til denne klanen ved å sende denne linken.\",\n      members: \"Medlemmer\",\n      progress: \"Framgang\",\n      not_started_1: \"Ikke startet\",\n      started_1: \"Startet\",\n      complete_1: \"Ferdig\",\n      rem_hero: \"Fjern helt\",\n      status: \"Status\",\n      complete_2: \"Ferdig\",\n      started_2: \"Startet\",\n      not_started_2: \"Ikke Startet\",\n      view_solution: \"Trykk for å vise løsningen\",\n      view_attempt: \"Trykk for å vise et forsøk.\",\n      latest_achievement: \"De nyeste prestasjonene\",\n      playtime: \"Spilletid\",\n      last_played: \"Sist spilt\",\n      track_concepts5: \"Løsninger\"\n    },\n    courses: {\n      add_students: \"Legg til studenter\",\n      students: \"Studenter\",\n      concepts: \"Konsepter\",\n      play_time: \"Spilletid:\",\n      completed: \"Ferdig:\",\n      remove_student: \"fjern student\",\n      teacher: \"Lærer\",\n      arena: \"Arena\",\n      ready_to_play: \"Klar for å spille?\",\n      start_new_game: \"Start et nytt spill\",\n      play_now_learn_header: \"Spill nå for å lære\",\n      my_classes: \"Mine klasser\",\n      view_levels: \"Vis nivåene\",\n      join_class: \"Bli med i en klasse\",\n      play_arena: \"Spill Arena\",\n      start: \"Start\",\n      not_you: \"Ikke deg?\",\n      remove_student1: \"Fjern Student\",\n      keep_student: \"Behold Student\",\n      removing_user: \"Fjerner bruker\",\n      student_age_range_younger: \"Yngre enn 6\",\n      student_age_range_older: \"Eldre enn 18\",\n      create_class: \"Lag en klasse\",\n      class_name: \"Klasse navn\"\n    },\n    teacher: {\n      my_classes: \"Mine klasser\",\n      resources: \"Ressurser\",\n      help: \"Hjelp\",\n      edit_class_settings: \"Endre klasse instillinger\",\n      no_students_yet: \"Denne klassen har ikke noen studenter enda.\",\n      create_new_class: \"Lag en ny klasse\",\n      not_applicable: \"N/A\",\n      all_students: \"Alle studenter\"\n    },\n    classes: {\n      archmage_title: \"Erketrollmann\",\n      archmage_title_description: \"(Koder)\",\n      archmage_summary: \"Hvis du er en utvikler som er interessert i å lage utdanningsrettede spill, bli en erketrollmann, og hjelp oss bygge CodeCombat!\",\n      artisan_title: \"Artisan\",\n      artisan_title_description: \"(Brettbygger)\",\n      artisan_summary: \"Bygg og del brett som du og vennene dine kan spille.  Bli en Artisan for å lære kunsten å lære andre å programmere.\",\n      adventurer_title: \"Eventyrer\",\n      adventurer_title_description: \"(Spilltester)\",\n      adventurer_summary: \"Få våre nye brett (til-og-med innhold for abonnenter) gratis, en uke tidligere, og hjelp oss finne og fjerne feil før de blir gjort tilgjengelige for alle.\",\n      scribe_title: \"Skriver\",\n      scribe_title_description: \"(Artikkelforfatter)\",\n      scribe_summary: \"God kode trenger god dokumentasjon. Skriv, rediger, og forbedre dok'en som leses av millioner av spillere, verden over.\",\n      diplomat_title: \"Diplomat\",\n      diplomat_title_description: \"(Oversetter)\",\n      diplomat_summary: \"CodeCombat er oversatt til 45+ språk av våre diplomater. Hjelp oss ved å bidra med oversettelser.\",\n      ambassador_title: \"Ambassadør\",\n      ambassador_title_description: \"(Brukerstøtte)\",\n      ambassador_summary: \"Temm våre forumbrukere og tilby hjelp for de med spørsmål. Våre ambassadører representerer CodeCombat ute i verden.\",\n      teacher_title: \"Lærer\"\n    },\n    editor: {\n      main_title: \"CodeCombat Editorer\",\n      article_title: \"Artikkel Editor\",\n      thang_title: \"Thang Editor\",\n      level_title: \"Brett Editor\",\n      achievement_title: \"Prestasjons Editor\",\n      back: \"Tilbake\",\n      revert: \"Tilbakestill\",\n      revert_models: \"Tilbakestill Modeller\",\n      pick_a_terrain: \"Velg Terreng\",\n      dungeon: \"Grotte\",\n      indoor: \"Innendørs\",\n      desert: \"Ørken\",\n      grassy: \"Gresset\",\n      mountain: \"Fjell\",\n      glacier: \"Isbre\",\n      small: \"Liten\",\n      large: \"Stor\",\n      fork_title: \"Lag ny forgrening\",\n      fork_creating: \"Lager forgrening...\",\n      generate_terrain: \"Generer Terreng\",\n      more: \"Mer\",\n      wiki: \"Wiki\",\n      thang_main: \"Hoved\",\n      thang_colors: \"Farger\",\n      level_some_options: \"Noen valg?\",\n      level_tab_thangs: \"Thangs\",\n      level_tab_scripts: \"Skript\",\n      level_tab_components: \"Komponenter\",\n      level_tab_systems: \"Systemer\",\n      level_tab_docs: \"Dokumentasjon\",\n      level_tab_thangs_title: \"Gjeldende Thanger\",\n      level_tab_thangs_all: \"Alle\",\n      level_tab_thangs_conditions: \"Utgangsforhold\",\n      level_tab_thangs_add: \"Legg til Thangs\",\n      add_components: \"Legg til komponenter\",\n      component_configs: \"Komponentoppsett\",\n      config_thang: \"Dobbeltklikk for å konfigurere en thang\",\n      \"delete\": \"Slett\",\n      duplicate: \"Kopier\",\n      stop_duplicate: \"Stopp duplikat\",\n      rotate: \"Rotér\",\n      level_component_tab_title: \"Gjeldende Komponenter\",\n      level_component_btn_new: \"Lag Ny Komponent\",\n      level_systems_tab_title: \"Gjeldende Systemer\",\n      level_systems_btn_new: \"Lag Nytt System\",\n      level_systems_btn_add: \"Legg Til System\",\n      level_components_title: \"Tilbake til alle Thangs\",\n      level_components_type: \"Type\",\n      level_component_edit_title: \"Rediger Component\",\n      level_component_config_schema: \"Config-skjema\",\n      level_system_edit_title: \"Rediger System\",\n      create_system_title: \"Lag Nytt System\",\n      new_component_title: \"Lag Ny Komponent\",\n      new_component_field_system: \"System\",\n      new_article_title: \"Lag Ny Artikkel\",\n      new_thang_title: \"Lag en ny Thang Type\",\n      new_level_title: \"Lag et nytt Brett\",\n      new_article_title_login: \"Logg inn for å lage en ny Artikkel\",\n      new_thang_title_login: \"Log inn  inn for å lage en ny Thang Type\",\n      new_level_title_login: \"Logg inn for å lage et nytt Brett\",\n      new_achievement_title: \"Lag en ny Prestasjon\",\n      new_achievement_title_login: \"Logg inn for å lage en ny Prestasjon\",\n      article_search_title: \"Søk i Artikler her\",\n      thang_search_title: \"Søk i Thang Typer her\",\n      level_search_title: \"Søk i Brett her\",\n      achievement_search_title: \"Søk i Prestasjoner\",\n      read_only_warning2: \"Merk: Du kan ikke lagre endringene fordi du ikke er logget inn.\",\n      no_achievements: \"Ingen prestasjoner er lagt til på dette brettet ennå.\",\n      achievement_query_misc: \"Oppnådde nøkkelmål av diverse\",\n      achievement_query_goals: \"Oppnådde nøkkelmål\",\n      level_completion: \"Komplett Nivå\",\n      pop_i18n: \"Fullfør I18N\",\n      tasks: \"Oppgaver\"\n    },\n    article: {\n      edit_btn_preview: \"Forhåndsvis\",\n      edit_article_title: \"Rediger Artikkel\"\n    },\n    polls: {\n      priority: \"Prioritet\"\n    },\n    contribute: {\n      page_title: \"Bidra\",\n      intro_blurb: \"CodeCombat er 100% åpen kildekode! Hundrevis av dedikerte spillere har hjulpet oss å bygge spillet til det det er blitt i dag. Foren deg med oss og bli med og skriv neste kapittel i CodeCombat sin søken etter å lære hele verden koding!\",\n      alert_account_message_intro: \"Heisann!\",\n      alert_account_message: \"For å abonnere på klasse-eposter må du være logget inn først.\",\n      archmage_introduction: \"En av de beste tingene med å lage spill er at det består av så mye forskjellig. Grafikk, lyd, sanntidsnettverk, sosiale nettverk, og selvfølgelig mange av de vanlige aspektene ved programmering, fra lav-nivå database drift og serveradministrasjon til design og bygging av brukergrensesnitt. Det er mye å gjøre og hvis du er en erfaren utvikler som har lyst til å dykke ned i de tekniske detaljene i CodeCombat, da er dette kanskje klassen for deg. Vi vil veldig gjerne ha din hjelp til å lage det beste programmeringsspillet noensinne.\",\n      class_attributes: \"Klasseegenskaper\",\n      archmage_attribute_1_pref: \"Kunnskap om \",\n      archmage_attribute_1_suf: \", eller lyst til å lære. Mesteparten av koden vår er skrevet i dette språket. Hvis du liker Python eller Ruby vil du føle deg hjemme. Det er JavaScript, men med en hyggeligere syntaks.\",\n      archmage_attribute_2: \"Litt erfaring med programmering og masse personlig initativ. Vi hjelper deg til å få oversikten, men vi kan ikke bruke mye tid på å lære deg opp.\",\n      how_to_join: \"Hvordan bli med\",\n      join_desc_1: \"Alle kan hjelpe til! Ta en titt på siden vår på \",\n      join_desc_2: \"for å komme i gang, og kryss av i boksen nedenfor for å merke deg selv som en modig Erketrollmann og få de siste nyhetene på epost. Vil du prate med oss om hva du kan gjøre og hvordan du kan involvere deg mer? \",\n      join_desc_3: \", eller finn oss i vårt \",\n      join_desc_4: \"så tar vi det derfra!\",\n      join_url_email: \"Send oss en epost\",\n      join_url_slack: \"Offentlig Slack kanal\",\n      archmage_subscribe_desc: \"Få epost om nye muligheter til å kode og kunngjøringer.\",\n      artisan_introduction_pref: \"Vi må konstruere flere nye brett! Folk skriker etter mer innhold, og vi klarer bare å bygge så mange selv. Akkurat nå er arbeidsverktøyet ditt bare på nivå 1; brett-editoren vår er bare såvidt brukbar, selv for de som har laget den, så vær forberedt. Hvis du har visjoner om kampanjer med alt fra for-løkker til\",\n      artisan_introduction_suf: \", da er denne klassen kanskje for deg.\",\n      artisan_attribute_1: \"All tidligere erfaring med å lage lignende innhold er et pluss, som for eksempel Blizzard's brett-editor. Men det er ikke påkrevd!\",\n      artisan_attribute_2: \"Lyst til å gjøre massevis av testing og repetisjoner. For å lage gode brett må man gi dem til andre og observere når de spiller dem, og være forberedt på å finne massevis av tings som må fikses.\",\n      artisan_attribute_3: \"Inntil videre bør man ha utholdenhet på nivå med en Eventyrer. Brett-editoren vår er i en veldig tidlig fase og kan være frustrerende å bruke. Du er herved advart!\",\n      artisan_join_desc: \"Brett-editoren brukes omtrent på følgende måte\",\n      artisan_join_step1: \"Les dokumentasjonen.\",\n      artisan_join_step2: \"Lag et nytt brett og utforsk eksisterende brett.\",\n      artisan_join_step3: \"Finn oss i det offentlige Slack rommet vårt for å få hjelp.\",\n      artisan_join_step4: \"Legg ut brettene dine på forumet for å få tilbakemeldinger.\",\n      artisan_subscribe_desc: \"Få epost om oppdateringer i brett-editoren og kunngjøringer.\",\n      adventurer_introduction: \"La oss være tydelige på hva din rolle er: du må ta støyten. Du kommer til å få mye juling. Vi trenger folk som kan prøve helt nye brett og hjelpe oss å finne ut hvordan de kan gjøres bedre. Smerten vil bli enorm; å lage gode spill er en lang prosess og ingen får ting riktig første gangen. Hvis du kan holde ut og tåler en støyt, da er kanskje denne klassen for deg.\",\n      adventurer_attribute_1: \"Tørster etter kunnskap. Du vil lære å kode og vi vil gjerne lære deg å kode. Selv om det kanskje blir du som gjør mesteparten av bortlæringen i dette tilfellet.\",\n      adventurer_attribute_2: \"Karismatisk. Vær hyggelig men tydelig på hvor det trengs forbedringer, og kom med forslag til hvordan ting kan bli bedre.\",\n      adventurer_join_pref: \"Finn (eller rekrutter!) en Artisan og jobb sammen med dem, eller kryss av i boksen under for å motta epost når det er nye brett som må testes. Vi poster også om brett som trenger testing på nettverkene våre, som\",\n      adventurer_forum_url: \"forumet vårt\",\n      adventurer_join_suf: \"så hvis du foretrekker å få varsler derfra i stedet kan du registrere deg der!\",\n      adventurer_subscribe_desc: \"Få epost når det er nye brett som må testes.\",\n      scribe_introduction_pref: \"CodeCombat skal ikke bare være en samling med brett. Det skal også være en kilde til kunnskap, en wiki med programmeringskonsepter som kan brukes i brettene. Slik at i stedet for at hver Artisan må forklare i detalj hva en sammenligningsoperator er kan de bare linke brettet sitt til en eksisterende artikkelen som forklarer konseptet. Noe lignende det som \",\n      scribe_introduction_url_mozilla: \"Mozilla Developer Network\",\n      scribe_introduction_suf: \" har bygget opp. Hvis du synes det gøy å forklare programmeringskonsepter i Markdown format, da er denne klassen kanskje for deg.\",\n      scribe_attribute_1: \"Å være flink med ord er egentlig det eneste som trengs. Ikke bare grammatikk og rettskriving, men også evne til å formidle kompliserte konsepter til andre.\",\n      contact_us_url: \"Kontakt oss\",\n      scribe_join_description: \"fortell oss litt om deg selv, din erfaring med programmering og hva slags ting du har lyst til å skrive om. Så tar vi det derfra!\",\n      scribe_subscribe_desc: \"Få epost om kunngjøringer relatert til artikkelskriving.\",\n      diplomat_introduction_pref: \"Hvis det er en ting vi lærte av \",\n      diplomat_launch_url: \"lanseringen i oktober\",\n      diplomat_introduction_suf: \"så er det at det er stor interesse for CodeCombat i andre land! Vi bygger et korps av oversettere som er ivrige etter å gjøre om ett sett av ord til et annet sett av ord, slik at CodeCombat blir tilgengelig i så store deler av verden som mulig. Hvis du liker å få sniktitte på kommende innhold og å bringe disse brettene til dine lansdmenn fortere enn svint, da er denne klassen kanskje for deg.\",\n      diplomat_attribute_1: \"Gode kunnskaper i engelsk og det språket du vil oversette til. Når man skal formidle kompliserte konsepter er det viktig å mestre begge språkene godt!\",\n      diplomat_i18n_page_prefix: \"Du kan beynne å oversette brett ved å gå til vår\",\n      diplomat_i18n_page: \"oversettingsside\",\n      diplomat_i18n_page_suffix: \", eller oversette grensesnittet og websidene på GitHub.\",\n      diplomat_join_pref_github: \"Finn din 'locale' fil \",\n      diplomat_github_url: \"på GitHub\",\n      diplomat_join_suf_github: \", rediger den online, og send oss en 'pull request'. Og kryss av i boksen under for å motta oppdateringer relatert til internasjonalisering!\",\n      diplomat_subscribe_desc: \"Få epost om i18n oppdateringer og nye brett som må oversettes.\",\n      ambassador_introduction: \"Det er et felleskap vi prøver å bygge her, og dere er bindeleddene. Vi har forum, chat, epost, og sosiale nettverk med mange mennesker å snakke med, og hjelpe til å bli bedre kjent med spillet, og lære fra. Hvis du vil hjelpe folk å bli mer involvert og ha det gøy, og får en god følelse av stemningen i CodeCombat og hva vi prøver å få til, da er denne klassen kanskje for deg..\",\n      ambassador_attribute_1: \"Flink til å kommunisere. Flink til å identifisere problemene spillere har og hjelpe dem med å løse dem. Og i tillegg holde resten av oss informert om hva spillerne sier, hva de liker og ikke liker, og hva de vil ha mer av!\",\n      ambassador_join_desc: \"fortell oss litt om deg selv, hva du har drevet med tidligere og hva du er interessert i å gjøre. Så tar vi det derfra!\",\n      ambassador_join_note_strong: \"Merk\",\n      ambassador_join_note_desc: \"En ting vi prioriterer høyt er å utvikle funksjonalitet i flerspillerdelen som lar spillere som har vanskeligheter med oppgaven tilkalle erfarne trollmenn som kan hjelpe dem. Dette vil være en flott måte for Ambasadører å hjelpe til på. Vi holder dere oppdatert!\",\n      ambassador_subscribe_desc: \"Få epost om oppdateringer relatert til brukerstøtte.\",\n      changes_auto_save: \"Endringene lagres automatisk når klikker på avkryssingsboksene.\",\n      diligent_scribes: \"Våre flittige Skrivere:\",\n      powerful_archmages: \"Våre mektige Erketrollmenn:\",\n      creative_artisans: \"Våre kreative Artisaner:\",\n      brave_adventurers: \"Våre tapre Eventyrere:\",\n      translating_diplomats: \"Våre oversettende Diplomater:\",\n      helpful_ambassadors: \"Våre hjelpsomme Ambassadører:\"\n    },\n    ladder: {\n      my_matches: \"Mine kamper\",\n      simulate: \"Simuler\",\n      simulation_explanation: \"Ved å simulere spill kan du få ditt spill rangert raskere!\",\n      simulate_games: \"Simuler Spill!\",\n      games_simulated_by: \"Spill simulert av deg:\",\n      games_simulated_for: \"Spill simulert for deg:\",\n      games_simulated: \"Spill simulert\",\n      games_played: \"Spill spilt\",\n      ratio: \"Forhold\",\n      leaderboard: \"Poengtavle\",\n      battle_as: \"Kjemp som \",\n      summary_your: \"Ditt \",\n      summary_matches: \"Kamper - \",\n      summary_wins: \" Seire, \",\n      summary_losses: \" Tap\",\n      rank_no_code: \"Ingen ny kode å rangere\",\n      rank_my_game: \"Ranger spillet mitt!\",\n      rank_submitting: \"Sender inn...\",\n      rank_submitted: \"Sendt inn for rangering\",\n      rank_failed: \"Rangering feilet\",\n      rank_being_ranked: \"Spillet blir rangert\",\n      rank_last_submitted: \"innsendt \",\n      help_simulate: \"Hjelpe til å simulere spill?\",\n      code_being_simulated: \"Koden din blir simulert av andre spillere for rangering. Listen vil bli oppdatert når nye resultater kommer inn.\",\n      no_ranked_matches_pre: \"Ingen nye rangerte kamper for \",\n      no_ranked_matches_post: \" laget! Spill mot noen motstandere og kom tilbake hit etterpå for å få spillet ditt rangert.\",\n      choose_opponent: \"Velg en motstander\",\n      select_your_language: \"Velg språk!\",\n      tutorial_play: \"Spill opplæringsspill\",\n      tutorial_recommended: \"Anbefalt hvis du ikke har spilt før\",\n      tutorial_skip: \"Hopp over opplæring\",\n      tutorial_not_sure: \"Usikker på hva som foregår?\",\n      tutorial_play_first: \"Spill opplæringsspillet først.\",\n      simple_ai: \"Enkel AI\",\n      warmup: \"Oppvarming\",\n      friends_playing: \"Venner som spiller\",\n      log_in_for_friends: \"Logg inn for å spille med vennene dine\",\n      social_connect_blurb: \"Koble til og spill mot vennene dine!\",\n      invite_friends_to_battle: \"Inviter vennene dine til å møte deg i strid!\",\n      fight: \"Slåss!\",\n      watch_victory: \"Se seieren\",\n      defeat_the: \"Overvinn\",\n      tournament_started: \", startet\",\n      tournament_ends: \"Turneringen slutter\",\n      tournament_ended: \"Turneringen sluttet \",\n      tournament_rules: \"Turneringsregler\",\n      tournament_blurb: \"Skriv kode, samle gull, bygg hærer, knus fiender, vinn premier, og oppgrader karrieren din i vår $40,000 Greed turnering! Sjekk detaljene på\",\n      tournament_blurb_criss_cross: \"Vinn bud, bygg stier, overlist motstandere, ta juveler, og oppgrader karrieren din i vår Criss-Cross turnering! Sjekk detaljene på\",\n      tournament_blurb_blog: \"bloggen vår\",\n      rules: \"Regler\",\n      winners: \"Vinnere\",\n      league: \"Liga\",\n      wins: \"Vinner\",\n      humans: \"Rød\",\n      ogres: \"Blå\"\n    },\n    user: {\n      stats: \"Statistikk\",\n      singleplayer_title: \"Enspillerbrett\",\n      multiplayer_title: \"Flerspillerbrett\",\n      achievements_title: \"Prestasjoner\",\n      last_played: \"Sist spilt\",\n      status: \"Status\",\n      status_completed: \"Fullført\",\n      status_unfinished: \"Uferdig\",\n      no_singleplayer: \"Du har ikke spilt noen enspillerbrett ennå.\",\n      no_multiplayer: \"Du har ikke spilt noen flerspillerbrett ennå.\",\n      no_achievements: \"Ingen prestasjoner oppnådd ennå.\",\n      favorite_prefix: \"Favorittspråket er \",\n      favorite_postfix: \".\",\n      not_member_of_clans: \"Ikke et medlem av en klan enda.\"\n    },\n    achievements: {\n      last_earned: \"Sist oppnådd\",\n      amount_achieved: \"Mengde\",\n      achievement: \"Prestasjon\",\n      current_xp_prefix: \"\",\n      current_xp_postfix: \" totalt\",\n      new_xp_prefix: \"\",\n      new_xp_postfix: \" opptjent\",\n      left_xp_prefix: \"\",\n      left_xp_infix: \" til nivå \",\n      left_xp_postfix: \"\"\n    },\n    account: {\n      payments: \"Betalinger\",\n      purchased: \"Kjøpt\",\n      subscription: \"Abonnement\",\n      service_apple: \"Apple\",\n      service_web: \"Web\",\n      paid_on: \"Betalt den\",\n      service: \"Tjeneste\",\n      price: \"Pris\",\n      gems: \"Juveler\",\n      active: \"Aktiv\",\n      subscribed: \"Innmeldt\",\n      unsubscribed: \"Utmeldt\",\n      active_until: \"Aktiv til\",\n      cost: \"Kostnad\",\n      next_payment: \"Neste Betaling\",\n      card: \"Kort\",\n      status_unsubscribed_active: \"Du har ikke et aktivt abonnement, og vil ikke bli fakturert, men kontoen din er aktiv enn så lenge.\",\n      status_unsubscribed: \"Få tilgang til nye nivåer, helter, gjenstander, og bonus gems med et CodeCombat abonnement!\"\n    },\n    account_invoices: {\n      amount: \"Prisen er i Amerikanske dollar\"\n    },\n    account_prepaid: {\n      users: \"Brukere\",\n      months: \"Måneder\",\n      purchase_total: \"Total\",\n      quantity: \"Mengde\",\n      no_codes: \"Ingen kode enda!\",\n      you_can1: \"Du kan\"\n    },\n    loading_error: {\n      could_not_load: \"Feil ved lasting fra server\",\n      connection_failure: \"Tilkobling feilet.\",\n      unauthorized: \"Du må være pålogget. Har du informasjonskapsler (cookies) skrudd på?\",\n      forbidden: \"Du har ikke tilgang\",\n      not_found: \"Ikke funnet.\",\n      not_allowed: \"Metoden er ikke tillat\",\n      timeout: \"Tidsavbrudd på server\",\n      conflict: \"Ressurskonflikt.\",\n      bad_input: \"Feil i inndata\",\n      server_error: \"Serverfeil.\",\n      unknown: \"Ukjent feil.\",\n      error: \"ERROR\"\n    },\n    resources: {\n      level: \"Nivå\",\n      patch: \"Patch\",\n      patches: \"Patcher\",\n      system: \"System\",\n      systems: \"Systemer\",\n      component: \"Komponent\",\n      components: \"Komponenter\",\n      hero: \"Helt\",\n      campaigns: \"Kampanjer\"\n    },\n    delta: {\n      added: \"Opprettet\",\n      modified: \"Endret\",\n      not_modified: \"Ikke modifisert\",\n      deleted: \"Slettet\",\n      moved_index: \"Endret Index\",\n      text_diff: \"Tekst Diff\",\n      merge_conflict_with: \"MERGE KONFLIKT MED\",\n      no_changes: \"Ingen Endringer\"\n    },\n    legal: {\n      page_title: \"Juridisk\",\n      opensource_intro: \"CodeCombat er gratis å spille og helt åpen kildekode.\",\n      opensource_description_prefix: \"Ta en titt på siden vår på \",\n      github_url: \"GitHub\",\n      opensource_description_center: \"og hjelp gjerne til hvis du har lyst! CodeCombat er basert på dusinvis av åpen kildekode-prosjekter og vi er veldig glade i dem. Se \",\n      archmage_wiki_url: \"Erketrollmann-wikien\",\n      opensource_description_suffix: \"for en liste over programvare som gjør dette spillet mulig.\",\n      practices_title: \"Respektfulle \\\"Best Practices\\\"\",\n      practices_description: \"Dette er våre løfter til deg som spiller, på litt mindre juridisk språk.\",\n      privacy_title: \"Personvern\",\n      privacy_description: \"Vi vil ikke selge noe av din personlige informasjon.\",\n      security_title: \"Sikkerhet\",\n      security_description: \"Vi gjør alt vi kan for å beskytte dine personlige opplysninger. Som et åpen kildekode-prosjekt kan hvem som helst inspisere og forbedre sikkerhetssystemene våre.\",\n      email_title: \"Epost\",\n      email_description_prefix: \"Vi kommer ikke til å oversvømme deg med søppelpost. Via \",\n      email_settings_url: \"epost-innstillingene dine\",\n      email_description_suffix: \"eller via linker i epostene vi sender til deg, kan du endre hvilke eposter du ønsker å motta og enkelt avslutte abonnementet når som helst.\",\n      cost_title: \"Pris\",\n      copyrights_title: \"Kopirettigheter og lisenser\",\n      contributor_title: \"Lisensavtale for bidragsytere\",\n      contributor_description_prefix: \"Alle bidrag, både gjort gjennom brukergrensesnittet og i kodelageret på GitHub, er underlagt vår\",\n      cla_url: \"Lisensavtale for Bidragsytere\",\n      contributor_description_suffix: \"(Contributor License Agreement - CLA), som du må bekrefte før du kan bidra på prosjektet.\",\n      code_title: \"Kode - MIT lisens\",\n      code_description_prefix: \"All kildekode som er eid av CodeCombat eller ligger på codecombat.com, både i kodelageret på GitHub eller i codecombat.com databasen, er lisensiert med \",\n      mit_license_url: \"MIT lisensen\",\n      code_description_suffix: \"Dette inkluderer alle kode i Systemer og Komponenter som er gjort tilgjengelig av CodeCombat til bruk når man lager Brett.\",\n      art_title: \"Grafikk og Musikk - Creative Commons\",\n      art_description_prefix: \"Alt felles innhold er tilgjengelig under\",\n      cc_license_url: \"Creative Commons Attribution 4.0 International License\",\n      art_description_suffix: \"Felles innhold er alt innhold som er gjort tilgjengelig av CodeCombat til bruk når man lager Brett. Dette inkluderer:\",\n      art_music: \"Musikk\",\n      art_sound: \"Lyd\",\n      art_artwork: \"Illustrasjoner\",\n      art_sprites: \"Figurer (Sprites)\",\n      art_other: \"Alle andre kreative verk, med unntak av kode, som er tilgjengelig når man lager Brett.\",\n      art_access: \"For øyeblikket finnes det ingen enkel og universell måte å få tak i disse ressursene. De kan enten lastes ned via nettaddressene som klienten bruker, vi kan hjelpe deg hvis du kontakter oss, eller du kan hjelpe oss å utvide systemet slik at disse ressursene blir lettere tilgjengelig.\",\n      art_paragraph_1: \"Ved navngiving oppgi codecombat.com og link til oss i nærheten av stedet hvor ressursen er brukt eller på et sted som egner seg for mediet. For eksempel:\",\n      use_list_1: \"Hvis brukt i en film eller et annet spill, inkluder codecombat.com i rulleteksten.\",\n      use_list_2: \"Hvis brukt på en nettside, inkluder en link i nærheten av bruksstedet, for eksempel under et bilde, eller på en egen side hvor du kansje også navngir andre Creative Commons kilder og åpen kildekode-prosjekter som blir brukt på siden. Noe som allerede tydelig refererer til CodeCombat, som f.eks. i et blogginnlegg om CodeCombat, trenger ingen egen navngiving.\",\n      art_paragraph_2: \"Hvis innholdet som blir brukt ikke er laget av CodeCombat, men av en bruker på codecombat.com, navngi dem i stedet og følg navngivings anvisningene gitt i ressursens beskrivelse hvis tilgjengelig.\",\n      rights_title: \"Forbeholdte rettigheter\",\n      rights_desc: \"Alle rettigheter er forbeholdt for selve Brettene. Dette inkluderere: \",\n      rights_scripts: \"Skript\",\n      rights_unit: \"Oppsett av enheter\",\n      rights_writings: \"Tekster\",\n      rights_media: \"Media (lyder, musikk) og alt annet kreativt innhold som er laget spesielt for Brettet og ikke gjort allment tilgjengelig til bruk når man lager Brett.\",\n      rights_clarification: \"Altså: alt som er gjort tilgjengelig i Brett-editoren med det formål å brukes i nye Brett er under Creative Commons, mens det innholdet som blir laget med Brett-editoren eller som blir lastet opp under utviklingen av nye Brett er ikke.\",\n      nutshell_title: \"I et nøtteskall\",\n      nutshell_description: \"Alle ressursene vi har gjort tilgjengelig i Brett-editoren kan fritt brukes til å lage nye Brett. Men vi forbeholder oss rettighetene til å distribuere selve Brettene (som er laget på codecombat.com), slik at vi har muligheten til å kreve betaling for dem i fremtiden, dersom vi ender opp med å gjøre det.\",\n      canonical: \"Den engelske utgaven av dette dokumentet er den definitive og gjeldende utgaven. Hvis det er forskjeller i oversettelsen så er det den engelske utgaven som gjelder.\"\n    },\n    calendar: {\n      year: \"år\",\n      day: \"Dag\",\n      month: \"Måned\",\n      january: \"Januar\",\n      february: \"Februar\",\n      march: \"Mars\",\n      april: \"April\",\n      may: \"Mai\",\n      june: \"Juni\",\n      july: \"Juli\",\n      august: \"August\",\n      september: \"September\",\n      october: \"Oktober\",\n      november: \"November\",\n      december: \"Desember\"\n    }\n  }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///248\n");

/***/ })

});