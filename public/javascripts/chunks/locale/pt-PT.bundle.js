/*! hash:ae6a15474fa7d9a1f9f8, chunkhash:79ceb4608aa9118be264, name:locale/pt-PT, filebase:pt-PT.bundle.js, query:, file:javascripts/chunks/locale/pt-PT.bundle.js */
webpackJsonp([30],{

/***/ 255:
/***/ (function(module, exports) {

eval("module.exports = {\n  nativeDescription: \"Português (Portugal)\",\n  englishDescription: \"Portuguese (Portugal)\",\n  translation: {\n    new_home: {\n      slogan: \"O jogo mais cativante para aprender programação.\",\n      classroom_edition: \"Edição de Turma:\",\n      learn_to_code: \"Aprender a programar:\",\n      play_now: \"Jogar Agora\",\n      im_a_teacher: \"Sou um Professor\",\n      im_a_student: \"Sou um Estudante\",\n      learn_more: \"Saber mais\",\n      classroom_in_a_box: \"Uma turma num pacote para ensinar ciências da computação.\",\n      codecombat_is: \"O CodeCombat é uma plataforma <strong>para estudantes</strong> para aprender ciências da computação enquanto se joga um jogo real.\",\n      our_courses: \"Os nossos cursos foram especificamente testados para <strong>terem sucesso na sala de aula</strong>, até para professores com pouca ou nenhuma experiência anterior de programação.\",\n      watch_how: \"Vê como o CodeCombat está a transformar o modo como as pessoas aprendem ciências da computação.\",\n      top_screenshots_hint: \"Os estudantes escrevem código e veem as alterações deles atualizarem em tempo real\",\n      designed_with: \"Desenhado a pensar nos professores\",\n      real_code: \"Código real e escrito\",\n      from_the_first_level: \"desde o primeiro nível\",\n      getting_students: \"Apresentar código escrito aos estudantes o mais rapidamete possível é crítico para aprenderem a sintaxe e a estrutura adequadas da programação.\",\n      educator_resources: \"Recursos para professores\",\n      course_guides: \"e guias dos cursos\",\n      teaching_computer_science: \"Ensinar ciências da computação não requer um curso caro, porque nós fornecemos ferramentas para ajudar todo o tipo de professores.\",\n      accessible_to: \"Acessível a\",\n      everyone: \"todos\",\n      democratizing: \"Democratizar o processo de aprender a programar está na base da nossa filosofia. Todos devem poder aprender a programar.\",\n      forgot_learning: \"Acho que eles se esqueceram que estavam a aprender alguma coisa.\",\n      wanted_to_do: \"Programar é algo que sempre quis fazer e nunca pensei que poderia aprender isso na escola.\",\n      why_games: \"Porque é que aprender através de jogos é importante?\",\n      games_reward: \"Os jogos recompensam o esforço produtivo.\",\n      encourage: \"Jogar é algo que encoraja a interação, a descoberta e a tentativa erro. Um bom jogo desafia o jogador a dominar habilidades com o tempo, que é o mesmo processo fundamental que os estudantes atravessam quando aprendem.\",\n      excel: \"Os jogos são excelentes a recompensar o\",\n      struggle: \"esforço produtivo\",\n      kind_of_struggle: \"o tipo de esforço que resulta numa aprendizagem que é cativante e\",\n      motivating: \"motivadora\",\n      not_tedious: \"não entediante.\",\n      gaming_is_good: \"Estudos sugerem que jogar é bom para o cérebro das crianças. (é verdade!)\",\n      real_game: \"Um jogo a sério, jogado com código a sério.\",\n      request_demo: \"Pedir uma Demonstração\",\n      have_an_account: \"Tens uma conta?\",\n      logged_in_as: \"Atualmente tens sessão iniciada como\",\n      ffa: \"Grátis para todos os estudantes\",\n      coming_soon: \"Mais, brevemente!\",\n      courses_available_in: \"Os cursos estão disponíveis em JavaScript e Python. Os cursos de Desenvolvimento Web utilizam HTML, CSS e jQuery.\",\n      run_class: \"Tudo o que precisas para teres uma turma de ciências da computação na tua escola hoje, sem serem necessárias bases de CC.\",\n      goto_classes: \"Ir para As Minhas Turmas\",\n      view_profile: \"Ver o Meu Perfil\",\n      view_progress: \"Ver Progresso\",\n      go_to_courses: \"Ir para Os Meus Cursos\",\n      want_coco: \"Queres o CodeCombat na tua escola?\"\n    },\n    nav: {\n      map: \"Mapa\",\n      play: \"Níveis\",\n      community: \"Comunidade\",\n      courses: \"Cursos\",\n      blog: \"Blog\",\n      forum: \"Fórum\",\n      account: \"Conta\",\n      my_account: \"A Minha Conta\",\n      profile: \"Perfil\",\n      home: \"Início\",\n      contribute: \"Contribuir\",\n      legal: \"Legal\",\n      privacy: \"Privacidade\",\n      about: \"Sobre\",\n      contact: \"Contactar\",\n      twitter_follow: \"Seguir\",\n      my_classrooms: \"As Minhas Turmas\",\n      my_courses: \"Os Meus Cursos\",\n      careers: \"Carreiras\",\n      facebook: \"Facebook\",\n      twitter: \"Twitter\",\n      create_a_class: \"Criar uma Turma\",\n      other: \"Outros\",\n      learn_to_code: \"Aprende a Programar!\",\n      toggle_nav: \"Alternar navegação\",\n      schools: \"Escolas\",\n      get_involved: \"Envolve-te\",\n      open_source: \"Open source (GitHub)\",\n      support: \"Suporte\",\n      faqs: \"FAQs\",\n      help_pref: \"Precisas de ajuda? Envia um e-mail para\",\n      help_suff: \"e nós entraremos em contacto!\",\n      resource_hub: \"Centro de Recursos\"\n    },\n    modal: {\n      close: \"Fechar\",\n      okay: \"Ok\"\n    },\n    not_found: {\n      page_not_found: \"Página não encontrada\"\n    },\n    diplomat_suggestion: {\n      title: \"Ajuda a traduzir o CodeCombat!\",\n      sub_heading: \"Precisamos das tuas habilidades linguísticas.\",\n      pitch_body: \"Desenvolvemos o CodeCombat em Inglês, mas já temos jogadores de todo o mundo. Muitos deles querem jogar em Português, mas não falam Inglês, por isso, se sabes falar ambas, por favor considera registar-te como Diplomata para ajudares a traduzir o sítio do CodeCombat e todos os níveis para Português.\",\n      missing_translations: \"Até conseguirmos traduzir tudo para Português, irás ver em Inglês o que não estiver disponível em Português.\",\n      learn_more: \"Sabe mais sobre seres um Diplomata\",\n      subscribe_as_diplomat: \"Subscreve-te como Diplomata\"\n    },\n    play: {\n      play_as: \"Jogar Como\",\n      compete: \"Competir!\",\n      spectate: \"Assistir\",\n      players: \"jogadores\",\n      hours_played: \"horas jogadas\",\n      items: \"Itens\",\n      unlock: \"Desbloquear\",\n      confirm: \"Confirmar\",\n      owned: \"Obtido\",\n      locked: \"Bloqueado\",\n      available: \"Disponível\",\n      skills_granted: \"Habilidades Garantidas\",\n      heroes: \"Heróis\",\n      achievements: \"Conquistas\",\n      settings: \"Definições\",\n      poll: \"Votações\",\n      next: \"Próximo\",\n      change_hero: \"Alterar Herói\",\n      buy_gems: \"Comprar Gemas\",\n      subscribers_only: \"Apenas para Subscritores!\",\n      subscribe_unlock: \"Subscreve-te para Desbloqueares!\",\n      subscriber_heroes: \"Subscreve-te hoje para desbloqueares de imediato a Amara, a Hushbaum, e o Hattori!\",\n      subscriber_gems: \"Subscreve-te hoje para adquirires este herói com gemas!\",\n      anonymous: \"Jogador Anónimo\",\n      level_difficulty: \"Dificuldade: \",\n      awaiting_levels_adventurer_prefix: \"Lançamos novos níveis todas as semanas.\",\n      awaiting_levels_adventurer: \"Regista-te como Aventureiro\",\n      awaiting_levels_adventurer_suffix: \"para seres o primeiro a jogar níveis novos.\",\n      adjust_volume: \"Ajustar volume\",\n      campaign_multiplayer: \"Arenas Multijogador\",\n      campaign_multiplayer_description: \"... nas quais programas contra outros jogadores.\",\n      back_to_classroom: \"Voltar à Turma\",\n      teacher_button: \"Para Professores\"\n    },\n    code: {\n      \"if\": \"se\",\n      \"else\": \"senão\",\n      elif: \"senão se\",\n      \"while\": \"enquanto\",\n      loop: \"repetir\",\n      \"for\": \"para\",\n      \"break\": \"parar\",\n      \"continue\": \"continuar\",\n      pass: \"passar\",\n      \"return\": \"devolver\",\n      then: \"então\",\n      \"do\": \"fazer\",\n      end: \"fim\",\n      \"function\": \"função\",\n      def: \"definir\",\n      \"var\": \"variável\",\n      self: \"próprio\",\n      hero: \"herói\",\n      \"this\": \"isto\",\n      or: \"ou\",\n      \"||\": \"ou\",\n      and: \"e\",\n      \"&&\": \"e\",\n      not: \"não\",\n      \"!\": \"não\",\n      \"=\": \"atribuir\",\n      \"==\": \"é igual a\",\n      \"===\": \"é estritamente igual a\",\n      \"!=\": \"não é igual a\",\n      \"!==\": \"não é estritamente igual a\",\n      \">\": \"é maior do que\",\n      \">=\": \"é maior do que ou igual a\",\n      \"<\": \"é menor do que\",\n      \"<=\": \"é menor do que ou igual a\",\n      \"*\": \"multiplicado por\",\n      \"/\": \"dividido por\",\n      \"+\": \"mais\",\n      \"-\": \"menos\",\n      \"+=\": \"adicionar e atribuir\",\n      \"-=\": \"subtrair e atribuir\",\n      True: \"Verdadeiro\",\n      \"true\": \"verdadeiro\",\n      False: \"Falso\",\n      \"false\": \"falso\",\n      undefined: \"não definido\",\n      \"null\": \"nulo\",\n      nil: \"nada\",\n      None: \"Nenhum\"\n    },\n    share_progress_modal: {\n      blurb: \"Estás a fazer grandes progressos! Conta ao teu educador o quanto aprendeste com o CodeCombat.\",\n      email_invalid: \"Endereço de e-mail inválido.\",\n      form_blurb: \"Introduz o e-mail do teu educador abaixo e nós vamos mostrar-lhe!\",\n      form_label: \"Endereço de E-mail\",\n      placeholder: \"endereço de e-mail\",\n      title: \"Excelente Trabalho, Aprendiz\"\n    },\n    login: {\n      sign_up: \"Criar Conta\",\n      email_or_username: \"E-mail ou nome de utilizador\",\n      log_in: \"Iniciar Sessão\",\n      logging_in: \"A Iniciar Sessão\",\n      log_out: \"Sair\",\n      forgot_password: \"Esqueceste a tua palavra-passe?\",\n      finishing: \"A Terminar\",\n      sign_in_with_facebook: \"Iniciar sessão com o FB\",\n      sign_in_with_gplus: \"Iniciar sessão com o Google\",\n      signup_switch: \"Queres criar uma conta?\"\n    },\n    signup: {\n      create_student_header: \"Criar Conta de Estudante\",\n      create_teacher_header: \"Criar Conta de Professor\",\n      create_individual_header: \"Criar Conta Individual\",\n      email_announcements: \"Receber anúncios sobre níveis e funcionalidades novos do CodeCombat!\",\n      sign_in_to_continue: \"Inicia sessão ou cria uma conta para continuares\",\n      creating: \"A Criar Conta...\",\n      sign_up: \"Registar\",\n      log_in: \"iniciar sessão com palavra-passe\",\n      required: \"Precisas de iniciar sessão antes de prosseguires.\",\n      login_switch: \"Já tens uma conta?\",\n      optional: \"opcional\",\n      hey_students: \"Estudantes, introduzam o código de turma do vosso professor.\",\n      birthday: \"Aniversário\",\n      checking: \"A verificar...\",\n      account_exists: \"Este e-mail já está a ser usado:\",\n      sign_in: \"Iniciar sessão\",\n      email_good: \"O e-mail parece bom!\",\n      name_taken: \"Nome de utilizador já escolhido! Que tal {{suggestedName}}?\",\n      name_available: \"Nome de utilizador disponível!\",\n      name_is_email: \"O nome de utilizador não pode ser um e-mail\",\n      choose_type: \"Escolhe o teu tipo de conta:\",\n      teacher_type_1: \"Ensina programção usando o CodeCombat!\",\n      teacher_type_2: \"Configura a tua turma\",\n      teacher_type_3: \"Acede aos Guias dos Cursos\",\n      teacher_type_4: \"Vê o progresso dos estudantes\",\n      signup_as_teacher: \"Registar como Professor\",\n      student_type_1: \"Aprende a programar enquanto jogas um jogo cativante!\",\n      student_type_2: \"Joga com a tua turma\",\n      student_type_3: \"Compete em arenas\",\n      student_type_4: \"Escolhe o teu herói!\",\n      student_type_5: \"Prepara o teu Código de Turma!\",\n      signup_as_student: \"Registar como Estudante\",\n      individuals_or_parents: \"Individuais e Educadores\",\n      individual_type: \"Para jogadores a aprender a programar fora de uma turma. Os educadores devem registar-se aqui.\",\n      signup_as_individual: \"Registar como Individual\",\n      enter_class_code: \"Introduz o teu Código de Turma\",\n      enter_birthdate: \"Introduz a tua data de nascimento:\",\n      parent_use_birthdate: \"Educadores, usem a vossa data de nascimento.\",\n      ask_teacher_1: \"Pergunta ao teu professor pelo teu Código de Turma.\",\n      ask_teacher_2: \"Não fazes parte de uma turma? Cria uma \",\n      ask_teacher_3: \"Conta Individual\",\n      ask_teacher_4: \" então.\",\n      about_to_join: \"Estás prestes a entrar em:\",\n      enter_parent_email: \"Introduz o e-mail do teu educador:\",\n      account_created: \"Conta Criada!\",\n      confirm_student_blurb: \"Aponta a tua informação para que não a esqueças. O teu professor também te pode ajudar a reiniciar a tua palavra-passe a qualquer altura.\",\n      confirm_individual_blurb: \"Aponta a tua informação de início de sessão caso precises dela mais tarde. Verifica o teu e-mail para que possas recuperar a tua conta se alguma vez esqueceres a tua palavra-passe - verifica a tua caixa de entrada!\",\n      write_this_down: \"Aponta isto:\",\n      start_playing: \"Começar a Jogar!\",\n      select_your_starting_hero: \"Escolhe o Teu Herói Inicial:\",\n      you_can_always_change_your_hero_later: \"Podes sempre alterar o teu herói mais tarde.\"\n    },\n    recover: {\n      recover_account_title: \"Recuperar Conta\",\n      send_password: \"Enviar Palavra-passe de Recuperação\",\n      recovery_sent: \"E-mail de recuperação enviado.\"\n    },\n    items: {\n      primary: \"Primários\",\n      secondary: \"Secundários\",\n      armor: \"Armadura\",\n      accessories: \"Acessórios\",\n      misc: \"Vários\",\n      books: \"Livros\"\n    },\n    common: {\n      back: \"Voltar\",\n      coming_soon: \"Brevemente!\",\n      \"continue\": \"Continuar\",\n      next: \"Próximo\",\n      default_code: \"Código Original\",\n      loading: \"A Carregar...\",\n      overview: \"Visão Geral\",\n      processing: \"A processar...\",\n      solution: \"Solução\",\n      table_of_contents: \"Tabela de Conteúdos\",\n      intro: \"Introdução\",\n      saving: \"A Guardar...\",\n      sending: \"A Enviar...\",\n      send: \"Enviar\",\n      sent: \"Enviado\",\n      cancel: \"Cancelar\",\n      save: \"Guardar\",\n      publish: \"Publicar\",\n      create: \"Criar\",\n      fork: \"Bifurcar\",\n      play: \"Jogar\",\n      retry: \"Tentar Novamente\",\n      actions: \"Ações\",\n      info: \"Informações\",\n      help: \"Ajuda\",\n      watch: \"Vigiar\",\n      unwatch: \"Desvigiar\",\n      submit_patch: \"Submeter Atualização\",\n      submit_changes: \"Submeter Alterações\",\n      save_changes: \"Guardar Alterações\",\n      required_field: \"necessário\"\n    },\n    general: {\n      and: \"e\",\n      name: \"Nome\",\n      date: \"Data\",\n      body: \"Corpo\",\n      version: \"Versão\",\n      pending: \"Pendentes\",\n      accepted: \"Aceites\",\n      rejected: \"Rejeitadas\",\n      withdrawn: \"Canceladas\",\n      accept: \"Aceitar\",\n      reject: \"Rejeitar\",\n      withdraw: \"Cancelar\",\n      submitter: \"Submissor\",\n      submitted: \"Submeteu\",\n      commit_msg: \"Mensagem da Submissão\",\n      version_history: \"Histórico de Versões\",\n      version_history_for: \"Histórico de Versões para: \",\n      select_changes: \"Seleciona duas das alterações abaixo para veres a diferença.\",\n      undo_prefix: \"Desfazer\",\n      undo_shortcut: \"(Ctrl+Z)\",\n      redo_prefix: \"Refazer\",\n      redo_shortcut: \"(Ctrl+Shift+Z)\",\n      play_preview: \"Jogar pré-visualização do nível atual\",\n      result: \"Resultado\",\n      results: \"Resultados\",\n      description: \"Descrição\",\n      or: \"ou\",\n      subject: \"Assunto\",\n      email: \"E-mail\",\n      password: \"Palavra-passe\",\n      confirm_password: \"Confirmar Palavra-passe\",\n      message: \"Mensagem\",\n      code: \"Código\",\n      ladder: \"Classificação\",\n      when: \"Quando\",\n      opponent: \"Adversário\",\n      rank: \"Classificação\",\n      score: \"Pontuação\",\n      win: \"Vitória\",\n      loss: \"Derrota\",\n      tie: \"Empate\",\n      easy: \"Fácil\",\n      medium: \"Médio\",\n      hard: \"Difícil\",\n      player: \"Jogador\",\n      player_level: \"Nível\",\n      warrior: \"Guerreiro\",\n      ranger: \"Arqueiro\",\n      wizard: \"Feiticeiro\",\n      first_name: \"Nome\",\n      last_name: \"Apelido\",\n      last_initial: \"Última Inicial\",\n      username: \"Nome de utilizador\",\n      contact_us: \"Contacta-nos\",\n      close_window: \"Fechar Janela\",\n      learn_more: \"Saber Mais\",\n      more: \"Mais\",\n      fewer: \"Menos\",\n      \"with\": \"com\"\n    },\n    units: {\n      second: \"segundo\",\n      seconds: \"segundos\",\n      sec: \"seg\",\n      minute: \"minuto\",\n      minutes: \"minutos\",\n      hour: \"hora\",\n      hours: \"horas\",\n      day: \"dia\",\n      days: \"dias\",\n      week: \"semana\",\n      weeks: \"semanas\",\n      month: \"mês\",\n      months: \"meses\",\n      year: \"ano\",\n      years: \"anos\"\n    },\n    play_level: {\n      back_to_map: \"Voltar ao Mapa\",\n      directions: \"Direções\",\n      edit_level: \"Editar Nível\",\n      explore_codecombat: \"Explorar o CodeCombat\",\n      finished_hoc: \"Terminei a minha Hora do Código\",\n      get_certificate: \"Obtém o teu certificado!\",\n      level_complete: \"Nível Completo\",\n      completed_level: \"Nível Completo:\",\n      course: \"Curso:\",\n      done: \"Concluir\",\n      next_level: \"Próximo Nível\",\n      next_game: \"Próximo jogo\",\n      languages: \"Linguagens\",\n      programming_language: \"Linguagem de programação\",\n      show_menu: \"Mostrar o menu do jogo\",\n      home: \"Início\",\n      level: \"Nível\",\n      skip: \"Saltar\",\n      game_menu: \"Menu do Jogo\",\n      restart: \"Reiniciar\",\n      goals: \"Objetivos\",\n      goal: \"Objetivo\",\n      running: \"A Executar...\",\n      success: \"Sucesso!\",\n      incomplete: \"Incompletos\",\n      timed_out: \"Ficaste sem tempo\",\n      failing: \"A falhar\",\n      reload: \"Recarregar\",\n      reload_title: \"Recarregar o Código Todo?\",\n      reload_really: \"Tens a certeza que queres recarregar este nível de volta ao início?\",\n      reload_confirm: \"Recarregar Tudo\",\n      test_level: \"Testar Nível\",\n      victory: \"Vitória\",\n      victory_title_prefix: \"\",\n      victory_title_suffix: \" Concluído\",\n      victory_sign_up: \"Criar Conta para Guardar Progresso\",\n      victory_sign_up_poke: \"Queres guardar o teu código? Cria uma conta grátis!\",\n      victory_rate_the_level: \"Quão divertido foi este nível?\",\n      victory_return_to_ladder: \"Voltar à Classificação\",\n      victory_saving_progress: \"A Guardar Progresso\",\n      victory_go_home: \"Ir para o Início\",\n      victory_review: \"Conta-nos mais!\",\n      victory_review_placeholder: \"Como foi o nível?\",\n      victory_hour_of_code_done: \"Terminaste?\",\n      victory_hour_of_code_done_yes: \"Sim, terminei a minha Hora do Código™!\",\n      victory_experience_gained: \"XP Ganho\",\n      victory_gems_gained: \"Gemas Ganhas\",\n      victory_new_item: \"Novo Item\",\n      victory_new_hero: \"Novo Herói\",\n      victory_become_a_viking: \"Torna-te um Viking\",\n      victory_no_progress_for_teachers: \"O progresso não é guardado para professores. Mas podes adicionar à tua turma uma conta de estudante para ti.\",\n      tome_cast_button_run: \"Executar\",\n      tome_cast_button_running: \"A Executar\",\n      tome_cast_button_ran: \"Executado\",\n      tome_submit_button: \"Submeter\",\n      tome_reload_method: \"Recarregar o código original para recomeçar o nível\",\n      tome_available_spells: \"Feitiços Disponíveis\",\n      tome_your_skills: \"As Tuas Habilidades\",\n      hints: \"Dicas\",\n      hints_title: \"Dica {{number}}\",\n      code_saved: \"Código Guardado\",\n      skip_tutorial: \"Saltar (esc)\",\n      keyboard_shortcuts: \"Atalhos de Teclado\",\n      loading_start: \"Iniciar Nível\",\n      problem_alert_title: \"Corrige o Teu Código\",\n      time_current: \"Agora:\",\n      time_total: \"Máximo:\",\n      time_goto: \"Ir para:\",\n      non_user_code_problem_title: \"Impossível Carregar o Nível\",\n      infinite_loop_title: \"'Loop' Infinito Detetado\",\n      infinite_loop_description: \"O código inicial para construir o mundo nunca parou de ser executado. Provavelmente é muito lento ou contém um 'loop' infinito. Ou talvez haja um erro. Podes tentar executar este código novamente ou reiniciá-lo para o estado predefinido. Se isso não resultar, avisa-nos, por favor.\",\n      check_dev_console: \"Também podes abrir a consola para programadores para veres o que possa estar a correr mal.\",\n      check_dev_console_link: \"(instruções)\",\n      infinite_loop_try_again: \"Tentar Novamente\",\n      infinite_loop_reset_level: \"Reiniciar Nível\",\n      infinite_loop_comment_out: \"Comentar o Meu Código\",\n      tip_toggle_play: \"Alterna entre Jogar e Pausar com Ctrl+P.\",\n      tip_scrub_shortcut: \"Usa Ctrl+[ para rebobinar e Ctrl+] para avançar.\",\n      tip_guide_exists: \"Clica no guia, dentro do menu do jogo (no topo da página), para informações úteis.\",\n      tip_open_source: \"O CodeCombat é 100% open source!\",\n      tip_tell_friends: \"Estás a gostar do CodeCombat? Fala de nós aos teus amigos!\",\n      tip_beta_launch: \"O CodeCombat lançou o seu beta em outubro de 2013.\",\n      tip_think_solution: \"Pensa na solução, não no problema.\",\n      tip_theory_practice: \"Teoricamente, não há diferença entre a teoria e a prática. Mas na prática, há. - Yogi Berra\",\n      tip_error_free: \"Há duas formas de escrever programas sem erros; apenas a terceira funciona. - Alan Perlis\",\n      tip_debugging_program: \"Se depurar é o processo de remover erros, então programar deve ser o processo de os introduzir. - Edsger W. Dijkstra\",\n      tip_forums: \"Vai aos fóruns e diz-nos o que pensas!\",\n      tip_baby_coders: \"No futuro, até os bebés serão Arcomagos.\",\n      tip_morale_improves: \"O carregamento vai continuar até que a moral melhore.\",\n      tip_all_species: \"Acreditamos em oportunidades iguais para todas as espécies, em relação a aprenderem a programar.\",\n      tip_reticulating: \"A reticular espinhas.\",\n      tip_harry: \"És um Feiticeiro, \",\n      tip_great_responsibility: \"Com uma grande habilidade de programação vem uma grande responsabilidade de depuração.\",\n      tip_munchkin: \"Se não comeres os teus vegetais, um ogre virá atrás de ti enquanto estiveres a dormir.\",\n      tip_binary: \"Há apenas 10 tipos de pessoas no mundo: aquelas que percebem binário e aquelas que não.\",\n      tip_commitment_yoda: \"Um programador deve ter o compromisso mais profundo, a mente mais séria. ~ Yoda\",\n      tip_no_try: \"Fazer. Ou não fazer. Não há nenhum tentar. - Yoda\",\n      tip_patience: \"Paciência tu deves ter, jovem Padawan. - Yoda\",\n      tip_documented_bug: \"Um erro documentado não é um erro; é uma funcionalidade.\",\n      tip_impossible: \"Parece sempre impossível até ser feito. - Nelson Mandela\",\n      tip_talk_is_cheap: \"Falar é fácil. Mostra-me o código. - Linus Torvalds\",\n      tip_first_language: \"A coisa mais desastrosa que podes aprender é a tua primeira linguagem de programação. - Alan Kay\",\n      tip_hardware_problem: \"P: Quantos programadores são necessários para mudar uma lâmpada?  R: Nenhum, é um problema de 'hardware'.\",\n      tip_hofstadters_law: \"Lei de Hofstadter: Tudo demora sempre mais do que pensas, mesmo quando tens em conta a Lei de Hofstadter.\",\n      tip_premature_optimization: \"Uma otimização permatura é a raíz de todo o mal. - Donald Knuth\",\n      tip_brute_force: \"Quando em dúvida, usa a força bruta. - Ken Thompson\",\n      tip_extrapolation: \"Há apenas dois tipos de pessoas: aquelas que conseguem tirar uma conclusão a partir de dados reduzidos...\",\n      tip_superpower: \"A programação é a coisa mais próxima de um superpoder que temos.\",\n      tip_control_destiny: \"Em open source a sério, tens o direito de controlares o teu próprio destino. - Linus Torvalds\",\n      tip_no_code: \"Nenhum código é mais rápido que código não existente.\",\n      tip_code_never_lies: \"O código nunca mente, mas os comentários às vezes sim. — Ron Jeffries\",\n      tip_reusable_software: \"Antes de um software poder ser reutilizável, primeiro tem de ser utilizável.\",\n      tip_optimization_operator: \"Todas as linguagens têm um operador de otimização. Na maior parte delas esse operador é ‘//’.\",\n      tip_lines_of_code: \"Medir o progresso em programação pelo número de linhas de código é como medir o progresso da construção de um avião pelo peso. — Bill Gates\",\n      tip_source_code: \"Quero mudar o mundo, mas não há maneira de me darem o código-fonte.\",\n      tip_javascript_java: \"Java é para JavaScript o mesmo que Carro (Car) para Tapete (Carpet). - Chris Heilmann\",\n      tip_move_forward: \"Faças o que fizeres, segue em frente. - Martin Luther King Jr\",\n      tip_google: \"Tens um problema que não consegues resolver? Vai ao Google!\",\n      tip_adding_evil: \"A acrescentar uma pitada de mal.\",\n      tip_hate_computers: \"É o problema das pessoas que acham que odeiam coputadores. O que elas odeiam mesmo são maus programadores. - Larry Niven\",\n      tip_open_source_contribute: \"Podes ajudar a melhorar o CodeCombat!\",\n      tip_recurse: \"Iterar é humano, recursar é divino. - L. Peter Deutsch\",\n      tip_free_your_mind: \"Tens de libertar tudo, Neo. Medo, dúvida e descrença. Liberta a tua mente. - Morpheus\",\n      tip_strong_opponents: \"Até o mais forte dos adversários tem uma fraqueza. - Itachi Uchiha\",\n      tip_paper_and_pen: \"Antes de começares a programar, podes sempre planear com uma folha de papel e uma caneta.\",\n      tip_solve_then_write: \"Primeiro, resolve o problema. Depois, escreve o código. - John Johnson\",\n      tip_compiler_ignores_comments: \"Às vezes acho que o compilador ignora os meus comentários.\",\n      tip_understand_recursion: \"A única forma de entender recursão é entender recursão.\",\n      project_complete: \"Projeto Completado!\",\n      ready_to_share: \"Pronto para publicares o teu projeto?\",\n      view_gallery: \"Ver Galeria\",\n      project_published_noty: \"O teu nível foi publicado!\",\n      keep_editing: \"Continuar a Editar\"\n    },\n    apis: {\n      methods: \"Métodos\",\n      events: \"Eventos\",\n      html: \"HTML\",\n      math: \"Matemática\",\n      object: \"Objeto\",\n      \"function\": \"Função\",\n      vector: \"Vetor\",\n      date: \"Data\",\n      jquery: \"jQuery\",\n      json: \"JSON\",\n      number: \"Número\",\n      webjavascript: \"JavaScript\"\n    },\n    play_game_dev_level: {\n      created_by: \"Criado por {{name}}\",\n      created_during_hoc: \"Criado durante a Hora do Código\",\n      restart: \"Recomeçar Nível\",\n      play: \"Jogar Nível\",\n      play_more_codecombat: \"Jogar Mais CodeCombat\",\n      default_student_instructions: \"Clica para controlares o teu herói e ganhares o teu jogo!\",\n      goal_survive: \"Sobrevive.\",\n      goal_survive_time: \"Sobrevive por __seconds__ segundos.\",\n      goal_defeat: \"Derrota todos os inimigos.\",\n      goal_defeat_amount: \"Derrota __amount__ inimigos.\"\n    },\n    game_menu: {\n      inventory_tab: \"Inventário\",\n      save_load_tab: \"Guardar/Carregar\",\n      options_tab: \"Opções\",\n      guide_tab: \"Guia\",\n      guide_video_tutorial: \"Tutorial em Vídeo\",\n      guide_tips: \"Dicas\",\n      multiplayer_tab: \"Multijogador\",\n      auth_tab: \"Regista-te\",\n      inventory_caption: \"Equipa o teu herói\",\n      choose_hero_caption: \"Escolhe o herói, a linguagem\",\n      options_caption: \"Configura as definições\",\n      guide_caption: \"Documentos e dicas\",\n      multiplayer_caption: \"Joga com amigos!\",\n      auth_caption: \"Guarda o teu progresso.\"\n    },\n    leaderboard: {\n      view_other_solutions: \"Ver Tabelas de Classificação\",\n      scores: \"Pontuações\",\n      top_players: \"Melhores Jogadores por\",\n      day: \"Hoje\",\n      week: \"Esta Semana\",\n      all: \"Sempre\",\n      latest: \"Mais Recentes\",\n      time: \"Tempo de Vitória\",\n      damage_taken: \"Dano Recebido\",\n      damage_dealt: \"Dano Infligido\",\n      difficulty: \"Dificuldade\",\n      gold_collected: \"Ouro Recolhido\",\n      defeated: \"Inimigos Derrotados\",\n      code_length: \"Linhas de Código\",\n      score_display: \"__scoreType__: __score__\"\n    },\n    inventory: {\n      equipped_item: \"Equipado\",\n      required_purchase_title: \"Necessário\",\n      available_item: \"Disponível\",\n      restricted_title: \"Restrito\",\n      should_equip: \"(clica duas vezes para equipares)\",\n      equipped: \"(equipado)\",\n      locked: \"(bloqueado)\",\n      restricted: \"(restrito neste nível)\",\n      equip: \"Equipar\",\n      unequip: \"Desequipar\"\n    },\n    buy_gems: {\n      few_gems: \"Algumas gemas\",\n      pile_gems: \"Pilha de gemas\",\n      chest_gems: \"Arca de gemas\",\n      purchasing: \"A Adquirir...\",\n      declined: \"O teu cartão foi recusado.\",\n      retrying: \"Erro do servidor, a tentar novamente.\",\n      prompt_title: \"Sem Gemas Suficientes\",\n      prompt_body: \"Queres obter mais?\",\n      prompt_button: \"Entra na Loja\",\n      recovered: \"A compra de gemas anterior foi recuperada. Por favor atualiza a página.\",\n      price: \"x{{gems}} / mês\",\n      buy_premium: \"Comprar 'Premium'\",\n      purchase: \"Adquirir\",\n      purchased: \"Adquirido\"\n    },\n    earn_gems: {\n      prompt_title: \"Gemas Insuficientes\",\n      prompt_body: \"Continua a jogar para receberes mais!\"\n    },\n    subscribe: {\n      subscribe_modal_title: \"CodeCombat 'Premium'\",\n      comparison_blurb: \"Torna-te um Programador Mestre - subscreve-te ao <b>'Premium'</b> hoje!\",\n      must_be_logged: \"Primeiro tens de ter sessão iniciada. Por favor, cria uma conta ou inicia sessão a partir do menu acima.\",\n      subscribe_title: \"Subscrever\",\n      unsubscribe: \"Cancelar Subscrição\",\n      confirm_unsubscribe: \"Confirmar Cancelamento da Subscrição\",\n      never_mind: \"Não Importa, Gostamos de Ti à Mesma\",\n      thank_you_months_prefix: \"Obrigado por nos teres apoiado neste(s) último(s)\",\n      thank_you_months_suffix: \"mês(meses).\",\n      thank_you: \"Obrigado por apoiares o CodeCombat.\",\n      sorry_to_see_you_go: \"Lamentamos ver-te partir! Por favor, diz-nos o que podíamos ter feito melhor.\",\n      unsubscribe_feedback_placeholder: \"Oh, o que fomos fazer?\",\n      stripe_description: \"Subscrição Mensal\",\n      buy_now: \"Comprar Agora\",\n      subscription_required_to_play: \"Precisas de uma subscrição para jogares este nível.\",\n      unlock_help_videos: \"Subscreve-te para desbloqueares todos os tutoriais em vídeo.\",\n      personal_sub: \"Subscrição Pessoal\",\n      loading_info: \"A carregar as informações da subscrição...\",\n      managed_by: \"Gerida por\",\n      will_be_cancelled: \"Será cancelada em\",\n      currently_free: \"Atualmente tens uma subscrição gratuita\",\n      currently_free_until: \"Atualmente tens uma subscrição até\",\n      free_subscription: \"Subscrição gratuita\",\n      was_free_until: \"Tinhas uma subscrição gratuita até\",\n      managed_subs: \"Subscrições Geridas\",\n      subscribing: \"A Subscrever...\",\n      current_recipients: \"Beneficiários Atuais\",\n      unsubscribing: \"A Cancelar a Subscrição\",\n      subscribe_prepaid: \"Clica em Subscrever para usares um código pré-pago\",\n      using_prepaid: \"A usar um código pré-pago para a subscrição mensal\",\n      feature_level_access: \"Acede a 300+ níveis disponíveis\",\n      feature_heroes: \"Desbloqueia heróis e animais exclusivos\",\n      feature_learn: \"Aprende a criar jogos e websites\",\n      month_price: \"$__price__\",\n      first_month_price: \"Apenas $__price__ pelo teu primeiro mês!\",\n      lifetime: \"Acesso Vitalício\",\n      lifetime_price: \"$__price__\",\n      year_subscription: \"Subscrição Anual\",\n      year_price: \"$__price__/ano\",\n      support_part1: \"Precisas de ajuda com o pagamento ou preferes PayPal? Envia um e-mail para\",\n      support_part2: \"support@codecombat.com\"\n    },\n    choose_hero: {\n      choose_hero: \"Escolhe o Teu Herói\",\n      programming_language: \"Linguagem de Programação\",\n      programming_language_description: \"Que linguagem de programação queres usar?\",\n      \"default\": \"Predefinida\",\n      experimental: \"Experimental\",\n      python_blurb: \"Simples mas poderoso; ótimo para iniciantes e peritos.\",\n      javascript_blurb: \"A linguagem da web. (Não é o mesmo que Java.)\",\n      coffeescript_blurb: \"Javascript com sintaxe mais agradável.\",\n      lua_blurb: \"Linguagem para scripts de jogos.\",\n      java_blurb: \"(Apenas para Subscritores) Android e empresas.\",\n      status: \"Estado\",\n      weapons: \"Armas\",\n      weapons_warrior: \"Espadas - Curto Alcance, Sem Magia\",\n      weapons_ranger: \"Arcos, Armas - Longo Alcance, Sem Magia\",\n      weapons_wizard: \"Varinhas, Bastões - Longo Alcance, Magia\",\n      attack: \"Ataque\",\n      health: \"Vida\",\n      speed: \"Velocidade\",\n      regeneration: \"Regeneração\",\n      range: \"Alcance\",\n      blocks: \"Bloqueia\",\n      backstab: \"Colateral\",\n      skills: \"Habilidades\",\n      attack_1: \"Dá\",\n      attack_2: \"do dano da arma do\",\n      attack_3: \"apresentado.\",\n      health_1: \"Ganha\",\n      health_2: \"da vida da armadura do\",\n      health_3: \"apresentado.\",\n      speed_1: \"Move a\",\n      speed_2: \"metros por segundo.\",\n      available_for_purchase: \"Disponível para Aquisição\",\n      level_to_unlock: \"Nível para desbloquear:\",\n      restricted_to_certain_heroes: \"Apenas certos heróis podem jogar este nível.\"\n    },\n    skill_docs: {\n      \"function\": \"função\",\n      method: \"método\",\n      snippet: \"fragmento\",\n      number: \"número\",\n      array: \"'array'\",\n      object: \"objeto\",\n      string: \"'string'\",\n      writable: \"editável\",\n      read_only: \"apenas leitura\",\n      action: \"Ação -\",\n      spell: \"Feitiço -\",\n      action_name: \"nome\",\n      action_cooldown: \"Demora\",\n      action_specific_cooldown: \"Tempo de Recarga\",\n      action_damage: \"Dano\",\n      action_range: \"Alcance\",\n      action_radius: \"Raio\",\n      action_duration: \"Duração\",\n      example: \"Exemplo\",\n      ex: \"ex\",\n      current_value: \"Valor Atual\",\n      default_value: \"Valor Predefinido\",\n      parameters: \"Parâmetros\",\n      required_parameters: \"Parâmetros Necessários\",\n      optional_parameters: \"Parâmetros Opcionais\",\n      returns: \"Devolve\",\n      granted_by: \"Garantido por\"\n    },\n    save_load: {\n      granularity_saved_games: \"Guardados\",\n      granularity_change_history: \"Histórico\"\n    },\n    options: {\n      general_options: \"Opções Gerais\",\n      volume_label: \"Volume\",\n      music_label: \"Música\",\n      music_description: \"Ativar ou desativar a música de fundo.\",\n      editor_config_title: \"Configurar Editor\",\n      editor_config_livecompletion_label: \"Auto-completação em Tempo Real\",\n      editor_config_livecompletion_description: \"Mostrar sugestões de auto-completação aquando da escrita.\",\n      editor_config_invisibles_label: \"Mostrar Invisíveis\",\n      editor_config_invisibles_description: \"Mostrar invisíveis tais como espaços e tabulações.\",\n      editor_config_indentguides_label: \"Mostrar Guias de Indentação\",\n      editor_config_indentguides_description: \"Mostrar linhas verticais para se ver melhor a indentação.\",\n      editor_config_behaviors_label: \"Comportamentos Inteligentes\",\n      editor_config_behaviors_description: \"Auto-completar parênteses, chavetas e aspas.\"\n    },\n    about: {\n      main_title: \"Se queres aprender a programar, precisas de escrever (muito) código.\",\n      main_description: \"No CodeCombat, o nosso trabalho é certificarmo-nos de que estás a fazer isso com um sorriso na cara.\",\n      mission_link: \"Missão\",\n      team_link: \"Equipa\",\n      story_link: \"História\",\n      press_link: \"Imprensa\",\n      mission_title: \"A nossa missão: tornar a programação acessível a todos os estudantes da Terra.\",\n      mission_description_1: \"<strong>A programação é mágica</strong>. É a capacidade de criar coisas a partir de imaginação pura. Começamos o CodeCombat para dar aos utilizadores a sensação de terem poderes mágicos nas pontas dos dedos ao usarem <strong>código escrito</strong>.\",\n      team_title: \"Conhece a equipa do CodeCombat\",\n      nick_title: \"Co-fundador, CEO\",\n      matt_title: \"Co-fundador, CTO\",\n      cat_title: \"Designer de Jogos\",\n      scott_title: \"Co-fundador, Engenheiro de Software\",\n      maka_title: \"Defensor dos Clientes\",\n      robin_title: \"Gestora de Produto\",\n      nolan_title: \"Gestor de Território\",\n      lisa_title: \"Especialista em Escolas\",\n      sean_title: \"Gestor de Território\",\n      liz_title: \"Gestora de Território\",\n      jane_title: \"Gestor de Parcerias\",\n      david_title: \"Gestor de Sucesso do Consumidor\",\n      retrostyle_title: \"Ilustração\",\n      retrostyle_blurb: \"'RetroStyle Games'\",\n      bryukh_title: \"Designer de Jogos\",\n      bryukh_blurb: \"Constrói puzzles\",\n      community_title: \"...e a nossa comunidade open source\",\n      community_subtitle: \"Mais de 500 contribuidores ajudaram a construir o CodeCombat, com mais a se juntarem todas as semanas!\",\n      community_description_3: \"O CodeCombat é um\",\n      community_description_link_2: \"projeto comunitário\",\n      community_description_link: \"página de contribuição\",\n      community_description_2: \"para mais informações.\",\n      number_contributors: \"Mais de 450 contribuidores deram o seu apoio e tempo a este projeto.\",\n      story_title: \"A nossa história até agora\",\n      story_subtitle: \"Desde 2013, o CodeCombat cresceu de um mero conjunto de esboços para um jogo palpável e próspero.\",\n      story_statistic_1a: \"5,000,000+\",\n      story_statistic_1b: \"jogadores no total\",\n      story_statistic_1c: \"começaram a jornada de programação deles pelo CodeCombat\",\n      story_statistic_2a: \"Fomos traduzidos para mais de 50 idiomas — os nossos jogadores saudam a partir de\",\n      story_statistic_2b: \"200+ países\",\n      story_statistic_3a: \"Juntos, eles escreveram\",\n      story_statistic_3b: \"mil milhões de linhas de código (e continua a contar)\",\n      story_statistic_3c: \"em muitas linguagens de programação diferentes\",\n      contact_title: \"Imprensa e Contactos\",\n      contact_subtitle: \"Precisas de mais informação? Entra em contacto connosco através de\",\n      previous: \"Anterior\"\n    },\n    teachers: {\n      licenses_needed: \"Licenças necessárias\"\n    },\n    teachers_quote: {\n      phone_number: \"Número de telemóvel\",\n      phone_number_help: \"Para onde podemos ligar-te durante o dia de trabalho?\",\n      primary_role_label: \"O Teu Cargo Principal\",\n      role_default: \"Selecionar Cargo\",\n      tech_coordinator: \"Coordenador de Tecnologia\",\n      principal: \"Diretor\",\n      superintendent: \"Superintendente\",\n      parent: \"Educador\",\n      district_label: \"Distrito\",\n      district_name: \"Nome do Distrito\",\n      district_na: \"Escreve N/A se não se aplicar\",\n      organization_label: \"Escola\",\n      school_name: \"Nome da Escola\",\n      city: \"Cidade\",\n      state: \"Estado\",\n      country: \"País\",\n      num_students_help: \"Quantos estudantes vão usar o CodeCombat?\",\n      num_students_default: \"Selecionar Intervalo\",\n      education_level_label: \"Nível de Educação dos Estudantes\",\n      education_level_help: \"Escolhe todos os que se aplicarem.\",\n      please_explain: \"(por favor, explica)\",\n      referrer: \"Como ouviste falar de nós?\",\n      referrer_help: \"Por exemplo: através de outro professor, de uma conferência, dos teus estudantes, do Code.org, etc.\",\n      referrer_default: \"Seleciona Um\",\n      referrer_hoc: \"Code.org/Hora do Código\",\n      referrer_teacher: \"Um professor\",\n      referrer_admin: \"Um administrador\",\n      referrer_student: \"Um estudante\",\n      referrer_web: \"Google\",\n      referrer_other: \"Outro\",\n      thanks_header: \"Pedido Recebido!\",\n      back_to_classes: \"Voltar às Turmas\",\n      connect_with: \"Conectar com:\",\n      create_account: \"Criar uma Conta de Professor\",\n      create_account_subtitle: \"Obtém acesso a ferramentas reservadas a professores para usares o CodeCombat na sala de aula. <strong>Cria uma turma</strong>, adiciona os teus alunos e <strong>monitoriza o progresso deles</strong>!\"\n    },\n    versions: {\n      save_version_title: \"Guardar Nova Versão\",\n      new_major_version: \"Nova Versão Principal\",\n      submitting_patch: \"A Submeter Atualização...\",\n      cla_prefix: \"Para guardares as alterações, precisas de concordar com o nosso\",\n      cla_url: \"CLA\",\n      cla_suffix: \".\",\n      cla_agree: \"EU CONCORDO\",\n      owner_approve: \"Um administrador terá de aprová-la antes de as tuas alterações ficarem visíveis.\"\n    },\n    contact: {\n      contact_us: \"Contacta o CodeCombat\",\n      welcome: \"É bom ter notícias tuas! Usa este formulário para nos enviares um e-mail. \",\n      forum_prefix: \"Para algo público, por favor usa o \",\n      forum_page: \"nosso fórum\",\n      forum_suffix: \" como alternativa.\",\n      faq_prefix: \"Há também uma\",\n      faq: \"FAQ\",\n      subscribe_prefix: \"Se precisas de ajuda a perceber um nível, por favor\",\n      subscribe: \"compra uma subscrição do CodeCombat\",\n      subscribe_suffix: \"e nós ficaremos felizes por ajudar-te com o teu código.\",\n      subscriber_support: \"Como és um subscritor do CodeCombat, os teus e-mails terão prioridade no nosso suporte.\",\n      screenshot_included: \"Captura de ecrã incluída.\",\n      where_reply: \"Para onde devemos enviar a resposta?\",\n      send: \"Enviar Feedback\"\n    },\n    account_settings: {\n      title: \"Definições da Conta\",\n      not_logged_in: \"Inicia sessão ou cria uma conta para alterares as tuas definições.\",\n      me_tab: \"Eu\",\n      picture_tab: \"Fotografia\",\n      delete_account_tab: \"Elimina a Tua Conta\",\n      wrong_email: \"E-mail Errado\",\n      wrong_password: \"Palavra-passe Errada\",\n      delete_this_account: \"Elimina esta conta permanentemente\",\n      reset_progress_tab: \"Reiniciar Todo o Progresso\",\n      reset_your_progress: \"Limpar todo o teu progresso e começar de novo\",\n      god_mode: \"Modo Deus\",\n      emails_tab: \"E-mails\",\n      admin: \"Administrador\",\n      manage_subscription: \"Clica aqui para gerires a tua subscrição.\",\n      new_password: \"Nova Palavra-passe\",\n      new_password_verify: \"Verificar\",\n      type_in_email: \"Escreve o teu e-mail ou nome de utilizador para confirmares a eliminação da conta.\",\n      type_in_email_progress: \"Escreve o teu e-mail para confirmares a eliminação do teu progresso.\",\n      type_in_password: \"Escreve também a tua palavra-passe.\",\n      email_subscriptions: \"Subscrições de E-mail\",\n      email_subscriptions_none: \"Sem Subscições de E-mail.\",\n      email_announcements: \"Anúncios\",\n      email_announcements_description: \"Recebe e-mails sobre as últimas novidades e desenvolvimentos no CodeCombat.\",\n      email_notifications: \"Notificações\",\n      email_notifications_summary: \"Controla, de uma forma personalizada e automática, os e-mails de notificações relacionados com a tua atividade no CodeCombat.\",\n      email_any_notes: \"Quaisquer Notificações\",\n      email_any_notes_description: \"Desativa para parares de receber todos os e-mails de notificação de atividade.\",\n      email_news: \"Notícias\",\n      email_recruit_notes: \"Oportunidades de Emprego\",\n      email_recruit_notes_description: \"Se jogas muito bem, podemos contactar-te para te arranjar um (melhor) emprego.\",\n      contributor_emails: \"E-mail Para Contribuintes\",\n      contribute_prefix: \"Estamos à procura de pessoas para se juntarem a nós! Visita a \",\n      contribute_page: \"página de contribuição\",\n      contribute_suffix: \" para mais informações.\",\n      email_toggle: \"Alternar Todos\",\n      error_saving: \"Erro ao Guardar\",\n      saved: \"Alterações Guardadas\",\n      password_mismatch: \"As palavras-passe não coincidem.\",\n      password_repeat: \"Por favor repete a tua palavra-passe.\"\n    },\n    keyboard_shortcuts: {\n      keyboard_shortcuts: \"Atalhos de Teclado\",\n      space: \"Espaço\",\n      enter: \"Enter\",\n      press_enter: \"pressiona enter\",\n      escape: \"Esc\",\n      shift: \"Shift\",\n      run_code: \"Executar código atual.\",\n      run_real_time: \"Executar em tempo real.\",\n      continue_script: \"Saltar o script atual.\",\n      skip_scripts: \"Saltar todos os scripts saltáveis.\",\n      toggle_playback: \"Alternar entre Jogar e Pausar.\",\n      scrub_playback: \"Andar para a frente e para trás no tempo.\",\n      single_scrub_playback: \"Andar para a frente e para trás no tempo um único frame.\",\n      scrub_execution: \"Analisar a execução do feitiço atual.\",\n      toggle_debug: \"Ativar/desativar a janela de depuração.\",\n      toggle_grid: \"Ativar/desativar a sobreposição da grelha.\",\n      toggle_pathfinding: \"Ativar/desativar a sobreposição do encontrador de caminho.\",\n      beautify: \"Embelezar o código ao estandardizar a formatação.\",\n      maximize_editor: \"Maximizar/minimizar o editor de código.\"\n    },\n    community: {\n      main_title: \"Comunidade do CodeCombat\",\n      introduction: \"Confere abaixo as formas de te envolveres e escolhe a que te parece mais divertida. Estamos ansiosos por trabalhar contigo!\",\n      level_editor_prefix: \"Usa o\",\n      level_editor_suffix: \"do CodeCombat para criares e editares níveis. Os utilizadores já criaram níveis para aulas, amigos, maratonas hacker, estudantes e familiares. Se criar um nível novo parece intimidante, podes começar por bifurcar um dos nossos!\",\n      thang_editor_prefix: \"Chamamos 'thangs' às unidades do jogo. Usa o\",\n      thang_editor_suffix: \"para modificares a arte do CodeCombat. Faz as unidades lançarem projéteis, altera a direção de uma animação, altera os pontos de vida de uma unidade ou anexa as tuas próprias unidades.\",\n      article_editor_prefix: \"Vês um erro em alguns dos nossos documentos? Queres escrever algumas instruções para as tuas próprias criações? Confere o\",\n      article_editor_suffix: \"e ajuda os jogadores do CodeCombat a obter o máximo do tempo de jogo deles.\",\n      find_us: \"Encontra-nos nestes sítios\",\n      social_github: \"Confere todo o nosso código no GitHub\",\n      social_blog: \"Lê o blog do CodeCombat no Sett\",\n      social_discource: \"Junta-te à discussão no nosso fórum Discourse\",\n      social_facebook: \"Gosta do CodeCombat no Facebook\",\n      social_twitter: \"Segue o CodeCombat no Twitter\",\n      social_gplus: \"Junta-te ao CodeCombat no Google+\",\n      social_slack: \"Fala connosco no canal público do CodeCombat no Slack\",\n      contribute_to_the_project: \"Contribui para o projeto\"\n    },\n    clans: {\n      clan: \"Clã\",\n      clans: \"Clãs\",\n      new_name: \"Nome do novo clã\",\n      new_description: \"Descrição do novo clã\",\n      make_private: \"Tornar o clã privado\",\n      subs_only: \"apenas para subscritores\",\n      create_clan: \"Criar um Novo Clã\",\n      private_preview: \"Pré-visualização\",\n      private_clans: \"Clãs Privados\",\n      public_clans: \"Clãs Públicos\",\n      my_clans: \"Os Meus Clãs\",\n      clan_name: \"Nome do Clã\",\n      name: \"Nome\",\n      chieftain: \"Líder\",\n      edit_clan_name: \"Editar Nome do Clã\",\n      edit_clan_description: \"Editar Descrição do Clã\",\n      edit_name: \"editar nome\",\n      edit_description: \"editar descrição\",\n      \"private\": \"(privado)\",\n      summary: \"Resumo\",\n      average_level: \"Nível em Média\",\n      average_achievements: \"Conquistas em Média\",\n      delete_clan: \"Eliminar o Clã\",\n      leave_clan: \"Abandonar o Clã\",\n      join_clan: \"Entrar no Clã\",\n      invite_1: \"Convidar:\",\n      invite_2: \"*Convida jogadores para este Clã enviando-lhes esta ligação.\",\n      members: \"Membros\",\n      progress: \"Progresso\",\n      not_started_1: \"não começado\",\n      started_1: \"começado\",\n      complete_1: \"completo\",\n      exp_levels: \"Expandir os níveis\",\n      rem_hero: \"Remover Herói\",\n      status: \"Estado\",\n      complete_2: \"Completo\",\n      started_2: \"Começado\",\n      not_started_2: \"Não Começado\",\n      view_solution: \"Clica para veres a solução.\",\n      view_attempt: \"Clica para veres a tentativa.\",\n      latest_achievement: \"Última Conquista\",\n      playtime: \"Tempo de jogo\",\n      last_played: \"Última vez jogado\",\n      leagues_explanation: \"Joga numa liga contra outros membros do clã nestas instâncias de arenas multijogador.\",\n      track_concepts1: \"Acompanhe os conceitos\",\n      track_concepts2a: \"aprendidos por cada estudante\",\n      track_concepts2b: \"aprendidos por cada membro\",\n      track_concepts3a: \"Acompanhe os níveis completados por cada estudante\",\n      track_concepts3b: \"Acompanhe os níveis completados por cada membro\",\n      track_concepts4a: \"Veja, dos seus estudantes, as\",\n      track_concepts4b: \"Veja, dos seus membros, as\",\n      track_concepts5: \"soluções\",\n      track_concepts6a: \"Ordene os estudantes por nome ou progresso\",\n      track_concepts6b: \"Ordene os membros por nome ou progresso\",\n      track_concepts7: \"É necessário um convite\",\n      track_concepts8: \"para entrar\",\n      private_require_sub: \"É necessária uma subscrição para criar ou entrar num clã privado.\"\n    },\n    courses: {\n      create_new_class: \"Criar Turma Nova\",\n      unnamed_class: \"Turma Sem Nome\",\n      edit_settings1: \"Editar Definições da Turma\",\n      add_students: \"Adicionar Estudantes\",\n      stats: \"Estatísticas\",\n      total_students: \"Estudantes no total:\",\n      average_time: \"Média do tempo de jogo do nível:\",\n      total_time: \"Tempo de jogo total:\",\n      average_levels: \"Média de níveis completos:\",\n      total_levels: \"Total de níveis completos:\",\n      students: \"Estudantes\",\n      concepts: \"Conceitos\",\n      play_time: \"Tempo de jogo:\",\n      completed: \"Completos:\",\n      enter_emails: \"Separa cada endereço de e-mail com uma quebra de linha ou vírgulas\",\n      send_invites: \"Convidar Estudantes\",\n      number_programming_students: \"Número de Estudantes\",\n      number_total_students: \"Total de Estudantes na Escola/Distrito\",\n      enroll: \"Inscrever\",\n      enroll_paid: \"Inscrever Estudantes em Cursos Pagos\",\n      get_enrollments: \"Obter Mais Licenças\",\n      change_language: \"Alterar Linguagem do Curso\",\n      keep_using: \"Continuar a Usar\",\n      switch_to: \"Mudar Para\",\n      greetings: \"Saudações!\",\n      back_classrooms: \"Voltar às minhas turmas\",\n      back_classroom: \"Voltar à turma\",\n      back_courses: \"Voltar aos meus cursos\",\n      edit_details: \"Editar detalhes da turma\",\n      purchase_enrollments: \"Adquirir Licenças de Estudante\",\n      remove_student: \"remover estudante\",\n      student: \"Estudante\",\n      teacher: \"Professor\",\n      arena: \"Arena\",\n      available_levels: \"Níveis Disponíveis\",\n      started: \"começado\",\n      complete: \"completado\",\n      practice: \"prática\",\n      required: \"obrigatório\",\n      welcome_to_page: \"O Meu Painel de Estudante\",\n      my_classes: \"Turmas Atuais\",\n      class_added: \"Turma adicionada com sucesso!\",\n      view_levels: \"ver todos os níveis do curso\",\n      view_project_gallery: \"ver os projetos dos meus colegas\",\n      join_class: \"Entrar Numa Turma\",\n      join_class_2: \"Entrar na turma\",\n      ask_teacher_for_code: \"Pergunta ao teu professor se tens um código de turma do CodeCombat! Se tiveres, introdu-lo abaixo:\",\n      enter_c_code: \"<Introduzir Código de Turma>\",\n      join: \"Entrar\",\n      joining: \"A entrar na turma\",\n      course_complete: \"Curso Completo\",\n      play_arena: \"Jogar na Arena\",\n      view_project: \"Ver Projeto\",\n      start: \"Começar\",\n      last_level: \"Último nível jogado\",\n      not_you: \"Não és tu?\",\n      continue_playing: \"Continuar a Jogar\",\n      option1_header: \"Convidar Estudantes por E-mail\",\n      remove_student1: \"Remover Estudante\",\n      are_you_sure: \"Tens a certeza de que queres remover este estudante desta turma?\",\n      keep_student: \"Manter Estudante\",\n      removing_user: \"A remover utilizador\",\n      subtitle: \"Revê visões gerais de cursos e níveis\",\n      select_language: \"Selecionar linguagem\",\n      select_level: \"Selecionar nível\",\n      play_level: \"Jogar Nível\",\n      concepts_covered: \"Conceitos Abordados\",\n      view_guide_online: \"Visões Gerais e Soluções do Nível\",\n      grants_lifetime_access: \"Garante acesso a todos os Cursos.\",\n      enrollment_credits_available: \"Licenças Disponíveis:\",\n      language_select: \"Seleciona uma linguagem\",\n      language_cannot_change: \"A linguagem não pode ser alterada depois de estudantes entrarem numa turma.\",\n      avg_student_exp_label: \"Experiência Média de Programação dos Estudantes\",\n      avg_student_exp_desc: \"Isto vai-nos ajudar a perceber qual o melhor andamento para os cursos.\",\n      avg_student_exp_select: \"Seleciona a melhor opção\",\n      avg_student_exp_none: \"Nenhuma Experiência - pouca ou nenhuma experiência\",\n      avg_student_exp_beginner: \"Iniciante - alguma exposição ou baseada em blocos\",\n      avg_student_exp_intermediate: \"Intermédia - alguma experiência com código escrito\",\n      avg_student_exp_advanced: \"Avançada - muita experiência com código escrito\",\n      avg_student_exp_varied: \"Vários Níveis de Experiência\",\n      student_age_range_label: \"Intervalo de Idades dos Estudantes\",\n      student_age_range_younger: \"Menos de 6\",\n      student_age_range_older: \"Mais de 18\",\n      student_age_range_to: \"até\",\n      create_class: \"Criar Turma\",\n      class_name: \"Nome da Turma\",\n      account_restricted: \"É necessária uma conta de estudante para acederes a esta página.\",\n      update_account_title: \"A tua conta precisa de atenção!\",\n      update_account_am_teacher: \"Sou um professor\",\n      update_account_am_student: \"Sou um estudante\",\n      select_your_hero: \"Seleciona o Teu Herói\",\n      select_your_hero_description: \"Podes sempre alterar o teu herói ao acederes à tua página de Cursos e clicares em \\\"Alterar Herói\\\"\",\n      select_this_hero: \"Selecionar este herói\",\n      current_hero: \"Herói Atual:\",\n      current_hero_female: \"Heroína Atual:\",\n      course_membership_required_to_play: \"Precisas de te juntar a um curso para jogares este nível.\",\n      status: \"Estado:\"\n    },\n    project_gallery: {\n      no_projects_published: \"Sê o primeiro a publicar um projeto neste curso!\",\n      view_project: \"Ver Projeto\",\n      edit_project: \"Editar Projeto\"\n    },\n    teacher: {\n      code: \"Código de __name__\",\n      student_code: \"Código de Estudante de __name__\",\n      teacher_dashboard: \"Painel do Professor\",\n      my_classes: \"As Minhas Turmas\",\n      courses: \"Guias dos Cursos\",\n      enrollments: \"Licenças de Estudantes\",\n      resources: \"Recursos\",\n      help: \"Ajuda\",\n      language: \"Linguagem\",\n      edit_class_settings: \"editar definições da turma\",\n      access_restricted: \"Atualização de Conta Necessária\",\n      teacher_account_required: \"É necessária uma conta de professor para acederes a este conteúdo.\",\n      create_teacher_account: \"Criar Conta de Professor\",\n      what_is_a_teacher_account: \"O que é uma Conta de Professor?\",\n      current_classes: \"Turmas Atuais\",\n      archived_classes: \"Turmas Arquivadas\",\n      archived_classes_blurb: \"As turmas podem ser arquivadas para referência futura. Desarquiva uma turma para a veres novamente na lista das Turmas Atuais.\",\n      view_class: \"ver turma\",\n      archive_class: \"arquivar turma\",\n      unarchive_class: \"desarquivar turma\",\n      unarchive_this_class: \"Desarquivar esta turma\",\n      no_students_yet: \"Esta turma ainda não tem estudantes.\",\n      no_students_yet_view_class: \"Ver turma para adicionar estudantes.\",\n      try_refreshing: \"(Podes precisar de atualizar a página)\",\n      create_new_class: \"Criar uma Turma Nova\",\n      class_overview: \"Visão Geral da Turma\",\n      avg_playtime: \"Tempo de jogo médio por nível\",\n      total_playtime: \"Tempo de jogo total\",\n      avg_completed: \"Média de níveis completos\",\n      total_completed: \"Totalidade dos níveis completos\",\n      created: \"Criada\",\n      concepts_covered: \"Conceitos abordados\",\n      earliest_incomplete: \"Nível mais básico incompleto\",\n      latest_complete: \"Último nível completo\",\n      enroll_student: \"Inscrever estudante\",\n      apply_license: \"Aplicar Licença\",\n      revoke_license: \"Revogar Licença\",\n      course_progress: \"Progresso dos Cursos\",\n      not_applicable: \"N/A\",\n      edit: \"editar\",\n      edit_2: \"Editar\",\n      remove: \"remover\",\n      latest_completed: \"Último completo:\",\n      sort_by: \"Ordenar por\",\n      progress: \"Progresso\",\n      completed: \"Completaram\",\n      practice: \"Prática\",\n      started: \"Começaram\",\n      no_progress: \"Nenhum progresso\",\n      select_course: \"Seleciona o curso para ser visto\",\n      progress_color_key: \"Esquema de cores do progresso:\",\n      level_in_progress: \"Nível em Progresso\",\n      level_not_started: \"Nível Não Começado\",\n      project_or_arena: \"Projeto ou Arena\",\n      copy_class_code: \"Copiar Código de Turma\",\n      class_code_blurb: \"Os estudantes podem entrar na tua turma ao usarem este Código de Turma. Não é necessário nenhum endereço de e-mail aquando da criação de uma conta de Estudante com este Código de Turma.\",\n      copy_class_url: \"Copiar URL da Turma\",\n      class_join_url_blurb: \"Também podes publicar este URL único da turma numa página web partilhada.\",\n      add_students_manually: \"Convidar Estudantes por E-mail\",\n      bulk_assign: \"Selecionar curso\",\n      assigned_msg_2: \"{{numberEnrolled}} licenças foram aplicadas.\",\n      assign_course: \"Atribuir Curso\",\n      removed_course_msg: \"{{numberRemoved}} estudantes foram removidos de {{courseName}}.\",\n      remove_course: \"Remover Curso\",\n      not_assigned_modal_title: \"Os cursos não foram atribuídos\",\n      enroll_selected_students: \"Inscrever os Estudantes Selecionados\",\n      no_students_selected: \"Nenhum estudante foi selecionado.\",\n      apply_licenses_to_the_following_students: \"Aplicar Licenças aos Seguintes Estudantes\",\n      all_students: \"Todos os Estudantes\",\n      apply_licenses: \"Aplicar Licenças\",\n      not_enough_enrollments: \"Não há licenças suficientes disponíveis.\",\n      enrollments_blurb: \"É necessário que os estudantes tenham uma licença para acederem a qualquer conteúdo depois do primeiro curso.\",\n      how_to_apply_licenses: \"Como Aplicar Licenças\",\n      export_student_progress: \"Exportar Progresso dos Estudantes (CSV)\",\n      email_sent: \"E-mail enviado\",\n      send_recovery_email: \"Enviar e-mail de recuperação\",\n      enter_new_password_below: \"Introduz a nova palavra-passe abaixo:\",\n      change_password: \"Alterar Palavra-passe\",\n      changed: \"Alterada\",\n      available_credits: \"Licenças Disponíveis\",\n      pending_credits: \"Licenças Pendentes\",\n      license_remaining: \"licença restante\",\n      licenses_remaining: \"licenças restantes\",\n      one_license_used: \"1 licença foi usada\",\n      num_licenses_used: \"__numLicensesUsed__ licenças foram usadas\",\n      get_enrollments_blurb: \" Vamos ajudar-te a construir uma solução que satisfaça as necessidades da tua turma, escola ou distrito.\",\n      request_sent: \"Pedido Enviado!\",\n      license_status: \"Estado das Licenças\",\n      status_not_enrolled: \"Não Inscrito\",\n      select_all: \"Selecionar Todos\",\n      project: \"Projeto\",\n      view_project: \"Ver Projeto\",\n      unpublished: \"(não publicado)\",\n      resource_hub: \"Centro de Recursos\",\n      coming_soon: \"Guias adicionais em breve!\",\n      student_overview: \"Visão Geral\",\n      student_details: \"Detalhes do Estudante\",\n      student_name: \"Nome do Estudante\",\n      no_name: \"Nenhum nome fornecido.\",\n      no_username: \"Nenhum nome de utilizador fornecido.\",\n      no_email: \"O estudante não tem nenhum endereço de e-mail definido.\",\n      student_profile: \"Perfil do Estudante\",\n      playtime_detail: \"Detalhe do Tempo de Jogo\",\n      student_completed: \"Completo pelo Estudante\",\n      student_in_progress: \"Em progresso pelo Estudante\",\n      class_average: \"Média da Turma\",\n      playtime_axis: \"Tempo de Jogo em Segundos\",\n      levels_axis: \"Níveis em\",\n      student_state: \"Como se está\",\n      student_state_2: \"a sair?\",\n      revoking: \"A revogar...\",\n      more_info: \"Mais Informação\",\n      teacher_quest_add_students: \"Adicionar Estudantes\",\n      level_label: \"Nível:\",\n      time_played_label: \"Tempo Jogado:\"\n    },\n    share_licenses: {\n      share_licenses: \"Partilhar Licenças\",\n      shared_by: \"Partilhadas Por:\",\n      add_teacher_button: \"Adicionar Professor\",\n      you: \"(tu)\",\n      one_license_used: \"(1 licença usada)\",\n      licenses_used: \"(__licensesUsed__ licenças usadas)\",\n      more_info: \"Mais informação\"\n    },\n    sharing: {\n      game: \"Jogo\",\n      webpage: \"Página Web\",\n      share_game: \"Partilhar Este Jogo\",\n      share_web: \"Partilhar Esta Página Web\",\n      victory_share_prefix: \"Partilha esta ligação para convidares os teus amigos e a tua família para\",\n      victory_share_prefix_short: \"Convida pessoas para\",\n      victory_share_game: \"jogarem o teu nível de jogo\",\n      victory_share_web: \"verem a tua página web\",\n      victory_share_suffix: \".\",\n      victory_course_share_prefix: \"Esta ligação vai permitir que os teus amigos e a tua família\",\n      victory_course_share_game: \"joguem o jogo\",\n      victory_course_share_web: \"vejam a página web\",\n      victory_course_share_suffix: \"que acabaste de criar.\",\n      copy_url: \"Copiar URL\",\n      share_with_teacher_email: \"Envia para o teu professor\"\n    },\n    game_dev: {\n      creator: \"Criador\"\n    },\n    web_dev: {\n      image_gallery_title: \"Galeria de Imagens\",\n      select_an_image: \"Seleciona uma imagem que queiras usar\",\n      scroll_down_for_more_images: \"(Arrasta para baixo para mais imagens)\",\n      copy_the_url: \"Copiar o URL abaixo\",\n      copy_the_url_description: \"Útil se quiseres substituir uma imagem existente.\",\n      copy_the_img_tag: \"Copiar a etiqueta <img>\",\n      copy_the_img_tag_description: \"Útil se quiseres inserir uma imagem nova.\",\n      copy_url: \"Copiar URL\",\n      copy_img: \"Copiar <img>\",\n      how_to_copy_paste: \"Como Copiar/Colar\",\n      copy: \"Copiar\",\n      paste: \"Colar\",\n      back_to_editing: \"Voltar à Edição\"\n    },\n    classes: {\n      archmage_title: \"Arcomago\",\n      archmage_title_description: \"(Programador)\",\n      archmage_summary: \"Se és um programador interessado em programar jogos educacionais, torna-te um Arcomago para nos ajudares a construir o CodeCombat!\",\n      artisan_title: \"Artesão\",\n      artisan_title_description: \"(Construtor de Níveis)\",\n      artisan_summary: \"Constrói e partilha níveis para tu e os teus amigos jogarem. Torna-te um Artesão para aprenderes a arte de ensinar outros a programar.\",\n      adventurer_title: \"Aventureiro\",\n      adventurer_title_description: \"(Testador de Níveis)\",\n      adventurer_summary: \"Recebe os nossos novos níveis (até o conteúdo para subscritores) de graça, uma semana antes, e ajuda-nos a descobrir erros antes do lançamento para o público.\",\n      scribe_title: \"Escrivão\",\n      scribe_title_description: \"(Editor de Artigos)\",\n      scribe_summary: \"Bom código precisa de uma boa documentação. Escreve, edita e melhora os documentos lidos por milhões de jogadores pelo mundo.\",\n      diplomat_title: \"Diplomata\",\n      diplomat_title_description: \"(Tradutor)\",\n      diplomat_summary: \"O CodeCombat está traduzido em 45+ idiomas graças aos nossos Diplomatas. Ajuda-nos e contribui com traduções.\",\n      ambassador_title: \"Embaixador\",\n      ambassador_title_description: \"(Suporte)\",\n      ambassador_summary: \"Amansa os nossos utilizadores do fórum e direciona aqueles que têm questões. Os nossos Embaixadores representam o CodeCombat perante o mundo.\",\n      teacher_title: \"Professor\"\n    },\n    editor: {\n      main_title: \"Editores do CodeCombat\",\n      article_title: \"Editor de Artigos\",\n      thang_title: \"Editor de Thangs\",\n      level_title: \"Editor de Níveis\",\n      course_title: \"Editor de Cursos\",\n      achievement_title: \"Editor de Conquistas\",\n      poll_title: \"Editor de Votações\",\n      back: \"Voltar\",\n      revert: \"Reverter\",\n      revert_models: \"Reverter Modelos\",\n      pick_a_terrain: \"Escolhe Um Terreno\",\n      dungeon: \"Masmorra\",\n      indoor: \"Interior\",\n      desert: \"Deserto\",\n      grassy: \"Relvado\",\n      mountain: \"Montanha\",\n      glacier: \"Glaciar\",\n      small: \"Pequeno\",\n      large: \"Grande\",\n      fork_title: \"Bifurcar Nova Versão\",\n      fork_creating: \"A Criar Bifurcação...\",\n      generate_terrain: \"Gerar Terreno\",\n      more: \"Mais\",\n      wiki: \"Wiki\",\n      live_chat: \"Chat ao Vivo\",\n      thang_main: \"Principal\",\n      thang_spritesheets: \"Spritesheets\",\n      thang_colors: \"Cores\",\n      level_some_options: \"Algumas Opções?\",\n      level_tab_thangs: \"Thangs\",\n      level_tab_scripts: \"Scripts\",\n      level_tab_components: \"Componentes\",\n      level_tab_systems: \"Sistemas\",\n      level_tab_docs: \"Documentação\",\n      level_tab_thangs_title: \"Thangs Atuais\",\n      level_tab_thangs_all: \"Todos\",\n      level_tab_thangs_conditions: \"Condições Iniciais\",\n      level_tab_thangs_add: \"Adicionar Thangs\",\n      level_tab_thangs_search: \"Pesquisar thangs\",\n      add_components: \"Adicionar Componentes\",\n      component_configs: \"Configurações dos Componentes\",\n      config_thang: \"Clica duas vezes para configurares uma thang\",\n      \"delete\": \"Eliminar\",\n      duplicate: \"Duplicar\",\n      stop_duplicate: \"Parar de Duplicar\",\n      rotate: \"Rodar\",\n      level_component_tab_title: \"Componentes Atuais\",\n      level_component_btn_new: \"Criar Novo Componente\",\n      level_systems_tab_title: \"Sistemas Atuais\",\n      level_systems_btn_new: \"Cria Novo Sistema\",\n      level_systems_btn_add: \"Adicionar Sistema\",\n      level_components_title: \"Voltar para Todas as Thangs\",\n      level_components_type: \"Tipo\",\n      level_component_edit_title: \"Editar Componente\",\n      level_component_config_schema: \"Configurar Esquema\",\n      level_system_edit_title: \"Editar Sistema\",\n      create_system_title: \"Criar Novo Sistema\",\n      new_component_title: \"Criar Novo Componente\",\n      new_component_field_system: \"Sistema\",\n      new_article_title: \"Criar um Novo Artigo\",\n      new_thang_title: \"Criar um Novo Tipo de Thang\",\n      new_level_title: \"Criar um Novo Nível\",\n      new_article_title_login: \"Inicia Sessão para Criares um Novo Artigo\",\n      new_thang_title_login: \"Inicia Sessão para Criares um Novo Tipo de Thang\",\n      new_level_title_login: \"Inicia Sessão para Criares um Novo Nível\",\n      new_achievement_title: \"Criar uma Nova Conquista\",\n      new_achievement_title_login: \"Inicia Sessão para Criares uma Nova Conquista\",\n      new_poll_title: \"Criar uma Nova Votação\",\n      new_poll_title_login: \"Iniciar Sessão para Criar uma Nova Votação\",\n      article_search_title: \"Procurar Artigos Aqui\",\n      thang_search_title: \"Procurar Thangs Aqui\",\n      level_search_title: \"Procurar Níveis Aqui\",\n      achievement_search_title: \"Procurar Conquistas\",\n      poll_search_title: \"Procurar Votações\",\n      read_only_warning2: \"Nota: não podes guardar nenhuma edição feita aqui, porque não tens sessão iniciada.\",\n      no_achievements: \"Ainda não foram adicionadas conquistas a este nível.\",\n      achievement_query_misc: \"Conquista-chave de uma lista de variados\",\n      achievement_query_goals: \"Conquista-chave dos objetivos do nível\",\n      level_completion: \"Completação do Nível\",\n      pop_i18n: \"Propagar I18N\",\n      tasks: \"Tarefas\",\n      clear_storage: \"Limpa as tuas alterações locais\",\n      add_system_title: \"Adicionar Sistemas ao Nível\",\n      done_adding: \"Adição Concluída\"\n    },\n    article: {\n      edit_btn_preview: \"Pré-visualizar\",\n      edit_article_title: \"Editar Artigo\"\n    },\n    polls: {\n      priority: \"Prioridade\"\n    },\n    contribute: {\n      page_title: \"Contribuir\",\n      intro_blurb: \"O CodeCombat é 100% open source! Centenas de jogadores dedicados ajudaram-nos a transformar o jogo naquilo que ele é hoje. Junta-te a nós e escreve o próximo capítulo da aventura do CodeCombat para ensinar o mundo a programar!\",\n      alert_account_message_intro: \"Hey, tu!\",\n      alert_account_message: \"Para te subscreveres para receber e-mails de classes, necessitarás de iniciar sessão.\",\n      archmage_introduction: \"Uma das melhores partes da construção de jogos é que eles sintetizam muitas coisas diferentes. Gráficos, som, rede em tempo real, redes sociais, e, claro, muitos dos aspectos mais comuns da programação, desde a gestão de bases de dados de baixo nível, e administração do servidor até à construção do design e da interface do utilizador. Há muito a fazer, e se és um programador experiente com um verdadeiro desejo de mergulhar nas entranhas do CodeCombat, esta classe pode ser para ti. Gostaríamos muito de ter a tua ajuda para construir o melhor jogo de programação de sempre.\",\n      class_attributes: \"Atributos da Classe\",\n      archmage_attribute_1_pref: \"Conhecimento em \",\n      archmage_attribute_1_suf: \", ou vontade de aprender. A maioria do nosso código está nesta linguagem. Se és um fã de Ruby ou Python, vais sentir-te em casa. É igual ao JavaScript, mas com uma sintaxe melhor.\",\n      archmage_attribute_2: \"Alguma experiência em programação e iniciativa pessoal. Nós ajudamos-te a orientares-te, mas não podemos gastar muito tempo a treinar-te.\",\n      how_to_join: \"Como Me Junto\",\n      join_desc_1: \"Qualquer um pode ajudar! Só tens de conferir o nosso \",\n      join_desc_2: \"para começares, e assinalar a caixa abaixo para te declarares um bravo Arcomago e receberes as últimas notícias por e-mail. Queres falar sobre o que fazer ou como te envolveres mais profundamente no projeto? \",\n      join_desc_3: \" ou encontra-nos na nossa \",\n      join_desc_4: \"e começamos a partir daí!\",\n      join_url_email: \"Contacta-nos\",\n      join_url_slack: \"canal público no Slack\",\n      archmage_subscribe_desc: \"Receber e-mails relativos a novas oportunidades de programação e anúncios.\",\n      artisan_introduction_pref: \"Temos de construir mais níveis! As pessoas estão a pedir mais conteúdo, e nós mesmos só podemos construir estes tantos. Neste momento, a tua estação de trabalho é o nível um; o nosso editor de nível é pouco utilizável, até mesmo pelos seus criadores, por isso fica atento. Se tens visões de campanhas que abranjam 'for-loops' para o\",\n      artisan_introduction_suf: \", então esta classe pode ser para ti.\",\n      artisan_join_desc: \"Usa o Editor de Níveis por esta ordem, pegar ou largar:\",\n      artisan_join_step1: \"Lê a documentação.\",\n      artisan_join_step2: \"Cria um nível novo e explora níveis existentes.\",\n      artisan_join_step3: \"Encontra-nos na nossa sala Slack pública se necessitares de ajuda.\",\n      artisan_join_step4: \"Coloca os teus níveis no fórum para receberes feedback.\",\n      artisan_subscribe_desc: \"Receber e-mails relativos a novidades do editor de níveis e anúncios.\",\n      adventurer_subscribe_desc: \"Receber e-mails quando houver novos níveis para testar.\",\n      scribe_attribute_1: \"Habilidade com palavras é basicamente o que precisas. Não apenas gramática e ortografia, mas seres capaz de explicar ideias complicadas a outros.\",\n      contact_us_url: \"Contacta-nos\",\n      scribe_join_description: \"fala-nos um bocado de ti, da tua experiência com a programação e do tipo de coisas sobre as quais gostarias de escrever. Começamos a partir daí!\",\n      scribe_subscribe_desc: \"Receber e-mails sobre anúncios relativos à escrita de artigos.\",\n      diplomat_introduction_pref: \"Portanto, se há uma coisa que aprendemos com o nosso \",\n      diplomat_launch_url: \"lançamento em Outubro\",\n      diplomat_introduction_suf: \"é que há um interesse considerável no CodeCombat noutros países! Estamos a construir um exército de tradutores dispostos a transformar um conjunto de palavras num outro conjuto de palavras, para conseguir que o CodeCombat fique o mais acessível quanto posível em todo o mundo. Se gostas de dar espreitadelas a conteúdos futuros e disponibilizar os níveis para os teus colegas nacionais o mais depressa possível, então esta classe talvez seja para ti.\",\n      diplomat_attribute_1: \"Fluência em Inglês e no idioma para o qual gostarias de traduzir. Quando são tentadas passar ideias complicadas, é importante uma excelente compreensão das duas!\",\n      diplomat_i18n_page_prefix: \"Podes começar a traduzir os nossos níveis se fores à nossa\",\n      diplomat_i18n_page: \"página de traduções\",\n      diplomat_i18n_page_suffix: \", ou a nossa interface e website no GitHub.\",\n      diplomat_join_pref_github: \"Encontra o ficheiro 'locale' do teu idioma \",\n      diplomat_github_url: \"no GitHub\",\n      diplomat_join_suf_github: \", edita-o online e submete um 'pull request'. Assinala ainda a caixa abaixo para ficares atualizado em relação a novos desenvolvimentos da internacionalização!\",\n      diplomat_subscribe_desc: \"Receber e-mails sobre desenvolvimentos da i18n e níveis para traduzir.\",\n      ambassador_join_note_strong: \"Nota\",\n      ambassador_join_note_desc: \"Uma das nossas maiores prioridades é construir níveis multijogador onde os jogadores com dificuldade para passar níveis possam invocar feiticeiros mais experientes para os ajudarem. Esta será uma ótima forma de os embaixadores fazerem o que sabem. Vamos manter-te atualizado!\",\n      ambassador_subscribe_desc: \"Receber e-mails relativos a novidades do suporte e desenvolvimentos do modo multijogador.\",\n      teacher_subscribe_desc: \"Receber e-mails sobre atualizações e anúncios para professores.\",\n      changes_auto_save: \"As alterações são guardadas automaticamente quando clicas nas caixas.\",\n      diligent_scribes: \"Os Nossos Dedicados Escrivões:\",\n      powerful_archmages: \"Os Nossos Poderosos Arcomagos:\",\n      creative_artisans: \"Os Nossos Creativos Artesãos:\",\n      brave_adventurers: \"Os Nossos Bravos Aventureiros:\",\n      translating_diplomats: \"Os Nossos Tradutores Diplomatas:\",\n      helpful_ambassadors: \"Os Nossos Prestáveis Embaixadores:\"\n    },\n    ladder: {\n      my_matches: \"Os Meus Jogos\",\n      simulate: \"Simular\",\n      simulation_explanation: \"Ao simulares jogos podes ter o teu jogo classificado mais rapidamente!\",\n      simulation_explanation_leagues: \"Principalmente, vais ajudar a simular jogos para jogadores aliados nos teus clâs e cursos.\",\n      simulate_games: \"Simular Jogos!\",\n      games_simulated_by: \"Jogos simulados por ti:\",\n      games_simulated_for: \"Jogos simulados para ti:\",\n      games_in_queue: \"Jogos na fila de espera atualmente:\",\n      games_simulated: \"Jogos simulados\",\n      games_played: \"Jogos jogados\",\n      ratio: \"Rácio\",\n      leaderboard: \"Tabela de Classificação\",\n      battle_as: \"Lutar como \",\n      summary_your: \"As Tuas \",\n      summary_matches: \"Partidas - \",\n      summary_wins: \" Vitórias, \",\n      summary_losses: \" Derrotas\",\n      rank_no_code: \"Sem Código Novo para Classificar\",\n      rank_my_game: \"Classificar o Meu Jogo!\",\n      rank_submitting: \"A submeter...\",\n      rank_submitted: \"Submetido para Classificação\",\n      rank_failed: \"A Classificação Falhou\",\n      rank_being_ranked: \"Jogo a ser Classificado\",\n      rank_last_submitted: \"submetido \",\n      help_simulate: \"Ajudar a simular jogos?\",\n      code_being_simulated: \"O teu novo código está a ser simulado por outros jogadores, para ser classificado. Isto será atualizado quando surgirem novas partidas.\",\n      no_ranked_matches_pre: \"Sem jogos classificados pela equipa \",\n      no_ranked_matches_post: \"! Joga contra alguns adversários e volta aqui para veres o teu jogo classificado.\",\n      choose_opponent: \"Escolhe um Adversário\",\n      select_your_language: \"Seleciona a tua linguagem!\",\n      tutorial_play: \"Jogar Tutorial\",\n      tutorial_recommended: \"Recomendado se nunca jogaste antes\",\n      tutorial_skip: \"Saltar Tutorial\",\n      tutorial_not_sure: \"Não tens a certeza do que se passa?\",\n      tutorial_play_first: \"Joga o Tutorial primeiro.\",\n      simple_ai: \"CPU Simples\",\n      warmup: \"Aquecimento\",\n      friends_playing: \"Amigos a Jogar\",\n      log_in_for_friends: \"Inicia sessão para jogares com os teus amigos!\",\n      social_connect_blurb: \"Conecta-te e joga contra os teus amigos!\",\n      invite_friends_to_battle: \"Convida os teus amigos para se juntarem a ti em batalha!\",\n      fight: \"Lutar!\",\n      watch_victory: \"Vê a tua vitória\",\n      defeat_the: \"Derrota o\",\n      watch_battle: \"Ver a batalha\",\n      tournament_started: \", começou\",\n      tournament_ends: \"O Torneio acaba\",\n      tournament_ended: \"O Torneio acabou\",\n      tournament_rules: \"Regras do Torneio\",\n      tournament_blurb: \"Escreve código, recolhe ouro, constrói exércitos, esmaga inimigos, ganha prémios e melhora a tua carreira no nosso torneio $40,000 Greed! Confere os detalhes\",\n      tournament_blurb_criss_cross: \"Ganha ofertas, constrói caminhos, supera os adversários, apanha gemas e melhore a tua carreira no nosso torneio Criss-Cross! Confere os detalhes\",\n      tournament_blurb_zero_sum: \"Liberta a tua criatividade de programação tanto na recolha de ouro como em táticas de combate nesta batalha-espelhada na montanha, entre o feiticeiro vermelho e o feiticeiro azul. O torneio começou na Sexta-feira, 27 de Março, e decorrerá até às 00:00 de Terça-feira, 7 de Abril. Compete por diversão e glória! Confere os detalhes\",\n      tournament_blurb_ace_of_coders: \"Luta no glaciar congelado nesta partida espelhada do estilo domínio! O torneio começou Quarta-feira, 16 de Setembro, e decorrerá até Quarta-feira, 14 de Outubro às 23:00. Confere os detalhes\",\n      tournament_blurb_blog: \"no nosso blog\",\n      rules: \"Regras\",\n      winners: \"Vencedores\",\n      league: \"Liga\",\n      red_ai: \"CPU Vermelho\",\n      blue_ai: \"CPU Azul\",\n      wins: \"Vence\",\n      humans: \"Vermelho\",\n      ogres: \"Azul\"\n    },\n    user: {\n      stats: \"Estatísticas\",\n      singleplayer_title: \"Níveis Um Jogador\",\n      multiplayer_title: \"Níveis Multijogador\",\n      achievements_title: \"Conquistas\",\n      last_played: \"Última Vez Jogado\",\n      status: \"Estado\",\n      status_completed: \"Completo\",\n      status_unfinished: \"Inacabado\",\n      no_singleplayer: \"Sem jogos Um Jogador jogados.\",\n      no_multiplayer: \"Sem jogos Multijogador jogados.\",\n      no_achievements: \"Sem Conquistas ganhas.\",\n      favorite_prefix: \"A linguagem favorita é \",\n      favorite_postfix: \".\",\n      not_member_of_clans: \"Ainda não é membro de nenhum clã.\"\n    },\n    achievements: {\n      last_earned: \"Último Ganho\",\n      amount_achieved: \"Quantidade\",\n      achievement: \"Conquista\",\n      current_xp_prefix: \"\",\n      current_xp_postfix: \" no total\",\n      new_xp_prefix: \"\",\n      new_xp_postfix: \" ganho\",\n      left_xp_prefix: \"\",\n      left_xp_infix: \" até ao nível \",\n      left_xp_postfix: \"\"\n    },\n    account: {\n      payments: \"Pagamentos\",\n      prepaid_codes: \"Códigos Pré-pagos\",\n      purchased: \"Adquirido\",\n      subscription: \"Subscrição\",\n      invoices: \"Donativos\",\n      service_apple: \"Apple\",\n      service_web: \"Web\",\n      paid_on: \"Pago Em\",\n      service: \"Serviço\",\n      price: \"Preço\",\n      gems: \"Gemas\",\n      active: \"Activa\",\n      subscribed: \"Subscrito(a)\",\n      unsubscribed: \"Não Subscrito(a)\",\n      active_until: \"Ativa Até\",\n      cost: \"Custo\",\n      next_payment: \"Próximo Pagamento\",\n      card: \"Cartão\",\n      status_unsubscribed_active: \"Não estás subscrito e não te vamos cobrar, mas a tua conta ainda está ativa, por agora.\",\n      status_unsubscribed: \"Ganha acesso a novos níveis, heróis, itens e gemas de bónus com uma subscrição do CodeCombat!\",\n      not_yet_verified: \"Ainda não foi verificado.\",\n      resend_email: \"Reenviar e-mail\",\n      email_sent: \"E-mail enviado! Verifica a tua caixa de entrada.\",\n      verifying_email: \"A verificar o teu endereço de e-mail...\",\n      successfully_verified: \"Verificaste o teu endereço de e-mail com sucesso!\",\n      verify_error: \"Algo correu mal aquando da verificação do teu e-mail :(\"\n    },\n    account_invoices: {\n      amount: \"Quantidade em dólares americanos\",\n      declined: \"O teu cartão foi recusado\",\n      invalid_amount: \"Por favor introduz uma quantidade de dólares americanos.\",\n      not_logged_in: \"Inicia sessão ou cria uma conta para acederes aos donativos.\",\n      pay: \"Pagar Donativo\",\n      purchasing: \"A adquirir...\",\n      retrying: \"Erro do servidor, a tentar novamente.\",\n      success: \"Pago com sucesso. Obrigado!\"\n    },\n    account_prepaid: {\n      purchase_code: \"Comprar um Código de Subscrição\",\n      users: \"Utilizadores\",\n      months: \"Meses\",\n      purchase_total: \"Total\",\n      purchase_button: \"Submeter Compra\",\n      your_codes: \"Os Teus Códigos\",\n      redeem_codes: \"Resgata um Código de Subscrição\",\n      prepaid_code: \"Código Pré-pago\",\n      lookup_code: \"Procurar código pré-pago\",\n      apply_account: \"Aplicar à tua conta\",\n      copy_link: \"Podes copiar a ligação do código e enviá-la a alguém.\",\n      quantity: \"Quantidade\",\n      redeemed: \"Resgatado\",\n      no_codes: \"Nenhum código ainda!\",\n      you_can1: \"Podes\",\n      you_can2: \"adquirir um código pré-pago\",\n      you_can3: \"que pode ser aplicado à tua conta ou dado a outros.\"\n    },\n    loading_error: {\n      could_not_load: \"Erro ao carregar do servidor\",\n      connection_failure: \"A Ligação Falhou\",\n      connection_failure_desc: \"Não parece que estejas ligado à internet! Verifica a tua ligação de rede e depois recarrega esta página.\",\n      login_required: \"Sessão Iniciada Obrigatória\",\n      login_required_desc: \"Precisas de ter sessão iniciada para acederes a esta página.\",\n      unauthorized: \"Precisas de ter sessão iniciada. Tens os cookies desativados?\",\n      forbidden: \"Proibido\",\n      forbidden_desc: \"Oh não, não há nada aqui que te possamos mostrar! Certifica-te de que tens sessão iniciada na conta correta ou visita uma das ligações abaixo para voltares para a programação!\",\n      not_found: \"Não Encontrado\",\n      not_found_desc: \"Hm, não há nada aqui. Visita uma das ligações seguintes para voltares para a programação!\",\n      not_allowed: \"Método não permitido.\",\n      timeout: \"O Servidor Expirou\",\n      conflict: \"Conflito de recursos.\",\n      bad_input: \"Má entrada.\",\n      server_error: \"Erro do servidor.\",\n      unknown: \"Erro Desconhecido\",\n      error: \"ERRO\",\n      general_desc: \"Algo correu mal, e, provavelmente, a culpa é nossa. Tenta esperar um pouco e depois recarregar a página, ou visita uma das ligações seguintes para voltares para a programação!\"\n    },\n    resources: {\n      level: \"Nível\",\n      patch: \"Atualização\",\n      patches: \"Atualizações\",\n      system: \"Sistema\",\n      systems: \"Sistemas\",\n      component: \"Componente\",\n      components: \"Componentes\",\n      hero: \"Herói\",\n      campaigns: \"Campanhas\"\n    },\n    concepts: {\n      \"arguments\": \"Argumentos\",\n      arithmetic: \"Aritmética\",\n      arrays: \"'Arrays'\",\n      basic_syntax: \"Sintaxe Básica\",\n      binary: \"Binário\",\n      break_statements: \"Declarações 'Break'\",\n      classes: \"Classes\",\n      continue_statements: \"Declarações 'Continue'\",\n      for_loops: \"'For Loops'\",\n      functions: \"Funções\",\n      graphics: \"Gráficos\",\n      if_statements: \"Declarações 'If'\",\n      jquery: \"jQuery\",\n      math_geometry: \"Geometria\",\n      math_operations: \"Operações Matemáticas\",\n      math_trigonometry: \"Trigonometria\",\n      object_literals: \"'Object Literals'\",\n      parameters: \"Parâmetros\",\n      recursion: \"Recursão\",\n      strings: \"'Strings'\",\n      trees: \"Estruturas de Dados - Árvores\",\n      variables: \"Variáveis\",\n      vectors: \"Vetores\",\n      xy_coordinates: \"Coordenadas Cartesianas\",\n      advanced_strings: \"'Strings' Avançadas\",\n      algorithms: \"Algoritmos\",\n      boolean_logic: \"Lógica Booleana\",\n      basic_html: \"HTML Básico\",\n      basic_css: \"CSS Básico\",\n      advanced_html: \"HTML Avançado\",\n      advanced_css: \"CSS Avançado\",\n      input_handling: \"Manuseamento de 'Input'\",\n      while_loops: \"'Loops While'\",\n      construct_mazes: \"Construir labirintos\",\n      basic_javascript: \"JavaScript Básico\"\n    },\n    anonymous_teacher: {\n      enter_student_name: \"O teu nome:\",\n      enter_teacher_email: \"O e-mail do teu professor:\",\n      teacher_email_placeholder: \"teacher.email@example.com\",\n      student_name_placeholder: \"escreve o teu nome aqui\",\n      teachers_section: \"Professores:\",\n      students_section: \"Estudantes:\"\n    },\n    delta: {\n      added: \"Adicionado\",\n      modified: \"Modificado\",\n      not_modified: \"Não Modificado\",\n      deleted: \"Eliminado\",\n      moved_index: \"Índice Movido\",\n      text_diff: \"Diferença de Texto\",\n      merge_conflict_with: \"FUNDIR CONFLITO COM\",\n      no_changes: \"Sem Alterações\"\n    },\n    legal: {\n      page_title: \"Legal\",\n      opensource_intro: \"O CodeCombat é completamente open source.\",\n      opensource_description_prefix: \"Confere \",\n      github_url: \"o nosso GitHub\",\n      opensource_description_center: \"e ajuda se quiseres! O CodeCombat é construído tendo por base dezenas de projetos open source, os quais nós amamos. Vê \",\n      archmage_wiki_url: \"a nossa wiki dos Arcomagos\",\n      opensource_description_suffix: \"para uma lista do software que faz com que este jogo seja possível.\",\n      practices_title: \"Melhores Práticas Respeitosas\",\n      practices_description: \"Estas são as nossas promessas para contigo, o jogador, com um pouco menos de politiquices.\",\n      privacy_title: \"Privacidade\",\n      privacy_description: \"Nós não vamos vender nenhuma das tuas informações pessoais.\",\n      security_title: \"Segurança\",\n      security_description: \"Nós lutamos para manter as tuas informações pessoais seguras. Sendo um projeto open source, o nosso sítio tem o código disponível, pelo que qualquer pessoa pode rever e melhorar os nossos sistemas de segurança.\",\n      email_title: \"E-mail\",\n      email_description_prefix: \"Nós não te inundaremos com spam. Através das\",\n      email_settings_url: \"tuas definições de e-mail\",\n      email_description_suffix: \"ou através de ligações presentes nos e-mails que enviamos, podes mudar as tuas preferências e parar a tua subscrição facilmente, em qualquer momento.\",\n      cost_title: \"Custo\",\n      cost_description: \"O CodeCombat é gratuito para os níveis fundamentais, com uma subscrição de ${{price}} USD/mês para acederes a ramos de níveis extra e {{gems}} gemas de bónus por mês. Podes cancelar com um clique, e oferecemos uma garantia de 100% de devolução do dinheiro.\",\n      copyrights_title: \"Direitos Autorais e Licensas\",\n      contributor_title: \"Contrato de Licença do Contribuinte (CLA)\",\n      contributor_description_prefix: \"Todas as contribuições, tanto no sítio como no nosso repositório GitHub, estão sujeitas ao nosso\",\n      cla_url: \"CLA\",\n      contributor_description_suffix: \"com o qual deves concordar antes de contribuir.\",\n      code_title: \"Código - MIT\",\n      code_description_prefix: \"Todo o código do CodeCombat ou hospedado em codecombat.com, tanto no repositório do GitHub como na base de dados de codecombat.com, está resguardado sob a\",\n      mit_license_url: \"licença do MIT\",\n      code_description_suffix: \"Isto inclui todo o código dentro dos Sistemas e dos Componentes, o qual é disponibilizado pelo CodeCombat para a criação de níveis.\",\n      art_title: \"Arte/Música - Creative Commons \",\n      art_description_prefix: \"Todos os conteúdos comuns estão disponíveis à luz da\",\n      cc_license_url: \"Licença 'Creative Commons Attribution 4.0 International'\",\n      art_description_suffix: \"Conteúdo comum é, geralmente, qualquer coisa disponibilizada pelo CodeCombat com o propósito de criar Níveis. Isto inclui:\",\n      art_music: \"Música\",\n      art_sound: \"Som\",\n      art_artwork: \"Arte\",\n      art_sprites: \"Sprites\",\n      art_other: \"Quaisquer e todos os trabalhos criativos não-código que são disponibilizados aquando da criação de Níveis.\",\n      use_list_1: \"Se usado num filme ou noutro jogo, inclui 'codecombat.com' nos créditos.\",\n      rights_title: \"Direitos Reservados\",\n      rights_desc: \"Todos os direitos estão reservados aos próprios Níveis. Isto inclui\",\n      rights_scripts: \"Scripts\",\n      rights_unit: \"Configurações das unidades\",\n      rights_writings: \"Textos\",\n      rights_media: \"Mídia (sons, música) e quaisquer outros conteúdos criativos feitos especificamente para esse Nível e que não foram disponibilizados para a criação de Níveis.\",\n      nutshell_title: \"Resumidamente\",\n      nutshell_description: \"Qualquer um dos recursos que fornecemos no Editor de Níveis são de uso livre para criares Níveis. Mas reservamos o direito de distribuição restrita dos próprios Níveis (que são criados em codecombat.com) pelo que podemos cobrar por eles no futuro, se for isso que acabar por acontecer.\",\n      canonical: \"A versão Inglesa deste documento é a versão definitiva e soberana. Se houver discrepâncias entre traduções, o documento Inglês prevalece.\",\n      third_party_title: \"Serviços de Terceiros\",\n      third_party_description: \"O CodeCombat usa os seguintes serviços de terceiros (entre outros):\"\n    },\n    ladder_prizes: {\n      title: \"Prémios do Torneio\",\n      blurb_1: \"Estes prémios serão entregues de acordo com\",\n      blurb_2: \"as regras do torneio\",\n      blurb_3: \"aos melhores jogadores humanos e ogres.\",\n      blurb_4: \"Duas equipas significam o dobro dos prémios!\",\n      blurb_5: \"(Haverá dois vencedores em primeiro lugar, dois em segundo, etc.)\",\n      rank: \"Classificação\",\n      prizes: \"Prémios\",\n      total_value: \"Valor Total\",\n      in_cash: \"em dinheiro\",\n      custom_wizard: \"Um Feiticeiro do CodeCombat Personalizado\",\n      custom_avatar: \"Um Avatar do CodeCombat Personalizado\",\n      heap: \"para seis meses de acesso \\\"Startup\\\"\",\n      credits: \"créditos\",\n      one_month_coupon: \"cupão: escolhe Rails ou HTML\",\n      one_month_discount: \"desconto de 30%: escolhe Rails ou HTML\",\n      license: \"licença\",\n      oreilly: \"ebook à tua escolha\"\n    },\n    calendar: {\n      year: \"Ano\",\n      day: \"Dia\",\n      month: \"Mês\",\n      january: \"janeiro\",\n      february: \"fevereiro\",\n      march: \"março\",\n      april: \"abril\",\n      may: \"maio\",\n      june: \"junho\",\n      july: \"julho\",\n      august: \"agosto\",\n      september: \"setembro\",\n      october: \"outubro\",\n      november: \"novembro\",\n      december: \"dezembro\"\n    },\n    server_error: {\n      email_taken: \"E-mail já escolhido\",\n      username_taken: \"Nome de utilizador já escolhido\"\n    },\n    esper: {\n      line_no: \"Linha $1: \",\n      error: \"Erro: \",\n      x_not_a_function: \"$1 não é uma função\",\n      x_not_defined: \"$1 não está definido\",\n      try_herofindnearestenemy: \"Experimenta `$1`\",\n      there_is_no_function: \"Não há nenhuma função `$1`, mas `$2` tem um método `$3`.\",\n      hero_has_no_method: \"`$1` não tem nenhum método `$2`.\",\n      there_is_a_problem: \"Há um problema com o teu código.\"\n    }\n  }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///255\n");

/***/ })

});