/*! hash:ae6a15474fa7d9a1f9f8, chunkhash:b9b632e0ffc66877e6be, name:locale/pt-BR, filebase:pt-BR.bundle.js, query:, file:javascripts/chunks/locale/pt-BR.bundle.js */
webpackJsonp([31],{

/***/ 254:
/***/ (function(module, exports) {

eval("module.exports = {\n  nativeDescription: \"Português (Brasil)\",\n  englishDescription: \"Portuguese (Brazil)\",\n  translation: {\n    new_home: {\n      slogan: \"O jogo mais envolvente para aprender programação.\",\n      classroom_edition: \"Editar sala de aula:\",\n      learn_to_code: \"Aprenda a programar:\",\n      play_now: \"Jogue Agora\",\n      im_a_teacher: \"Eu sou um professor(a)\",\n      im_a_student: \"Eu sou um Aluno\",\n      learn_more: \"Aprenda mais\",\n      classroom_in_a_box: \"Uma sala de aula in-a-box para o ensino de ciência da computação.\",\n      codecombat_is: \"CodeCombat é uma plataforma <strong>para estudantes</strong> aprenderem ciência da computação através de um jogo real.\",\n      our_courses: \"Nossos cursos foram pensados especificamente para <strong>o uso em sala de aula</strong>, mesmo para professores com pouco conhecimento prévio em programação.\",\n      top_screenshots_hint: \"Alunos escrevem seus códigos e veem suas mudanças em tempo real.\",\n      designed_with: \"Projetado com professores em mente\",\n      real_code: \"Código escrito, de verdade\",\n      from_the_first_level: \"a partir do primeiro nível\",\n      getting_students: \"Fazer os estudantes escreverem código o mais rapido possível é fundamental para aprender a sintaxe de programação e estrutura apropriada.\",\n      educator_resources: \"Recursos do educador\",\n      course_guides: \"e guia dos cursos\",\n      teaching_computer_science: \"Ensinar ciência da computação não requer um diploma, pois nós disponibilizamos ferramentas para apoiar todos os tipos de educadores.\",\n      accessible_to: \"Acessível para\",\n      everyone: \"todos\",\n      democratizing: \"Democratizar o processo de aprendizagem de programação é o objectivo da nossa filosofia. Qualquer um deve ser capaz de aprender a programar.\",\n      forgot_learning: \"Eu acho que eles realmente esqueceram que estavam aprendendo de verdade.\",\n      wanted_to_do: \"Programar é algo que eu sempre quis fazer, e eu nunca pensei que seria capaz de aprender isso na escola.\",\n      why_games: \"Porque é importante aprender através de jogos?\",\n      games_reward: \"Jogos recompensam o esforço produtivo.\",\n      encourage: \"Jogar é um meio de encorajar a interação, descoberta, e a tentativa e erro. Um bom jogo desafia o jogador a dominar as habilidades com o tempo, que é o mesmo processo crítico que alunos passam quando estão aprendendo algo.\",\n      excel: \"Jogos destacam-se pela recompesa do\",\n      struggle: \"esforço produtivo\",\n      kind_of_struggle: \"o tipo de esforço resultante do aprendizado é cativante,\",\n      motivating: \"motivador\",\n      not_tedious: \"e divertido.\",\n      gaming_is_good: \"Estudos indicam que jogos são bons para o cérebro das crianças. (é verdade!)\",\n      game_based: \"Quando sistemas de aprendizado baseados em jogos são\",\n      compared: \"comparados\",\n      conventional: \"com métodos de avaliação convencional a diferença é clara: jogos são melhores e ajudam alunos a reter o conhecimento, concentração e\",\n      perform_at_higher_level: \"desenvolver um nível superior de realização\",\n      feedback: \"Jogos também fornecem respostas em tempo real permitindo que os alunos criem seus caminhos para a solução e entendam conceitos de forma mais holística, ao invés de limitar as repostas como “corretas” ou “incorretas”.\",\n      real_game: \"Um jogo de verdade, com programação de verdade.\",\n      great_game: \"Um grande jogo é mais do que apenas emblemas e conquistas, é sobre a jornada de um jogador, enigmas bem desenhados, e a habilidade para enfrentar desafios com ação e confiança.\",\n      agency: \"CodeCombat é um jogo que fornece aos jogadores essa ação e confiança com nosso robusto mecanisno de digitação de código, que ajuda alunos iniciantes e avançados tanto na escrita quanto na validação do código.\",\n      request_demo_title: \"Começe a ensinar hoje!\",\n      request_demo_subtitle: \"Solicite uma demonstração e começe com seus alunos em menos de uma hora.\",\n      get_started_title: \"Crie sua turma hoje\",\n      get_started_subtitle: \"Crie sua turma, adicione seus alunos e acompanhe o progresso deles na aprendizagem de ciência da computação.\",\n      request_demo: \"Solicite uma Demonstração\",\n      setup_a_class: \"Gerencie a Turma\",\n      have_an_account: \"Tem uma conta?\",\n      logged_in_as: \"Você está logado como\",\n      computer_science: \"Cursos de ciência da computação para todas as idades\",\n      ffa: \"Grátis para estudantes\",\n      coming_soon: \"Em breve!\",\n      courses_available_in: \"Os cursos estão disponíveis em JavaScript e Python. Os cursos de desenvolvimento web utilizam HTML, CSS, jQuery e Bootstrap.\",\n      boast: \"Possuimos enigmas que são complexos o suficiente para fascinar tanto jogadores como programadores.\",\n      winning: \"A combinação perfeita de jogabilidade de um RPG e lições de programação é o que torna a educação infantil legitimamente agradável.\",\n      run_class: \"Tudo o que você precisa para criar uma turma de ciência da computação em sua escola hoje, nenhuma conhecimento técnico é necessário.\",\n      goto_classes: \"Ir para Minhas Turmas\",\n      view_profile: \"Visualizar Meu Perfil\",\n      view_progress: \"Visualizar Progresso\",\n      go_to_courses: \"Ir para Meus Cursos\",\n      want_coco: \"Quer o CodeCombat na sua escola?\"\n    },\n    nav: {\n      map: \"Mapa\",\n      play: \"Níveis\",\n      community: \"Comunidade\",\n      courses: \"Cursos\",\n      blog: \"Blog\",\n      forum: \"Fórum\",\n      account: \"Conta\",\n      my_account: \"Minha conta\",\n      profile: \"Perfil\",\n      home: \"Início\",\n      contribute: \"Contribuir\",\n      legal: \"Legal\",\n      privacy: \"Privacidade\",\n      about: \"Sobre\",\n      contact: \"Contate-nos\",\n      twitter_follow: \"Seguir\",\n      my_classrooms: \"Minhas Turmas\",\n      my_courses: \"Meus Cursos\",\n      careers: \"Carreiras\",\n      facebook: \"Facebook\",\n      twitter: \"Twitter\",\n      create_a_class: \"Criar uma Turma\",\n      other: \"Outro\",\n      learn_to_code: \"Aprenda a programar!\",\n      toggle_nav: \"Alternar navegação\",\n      schools: \"Escolas\",\n      get_involved: \"Envolva-se\",\n      open_source: \"Código aberto (GitHub)\",\n      support: \"Suporte\",\n      faqs: \"FAQs\",\n      help_pref: \"Precisa de ajuda? Email\",\n      help_suff: \"e nós entraremos em contato!\",\n      resource_hub: \"Central de Recursos\"\n    },\n    modal: {\n      close: \"Fechar\",\n      okay: \"Ok\"\n    },\n    not_found: {\n      page_not_found: \"Página não encontrada\"\n    },\n    diplomat_suggestion: {\n      title: \"Ajude a traduzir o CodeCombat!\",\n      sub_heading: \"Nós precisamos de suas habilidades linguísticas.\",\n      pitch_body: \"Desenvolvemos o CodeCombat em Inglês, mas já temos jogadores de todo o mundo. Muitos deles querem jogar em Português Brasileiro por não falar Inglês, por isso, se você conhece os dois idiomas, por favor, considere inscrever-se no programa para Diplomata e ajude a traduzir tanto o site do CodeCombat quanto todos os níveis para o Português Brasileiro.\",\n      missing_translations: \"Até que possamos traduzir todo o conteúdo para o Português Brasileiro, você lerá o texto em Inglês quando a versão em Português Brasileiro não estiver disponível.\",\n      learn_more: \"Saiba mais sobre ser um Diplomata\",\n      subscribe_as_diplomat: \"Inscrever-se como um Diplomata\"\n    },\n    play: {\n      play_as: \"Jogar Como \",\n      compete: \"Concorrer!\",\n      spectate: \"Assistir\",\n      players: \"Jogadores\",\n      hours_played: \"Horas jogadas\",\n      items: \"Itens\",\n      unlock: \"Desbloquear\",\n      confirm: \"Confirmar\",\n      owned: \"Possui\",\n      locked: \"Bloqueado\",\n      available: \"Disponível\",\n      skills_granted: \"Habilidades Concedidas\",\n      heroes: \"Heróis\",\n      achievements: \"Conquistas\",\n      settings: \"Configurações\",\n      poll: \"Enquete\",\n      next: \"Próximo\",\n      change_hero: \"Alterar Herói\",\n      buy_gems: \"Comprar Gemas\",\n      subscribers_only: \"Apenas assinantes!\",\n      subscribe_unlock: \"Assine para desbloquear!\",\n      subscriber_heroes: \"Assine hoje para desbloquear imediatamente Amara, Hushbaum e Hattori!\",\n      subscriber_gems: \"Assine hoje para comprar esse héroi com gemas!\",\n      anonymous: \"Jogador Anônimo\",\n      level_difficulty: \"Dificuldade: \",\n      awaiting_levels_adventurer_prefix: \"liberamos novos níveis a cada semana.\",\n      awaiting_levels_adventurer: \"Inscreva-se como um Aventureiro\",\n      awaiting_levels_adventurer_suffix: \"para ser o primeiro a jogar os novos níveis.\",\n      adjust_volume: \"Ajuste o volume\",\n      campaign_multiplayer: \"Arenas Multijogador\",\n      campaign_multiplayer_description: \"... nas quais você programará cara-a-cara contra outros jogadores.\",\n      brain_pop_done: \"Você derrotou os Ogros programando! Você venceu!\",\n      brain_pop_challenge: \"Desafie-se a jogar novamente usando outra linguagem de programação!\",\n      replay: \"Replay\",\n      back_to_classroom: \"Voltar para Turma\"\n    },\n    code: {\n      \"if\": \"se\",\n      \"else\": \"senão\",\n      elif: \"senão se\",\n      \"while\": \"enquanto\",\n      loop: \"repetir\",\n      \"for\": \"para\",\n      \"break\": \"parar\",\n      \"continue\": \"continuar\",\n      pass: \"passar\",\n      \"return\": \"retorna\",\n      then: \"então\",\n      \"do\": \"fazer\",\n      end: \"fim\",\n      \"function\": \"função\",\n      def: \"definir\",\n      \"var\": \"variável\",\n      self: \"próprio\",\n      hero: \"herói\",\n      \"this\": \"isto\",\n      or: \"ou\",\n      \"||\": \"ou\",\n      and: \"e\",\n      \"&&\": \"e\",\n      not: \"não\",\n      \"!\": \"não\",\n      \"=\": \"atribuir\",\n      \"==\": \"é igual a\",\n      \"===\": \"é estritamente igual a\",\n      \"!=\": \"não é igual a\",\n      \"!==\": \"não é estritamente igual a\",\n      \">\": \"é maior do que\",\n      \">=\": \"é maior do que ou igual a\",\n      \"<\": \"é menor do que\",\n      \"<=\": \"é menor do que ou igual a\",\n      \"*\": \"multiplicado por\",\n      \"/\": \"dividido por\",\n      \"+\": \"mais\",\n      \"-\": \"menos\",\n      \"+=\": \"adicionar e atribuir\",\n      \"-=\": \"subtrair e atribuir\",\n      True: \"Verdadeiro\",\n      \"true\": \"verdadeiro\",\n      False: \"Falso\",\n      \"false\": \"falso\",\n      undefined: \"não definido\",\n      \"null\": \"nulo\",\n      nil: \"nada\",\n      None: \"Nenhum\"\n    },\n    share_progress_modal: {\n      blurb: \"Você está fazendo bastante progresso! Compartilhe com alguém o quanto você já aprendeu com o CodeCombat!\",\n      email_invalid: \"Endereço de email inválido.\",\n      form_blurb: \"Informe os e-mails abaixo e mostraremos a eles!\",\n      form_label: \"Endereço de Email\",\n      placeholder: \"Endereço de email\",\n      title: \"Excelente Trabalho, Aprendiz\"\n    },\n    login: {\n      sign_up: \"Criar Conta\",\n      email_or_username: \"Email ou nome de usuário\",\n      log_in: \"Entrar\",\n      logging_in: \"Entrando\",\n      log_out: \"Sair\",\n      forgot_password: \"Esqueceu sua senha?\",\n      finishing: \"Terminando\",\n      sign_in_with_facebook: \"Conectar com o Facebook\",\n      sign_in_with_gplus: \"Conectar com o G+\",\n      signup_switch: \"Deseja Criar uma Conta?\"\n    },\n    signup: {\n      create_student_header: \"Criar conta de Aluno\",\n      create_teacher_header: \"Criar conta de Professor\",\n      create_individual_header: \"Criar conta Individual\",\n      email_announcements: \"Receba notícias por email sobre novos níveis e características do CodeCombat.\",\n      creating: \"Criando uma nova conta...\",\n      sign_up: \"Criar Conta\",\n      log_in: \"Entre com a senha\",\n      required: \"Você precisa fazer login antes de ir por esse caminho.\",\n      login_switch: \"Já possui uma conta?\",\n      optional: \"Opcional\",\n      connected_gplus_header: \"Você se conectou com sucesso ao Google+!\",\n      connected_gplus_p: \"Conclua sua inscrição para que você possa fazer login com sua conta do Google+.\",\n      connected_facebook_header: \"Você se conectou com sucesso usando o Facebook!\",\n      connected_facebook_p: \"Conclua sua inscrição para que você possa fazer login com sua conta do Facebook.\",\n      hey_students: \"Estudantes, insiram o código de classe do seu professor.\",\n      birthday: \"Aniversário\",\n      parent_email_blurb: \"Sabemos que você não vê a hora de aprender programação &mdash; nós estamos animados também! Seus responsáveis irão receber um email com mais instruçoes sobre como criar uma conta para você. Mande um email para {{email_link}} se houver alguma pergunta.\",\n      classroom_not_found: \"Nenhuma turma existe com esse código. Verifique se o código está correto ou peça ajuda ao seu professor.\",\n      checking: \"Verificando...\",\n      account_exists: \"Este email já esta sendo usado:\",\n      sign_in: \"Entrar\",\n      email_good: \"O Email parece bom!\",\n      name_taken: \"Este nome de usuário já está sendo usado! Tente {{suggestedName}}?\",\n      name_available: \"Nome disponível!\",\n      name_is_email: \"O nome de usuário não pode ser um email\",\n      choose_type: \"Escolha seu tipo de conta:\",\n      teacher_type_1: \"Ensine programação usando o CodeCombat!\",\n      teacher_type_2: \"Organize sua turma\",\n      teacher_type_3: \"Acessar Guias do Curso\",\n      teacher_type_4: \"Ver progresso do estudante\",\n      signup_as_teacher: \"Cadastrar Professor\",\n      student_type_1: \"Aprenda programação enquanto se diverte jogando!\",\n      student_type_2: \"Jogue com sua turma\",\n      student_type_3: \"Competir em arenas\",\n      student_type_4: \"Escolha seu herói!\",\n      student_type_5: \"Tenha o seu código de turma pronto!\",\n      signup_as_student: \"Cadastrar Estudante\",\n      individuals_or_parents: \"Individuais e Resposáveis\",\n      individual_type: \"Para aprender a programar fora de uma turma. Os responsáveis devem se inscrever aqui.\",\n      signup_as_individual: \"Cadastrar Usuário Comum\",\n      enter_class_code: \"Coloque seu código de turma\",\n      enter_birthdate: \"Coloque sua data de nascimento:\",\n      parent_use_birthdate: \"Pais ou responsável, use sua data de nascimento.\",\n      ask_teacher_1: \"Pergunte ao seu professor qual o código da sua turma.\",\n      ask_teacher_2: \"Não faz parte da turma? Crie uma \",\n      ask_teacher_3: \"Conta Individual\",\n      ask_teacher_4: \"ao invés.\",\n      about_to_join: \"Você está prestes a se juntar a:\",\n      enter_parent_email: \"Informe o endereço de e-mail de seus pais ou responsável:\",\n      parent_email_error: \"Algo de errado aconteceu ao tentar enviar o email. Verifique o endereço de email e tente novamente.\",\n      parent_email_sent: \"Nós enviamos um email com mais instruções de como criar uma conta. Solicite aos seus pais ou responsável para que verifiquem suas caixas de emails.\",\n      account_created: \"Conta Criada!\",\n      confirm_student_blurb: \"Anote suas informações para que você não esqueça. Seu professor também pode ajudá-lo reiniciando sua senha a qualquer momento.\",\n      confirm_individual_blurb: \"Anote suas informações de acesso, caso precise depois. Verifique seu e-mail para que você possa recuperar sua senha caso tenha esquecido.\",\n      write_this_down: \"Anote isto:\",\n      start_playing: \"Comece a jogar!\",\n      sso_connected: \"Conectado com sucesso como:\",\n      select_your_starting_hero: \"Selecione um herói para começar:\",\n      you_can_always_change_your_hero_later: \"Você poderá mudar seu herói depois.\",\n      finish: \"Fim\",\n      teacher_ready_to_create_class: \"Você está pronto para criar sua primeira turma!\",\n      teacher_students_can_start_now: \"Seus estudantes poderão começar a jogar o primeiro curso, Introdução a Ciência da Computação, imediatamente\",\n      teacher_list_create_class: \"Na próxima tela você poderá criar uma nova turna\",\n      teacher_list_add_students: \"Adicione estudantes à turma clicando no link Ver Turma e envie o Código da Turma ou URL. Você também pode convidá-los por email, se eles tiverem.\",\n      teacher_list_resource_hub_1: \"Confira o\",\n      teacher_list_resource_hub_2: \"Guias de Curso\",\n      teacher_list_resource_hub_3: \"para soluções de todos os nívelis, e o\",\n      teacher_list_resource_hub_4: \"Centro de Recursos\",\n      teacher_list_resource_hub_5: \"para guia de currículo, atividades e mais!\",\n      teacher_additional_questions: \"Isso é tudo! Se você precisar de ajuda adicional ou tiver perguntas, encontre-nos em __supportEmail__.\",\n      dont_use_our_email_silly: \"Não coloque o nosso email aqui! Use o email do seus pais ou responsável.\"\n    },\n    recover: {\n      recover_account_title: \"Recuperar Conta\",\n      send_password: \"Recuperar Senha\",\n      recovery_sent: \"Email de recuperação enviado.\"\n    },\n    items: {\n      primary: \"Primário\",\n      secondary: \"Secundário\",\n      armor: \"Armadura\",\n      accessories: \"Accessórios\",\n      misc: \"Diversos\",\n      books: \"Livros\"\n    },\n    common: {\n      back: \"Voltar\",\n      coming_soon: \"Em breve!\",\n      \"continue\": \"Continuar\",\n      next: \"Próximo\",\n      default_code: \"Código padrão\",\n      loading: \"Carregando...\",\n      overview: \"Visão Geral\",\n      solution: \"Solução\",\n      table_of_contents: \"Índice\",\n      intro: \"Introdução\",\n      saving: \"Salvando...\",\n      sending: \"Enviando...\",\n      send: \"Enviar\",\n      sent: \"Enviado\",\n      cancel: \"Cancelar\",\n      save: \"Salvar\",\n      publish: \"Publicar\",\n      create: \"Criar\",\n      fork: \"Fork\",\n      play: \"Jogar\",\n      retry: \"Tente novamente\",\n      actions: \"Ações\",\n      info: \"Info\",\n      help: \"Ajuda\",\n      watch: \"Observar\",\n      unwatch: \"Não Observar\",\n      submit_patch: \"Enviar Arranjo\",\n      submit_changes: \"Enviar Mudanças\",\n      save_changes: \"Salvar Mudanças\",\n      required_field: \"obrigatório\"\n    },\n    general: {\n      and: \"e\",\n      name: \"Nome\",\n      date: \"Data\",\n      body: \"Principal\",\n      version: \"Versão\",\n      pending: \"Pendente\",\n      accepted: \"Aceito\",\n      rejected: \"Rejeitado\",\n      withdrawn: \"Retirado\",\n      accept: \"Aceitar\",\n      reject: \"Rejeitar\",\n      withdraw: \"Recuar\",\n      submitter: \"Remetente\",\n      submitted: \"Enviado\",\n      commit_msg: \"Mensagem de Submissão\",\n      version_history: \"Histórico de Versão\",\n      version_history_for: \"Histórico de Versão para: \",\n      select_changes: \"Selecione duas alterações para ver as diferenças.\",\n      undo_prefix: \"Desfazer\",\n      undo_shortcut: \"(Ctrl+Z)\",\n      redo_prefix: \"Refazer\",\n      redo_shortcut: \"(Ctrl+Shift+Z)\",\n      play_preview: \"Jogar prévia do nível atual\",\n      result: \"Resultado\",\n      results: \"Resultados\",\n      description: \"Descrição\",\n      or: \"ou\",\n      subject: \"Assunto\",\n      email: \"Email\",\n      password: \"Senha\",\n      confirm_password: \"Confirmar Senha\",\n      message: \"Mensagem\",\n      code: \"Código\",\n      ladder: \"Progressão\",\n      when: \"Quando\",\n      opponent: \"Oponente\",\n      rank: \"Classificação\",\n      score: \"Pontuação\",\n      win: \"Vitória\",\n      loss: \"Derrota\",\n      tie: \"Empate\",\n      easy: \"Fácil\",\n      medium: \"Médio\",\n      hard: \"Difícil\",\n      player: \"Jogador\",\n      player_level: \"Nível\",\n      warrior: \"Guerreiro\",\n      ranger: \"Guarda\",\n      wizard: \"Feiticeiro\",\n      first_name: \"Primeiro Nome\",\n      last_name: \"Último Nome\",\n      last_initial: \"Última Inicial\",\n      username: \"Nome de Usuário\",\n      contact_us: \"Contate-nos\",\n      close_window: \"Fechar Janela\",\n      learn_more: \"Mais\"\n    },\n    units: {\n      second: \"segundo\",\n      seconds: \"segundos\",\n      minute: \"minuto\",\n      minutes: \"minutos\",\n      hour: \"hora\",\n      hours: \"horas\",\n      day: \"dia\",\n      days: \"dias\",\n      week: \"semana\",\n      weeks: \"semanas\",\n      month: \"mês\",\n      months: \"meses\",\n      year: \"ano\",\n      years: \"anos\"\n    },\n    play_level: {\n      back_to_map: \"Voltar para o Mapa\",\n      directions: \"Direções\",\n      edit_level: \"Editar Nível\",\n      explore_codecombat: \"Explorar CodeCombat\",\n      finished_hoc: \"Terminei minha Hora do Código\",\n      get_certificate: \"Adquira seu certificado!\",\n      level_complete: \"Nível Completo\",\n      completed_level: \"Nível Completo:\",\n      course: \"Curso:\",\n      done: \"Pronto\",\n      next_level: \"Próximo Nível\",\n      next_game: \"Próximo jogo\",\n      languages: \"Linguagens\",\n      programming_language: \"Linguagem de programação\",\n      show_menu: \"Mostrar menu do jogo\",\n      home: \"Início\",\n      level: \"Nível\",\n      skip: \"Pular\",\n      game_menu: \"Menu do Jogo\",\n      restart: \"Reiniciar\",\n      goals: \"Objetivos\",\n      goal: \"Objetivo\",\n      running: \"Rodando...\",\n      success: \"Sucesso!\",\n      incomplete: \"Incompleto\",\n      timed_out: \"Tempo esgotado\",\n      failing: \"Falta\",\n      reload: \"Recarregar\",\n      reload_title: \"Recarregar Todo o Código?\",\n      reload_really: \"Você tem certeza que quer reiniciar o nível?\",\n      reload_confirm: \"Recarregar Tudo\",\n      test_level: \"Nível de Teste\",\n      victory: \"Vitória\",\n      victory_title_prefix: \"\",\n      victory_title_suffix: \"Completo!\",\n      victory_sign_up: \"Inscreva-se para salvar o progresso\",\n      victory_sign_up_poke: \"Quer salvar seu código? Crie uma conta grátis!\",\n      victory_rate_the_level: \"Este nível foi divertido?\",\n      victory_return_to_ladder: \"Retornar para a Progressão\",\n      victory_saving_progress: \"Salvando Progresso\",\n      victory_go_home: \"Ir para o Inicio\",\n      victory_review: \"Diga-nos mais!\",\n      victory_review_placeholder: \"O que achou do nível?\",\n      victory_hour_of_code_done: \"Terminou?\",\n      victory_hour_of_code_done_yes: \"Sim, eu terminei minha Hora da Programação!\",\n      victory_experience_gained: \"XP Ganho\",\n      victory_gems_gained: \"Gemas Ganhas\",\n      victory_new_item: \"Novo Item\",\n      victory_new_hero: \"Novo Herói\",\n      victory_viking_code_school: \"Pelas barbas do profeta, esse foi um nível difícil! Se você ainda não é um desenvolvedor de software, você deveria ser. Você acaba de ser convidado para a Escola de Programação Viking, onde você pode aprender mais e se tornar um desenvolvedor web profissional em 14 semanas.\",\n      victory_become_a_viking: \"Torne-se um Viking\",\n      victory_no_progress_for_teachers: \"O progresso não é salvo para os professores. Mas, você mesmo pode adicionar um conta de aluno na sua turma.\",\n      tome_cast_button_run: \"Rodar\",\n      tome_cast_button_running: \"Rodando\",\n      tome_cast_button_ran: \"Encerrado\",\n      tome_submit_button: \"Enviar\",\n      tome_reload_method: \"Recarregar o código original para este método\",\n      tome_available_spells: \"Feitiços Disponíveis\",\n      tome_your_skills: \"Suas habilidades\",\n      hints: \"Sugestões\",\n      hints_title: \"Sugestão {{number}}\",\n      code_saved: \"Código Salvo\",\n      skip_tutorial: \"Pular (esc)\",\n      keyboard_shortcuts: \"Teclas de Atalho\",\n      loading_start: \"Iniciar Nível\",\n      problem_alert_title: \"Altere seu Código\",\n      time_current: \"Agora:\",\n      time_total: \"Máximo:\",\n      time_goto: \"Ir para:\",\n      non_user_code_problem_title: \"Erro ao carregar o nível\",\n      infinite_loop_title: \"Loop Infinito Detectado\",\n      infinite_loop_description: \"O código inicial para construir o mundo nunca parou de rodar. Talvez seja muito lento ou tenha um loop infinito. Ou talvez tenha um bug. Você pode tentar rodar este código novamente ou resetá-lo para o estado inicial. Se isto não funcionar, avise-nos por favor.\",\n      check_dev_console: \"Você também pode abrir o terminal do desenvolvedor para ver o que pode estar dando errado.\",\n      check_dev_console_link: \"(instruções)\",\n      infinite_loop_try_again: \"Tentar Novamente\",\n      infinite_loop_reset_level: \"Resetar nível\",\n      infinite_loop_comment_out: \"Comentar Meu Código\",\n      tip_toggle_play: \"Alterne entre rodando/pausado com Ctrl+P.\",\n      tip_scrub_shortcut: \"Ctrl+[ e Ctrl+] Rebobinar e Avançar.\",\n      tip_guide_exists: \"Clique nas Sugestões, no topo da página, para ter informações úteis.\",\n      tip_open_source: \"CodeCombat é 100% código aberto!\",\n      tip_tell_friends: \"Está gostando do CodeCombat? Mostre para os seus amigos!\",\n      tip_beta_launch: \"CodeCombat lançou sua versão beta em outubro de 2013.\",\n      tip_think_solution: \"Pense na solução, não no problema.\",\n      tip_theory_practice: \"Na teoria, não existe diferença entre teoria e prática. Mas, na prática, existe. - Yogi Berra\",\n      tip_error_free: \"Existem duas formas de escrever programas sem erros. Apenas a terceira funciona. - Alan Perlis\",\n      tip_debugging_program: \"Se depurar (debugar) é o processo de remover erros, então programar deve ser o processo de adicioná-los. - Edsger W. Dijkstra\",\n      tip_forums: \"Vá aos fóruns e nos diga o que você acha!\",\n      tip_baby_coders: \"No futuro, até bebês serão Arquimagos.\",\n      tip_morale_improves: \"O carregamento continuará até que o ânimo melhore.\",\n      tip_all_species: \"Nós acreditamos em oportunidades iguais para todas aprenderem a programar.\",\n      tip_reticulating: \"Reticulando espinhas.\",\n      tip_harry: \"Você é um Feiticeiro, \",\n      tip_great_responsibility: \"Com grandes poderes de programacão vêm grandes responsabilidades de depuração.\",\n      tip_munchkin: \"Se você não comer legumes e verduras, um ogro virá te buscar equanto você estiver dormindo.\",\n      tip_binary: \"Existem apenas 10 tipos de pessoas no mundo: as que entendem binário e as que não entendem.\",\n      tip_commitment_yoda: \"Um programador deve possuir um compromisso profundo, uma mente séria. ~ Yoda\",\n      tip_no_try: \"Faça. Ou não faça. Não existe tentar. - Yoda\",\n      tip_patience: \"Paciência você deve ter, jovem Padawan. - Yoda\",\n      tip_documented_bug: \"Um bug documentado não é um bug, é uma funcionalidade.\",\n      tip_impossible: \"Tudo parece impossível, até que seja feito. - Nelson Mandela\",\n      tip_talk_is_cheap: \"Falar é fácil. Mostre-me o código. - Linus Torvalds\",\n      tip_first_language: \"A coisa mais desastrosa que você pode aprender é a sua primeira linguagem de programação. - Alan Kay\",\n      tip_hardware_problem: \"P: Quantos programadores são necessários para se trocar uma lâmpada?  R: Nenhum! Isso é um problema de hardware.\",\n      tip_hofstadters_law: \"Lei de Hofstadter: Tudo demora mais do que você espera, mesmo quando você leva em consideração a Lei de Hofstadter.\",\n      tip_premature_optimization: \"Uma otimização prematura é a raíz de todos os males. - Donald Knuth\",\n      tip_brute_force: \"Na dúvida, utilize força bruta. - Ken Thompson\",\n      tip_extrapolation: \"Existem dois tipos de pessoa: Aqueles que podem extrapolar a partir de dados incompletos...\",\n      tip_superpower: \"Programar é a coisa mais próxima de ter super poderes.\",\n      tip_control_destiny: \"No verdadeiro código aberto, você tem o direito de controlar seu próprio destino. - Linus Torvalds\",\n      tip_no_code: \"Nenhum código é mais rápido que código nenhum. - Kevlin Henney\",\n      tip_code_never_lies: \"O código nunca mente, os comentários as vezes. — Ron Jeffries\",\n      tip_reusable_software: \"Antes do software ser reutilizável, ele primeiro precisa ser utilizável.\",\n      tip_optimization_operator: \"Cada linguagem tem um operador de otimização. Na maioria delas esse operador é ‘//’\",\n      tip_lines_of_code: \"Medir o progresso de programação em linhas de código é como medir a construção de aeronaves pelo peso. — Bill Gates\",\n      tip_source_code: \"Eu queria de mudar o Mundo, mas eles não me deram o código fonte.\",\n      tip_javascript_java: \"Java é para o JavaScript o que um Carro é para um Tapete. - Chris Heilmann\",\n      tip_move_forward: \"O que quer que você faça, continue em frente de qualquer jeito. - Martin Luther King Jr.\",\n      tip_google: \"Tem um problema que você não pode solucionar? Google!\",\n      tip_adding_evil: \"Adicionando uma pitada de maldade.\",\n      tip_hate_computers: \"As pessoas pensam que odeiam computadores. O que elas realmente odeiam são programadores ruins. - Larry Niven\",\n      tip_open_source_contribute: \"Você pode ajudar o CodeCombat a melhorar!\",\n      tip_recurse: \"Para iterar é humano, para recursão, é divino. - L. Peter Deutsch\",\n      tip_free_your_mind: \"Você tem que deixar isso tudo passar, Neo. O medo, a dúvida e a descrença. Liberte sua mente - Morpheus\",\n      tip_strong_opponents: \"Mesmo o mais forte dos adversários tem sua fraqueza. - Itachi Uchiha\",\n      tip_paper_and_pen: \"Antes de começar a programar, você sempre deve planejar com papel e caneta.\",\n      tip_solve_then_write: \"Primeiro, resolva o problema. Depois, escreva o código. - John Johnson\",\n      tip_compiler_ignores_comments: \"Às vezes acho que o compilador ignora meus comentários.\",\n      tip_understand_recursion: \"A única maneira de entender a recursividade é entender recursividade.\",\n      tip_life_and_polymorphism: \"Código aberto é como uma estrutura heterogênea totalmente polimórfica: Todos os tipos são bem vindos.\",\n      tip_mistakes_proof_of_trying: \"Erros no seu código apenas provam que você está tentando.\",\n      tip_adding_orgres: \"Arredondando ogros.\",\n      tip_sharpening_swords: \"Afiando as espadas.\",\n      tip_ratatouille: \"Você não deve deixar que ninguém defina seus limites com base de onde você veio. Seu único limite é a alma. - Gusteau, Ratatouille\",\n      tip_nemo: \"Quando a vida te colocar para baixo, quer saber o que você tem que fazer? Apenas continue a nadar, apenas continue a nadar. - Dory, Procurando Nemo\",\n      tip_internet_weather: \"Basta ir para a internet, é agradável aqui. Nós vivemos no interior onde o clima é sempre incrível. - John Green\",\n      tip_nerds: \"Os nerds podem amar coisas, como pular-para-cima-e-para-baixo-em-uma-cadeira-sem-controle - John Green\",\n      tip_self_taught: \"Eu me ensinei 90% do que aprendi. E isso é normal! - Hank Green\",\n      tip_luna_lovegood: \"Não se preocupe, você é tão louca quanto eu sou. - Luna Lovegood\",\n      tip_good_idea: \"A melhor maneira de ter uma boa idéia é ter muitas idéias. - Linus Pauling\",\n      tip_programming_not_about_computers: \"Ciência da Computação não é mais sobre computadores do que astronomia é sobre telescópios. - Edsger Dijkstra\",\n      tip_mulan: \"Acredite que você pode, então você vai. - Mulan\",\n      project_complete: \"Projeto Completo!\",\n      share_this_project: \"Compartilhe este projeto com seus amigos e família:\",\n      ready_to_share: \"Pronto para publicar seu projeto?\",\n      click_publish: \"Clique em \\\"Publicar\\\" para que apareça na galeria da turma, depois confira o que seus colegas construíram! Você pode voltar e continuar trabalhando neste projeto. Qualquer outra alteração será salva automaticamente e compartilhada com seus colegas.\",\n      already_published_prefix: \"Suas mudanças foram publicadas na galeria da turma.\",\n      already_published_suffix: \"Continue experimentando e tornando este projeto ainda melhor, ou veja o que o resto da sua turma construiu! Suas mudanças serão automaticamente salvas e compartilhadas com seus colegas.\",\n      view_gallery: \"Visualizar Galeria\",\n      project_published_noty: \"Seu nível foi o publicado!\",\n      keep_editing: \"Continue Editando\"\n    },\n    play_game_dev_level: {\n      created_by: \"Criado por {{name}}\",\n      restart: \"Reiniciar Nível\",\n      play: \"Jogar Nível\",\n      play_more_codecombat: \"Jogue mais CodeCombat\",\n      default_student_instructions: \"Clique para controlar seu herói e ganhar o jogo!\"\n    },\n    game_menu: {\n      inventory_tab: \"Inventário\",\n      save_load_tab: \"Salvar/Carregar\",\n      options_tab: \"Opções\",\n      guide_tab: \"Guia\",\n      guide_video_tutorial: \"Vídeo Tutorial\",\n      guide_tips: \"Dicas\",\n      multiplayer_tab: \"Multijogador\",\n      auth_tab: \"Registrar\",\n      inventory_caption: \"Equipe seu herói\",\n      choose_hero_caption: \"Escolha o herói e linguagem\",\n      options_caption: \"Configurar preferências\",\n      guide_caption: \"Documentos e Dicas\",\n      multiplayer_caption: \"Jogue com seus amigos!\",\n      auth_caption: \"Salve seu progresso.\"\n    },\n    leaderboard: {\n      view_other_solutions: \"Ver Outras Soluções\",\n      scores: \"Pontuação\",\n      top_players: \"Top Jogadores por\",\n      day: \"Hoje\",\n      week: \"Esta Semana\",\n      all: \"Todo Tempo\",\n      latest: \"Mais Recentes\",\n      time: \"Tempo\",\n      damage_taken: \"Dano Recebido\",\n      damage_dealt: \"Dano Causado\",\n      difficulty: \"Dificuldade\",\n      gold_collected: \"Ouro Coletado\"\n    },\n    inventory: {\n      equipped_item: \"Equipado\",\n      required_purchase_title: \"Obrigatório\",\n      available_item: \"Disponível\",\n      restricted_title: \"Restrito\",\n      should_equip: \"(Dois cliques para equipar)\",\n      equipped: \"(Equipado)\",\n      locked: \"(Trancado)\",\n      restricted: \"(Restrito neste nível)\",\n      equip: \"Equipar\",\n      unequip: \"Desequipar\"\n    },\n    buy_gems: {\n      few_gems: \"Algumas gemas\",\n      pile_gems: \"Pilha de gemas\",\n      chest_gems: \"Baú de gemas\",\n      purchasing: \"Comprando...\",\n      declined: \"Seu cartão foi rejeitado, desculpe.\",\n      retrying: \"Erro de servidor, tentando novamente.\",\n      prompt_title: \"Gemas insuficientes\",\n      prompt_body: \"Você quer adquirir mais gemas?\",\n      prompt_button: \"Entrar na loja\",\n      recovered: \"Gemas das compras anteriores recuperadas. Por favor atualize a página.\",\n      price: \"x{{gems}} / mês\",\n      buy_premium: \"Comprar Premium\",\n      purchase: \"Adquirir\",\n      purchased: \"Adiquirido\"\n    },\n    earn_gems: {\n      prompt_title: \"Gemas Insuficientes\",\n      prompt_body: \"Continue jogando para ganhar mais!\"\n    },\n    subscribe: {\n      premium_already_subscribed: \"Você já se inscreveu como Premium!\",\n      subscribe_modal_title: \"CodeCombat Premium\",\n      comparison_blurb: \"Seja um programador. Faça a inscrição <b>Premium</b> hoje!\",\n      must_be_logged: \"Você deve estar logado primeiro. Por favor crie uma conta ou faça log in no menu acima.\",\n      subscribe_title: \"Inscrever-se\",\n      unsubscribe: \"Desinscrever-se\",\n      confirm_unsubscribe: \"Confirmar Desinscrição\",\n      never_mind: \"Nunca esqueça, eu ainda te você\",\n      thank_you_months_prefix: \"Obrigado por nos apoiar nos últimos\",\n      thank_you_months_suffix: \"meses.\",\n      thank_you: \"Obrigado por apoiar o CodeCombat.\",\n      sorry_to_see_you_go: \"É uma pena ver você partir! Por favor, diga o que podemos fazer para melhorar.\",\n      unsubscribe_feedback_placeholder: \"Oh, o que nós fizemos?\",\n      stripe_description: \"Inscrição Mensal\",\n      buy_now: \"Compre Agora\",\n      subscription_required_to_play: \"Você precisará se inscrever para jogar este nível.\",\n      unlock_help_videos: \"Inscreva-se para desbloquear todos os vídeos tutoriais.\",\n      personal_sub: \"Inscrição individual\",\n      loading_info: \"Carregando informação sobre assinatura...\",\n      managed_by: \"Gerenciada por\",\n      will_be_cancelled: \"Será cancelada em\",\n      currently_free: \"Atualmente você tem uma assinatura gratuita\",\n      currently_free_until: \"Sua assinatura gratuita é válida até\",\n      free_subscription: \"Assinatura gratuita\",\n      was_free_until: \"Sua assinatura gratuita expirou em\",\n      managed_subs: \"Assinaturas gerenciadas\",\n      subscribing: \"Assinando...\",\n      current_recipients: \"Destinatários atuais\",\n      unsubscribing: \"Cancelando assinatura\",\n      subscribe_prepaid: \"Clique em Assinar para utilizar um código pré-pago\",\n      using_prepaid: \"Utilizando código pré-pago para assinatura mensal\",\n      feature_heroes: \"Desbloqueie heróis exclusivos\",\n      month_price: \"$__price__/mês\",\n      lifetime: \"Inscrição para vida toda\",\n      lifetime_price: \"$__price__\",\n      year_subscription: \"Inscrição Anual\",\n      year_price: \"$__price__/ano\",\n      support_part1: \"Precisa de ajuda com as opções de pagamento? Envie um email para\",\n      support_part2: \"support@codecombat.com\"\n    },\n    announcement: {\n      now_available: \"Agora disponível para assinantes!\",\n      subscriber: \"assinante\",\n      cuddly_companions: \"Companheiros fofinhos!\",\n      kindling_name: \"Kindling Elemental\",\n      kindling_description: \"Kindling Elementals só quer mantê-lo aquecido à noite. E durante o dia. O tempo todo, na verdade.\",\n      griffin_name: \"Grifo bebê\",\n      griffin_description: \"Os Grifos são metade águia, metade leão, todos adoráveis.\",\n      raven_name: \"Corvo\",\n      raven_description: \"Os corvos são excelentes para juntar garrafas brilhantes cheias de saúde para você.\",\n      mimic_name: \"Mímico\",\n      mimic_description: \"Os mímicos pode pegar moedas para você. Mova-os para as moedas e aumente seu tesouro.\",\n      cougar_name: \"Puma\",\n      cougar_description: \"Os pumas gostam de ganhar PhDs.\",\n      fox_name: \"Raposa Azul\",\n      fox_description: \"As raposas azuis são muito inteligentes e gostam de escavar na sujeira e na neve!\",\n      pugicorn_name: \"Pugicorn\",\n      pugicorn_description: \"Pugicorns são uma das criaturas mais raras e podem lançar feitiços!\",\n      wolf_name: \"Lobo Filhote\",\n      wolf_description: \"Os filhotes de lobo se destacam na caçar, pegar coisas e jogar esconde-esconde!\",\n      collect_pets: \"Colete pet para seus heróis!\",\n      each_pet: \"Cada pet tem uma habilidade auxiliar exclusiva!\",\n      upgrade_to_premium: \"Torne-se um {{subscriber}} para equipar os pets.\",\n      play_second_kithmaze: \"Jogue {{the_second_kithmaze}} para desbloquear o Lobo Filhote!\",\n      the_second_kithmaze: \"O Segundo Kithmaze\",\n      keep_playing: \"Continue jogando para descobrir o primeiro pet!\",\n      coming_soon: \"Em breve\",\n      ritic: \"Ritic o Frio\",\n      ritic_description: \"Ritic o Frio. Preso no Glaciar Kelvintaph por inúmeras decadas, finalmente livre e pronto para cuidar dos ogros que o aprisionaram.\",\n      ice_block: \"Um bloco de gelo\",\n      ice_description: \"Parece haver algo preso dentro...\",\n      blink_name: \"Blink\",\n      blink_description: \"Ritic desaparece e reaparece em um piscar de olhos, deixando apenas uma sombra.\",\n      shadowStep_name: \"Shadowstep\",\n      shadowStep_description: \"Um mestre lutador sabe como andar nas sombras.\",\n      tornado_name: \"Tornado\",\n      tornado_description: \"É bom recomeçar quando tudo for pro espaço.\",\n      wallOfDarkness_name: \"Muro das Trevas\",\n      wallOfDarkness_description: \"Esconda-se por trás de uma parede de sombras para evitar o olhares curiosos.\"\n    },\n    premium_features: {\n      get_premium: \"Assine<br>CodeCombat<br>Premium\",\n      master_coder: \"Torne-se um programador assinando hoje!\",\n      subscribe_now: \"Assine Agora\",\n      hero_blurb_1: \"Ganhe acesso a __premiumHeroesCount__ heróis exclusivos para assinantes! Aproveite o força de Okar Stompfoot, a precisão de Naria of the Leaf, ou convoque esqueletos \\\"adoráveis\\\" com Nalfar Cryptor.\",\n      hero_blurb_2: \"Os guerreiros desbloqueiam habilidades especiais como Grito de Guerra, Stomp e Lançar Heróis. Ou, jogue como um Patrulheiro usando arcos, facas, armadilhas! Teste suas habilidades como um autêntico Feiticeiro Programador e desenhe uma poderosa matriz de magia Primordial, Necromântica ou Elementar!\",\n      hero_caption: \"Novos heróis emocionantes!\",\n      pet_blurb_1: \"Os animais de estimação (pets) não são apenas companheiros adoráveis, eles também oferecem funcionalidades e métodos únicos. O Grifo bebê pode transportar unidades através do ar, o Lobo Filhote pega as flechas inimigas, o Puma gosta de perseguir ogros e o Mimic atrai moedas como um ímã!\",\n      pet_blurb_2: \"Colecione todos os animais de estimação para descobrir suas habilidades únicas!\",\n      pet_caption: \"Adote pets para acompanhar o seu herói!\",\n      game_dev_blurb: \"Aprenda a criar jogos e novos níveis para compartilhar com seus amigos! Coloque os itens que deseja, escreva o código para lógica e comportamento das unidades e veja se seus amigos podem vencer o nível!\",\n      game_dev_caption: \"Crie seus próprios jogos para desafiar seus amigos!\",\n      everything_in_premium: \"Tudo o que você tem direito com o CodeCombat Premium:\",\n      list_gems: \"Receba gemas para comprar equipamentos, animais de estimação e heróis\",\n      list_levels: \"Tenha acesso a mais __premiumLevelsCount__ níveis\",\n      list_heroes: \"Desbloqueie heróis exclusivos, inclua classes Ranger e Wizard (Patrulheiro e Feiticero)\",\n      list_game_dev: \"Crie e compartilhe jogos com seus amigos\",\n      list_web_dev: \"Crie sites e aplicativos interativos\",\n      list_items: \"Equipe itens exclusivos\",\n      list_support: \"Obtenha suporte Premium para ajudá-lo a depurar códigos mais complicados\",\n      list_clans: \"Crie clãs privados para convidar seus amigos e competir\"\n    },\n    choose_hero: {\n      choose_hero: \"Escolha seu Herói\",\n      programming_language: \"Linguagem de Programação\",\n      programming_language_description: \"Qual Linguagem de Programação você gostaria de usar?\",\n      \"default\": \"Padrão\",\n      experimental: \"Experimental\",\n      python_blurb: \"Simples, porém poderosa, é ótima para iniciantes e especialistas.\",\n      javascript_blurb: \"A linguagem da web.\",\n      coffeescript_blurb: \"Sintaxe de JavaScript mais legal.\",\n      lua_blurb: \"Linguagem de script para jogos.\",\n      java_blurb: \"(Apenas para assinantes) Android e enterprise.\",\n      status: \"Status\",\n      weapons: \"Armas\",\n      weapons_warrior: \"Espadas - Curta Alcance, Sem Magia\",\n      weapons_ranger: \"Bestas, Armas de fogo - Longo Alcance, Sem Magia\",\n      weapons_wizard: \"Varinhas, Bastões - Longa Distância, Magia\",\n      attack: \"Ataque\",\n      health: \"Vida\",\n      speed: \"Velocidade\",\n      regeneration: \"Cura\",\n      range: \"Distância de Ataque\",\n      blocks: \"Bloqueio\",\n      backstab: \"Dano de volta\",\n      skills: \"Habilidades\",\n      attack_1: \"Retira\",\n      attack_2: \"das listadas\",\n      attack_3: \"dano da arma.\",\n      health_1: \"Obtem\",\n      health_2: \"das listadas\",\n      health_3: \"saúde da armadura.\",\n      speed_1: \"Move-se para\",\n      speed_2: \"metros por segundo.\",\n      available_for_purchase: \"Disponível para a Compra\",\n      level_to_unlock: \"Nível para desbloquear:\",\n      restricted_to_certain_heroes: \"Apenas alguns heróis podem jogar esse nível.\"\n    },\n    skill_docs: {\n      \"function\": \"função\",\n      method: \"método\",\n      snippet: \"fragmento\",\n      number: \"número\",\n      array: \"ordem\",\n      object: \"objeto\",\n      string: \"string\",\n      writable: \"gravável\",\n      read_only: \"apenas leitura\",\n      action: \"Ação\",\n      spell: \"Feitiço\",\n      action_name: \"nome\",\n      action_cooldown: \"Demora\",\n      action_specific_cooldown: \"Recarregando\",\n      action_damage: \"Dano\",\n      action_range: \"Alcance\",\n      action_radius: \"Raio\",\n      action_duration: \"Duração\",\n      example: \"Exemplo\",\n      ex: \"ex\",\n      current_value: \"Valor Atual\",\n      default_value: \"Valor Padrão\",\n      parameters: \"Parâmetros\",\n      required_parameters: \"Parâmetros necessários\",\n      optional_parameters: \"Parâmetros opcionais\",\n      returns: \"Retorna\",\n      granted_by: \"Concebido por\"\n    },\n    save_load: {\n      granularity_saved_games: \"Salvo\",\n      granularity_change_history: \"Histórico\"\n    },\n    options: {\n      general_options: \"Opções Gerais\",\n      volume_label: \"Volume\",\n      music_label: \"Música\",\n      music_description: \"Ligar/desligar música de fundo.\",\n      editor_config_title: \"Configurações do Editor\",\n      editor_config_livecompletion_label: \"Autocompletar durante a escrita\",\n      editor_config_livecompletion_description: \"Mostra opções de autocompletar enquanto estiver escrevendo.\",\n      editor_config_invisibles_label: \"Mostrar Invisíveis\",\n      editor_config_invisibles_description: \"Mostrar invisíveis como espaços e tabs.\",\n      editor_config_indentguides_label: \"Mostrar Linhas de Identação\",\n      editor_config_indentguides_description: \"Mostrar linhas verticais para ver a identação melhor.\",\n      editor_config_behaviors_label: \"Comportamentos Inteligentes\",\n      editor_config_behaviors_description: \"Completar automaticamente colchetes, chaves e aspas.\"\n    },\n    about: {\n      main_title: \"Se quer aprender a programar, você precisa escrever (bastante) código.\",\n      main_description: \"No CodeCombat, nosso trabalho é assegurar que você está fazendo isso com um sorriso no rosto.\",\n      mission_link: \"Missão\",\n      team_link: \"Time\",\n      story_link: \"História\",\n      press_link: \"Contato\",\n      mission_title: \"Nossa missão: fazer programação acessível para todos os estudantes.\",\n      mission_description_1: \"<strong>Programação é mágica</strong>. É a habilidade de criar coisas apartir da pura imaginação. Criamos o CodeCombat para dar aos alunos a sensação de poder de um mago na ponta de seus dedos enquanto <strong>digita códigos</strong>.\",\n      mission_description_2: \"Como resultado, isso os permite aprender mais rápido também. MUITO mais rápido. É como conversar ao invés de ler um manual. Nós queremos trazer essa conversa para todas escolas e para <strong>todos estudantes</strong>, porque todos deveriam ter a chance de aprender a mágica da programação.\",\n      team_title: \"Conheça o time do CodeCombat\",\n      team_values: \"Valorizamos o diálogo aberto e respeitoso, onde a melhor ideia ganha. Nossas decisões são fundamentadas na pesquisa de clientes e nosso processo está focado na entrega de resultados tangíveis para eles. Todos põem a mão na massa, do nosso CEO aos nossos colaboradores no GitHub, porque valorizamos o crescimento e a aprendizagem em nossa equipe.\",\n      nick_title: \"Cofundador, CEO\",\n      matt_title: \"Cofundador, CTO\",\n      cat_title: \"Designer de Jogos\",\n      scott_title: \"Cofundador, Eng. de Software\",\n      maka_title: \"Defensor dos Clientes\",\n      robin_title: \"Gerente de Produto\",\n      nolan_title: \"Gerente de Território\",\n      lisa_title: \"Pedagoga\",\n      sean_title: \"Gerente de Território\",\n      liz_title: \"Gerente de Território\",\n      retrostyle_title: \"Ilustração\",\n      retrostyle_blurb: \"Games estilo Retrô\",\n      bryukh_title: \"Game Designer\",\n      bryukh_blurb: \"Constroi enigmas\",\n      community_title: \"... e nossa comunidade open-source\",\n      community_subtitle: \"Mais de 500 colaboradores ajudaram a construir o CodeCombat, com mais se juntando toda semana!\",\n      community_description_3: \"O CodeCombat é um \",\n      community_description_link_2: \"projeto da comunidade\",\n      community_description_1: \"com centenas de jogadores que se voluntariam para criar níveis, contribuem para o nosso código para adicionar recursos, corrigir bugs, testam o jogo e até mesmo traduzir o jogo em até 50 idiomas até agora. Funcionários, colaboradores e o site ganham compartilhando ideias e compartilhando esforços, assim como a comunidade open source em geral. O site é construído em vários projetos open source, e nós somos open source para dar a comunidade e fornecer aos jogadores curiosos um projeto familiar para explorar e experimentar. Qualquer um pode se juntar à comunidade CodeCombat! Confira nossa \",\n      community_description_link: \"página de contribuições\",\n      community_description_2: \"para mais informação.\",\n      number_contributors: \"Mais de 450 colaboradores deram o seu apoio e tempo a este projeto.\",\n      story_title: \"Nosso história até agora\",\n      story_subtitle: \"Desde 2013, o CodeCombat cresceu de um mero conjunto de esboços para um jogo vivo e próspero.\",\n      story_statistic_1b: \"jogadores no total\",\n      story_statistic_1c: \"Começaram sua jornada de programação através do CodeCombat\",\n      story_statistic_2a: \"Nós fomos traduzidos para mais de 50 idiomas - nossos jogadores são provenientes de\",\n      story_statistic_2b: \"200+ países\",\n      story_statistic_3a: \"Juntos, eles escreveram\",\n      story_statistic_3b: \"1 bilhão de linhas de código e contando\",\n      story_statistic_3c: \"através de muitas linguagens de programação diferentes\",\n      story_long_way_1: \"Embora tenhamos percorremos um longo caminho...\",\n      story_sketch_caption: \"O primeiro esboço do Nick, que descreve um jogo de programação em ação.\",\n      story_long_way_2: \"ainda temos muito o que fazer antes de completar a nossa missão, então ...\",\n      jobs_title: \"Venha trabalhar conosco e ajudar a escrever a história do CodeCombat!\",\n      jobs_subtitle: \"Não se encaixa em nenhum, mas está interessado em manter contato? Veja a listagem “Crie o seu”.\",\n      jobs_benefits: \"Benefícios do Funcionário\",\n      jobs_benefit_4: \"Férias ilimitadas\",\n      jobs_benefit_5: \"Desenvolvimento profissional e apoio à educação continuada - livros e jogos gratuitos!\",\n      jobs_benefit_6: \"Apoio médico\",\n      jobs_benefit_7: \"Mesa para todos\",\n      jobs_benefit_9: \"Opção de 10 anos de exercício\",\n      jobs_benefit_10: \"Licença maternidade: 10 semanas pagas, próximas 6 semanas 55% do salário\",\n      jobs_benefit_11: \"Licença paternidade: 10 semanas pagas\",\n      jobs_custom_title: \"Crie o seu\",\n      jobs_custom_description: \"Você é apaixonado pelo CodeCombat, mas não vê um emprego listado que corresponda às suas qualificações? Escreva-nos e mostre como você acha que pode contribuir com a nossa equipe. Gostaríamos de ouvir de você!\",\n      jobs_custom_contact_1: \"Envie-nos um recado em\",\n      jobs_custom_contact_2: \"se apresentando e podemos entrar em contato no futuro!\",\n      contact_subtitle: \"Precisa de mais informações? Entre em contato conosco em\",\n      screenshots_title: \"Screenshots do Jogo\",\n      screenshots_hint: \"(clique para ver em tamanho grande)\",\n      downloads_title: \"Download de Espólio e Informações\",\n      about_codecombat: \"Sobre o CodeCombat\",\n      screenshots: \"Screenshots\",\n      character_art: \"Arte do personagem\",\n      download_all: \"Baixar Tudo\",\n      previous: \"Anterior\"\n    },\n    teachers_quote: {\n      subtitle: \"Comece a ensinar hoje! Você poderá <strong>criar uma turma, adicionar alunos e monitorar o progresso </strong>à medida que eles aprendem ciência da computação.\",\n      email_exists: \"Existe um usuário com este email.\",\n      phone_number: \"Número de telefone\",\n      phone_number_help: \"Onde podemos contatá-lo durante o dia de trabalho?\",\n      primary_role_label: \"Função Principal\",\n      primary_role_default: \"Selecione Função Principal\",\n      purchaser_role_default: \"Selecione Função de Comprador\",\n      tech_coordinator: \"Coordenador de Tecnologia\",\n      advisor: \"Orientador\",\n      principal: \"Diretor\",\n      superintendent: \"Inspetor\",\n      parent: \"Pais\",\n      purchaser_role_label: \"Função de Comprador\",\n      influence_advocate: \"Influência/Advogado\",\n      evaluate_recommend: \"Avaliar/Recomendar\",\n      approve_funds: \"Aprovar Fundos\",\n      no_purchaser_role: \"Nenhuma função nas decisões de compra\",\n      district_label: \"Bairro\",\n      district_na: \"Escreva N/A caso não se aplique\",\n      organization_label: \"Nome da escola\",\n      city: \"Cidade\",\n      state: \"Estado\",\n      country: \"País\",\n      num_students_help: \"Quantos alunos usarão o CodeCombat?\",\n      num_students_default: \"Selecione Intervalo\",\n      education_level_label: \"Nível de educação dos alunos\",\n      education_level_help: \"Escolha os que se aplicam.\",\n      elementary_school: \"Ensino Fundamental 1\",\n      high_school: \"Ensino Médio\",\n      please_explain: \"(Explique)\",\n      middle_school: \"Ensino Fundamental 2\",\n      college_plus: \"Ensino Superior\",\n      anything_else: \"Mais alguma coisa que devemos saber?\",\n      connect_with: \"Conectar - se com:\"\n    },\n    versions: {\n      save_version_title: \"Salvar nova versão\",\n      new_major_version: \"Nova versão principal\",\n      submitting_patch: \"Enviando Patch...\",\n      cla_prefix: \"Para salvar as modificações, primeiro você deve concordar com nosso\",\n      cla_url: \"CLA\",\n      cla_suffix: \".\",\n      cla_agree: \"EU CONCORDO\",\n      owner_approve: \"Outro dono terá de aprovar isso antes de suas alterações se tornarem visíveis.\"\n    },\n    contact: {\n      contact_us: \"Contate-nos\",\n      welcome: \"É bom escutar suas opiniões! Use este formulário para nos enviar um email.\",\n      forum_prefix: \"Para algo público, por favor acesse \",\n      forum_page: \"nosso fórum\",\n      forum_suffix: \" ao invés disso.\",\n      faq_prefix: \"Também há um\",\n      faq: \"FAQ\",\n      subscribe_prefix: \"Se você precisa de ajuda para resolver um nível, por favor\",\n      subscribe: \"compre uma assinatura de CodeCombat\",\n      subscribe_suffix: \"e teremos prazer em te ajudar com seu código.\",\n      subscriber_support: \"Desde que você seja um assinante CodeCombat, seu e-mail será nossa prioridade de resposta.\",\n      screenshot_included: \"Imagem da tela incluída.\",\n      where_reply: \"Onde devemos responder?\",\n      send: \"Enviar opinião\"\n    },\n    account_settings: {\n      title: \"Configurações da Conta\",\n      not_logged_in: \"Entre com seu usuário e senha ou crie uma conta para poder alterar suas configurações.\",\n      me_tab: \"Eu\",\n      picture_tab: \"Foto\",\n      delete_account_tab: \"Excluir sua conta\",\n      wrong_email: \"E-mail incorreto\",\n      wrong_password: \"Senha Incorreta\",\n      delete_this_account: \"Excluir essa conta definitivamente\",\n      reset_progress_tab: \"Resetar Todo o Progresso\",\n      reset_your_progress: \"Apaga todo seu progresso e começa novamente\",\n      god_mode: \"Modo Deus\",\n      emails_tab: \"Emails\",\n      admin: \"Admin\",\n      manage_subscription: \"Clique a aqui para administrar a sua assinatura.\",\n      new_password: \"Nova Senha\",\n      new_password_verify: \"Confirmação\",\n      type_in_email: \"Digite seu e-mail para confirmar a exclusão\",\n      type_in_email_progress: \"Escreva seu email para confirmar que está apagando seu progresso.\",\n      type_in_password: \"Digite sua senha.\",\n      email_subscriptions: \"Assinaturas para Notícias por Email\",\n      email_subscriptions_none: \"Sem Assinaturas de Email\",\n      email_announcements: \"Notícias\",\n      email_announcements_description: \"Receba emails com as últimas notícias e desenvolvimentos do CodeCombat.\",\n      email_notifications: \"Notificações\",\n      email_notifications_summary: \"Controles para notificações por email, automáticas e personalizadas, relacionadas a sua atividade no CodeCombat.\",\n      email_any_notes: \"Quaisquer Notificações\",\n      email_any_notes_description: \"Desabilitar todas as atividades de notificação por email.\",\n      email_news: \"Notícias\",\n      email_recruit_notes: \"Oportunidades de emprego\",\n      email_recruit_notes_description: \"Se você jogar muito bem, nós podemos lhe contactar para lhe oferecer um emprego (melhor)\",\n      contributor_emails: \"Emails para as Classes de Contribuidores\",\n      contribute_prefix: \"Estamos procurando pessoas para se juntar à nossa turma! Confira a nossa \",\n      contribute_page: \"página de contribuição\",\n      contribute_suffix: \" para saber mais.\",\n      email_toggle: \"Ativar todos\",\n      error_saving: \"Erro no salvamento\",\n      saved: \"Alterações Salvas\",\n      password_mismatch: \"As senhas não estão iguais\",\n      password_repeat: \"Por favor repita sua senha.\"\n    },\n    keyboard_shortcuts: {\n      keyboard_shortcuts: \"Atalhos do Teclado\",\n      space: \"Espaço\",\n      enter: \"Enter\",\n      press_enter: \"pressione enter\",\n      escape: \"Esc\",\n      shift: \"Shift\",\n      run_code: \"Rodar código atual.\",\n      run_real_time: \"Rodar em tempo real.\",\n      continue_script: \"Pular script atual.\",\n      skip_scripts: \"Pular todos os scripts puláveis.\",\n      toggle_playback: \"Alternar play/pause.\",\n      scrub_playback: \"Rolar para frente e para trás no tempo.\",\n      single_scrub_playback: \"Rolar para frente e para trás no tempo, quadro a quadro.\",\n      scrub_execution: \"Rolar através da execução do feitiço atual.\",\n      toggle_debug: \"Ligar/desligar informações de debug.\",\n      toggle_grid: \"Ligar/desligar exibição da grade.\",\n      toggle_pathfinding: \"Ligar/desligar exibição do pathfinding (caminho).\",\n      beautify: \"Embeleze seu código a partir da padronização de formatação.\",\n      maximize_editor: \"Maximizar/minimizar editor de código.\"\n    },\n    community: {\n      main_title: \"Comunidade CodeCombat\",\n      introduction: \"Verifique abaixo de que maneires você pode se envolver e decida qual lhe parece mais divertida. Esperamos trabalhar com você em breve!\",\n      level_editor_prefix: \"Use o CodeCombat\",\n      level_editor_suffix: \"para criar e editar níveis. Usuários criaram níveis para suas classes, amigos, hackathons, estudantes e parentes. Se criar um novo nível soa intimidador, você pode iniciar fazendo um fork de um dos nossos.\",\n      thang_editor_prefix: \"Nós chamamos as unidades do jogo de 'thangs'. Utilize o\",\n      thang_editor_suffix: \"para modificar o fonte das artes. Permita que lancem projéteis, modifique a direção das animações, modifique os pontos de vida da unidade ou envie seu próprio vetor de sprites.\",\n      article_editor_prefix: \"Encontrou algo errado na nossa documentação? Gostaria de criar algumas instruções para suas próprias criações? Dê uma olhada em\",\n      article_editor_suffix: \"e ajude os jogadores do CodeCombat a aproveitar o máximo de seu jogo.\",\n      find_us: \"Encontre-nos nestes sites\",\n      social_github: \"Confira todo nosso código no GitHub\",\n      social_blog: \"Leia o blog do CodeCombat no Sett\",\n      social_discource: \"Entre na discussão no nosso Fórum\",\n      social_facebook: \"Curta o CodeCombat no Facebook\",\n      social_twitter: \"Siga o CodeCombat no Twitter\",\n      social_gplus: \"Ingresse no CodeCombat no Google+\",\n      social_slack: \"Converse conosco usando o canal público Slack do CodeCombat\",\n      contribute_to_the_project: \"Contribuir para o projeto\"\n    },\n    clans: {\n      clan: \"Clã\",\n      clans: \"Clãs\",\n      new_name: \"Novo nome para o clã\",\n      new_description: \"Nova descrição para o clã\",\n      make_private: \"Tornar o clã privado\",\n      subs_only: \"Apenas para assinantes\",\n      create_clan: \"Criar novo clã\",\n      private_preview: \"Visualizar\",\n      private_clans: \"Clãs Privados\",\n      public_clans: \"Clãs Públicos\",\n      my_clans: \"Meus Clãs\",\n      clan_name: \"Nome do Clã\",\n      name: \"Nome\",\n      chieftain: \"Chefe\",\n      edit_clan_name: \"Editar o nome do Clã\",\n      edit_clan_description: \"Editar a descrição do Clã\",\n      edit_name: \"Editar nome\",\n      edit_description: \"Editar descrição\",\n      \"private\": \"(privado)\",\n      summary: \"Resumo\",\n      average_level: \"Média de nível\",\n      average_achievements: \"Médias de conquistas\",\n      delete_clan: \"Deletar Clã\",\n      leave_clan: \"Sair do Clã\",\n      join_clan: \"Juntar-se ao Clã\",\n      invite_1: \"Convidar:\",\n      invite_2: \"*Convide jogadores para este Clã enviando-os este link.\",\n      members: \"Membros\",\n      progress: \"Progresso\",\n      not_started_1: \"Não iniciado\",\n      started_1: \"Iniciado\",\n      complete_1: \"Completado\",\n      exp_levels: \"Mostrar níveis\",\n      rem_hero: \"Remover herói\",\n      status: \"Estado\",\n      complete_2: \"Completado\",\n      started_2: \"Iniciado\",\n      not_started_2: \"Não Iniciado\",\n      view_solution: \"Clique para ver a solução.\",\n      view_attempt: \"Clique para ver a tentativa.\",\n      latest_achievement: \"Última Conquista\",\n      playtime: \"Tempo de Jogo\",\n      last_played: \"Último Jogo\",\n      leagues_explanation: \"Jogar em um campeonato contra outros membros do clã nestes casos de arena multiplayer.\",\n      track_concepts1: \"Rastrear conceitos\",\n      track_concepts2a: \"aprendido por cada estudante\",\n      track_concepts2b: \"aprendido por cada membro\",\n      track_concepts3a: \"Rastrear níveis completados por cada estudante\",\n      track_concepts3b: \"Rastrear níveis completados por cada membro\",\n      track_concepts4a: \"Ver seus alunos'\",\n      track_concepts4b: \"Ver seus membros'\",\n      track_concepts5: \"soluções\",\n      track_concepts6a: \"Classificar alunos por nome ou progresso\",\n      track_concepts6b: \"Classificar membros por nome ou progresso\",\n      track_concepts7: \"Requer convite\",\n      track_concepts8: \"para se juntar\",\n      private_require_sub: \"Clãs particulares requerem uma assinatura para criar ou juntar-se.\"\n    },\n    courses: {\n      create_new_class: \"Criar nova classe\",\n      unnamed_class: \"Classe Sem Nome\",\n      edit_settings1: \"Editar Configurações da Classe\",\n      add_students: \"Adicionar Alunos\",\n      stats: \"Estatísticas\",\n      total_students: \"Total de Alunos:\",\n      average_time: \"Average level play time:\",\n      total_time: \"Total play time:\",\n      average_levels: \"Média de níveis completados:\",\n      total_levels: \"Total de níveis completados:\",\n      students: \"Estudantes\",\n      concepts: \"Conceitos\",\n      play_time: \"Tempo de jogo:\",\n      completed: \"Completado:\",\n      enter_emails: \"Insira os e-mails dos estudantes , um por linha\",\n      send_invites: \"Enviar convites\",\n      number_programming_students: \"Número de alunos de programação\",\n      number_total_students: \"Total de alunos na escola\",\n      switch_to: \"Mudar para\",\n      greetings: \"Saudações!\",\n      back_courses: \"Voltar aos meus cursos\",\n      remove_student: \"remover aluno\",\n      student: \"Estudante\",\n      teacher: \"Professor\",\n      available_levels: \"Fases disponíveis\",\n      started: \"iniciado\",\n      complete: \"completo\",\n      practice: \"prático\",\n      required: \"obrigatório\",\n      welcome_to_courses: \"Aventureiros, bem vindos aos Cursos!\",\n      ready_to_play: \"Pronto para jogar?\",\n      start_new_game: \"Começar um novo jogo\",\n      play_now_learn_header: \"Jogue agora para aprender\",\n      play_now_learn_1: \"sintaxe básica para controlar seu personagem\",\n      welcome_to_page: \"Painel do Estudante\",\n      my_classes: \"Turmas Atuais\",\n      view_levels: \"visualizar todas as fases no curso\",\n      join_class: \"JUNTE - SE A UMA TURMA\",\n      ask_teacher_for_code: \"Pergunte ao seu professor se você tem o código de uma turma do CodeCombat! Se sim, insira - o abaixo:\",\n      enter_c_code: \"<Insira o código da turma>\",\n      join: \"Junte-se\",\n      course_complete: \"Curso Completo\",\n      play_arena: \"Jogue na Arena\",\n      start: \"Começar\",\n      last_level: \"Última Fase Jogada\",\n      not_you: \"Não é você?\",\n      continue_playing: \"Continue Jogando\",\n      option1_header: \"Opção 1: Convide alunos por Email\",\n      remove_student1: \"Remover Aluno\",\n      keep_student: \"Manter Aluno\",\n      concepts_covered: \"Conceitos Abordados\",\n      create_class: \"Criar Classe\",\n      select_your_hero: \"Escolha Seu Herói\",\n      select_your_hero_description: \"Você sempre pode alterar seu herói indo para a página de Cursos e clicando em \\\"Alterar herói\\\"\",\n      select_this_hero: \"Escolher este Herói\",\n      current_hero: \"Herói Atual:\"\n    },\n    project_gallery: {\n      no_projects_published: \"Seja o primeiro a publicar um projeto neste curso!\",\n      view_project: \"Visualizar Projeto\",\n      edit_project: \"Editar Projeto\"\n    },\n    teacher: {\n      view_class: \"Ver Classe\",\n      email_sent: \"Email enviado\",\n      send_recovery_email: \"Enviar email de recuperação de senha\",\n      enter_new_password_below: \"Informe nova senha abaixo:\",\n      change_password: \"Alterar Senha\",\n      changed: \"Alterado\"\n    },\n    web_dev: {\n      image_gallery_title: \"Galeria de Imagens\",\n      select_an_image: \"Selecione uma imagem que deseja usar\",\n      scroll_down_for_more_images: \"(Rolar para baixo para mais imagens)\",\n      copy_the_url: \"Copie a URL abaixo\",\n      copy_the_url_description: \"Útil se você deseja sobrescrever uma imagem existente.\",\n      copy_the_img_tag: \"Copiar a tag <img>\",\n      copy_the_img_tag_description: \"Útil se você deseja inserir uma imagem nova.\",\n      copy_url: \"Copiar URL\",\n      copy_img: \"Copiar <img>\",\n      how_to_copy_paste: \"Como Copiar/Colar\",\n      copy: \"Copiar\",\n      paste: \"Colar\",\n      back_to_editing: \"Voltar ao Modo Edição\"\n    },\n    classes: {\n      archmage_title: \"Arquimago\",\n      archmage_title_description: \"(Programador)\",\n      archmage_summary: \"Se você é um desenvolvedor interessado em programar jogos educacionais, seja um arquimago e ajude-nos a construir CodeCombat!\",\n      artisan_title: \"Artesão\",\n      artisan_title_description: \"(Construtor de Nível)\",\n      artisan_summary: \"Construa e compartilhe níveis para você e seus amigos jogar. Seja um Artesão e aprenda a arte de lecionar outros à programar.\",\n      adventurer_title: \"Aventureiro\",\n      adventurer_title_description: \"(Testador de Nível)\",\n      adventurer_summary: \"Obtenha nossos novos níveis (ou mesmo nosso conteúdo de assinante) de graça um semana adiantado e ajude-nos a remover bugs (erros) antes que eles sejam lançados publicamente.\",\n      scribe_title: \"Escriba\",\n      scribe_title_description: \"(Escritor de Artigos)\",\n      scribe_summary: \"Bom código exige boa documentação. Escreva, edite, e melhore a documentação lida por milhões de jogadores ao redor do mundo.\",\n      diplomat_title: \"Diplomata\",\n      diplomat_title_description: \"(Tradutor)\",\n      diplomat_summary: \"CodeCombat está disponível em mais de 45 idiomas graças aos nossos Diplomatas. Nos ajude você também, contribuindo com as traduções.\",\n      ambassador_title: \"Embaixador\",\n      ambassador_title_description: \"(Suporte)\",\n      ambassador_summary: \"Acalme nossos usuários do fórum e forneça uma direção para suas dúvidas. Nossos embaixadores representam CodeCombat no mundo todo.\"\n    },\n    editor: {\n      main_title: \"Editores do CodeCombat\",\n      article_title: \"Editor de Artigo\",\n      thang_title: \"Editor de Thang\",\n      level_title: \"Editor de Nível\",\n      achievement_title: \"Editor de Conquistas\",\n      poll_title: \"Editor de Enquete\",\n      back: \"Voltar\",\n      revert: \"Reverter\",\n      revert_models: \"Reverter Modelos\",\n      pick_a_terrain: \"Escolha um Terreno\",\n      dungeon: \"Masmorra\",\n      indoor: \"Interior\",\n      desert: \"Deserto\",\n      grassy: \"Gramado\",\n      mountain: \"Montanha\",\n      glacier: \"Geleira\",\n      small: \"Pequeno\",\n      large: \"Grande\",\n      fork_title: \"Realizar um Novo Fork\",\n      fork_creating: \"Criando Fork...\",\n      generate_terrain: \"Gerando Terreno\",\n      more: \"Mais\",\n      wiki: \"Wiki\",\n      live_chat: \"Chat ao Vivo\",\n      thang_main: \"Principal\",\n      thang_spritesheets: \"Planilhas de Sprites\",\n      thang_colors: \"Cores\",\n      level_some_options: \"Algumas Opções?\",\n      level_tab_thangs: \"Thangs\",\n      level_tab_scripts: \"Scripts\",\n      level_tab_components: \"Componentes\",\n      level_tab_systems: \"Sistemas\",\n      level_tab_docs: \"Documentação\",\n      level_tab_thangs_title: \"Thangs Atuais\",\n      level_tab_thangs_all: \"Tudo\",\n      level_tab_thangs_conditions: \"Condições de Início\",\n      level_tab_thangs_add: \"Adicionar Thangs\",\n      level_tab_thangs_search: \"Buscar thangs\",\n      add_components: \"Adicionar componentes\",\n      component_configs: \"Configurações de componente\",\n      config_thang: \"Duplo-clique para configurar uma thang\",\n      \"delete\": \"Excluir\",\n      duplicate: \"Duplicar\",\n      stop_duplicate: \"Parar de Duplicar\",\n      rotate: \"Rotacionar\",\n      level_component_tab_title: \"Componentess Atuais\",\n      level_component_btn_new: \"Criar Novo Componente\",\n      level_systems_tab_title: \"Sistemas Atuais\",\n      level_systems_btn_new: \"Criar Novo Sistema\",\n      level_systems_btn_add: \"Adicionar Sistema\",\n      level_components_title: \"Voltar para Lista de Thangs\",\n      level_components_type: \"Tipo\",\n      level_component_edit_title: \"Editar Componente\",\n      level_component_config_schema: \"Configurar Esquema\",\n      level_system_edit_title: \"Editar Sistema\",\n      create_system_title: \"Criar Novo Sistema\",\n      new_component_title: \"Criar Novo Componente\",\n      new_component_field_system: \"Sistema\",\n      new_article_title: \"Criar um Novo Artigo\",\n      new_thang_title: \"Criar um Novo Tipo de Thang\",\n      new_level_title: \"Criar um Novo Nível\",\n      new_article_title_login: \"Faça login para Criar um Novo Artigo\",\n      new_thang_title_login: \"Faça login para Criar um Novo Tipo de Thang\",\n      new_level_title_login: \"Faça login para Criar um Novo Nível\",\n      new_achievement_title: \"Criar Nova Conquista\",\n      new_achievement_title_login: \"Faça login para Criar uma Nova Conquista\",\n      new_poll_title: \"Criar uma nova enquete\",\n      new_poll_title_login: \"Faça login para criar uma nova enquete\",\n      article_search_title: \"Procurar Artigos Aqui\",\n      thang_search_title: \"Procurar Tipos de Thang Aqui\",\n      level_search_title: \"Procurar Níveis Aqui\",\n      achievement_search_title: \"Buscar Conquistas\",\n      poll_search_title: \"Buscar enquetes\",\n      read_only_warning2: \"Nota: você não pode salvar suas edições aqui pois não está logado.\",\n      no_achievements: \"Nenhuma conquista foi adicionada para esse nível ainda.\",\n      achievement_query_misc: \"Conquista chave desligada dos variados\",\n      achievement_query_goals: \"Conquista chave desligada dos objetivos de nível\",\n      level_completion: \"Conclusão do Nível\",\n      pop_i18n: \"Popular I18N\",\n      tasks: \"Tarefas\",\n      clear_storage: \"Limpar suas alterações locais\",\n      add_system_title: \"Adicionar sistemas ao nível\",\n      done_adding: \"Concluir adição\"\n    },\n    article: {\n      edit_btn_preview: \"Prever\",\n      edit_article_title: \"Editar Artigo \"\n    },\n    polls: {\n      priority: \"Prioridade\"\n    },\n    contribute: {\n      page_title: \"Contribuindo\",\n      intro_blurb: \"CodeCombat é 100% open source, ou seja, tem seu código aberto! Centenas de jogadores dedicados estão nos ajudando a construir o jogo dentro do que ele é hoje. Junte-se a nós e escreva o próximo capítulo na conquista de CodeCombat para ensinar o mundo a programar!\",\n      alert_account_message_intro: \"Ei!\",\n      alert_account_message: \"Para assinar os emails de classe, você precisa estar logado.\",\n      archmage_introduction: \"Uma das melhores partes sobre a construção de jogos é que eles sintetizam diversas coisas diferentes. Gráficos, som, interação em tempo real, redes sociais, e, claro, muitos dos aspectos mais comuns da programação, desde a gestão em baixo nível de banco de dados, e administração do servidor até interação com o usuário e desenvolvimento da interface. Há muito a fazer, e se você é um programador experiente com um desejo ardente de realmente mergulhar no âmago da questão do CodeCombat, esta classe pode ser para você. Nós gostaríamos de ter sua ajuda para construir o melhor jogo de programação de todos os tempos.\",\n      class_attributes: \"Atributos da Classe\",\n      archmage_attribute_1_pref: \"Conhecimento em \",\n      archmage_attribute_1_suf: \", ou um desejo de aprender. A maioria do nosso código é escrito nessa lingua. Se você é um fã de Ruby ou Python, você vai se sentir em casa. É JavaScript, mas com uma sintaxe mais agradável.\",\n      archmage_attribute_2: \"Alguma experiência em programação e iniciativa pessoal. Nós vamos ajudá-lo a se orientar, mas não podemos passar muito tempo treinando você.\",\n      how_to_join: \"Como Participar\",\n      join_desc_1: \"Qualquer um pode ajudar! Confira nosso \",\n      join_desc_2: \"para começar, e marque a caixa abaixo para marcar-se como um arquimago corajoso e receba as últimas notícias por email. Quer conversar sobre o que fazer ou como se envolver mais profundamente? \",\n      join_desc_3: \", ou encontre-nos em nosso \",\n      join_desc_4: \"e começaremos a partir de lá!\",\n      join_url_email: \"Envie-nos um email\",\n      join_url_slack: \"canal público do Slack\",\n      archmage_subscribe_desc: \"Receba email sobre novas oportunidades para codificar e anúncios.\",\n      artisan_introduction_pref: \"Nós devemos contruir níveis adicionais! Pessoas estão clamando por mais conteúdo, e só podemos contruir tantos de nós mesmos. Agora sua estação de trabalho é o nível um; nosso Editor de Níveis é pouco utilizável até mesmo para seus criadores, então fique esperto. Se você tem visões de campanhas abrangendo for-loops para\",\n      artisan_introduction_suf: \", esta classe pode ser para você.\",\n      artisan_attribute_1: \"Qualquer experiência em construir conteúdo como esse seria legal, como usando os editores de nível da Blizzard. Mas não é obrigatório!\",\n      artisan_attribute_2: \"Um desejo ardente de fazer um monte de testes e iteração. Para fazer bons níveis, você precisa levá-lo para os outros e vê-los jogar, e estar preparado para encontrar muitas coisas para consertar.\",\n      artisan_attribute_3: \"Por enquanto, a resistência em par com um Aventureiro. Nosso Editor de Níveis é super preliminar e frustrante para usar. Você foi avisado!\",\n      artisan_join_desc: \"Use o Editor de Níveis nestas etapas, mais ou menos:\",\n      artisan_join_step1: \"Leia a documentação.\",\n      artisan_join_step2: \"Crie um novo nível e explore os níveis existentes.\",\n      artisan_join_step3: \"Encontre-nos na nossa sala pública no Slack para ajuda.\",\n      artisan_join_step4: \"Publique seus níveis no fórum para avaliação.\",\n      artisan_subscribe_desc: \"Receba emails com novidades sobre o editor de níveis e anúncios.\",\n      adventurer_introduction: \"Vamos ser claros sobre o seu papel: você é o tanque. Você vai tomar dano pesado. Precisamos de pessoas para experimentar níveis inéditos e ajudar a identificar como fazer as coisas melhorarem. A dor será enorme, fazer bons jogos é um processo longo e ninguém acerta na primeira vez. Se você pode suportar e ter uma alta pontuação de constituição, então esta classe pode ser para você.\",\n      adventurer_attribute_1: \"Sede de aprendizado. Você quer aprender a codificar e nós queremos ensiná-lo a codificar. Você provavelmente vai fazer a maior parte do ensino neste caso.\",\n      adventurer_attribute_2: \"Carismático. Seja gentil, mas articulado sobre o que precisa melhorar, e ofereça sugestões sobre como melhorar.\",\n      adventurer_join_pref: \"Se reuna (ou recrute!) um Artesão e trabalhe com ele, ou marque a caixa abaixo para receber emails quando houver novos níveis para testar. Também estaremos postando sobre níveis que precisam de revisão em nossas redes como\",\n      adventurer_forum_url: \"nosso fórum\",\n      adventurer_join_suf: \"então se você prefere ser notificado dessas formas, inscreva-se lá!\",\n      adventurer_subscribe_desc: \"Receba emails quando houver novos níveis para testar.\",\n      scribe_introduction_pref: \"O CodeCombat não será apenas um monte de níveis. Ele também irá incluir uma fonte de conhecimento, um wiki de conceitos de programação que os níveis podem se basear. Dessa forma, em vez de cada Artesão ter que descrever em detalhes o que é um operador de comparação, eles podem simplesmente criar um link para o artigo que o descreve. Algo na linha do que a \",\n      scribe_introduction_url_mozilla: \"Mozilla Developer Network\",\n      scribe_introduction_suf: \" construiu. Se a sua idéia de diversão é articular os conceitos de programação em Markdown, então esta classe pode ser para você.\",\n      scribe_attribute_1: \"Habilidade com palavras é praticamente tudo o que você precisa. Não só a gramática e ortografica, mas a capacidade de transmitir idéias muito complicadas para os outros.\",\n      contact_us_url: \"Contate-nos\",\n      scribe_join_description: \"conte-nos um pouco sobre você, sua experiência com programação e que tipo de coisas você gostaria de escrever sobre. Nós começaremos a partir disso!\",\n      scribe_subscribe_desc: \"Receba email sobre anúncios de escrita de artigos.\",\n      diplomat_introduction_pref: \"Então, se há uma coisa que aprendemos com o  \",\n      diplomat_launch_url: \"lançamento em Outubro\",\n      diplomat_introduction_suf: \"é que há um interesse considerável no CodeCombat em outros países, especialmente no Brasil! Estamos construindo um corpo de tradutores ansiosos para transformar um conjunto de palavras em outro conjunto de palavras para tornar o CodeCombat tão acessível em todo o mundo quanto for possível. Se você gosta de obter cenas inéditas do próximo conteúdo e obter esses níveis para os seus compatriotas o mais rápido possível, então esta classe pode ser para você.\",\n      diplomat_attribute_1: \"Fluência no inglês e na língua para a qual você gostaria de traduzir. Ao transmitir idéias complicadas, é importante ter um forte domínio em ambos!\",\n      diplomat_i18n_page_prefix: \"Você pode começar a traduzir nossos níveis indo para a\",\n      diplomat_i18n_page: \"página de tradução\",\n      diplomat_i18n_page_suffix: \", ou nossa página no GitHub.\",\n      diplomat_join_pref_github: \"Encontre o arquivo de sua linguagem \",\n      diplomat_github_url: \"no GitHub\",\n      diplomat_join_suf_github: \", edite-o online, e envie um pull request. Marque também, esta caixa abaixo para se manter atualizado sobre os novos desenvolvimento de internacionalização!\",\n      diplomat_subscribe_desc: \"Receba emails sobre o desenvolvimento da i18n e níveis para traduzir.\",\n      ambassador_introduction: \"Esta é uma comunidade que estamos construindo, e vocês são as conexões. Temos chats Olark, emails e redes sociais com muitas pessoas para conversar e ajudar a se familiarizar com o jogo e aprender. Se você quer ajudar as pessoas a se envolver e se divertir, e ter uma boa noção da pulsação do CodeCombat e para onde estamos indo em seguida, esta classe pode ser para você.\",\n      ambassador_attribute_1: \"Habilidades de comunicação. Ser capaz de identificar os problemas que os jogadores estão tendo e ajudar a resolvê-los, Além disso, manter o resto de nós informados sobre o que os jogadores estão dizendo, o que gostam e não gostam e do que querem mais!\",\n      ambassador_join_desc: \"conte-nos um pouco sobre você, o que você fez e o que você estaria interessado em fazer. Nós começaremos a partir disso!\",\n      ambassador_join_note_strong: \"Nota\",\n      ambassador_join_note_desc: \"Uma das nossas principais prioridades é a construção de um multijogador onde os jogadores que estão com dificuldade para resolver um nível podem invocar feitiçeiros com nível mais alto para ajudá-los. Esta será uma ótima maneira para os embaixadores fazerem suas tarefas. Vamos mantê-lo informado!\",\n      ambassador_subscribe_desc: \"Receba emails sobre atualização do suporte e desenvolvimento do multijogador.\",\n      teacher_subscribe_desc: \"Obter e-mails sobre atualizações e anúncios para professores.\",\n      changes_auto_save: \"As alterações são salvas automaticamente quando você marcar as caixas de seleção.\",\n      diligent_scribes: \"Nossos Aplicados Escribas:\",\n      powerful_archmages: \"Nossos Poderosos Arquimagos:\",\n      creative_artisans: \"Nossos Criativos Artesãos:\",\n      brave_adventurers: \"Nossos Valentes Aventureiros:\",\n      translating_diplomats: \"Nossos Diplomatas Tradutores:\",\n      helpful_ambassadors: \"Nossos Prestativos Embaixadores:\"\n    },\n    ladder: {\n      my_matches: \"Minhas Partidas\",\n      simulate: \"Simular\",\n      simulation_explanation: \"Por simular partidas você pode classificar seu jogo mais rápido!\",\n      simulate_games: \"Simular Partidas!\",\n      games_simulated_by: \"Partidas simuladas por você:\",\n      games_simulated_for: \"Partidas simuladas para você:\",\n      games_in_queue: \"Jogos atualmente na fila:\",\n      games_simulated: \"Partidas simuladas\",\n      games_played: \"Partidas jogadas\",\n      ratio: \"Taxa\",\n      leaderboard: \"Tabela de Classificação\",\n      battle_as: \"Lutar como \",\n      summary_your: \"Seus \",\n      summary_matches: \"Jogos - \",\n      summary_wins: \" Vitórias, \",\n      summary_losses: \" Derrotas\",\n      rank_no_code: \"Nenhum Código Novo para Classificar\",\n      rank_my_game: \"Classificque Meu Jogo!\",\n      rank_submitting: \"Submetendo...\",\n      rank_submitted: \"Submetendo para a Classificação\",\n      rank_failed: \"Falha ao Classificar\",\n      rank_being_ranked: \"Jogo sendo Classificado\",\n      rank_last_submitted: \"enviado \",\n      help_simulate: \"Ajuda simulando partidas?\",\n      code_being_simulated: \"Seu novo código está sendo simulado por outros jogadores para ser classificado. Isto atualizará automaticamente assim que novas partidas entrarem.\",\n      no_ranked_matches_pre: \"Sem partidas classificadas para o \",\n      no_ranked_matches_post: \" time! Jogue contra alguns competidores e então volte aqui para ter seu jogo classificado.\",\n      choose_opponent: \"Escolha um Oponente\",\n      select_your_language: \"Selecione sua linguagem!\",\n      tutorial_play: \"Jogue o Tutorial\",\n      tutorial_recommended: \"Recomendado se você nunca jogou antes\",\n      tutorial_skip: \"Pular Tutorial\",\n      tutorial_not_sure: \"Não tem certeza do que está acontecendo?\",\n      tutorial_play_first: \"Jogue o Tutorial primeiro.\",\n      simple_ai: \"IA Simples\",\n      warmup: \"Aquecimento\",\n      friends_playing: \"Amigos Jogando\",\n      log_in_for_friends: \"Faça login para jogar com seus amigos!\",\n      social_connect_blurb: \"Conecte-se e jogue contra seus amigos!\",\n      invite_friends_to_battle: \"Convide seus amigos para se juntarem na batalha!\",\n      fight: \"Lutem!\",\n      watch_victory: \"Assista sua vitória\",\n      defeat_the: \"Derrote\",\n      watch_battle: \"Assista a luta\",\n      tournament_started: \", iniciado\",\n      tournament_ends: \"Fim do torneio\",\n      tournament_ended: \"Torneio encerrado\",\n      tournament_rules: \"Regras do Torneio\",\n      tournament_blurb: \"Escreva códigos, colete ouro, construa exércitos, esmague inimigos, ganhe prêmios e aprimore sua carreira no nosso Torneio da Cobiça de $40,000! Veja os detalhes\",\n      tournament_blurb_criss_cross: \"Ganhe leilões, construa caminhos, despiste oponentes, agarre joias e aprimore sua carreira no nosso Torneio de Cruzadas! Veja os detalhes\",\n      tournament_blurb_blog: \"no nosso blog\",\n      rules: \"Regras\",\n      winners: \"Vencedores\",\n      league: \"Liga\",\n      red_ai: \"AI Vermelho\",\n      blue_ai: \"AI Azul\",\n      wins: \"Vence\",\n      humans: \"Vermelho\",\n      ogres: \"Azul\"\n    },\n    user: {\n      stats: \"Estatísticas\",\n      singleplayer_title: \"Níveis Jogador Único\",\n      multiplayer_title: \"Níveis Multijogador\",\n      achievements_title: \"Achievements\",\n      last_played: \"Último Jogo\",\n      status: \"Status\",\n      status_completed: \"Completo\",\n      status_unfinished: \"Incompleto\",\n      no_singleplayer: \"Nenhum jogo Jogador Único ainda.\",\n      no_multiplayer: \"Nenhum jogo Multijogador ainda.\",\n      no_achievements: \"Nenhuma conquista ganha ainda.\",\n      favorite_prefix: \"Linguagem favorita é \",\n      favorite_postfix: \".\",\n      not_member_of_clans: \"Ainda não é membro de nenhum clã.\"\n    },\n    achievements: {\n      last_earned: \"Últimos Ganhos\",\n      amount_achieved: \"Montante\",\n      achievement: \"Conquista\",\n      current_xp_prefix: \"\",\n      current_xp_postfix: \" no total\",\n      new_xp_prefix: \"\",\n      new_xp_postfix: \" adquirido\",\n      left_xp_prefix: \"\",\n      left_xp_infix: \" até o nível \",\n      left_xp_postfix: \"\"\n    },\n    account: {\n      payments: \"Pagamentos\",\n      purchased: \"Comprado\",\n      subscription: \"Assinatura\",\n      invoices: \"Faturas\",\n      service_apple: \"Apple\",\n      service_web: \"Web\",\n      paid_on: \"Pago\",\n      service: \"Serviço\",\n      price: \"Preço\",\n      gems: \"Gemas\",\n      active: \"Ativo\",\n      subscribed: \"Inscrito\",\n      unsubscribed: \"Desinscrito\",\n      active_until: \"Ativo até\",\n      cost: \"Custo\",\n      next_payment: \"Próximo Pagamento\",\n      card: \"Cartão\",\n      status_unsubscribed_active: \"Você não é um assinante e não será cobrado, mas sua conta ainda está ativa.\",\n      status_unsubscribed: \"Ganhe acesso a novos níveis, heróis, itens, e gemas bônus com uma assinatura CodeCombat!\",\n      successfully_verified: \"Seu endereço de email foi verificado com sucesso!\"\n    },\n    account_invoices: {\n      amount: \"Valor em dólares americanos\",\n      declined: \"Seu cartão foi recusado\",\n      invalid_amount: \"Coloque o valor em dólares americanos.\",\n      not_logged_in: \"Entre no site com sua conta ou crie uma conta para acessar suas faturas.\",\n      pay: \"Pagar Faturas\",\n      purchasing: \"Comprando...\",\n      retrying: \"Erro de servidor, tentando novamente.\",\n      success: \"A transação foi completada com sucesso. Obrigado!\"\n    },\n    account_prepaid: {\n      purchase_code: \"Adquira um código de inscrição\",\n      users: \"Usuários\",\n      months: \"Meses\",\n      purchase_total: \"Total\",\n      your_codes: \"Seus códigos\",\n      quantity: \"Quantidade\",\n      no_codes: \"Sem códigos ainda!\",\n      you_can1: \"Você pode\"\n    },\n    loading_error: {\n      could_not_load: \"Erro ao carregar do servidor\",\n      connection_failure: \"Conexão falhou.\",\n      unauthorized: \"Você precisa estar autenticado. Você desativou os cookies?\",\n      forbidden: \"Você não possui permissão.\",\n      not_found: \"Não encontrado.\",\n      not_allowed: \"Método não permitido.\",\n      timeout: \"Tempo de requisição esgotado.\",\n      conflict: \"Conflito de recurso.\",\n      bad_input: \"Problema de entrada (bad input).\",\n      server_error: \"Erro do servidor.\",\n      unknown: \"Erro desconhecido.\",\n      error: \"ERRO\",\n      general_desc: \"Algo deu errado, e provavelmente é nossa falha. Tente aguardar um momento e tente novamente atualizando a página, ou visite um dos seguintes links para voltar à programação!\"\n    },\n    resources: {\n      level: \"Nível\",\n      patch: \"Patch\",\n      patches: \"Patches\",\n      system: \"Sistema\",\n      systems: \"Sistemas\",\n      component: \"Componente\",\n      components: \"Componentes\",\n      hero: \"Herói\",\n      campaigns: \"Campanhas\"\n    },\n    concepts: {\n      advanced_css_rules: \"CSS Regras Avançado\",\n      advanced_css_selectors: \"CSS Seletores Avançado\",\n      advanced_html_attributes: \"HTML Atributos Avançado\",\n      advanced_html_tags: \"HTML Tags Avançado\",\n      algorithm_average: \"Algoritmo Média\",\n      algorithm_find_minmax: \"Algoritmo Encontrar Mínimo/Máximo\",\n      algorithm_search_binary: \"Algoritmo Busca Binária\",\n      algorithm_search_graph: \"Algoritmo Busca de Grafo\",\n      algorithm_sort: \"Algoritmo Ordenar\",\n      algorithm_sum: \"Algoritmo Soma\",\n      \"arguments\": \"Argumentos\",\n      arithmetic: \"Aritmética\",\n      array_2d: \"Array 2D\",\n      array_searching: \"Buscando no Array\",\n      array_sorting: \"Ordenação de Array\",\n      arrays: \"Arrays\",\n      basic_css_rules: \"CSS regras Básico\",\n      basic_css_selectors: \"CSS seletores Básico\",\n      basic_html_attributes: \"HTML Atributos Básico\",\n      basic_html_tags: \"HTML Tags Básico\",\n      basic_syntax: \"Sintaxe Básica\",\n      binary: \"Binário\",\n      boolean_and: \"Booleano E\",\n      boolean_equality: \"Booleano Igualdade\",\n      boolean_greater_less: \"Booleano Maior que/Menor que\",\n      boolean_not: \"Booleano Não\",\n      boolean_or: \"Booleano Ou\",\n      break_statements: \"Comandos Break\",\n      classes: \"Classes\",\n      continue_statements: \"Comandos continue\",\n      for_loops: \"Laço For\",\n      functions: \"Funções\",\n      graphics: \"Gráficos\",\n      graphs: \"Grafos\",\n      if_statements: \"Comandos if\",\n      input_handling_flags: \"Manipulando Input - Flags\",\n      input_handling_keyboard: \"Manipulando Input - Teclado\",\n      input_handling_mouse: \"Manipulando Input - Mouse\",\n      intermediate_css_rules: \"CSS Regras Intermediário\",\n      intermediate_css_selectors: \"CSS Seletores Intermediário\",\n      intermediate_html_attributes: \"HTML Atributos Intermediário\",\n      intermediate_html_tags: \"HTML Tags Intermediário\",\n      jquery: \"jQuery\",\n      jquery_animations: \"jQuery Animações\",\n      jquery_filtering: \"jQuery Filtro de Elementos\",\n      jquery_selectors: \"jQuery Seletores\",\n      length: \"Comprimento do Array\",\n      math_geometry: \"Geometria\",\n      math_operations: \"Operações Matemáticas\",\n      math_trigonometry: \"Trigonometria\",\n      object_literals: \"Objetos Literais\",\n      parameters: \"Parâmetros\",\n      property_access: \"Acessando Propriedades\",\n      property_assignment: \"Atribuindo Propriedades\",\n      queues: \"Estruturas de Dados - Filas\",\n      reading_docs: \"Lendo as Documentações\",\n      recursion: \"Recursividade\",\n      stacks: \"Estruturas de Dados - Pilhas\",\n      strings: \"Strings\",\n      strings_concatenation: \"Concatenação de String\",\n      strings_substrings: \"Cortes de String\",\n      trees: \"Estruturas de Dados - Árvores\",\n      variables: \"Variáveis\",\n      vectors: \"Vetores\",\n      while_condition_loops: \"Looping While com Condicionais\",\n      while_loops_simple: \"Looping While\",\n      while_loops_nested: \"Loopings While Aninhados\",\n      xy_coordinates: \"Coordenadas Cartesianas\",\n      advanced_strings: \"Strings avançadas\",\n      algorithms: \"Algoritmos\",\n      boolean_logic: \"Lógica Booleana\",\n      basic_html: \"HTML Básico\",\n      basic_css: \"CSS Básico\",\n      basic_web_scripting: \"Web Script Básico\",\n      intermediate_html: \"HTML Intermediário\",\n      intermediate_css: \"CSS Intermediário\",\n      intermediate_web_scripting: \"Web Script Intermediário\",\n      advanced_html: \"HTML Avançado\",\n      advanced_css: \"CSS Avançado\",\n      advanced_web_scripting: \"Web Script Avançado\",\n      input_handling: \"Manipulação de entrada\",\n      while_loops: \"Loops while\",\n      place_game_objects: \"Usar objetos do jogo\",\n      construct_mazes: \"Construir labirintos\",\n      create_playable_game: \"Criar um jogo jogável e compartilhável\",\n      alter_existing_web_pages: \"Alterar páginas web existentes\",\n      create_sharable_web_page: \"Criar uma página web compartilhável\",\n      basic_input_handling: \"Manipulação básica de entrada\",\n      basic_game_ai: \"IA Básica do jogo\",\n      basic_javascript: \"JavaScript Básico\",\n      basic_event_handling: \"Manipulação básica de eventos\",\n      create_sharable_interactive_web_page: \"Criar uma página web interativa compartilhável\"\n    },\n    delta: {\n      added: \"Adicionado\",\n      modified: \"Modificado\",\n      not_modified: \"Não Modificado\",\n      deleted: \"Removido\",\n      moved_index: \"Índice Movido\",\n      text_diff: \"Diff do Texto\",\n      merge_conflict_with: \"MERGE DO CONFLITO COM\",\n      no_changes: \"Sem Alterações\"\n    },\n    legal: {\n      page_title: \"Jurídico\",\n      opensource_intro: \"CodeCombat é grátis para jogar e de código completamente aberto.\",\n      opensource_description_prefix: \"Confira \",\n      github_url: \"nosso GitHub\",\n      opensource_description_center: \"e ajude-nos se você gostar! CodeCombat é construído a partir de dúzias de projetos de código aberto, e nós amamos eles. Veja \",\n      archmage_wiki_url: \"nossa wiki mágica\",\n      opensource_description_suffix: \"para uma lista dos softwares que fazem esse jogo possível.\",\n      practices_title: \"Respeitáveis Boas Práticas\",\n      practices_description: \"Essas são nossas promessas para você, o jogador, de uma maneira menos jurídica.\",\n      privacy_title: \"Privacidade\",\n      privacy_description: \"Nós nâo venderemos suas informações pessoaos.\",\n      security_title: \"Segurança\",\n      security_description: \"Nós lutamos para manter suas informações pessoais a salvo.Como um projeto de código aberto, nosso site é aberto para qualquer um rever e melhorar nossos sistemas de segurança.\",\n      email_title: \"Email\",\n      email_description_prefix: \"Nós não iremos te encher de spam. Através\",\n      email_settings_url: \"das suas configurações de email\",\n      email_description_suffix: \"ou através de links nos emails que enviarmos, você pode trocar as preferências e facilmente se desinscrever a qualquer hora.\",\n      cost_title: \"Custo\",\n      copyrights_title: \"Direitos Autorais e Licenças\",\n      contributor_title: \"Contrato de Licença de Colaborador\",\n      contributor_description_prefix: \"Todos os colaboradores, tanto no nosso site quando no nosso repositório no GitHub estão sujeitos ao nosso\",\n      cla_url: \"CLA\",\n      contributor_description_suffix: \" para o qual você deve estar de acordo antes de contribuir.\",\n      code_title: \"Código - MIT\",\n      code_description_prefix: \"Todo o código possuído pelo CodeCombat ou hospedado no codecombat.com, tanto no nosso repositório no GitHub como no banco de dados do codecombat.com, é licenciado sob\",\n      mit_license_url: \"Licença do MIT\",\n      code_description_suffix: \"Isso inclui todo o código nos sistemas e componentes que são disponibilizados pelo CodeCombat para o propósito de criar níveis.\",\n      art_title: \"Arte/Música - Creative Commons \",\n      art_description_prefix: \"Todo o conteúdo comum está disponível sob a\",\n      cc_license_url: \"Creative Commons Attribution 4.0 International License\",\n      art_description_suffix: \"Conteúdo comum é qualquer coisa disponível pelo CodeCombat com o propósito de criar níveis. Isto inclui:\",\n      art_music: \"Música\",\n      art_sound: \"Som\",\n      art_artwork: \"Obra de arte\",\n      art_sprites: \"Sprites\",\n      art_other: \"Todo e qualquer outros trabalho criativo não relacionados a código que são disponibilizados para criar níveis.\",\n      art_access: \"Atualmente não existe um sistema universal e fácil para buscar por essas obras. Em geral, busque-os através das URLs utilizadas pelo site, entre em contato conosco para obter auxílio, ou nos ajude a estender o site para tornar as obras acessíveis mais facilmente.\",\n      art_paragraph_1: \"Para atribuição, por favor, nomeie e referencie o codecombat.com perto de onde a fonte é utilizada, ou onde for apropriado para o meio. Por exemplo:\",\n      use_list_1: \"Se usado em um filme ou outro jogo, inclua codecombat.com nos créditos.\",\n      use_list_2: \"Se usado em um site, incluir um link perto do local de uso, por exemplo, em baixo de uma imagem, ou em uma página de atribuições gerais onde você pode também mencionar outros trabalhos em Creative Commons e softwares de código aberto que estão sendo usados no site.Algo que já está referenciando claramente o CodeCombat, como um post no blog mencionando o CodeCombat, não precisa de atribuição separada.\",\n      art_paragraph_2: \"Se o conteúdo que está sendo usado não é criado pelo CodeCombat mas por algum usuário do codecombat.com, você deve referenciá-los seguindo as normas contidas neste documento caso haja alguma.\",\n      rights_title: \"Direitos Reservados\",\n      rights_desc: \"Todos os direitos são reservados para os Níveis em si. Isto inclui\",\n      rights_scripts: \"Scripts\",\n      rights_unit: \"Configurações de unidades\",\n      rights_writings: \"Escritos\",\n      rights_media: \"Mídia (sons, música) e qualquer outro conteúdo criativo feito especificamente para esse nível e que não estão disponíveis quando se está criando níveis.\",\n      rights_clarification: \"Para esclarecer, tudo o que é disponibilizado no Editor de Níveis com o objetivo de criar os níveis está sob CC, enquanto que o conteúdo criado através do Editor de Níveis ou inserido durante o processo de criação dos níveis não é.\",\n      nutshell_title: \"Em poucas palavras\",\n      nutshell_description: \"Todos os recursos que oferecemos no Editor de Níveis é livre para usar como quiser para a criação de níveis. Mas nós nos reservamos o direito de restringir a distribuição dos próprios níveis (que são criados em codecombat.com) para que possam ser cobrados no futuro, se é que isso precise acontecer.\",\n      canonical: \"A versão em inglês deste documento é a versão canônica definitiva. Se houver discrepâncias entre traduções, o documento em inglês tem precedência.\",\n      third_party_title: \"Serviços de terceiros\",\n      third_party_description: \"CodeCombat usa os seguintes serviços de terceiros(entre outros):\"\n    },\n    ladder_prizes: {\n      title: \"Prêmios do Torneio\",\n      blurb_1: \"Esses prêmios serão entregues de acordo com\",\n      blurb_2: \"as regras do torneio\",\n      blurb_3: \"para os melhores jogadores humano e ogro.\",\n      blurb_4: \"Dois times significa o dobro de prêmios!\",\n      blurb_5: \"(Haverá dois vencedores em primeiro lugar, dois vencedores em segundo lugar etc.)\",\n      rank: \"Classificação\",\n      prizes: \"Prêmios\",\n      total_value: \"Valor Total\",\n      in_cash: \"Em dinheiro\",\n      custom_wizard: \"Assistente Personalizado do CodeCombat\",\n      custom_avatar: \"Avatar Personalizado do CodeCombat\",\n      heap: \"para seis meses de acesso \\\"Startup\\\"\",\n      credits: \"créditos\",\n      one_month_coupon: \"cupom: escolha Rails ou HTML\",\n      one_month_discount: \"desconto de 30%: escolha Rails ou HTML\",\n      license: \"licença\",\n      oreilly: \"ebook de sua escolha\"\n    },\n    calendar: {\n      year: \"Ano\",\n      day: \"Dia\",\n      month: \"Mês\",\n      january: \"Janeiro\",\n      february: \"Fevereiro\",\n      march: \"Março\",\n      april: \"Abril\",\n      may: \"Maio\",\n      june: \"Junho\",\n      july: \"Julho\",\n      august: \"Agosto\",\n      september: \"Setembro\",\n      october: \"Outubro\",\n      november: \"Novembro\",\n      december: \"Dezembro\"\n    },\n    server_error: {\n      email_taken: \"Email já em uso\",\n      username_taken: \"Nome do usuário já em uso\"\n    },\n    esper: {\n      line_no: \"Linha $1: \",\n      uncaught: \"$1 Não encontrado\",\n      reference_error: \"ReferenceError - Erro de Referência: \",\n      argument_error: \"ArgumentError - Erro de Argumento: \",\n      type_error: \"TypeError - Erro de Tipo: \",\n      syntax_error: \"SyntaxError - Erro de Sintaxe: \",\n      error: \"Erro: \",\n      x_not_a_function: \"$1 não é uma função\",\n      x_not_defined: \"$1 não foi definido\",\n      spelling_issues: \"Procure erros de digitação: você quis dizer `$1` ao invés de `$2`?\",\n      capitalization_issues: \"Cuidado com as letras maiúsculas e minúsculas: `$1` deve ser `$2`.\",\n      py_empty_block: \"$1 vazio. Coloque 4 espaços na frente do comando dentro da declaração $2.\",\n      fx_missing_paren: \"Se você quer chamar `$1` como uma função, você precisa usar `()`\",\n      unmatched_token: \"`$1` incompatível.  Toda `$2` de abertura precisa de uma `$3` de fechamento para combinar.\",\n      unterminated_string: \"String não terminada. Adicione `\\\"` no final da string.\",\n      missing_semicolon: \"Faltando ponto e vírgula.\",\n      missing_quotes: \"Faltando aspas. Tente `$1`\",\n      argument_type: \"`$2`, argumeno de `$1`, deveria ser do tipo `$3`, mas é `$4`: `$5`.\",\n      argument_type2: \"`$2`, argumeno de `$1`, deveria ser do tipo `$3`, mas é `$4`.\",\n      target_a_unit: \"Mire em uma unidade.\",\n      attack_capitalization: \"Ataque $1, não $2. (As letras maiúsculas são importantes.)\",\n      empty_while: \"Declaração while vazia. Coloque 4 espaços na frente dos comandos dentro do while.\",\n      line_of_site: \"Problemas com o argumento `$2` de `$1`. Ainda existe um inimigo dentro da sua linha de visão?\",\n      need_a_after_while: \"Precisa de um `$1` depois de `$2`.\",\n      too_much_indentation: \"Muita identação no inicio dessa linha.\",\n      missing_hero: \"Faltando palavra chave `$1`; deve ser `$2`.\",\n      takes_no_arguments: \"`$1` não precisa de argumentos.\",\n      no_one_named: \"Não há ninguém chamado \\\"$1\\\" para atacar.\",\n      separated_by_comma: \"Os parâmetros das chamadas de função devem ser separados por `,`\",\n      protected_property: \"Não é possível ler a propriedade protegida: $1\",\n      need_parens_to_call: \"Se quiser chamar `$1` como uma função, você precisa usar `()`\",\n      expected_an_identifier: \"Esperava um identificador e, ao invés, encontrou '$1'.\",\n      unexpected_identifier: \"Identificador inesperado\",\n      unexpected_end_of: \"Fim inesperado de entrada\",\n      unnecessary_semicolon: \"Ponto e vírgula desnecessário.\",\n      unexpected_token_expected: \"Símbolo inesperado: esperava $1, mas encontrou $2 ao analisar $3\",\n      unexpected_token: \"Símbolo $1 inesperado\",\n      unexpected_token2: \"Símbolo inesperado\",\n      unexpected_number: \"Número inesperado\",\n      unexpected: \"'$1' inesperado.\",\n      escape_pressed_code: \"Esc pressionado. Código abortado.\",\n      target_an_enemy: \"Ataque um inimigo pelo nome, assim `$1`, não a string `$2`.\",\n      target_an_enemy_2: \"Ataque um inimigo pelo nome, assim `$1`.\",\n      cannot_read_property: \"Não é possível ler a propriedade indefinida '$1'\",\n      attempted_to_assign: \"Tentativa de atribuir uma propriedade apenas de leitura.\",\n      unexpected_early_end: \"Fim inesperado do programa.\",\n      you_need_a_string: \"Você precisa de uma string para construir; um de $1\",\n      unable_to_get_property: \"Não é possível acessar propriedade '$1' com referência undefined ou null (indefinida ou nula)\",\n      code_never_finished_its: \"Código nunca terminado. É muito lento ou tem um loop infinito.\",\n      unclosed_string: \"String não terminada.\",\n      unmatched: \"'$1' incompatível.\",\n      error_you_said_achoo: \"Você disse: $1, mas a senha é: $2. (Letras maiúsculas são importantes.)\",\n      indentation_error_unindent_does: \"Erro de Indentação: identação não corresponde a nenhum nível de identação\",\n      indentation_error: \"Erro de Indentação.\",\n      need_a_on_the: \"Precisa de um `:` no final da linha, depois de `$1`.\",\n      attempt_to_call_undefined: \"tentou chamar '$1' (um valor nulo)\",\n      unterminated: \"`$1` não terminado\",\n      target_an_enemy_variable: \"Ataque uma variável $1 variable, não a string $2. (Tente usar $3.)\",\n      error_use_the_variable: \"Use o nome da variável assim `$1` ao invés de uma string `$2`\",\n      indentation_unindent_does_not: \"Indentação não corresponde a nenhum nível de indentação externo\",\n      unclosed_paren_in_function_arguments: \"$1 aberto nos atgumentos da função.\",\n      unexpected_end_of_input: \"Fim inesperado de entrada\",\n      there_is_no_enemy: \"Não existe `$1`. Use `$2` primeiro.\",\n      try_herofindnearestenemy: \"Tente `$1`\",\n      there_is_no_function: \"Não existe função `$1`, mas `$2` tem um método `$3`.\",\n      attacks_argument_enemy_has: \"Argumento `$1` de `$2` tem um problema.\",\n      is_there_an_enemy: \"Ainda existe um inimigo dentro da sua linha de visão??\",\n      target_is_null_is: \"o alvo é $1. Existe sempre um alvo para atacar? (Use $2?)\",\n      hero_has_no_method: \"`$1` não tem método `$2`.\",\n      there_is_a_problem: \"Há um problema com seu código.\",\n      did_you_mean: \"Você quis dizer $1? Você não tem um item equipado com essa habilidade.\",\n      missing_a_quotation_mark: \"Faltando uma aspa. \",\n      missing_var_use_var: \"Faltando `$1`. Use `$2` para criar uma nova variável.\",\n      you_do_not_have: \"Você não tem um item equipado com a habilidade $1.\",\n      put_each_command_on: \"Coloque cada comando em uma linha separada\",\n      are_you_missing_a: \"Está faltando um '$1' depois de '$2'? \",\n      your_parentheses_must_match: \"Os parênteses devem corresponder.\"\n    }\n  }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///254\n");

/***/ })

});