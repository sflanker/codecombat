/*! hash:ae6a15474fa7d9a1f9f8, chunkhash:a0c5423322d716a1b114, name:86, filebase:86.bundle.js, query:, file:javascripts/chunks/86.bundle.js */
webpackJsonp([86],{

/***/ 782:
/***/ (function(module, exports) {

eval("(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error(\"Cannot find module '\"+o+\"'\")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n\nvar parser = require('./parser.js');\nvar stdlib = require('./stdlib.js');\n\nthis.stdlib = stdlib;\nthis.parse = parser.parser.parse;\n\n\n\n},{\"./parser.js\":2,\"./stdlib.js\":3}],2:[function(require,module,exports){\nthis.parser = (function() {\n  /*\n   * Generated by PEG.js 0.8.0.\n   *\n   * http://pegjs.majda.cz/\n   */\n\n  function peg$subclass(child, parent) {\n    function ctor() { this.constructor = child; }\n    ctor.prototype = parent.prototype;\n    child.prototype = new ctor();\n  }\n\n  function SyntaxError(message, expected, found, offset, line, column) {\n    this.message  = message;\n    this.expected = expected;\n    this.found    = found;\n    this.offset   = offset;\n    this.line     = line;\n    this.column   = column;\n\n    this.name     = \"SyntaxError\";\n  }\n\n  peg$subclass(SyntaxError, Error);\n\n  function parse(input) {\n    var options = arguments.length > 1 ? arguments[1] : {},\n\n        peg$FAILED = {},\n\n        peg$startRuleFunctions = { start: peg$parsestart },\n        peg$startRuleFunction  = peg$parsestart,\n\n        peg$c0 = peg$FAILED,\n        peg$c1 = function() { init(); return true; },\n        peg$c2 = void 0,\n        peg$c3 = null,\n        peg$c4 = \"#\",\n        peg$c5 = { type: \"literal\", value: \"#\", description: \"\\\"#\\\"\" },\n        peg$c6 = [],\n        peg$c7 = /^[^\\n]/,\n        peg$c8 = { type: \"class\", value: \"[^\\\\n]\", description: \"[^\\\\n]\" },\n        peg$c9 = \"\\n\",\n        peg$c10 = { type: \"literal\", value: \"\\n\", description: \"\\\"\\\\n\\\"\" },\n        peg$c11 = function(t) { return finalize(t); },\n        peg$c12 = /^[ \\r\\t\\n]/,\n        peg$c13 = { type: \"class\", value: \"[ \\\\r\\\\t\\\\n]\", description: \"[ \\\\r\\\\t\\\\n]\" },\n        peg$c14 = \"--[\",\n        peg$c15 = { type: \"literal\", value: \"--[\", description: \"\\\"--[\\\"\" },\n        peg$c16 = \"]\",\n        peg$c17 = { type: \"literal\", value: \"]\", description: \"\\\"]\\\"\" },\n        peg$c18 = \"--\",\n        peg$c19 = { type: \"literal\", value: \"--\", description: \"\\\"--\\\"\" },\n        peg$c20 = { type: \"any\", description: \"any character\" },\n        peg$c21 = \";\",\n        peg$c22 = { type: \"literal\", value: \";\", description: \"\\\";\\\"\" },\n        peg$c23 = function(r) {\n                return builder.blockStatement([r]) \n            },\n        peg$c24 = function(list, ret) {\n                list = expandMultiStatements(list);\n                return builder.blockStatement(ret === null ? list : list.concat([ret[1]])); \n            },\n        peg$c25 = function(a, b) {  \n                if ( a === null ) return [];\n                if ( b === null ) return a;\n                return listHelper(a,b,1);\n            },\n        peg$c26 = \"if\",\n        peg$c27 = { type: \"literal\", value: \"if\", description: \"\\\"if\\\"\" },\n        peg$c28 = \"then\",\n        peg$c29 = { type: \"literal\", value: \"then\", description: \"\\\"then\\\"\" },\n        peg$c30 = \"elseif\",\n        peg$c31 = { type: \"literal\", value: \"elseif\", description: \"\\\"elseif\\\"\" },\n        peg$c32 = \"else\",\n        peg$c33 = { type: \"literal\", value: \"else\", description: \"\\\"else\\\"\" },\n        peg$c34 = \"do\",\n        peg$c35 = { type: \"literal\", value: \"do\", description: \"\\\"do\\\"\" },\n        peg$c36 = \"end\",\n        peg$c37 = { type: \"literal\", value: \"end\", description: \"\\\"end\\\"\" },\n        peg$c38 = \"return\",\n        peg$c39 = { type: \"literal\", value: \"return\", description: \"\\\"return\\\"\" },\n        peg$c40 = \"local\",\n        peg$c41 = { type: \"literal\", value: \"local\", description: \"\\\"local\\\"\" },\n        peg$c42 = \"nil\",\n        peg$c43 = { type: \"literal\", value: \"nil\", description: \"\\\"nil\\\"\" },\n        peg$c44 = \"true\",\n        peg$c45 = { type: \"literal\", value: \"true\", description: \"\\\"true\\\"\" },\n        peg$c46 = \"false\",\n        peg$c47 = { type: \"literal\", value: \"false\", description: \"\\\"false\\\"\" },\n        peg$c48 = \"function\",\n        peg$c49 = { type: \"literal\", value: \"function\", description: \"\\\"function\\\"\" },\n        peg$c50 = \"not\",\n        peg$c51 = { type: \"literal\", value: \"not\", description: \"\\\"not\\\"\" },\n        peg$c52 = \"break\",\n        peg$c53 = { type: \"literal\", value: \"break\", description: \"\\\"break\\\"\" },\n        peg$c54 = \"for\",\n        peg$c55 = { type: \"literal\", value: \"for\", description: \"\\\"for\\\"\" },\n        peg$c56 = \"until\",\n        peg$c57 = { type: \"literal\", value: \"until\", description: \"\\\"until\\\"\" },\n        peg$c58 = \"while\",\n        peg$c59 = { type: \"literal\", value: \"while\", description: \"\\\"while\\\"\" },\n        peg$c60 = /^[a-zA-Z_]/,\n        peg$c61 = { type: \"class\", value: \"[a-zA-Z_]\", description: \"[a-zA-Z_]\" },\n        peg$c62 = /^[a-zA-Z0-9_]/,\n        peg$c63 = { type: \"class\", value: \"[a-zA-Z0-9_]\", description: \"[a-zA-Z0-9_]\" },\n        peg$c64 = function(a) { return a; },\n        peg$c65 = /^[0-9]/,\n        peg$c66 = { type: \"class\", value: \"[0-9]\", description: \"[0-9]\" },\n        peg$c67 = \".\",\n        peg$c68 = { type: \"literal\", value: \".\", description: \"\\\".\\\"\" },\n        peg$c69 = \"\\\\\",\n        peg$c70 = { type: \"literal\", value: \"\\\\\", description: \"\\\"\\\\\\\\\\\"\" },\n        peg$c71 = /^[abfrntv'\"\\\\]/,\n        peg$c72 = { type: \"class\", value: \"[abfrntv'\\\"\\\\\\\\]\", description: \"[abfrntv'\\\"\\\\\\\\]\" },\n        peg$c73 = function(c) { return {\n                \"n\": \"\\n\",\n                \"b\": \"\\b\",\n                \"f\": \"\\f\",\n                \"r\": \"\\r\",\n                \"t\": \"\\t\",\n                \"v\": \"\\v\",\n                '\"': '\"',\n                \"'\": \"'\",\n                \"\\\\\": \"\\\\\"\n            }[c] },\n        peg$c74 = \"\\\\\\n\",\n        peg$c75 = { type: \"literal\", value: \"\\\\\\n\", description: \"\\\"\\\\\\\\\\\\n\\\"\" },\n        peg$c76 = function() { return \"\\n\" },\n        peg$c77 = \"\\\\z\",\n        peg$c78 = { type: \"literal\", value: \"\\\\z\", description: \"\\\"\\\\\\\\z\\\"\" },\n        peg$c79 = function() { return \"\" },\n        peg$c80 = \"\\\\x\",\n        peg$c81 = { type: \"literal\", value: \"\\\\x\", description: \"\\\"\\\\\\\\x\\\"\" },\n        peg$c82 = /^[0-9a-f]/,\n        peg$c83 = { type: \"class\", value: \"[0-9a-f]\", description: \"[0-9a-f]\" },\n        peg$c84 = function(a, b) { return String.fromCharCode(parseInt('0x' + a + b)); },\n        peg$c85 = function(a, b, c) { return String.fromCharCode(parseInt('' + a + b + c)); },\n        peg$c86 = function() { error('Invalid Escape Sequence') },\n        peg$c87 = /^[^'\"']/,\n        peg$c88 = { type: \"class\", value: \"[^'\\\"']\", description: \"[^'\\\"']\" },\n        peg$c89 = /^[']/,\n        peg$c90 = { type: \"class\", value: \"[']\", description: \"[']\" },\n        peg$c91 = function() { return wrapNode({}); },\n        peg$c92 = /^[\"]/,\n        peg$c93 = { type: \"class\", value: \"[\\\"]\", description: \"[\\\"]\" },\n        peg$c94 = \"'\",\n        peg$c95 = { type: \"literal\", value: \"'\", description: \"\\\"'\\\"\" },\n        peg$c96 = function(s, r, e) { return eUntermIfEmpty(e,\"string\",\"\\\"\",s); },\n        peg$c97 = function(s, r, e) { return r.join(''); },\n        peg$c98 = \"\\\"\",\n        peg$c99 = { type: \"literal\", value: \"\\\"\", description: \"\\\"\\\\\\\"\\\"\" },\n        peg$c100 = function(s, r, e) { return eUntermIfEmpty(e,\"string\",\"'\",s); },\n        peg$c101 = \"[\",\n        peg$c102 = { type: \"literal\", value: \"[\", description: \"\\\"[\\\"\" },\n        peg$c103 = function(s) { return s; },\n        peg$c104 = \"=\",\n        peg$c105 = { type: \"literal\", value: \"=\", description: \"\\\"=\\\"\" },\n        peg$c106 = /^[\\n]/,\n        peg$c107 = { type: \"class\", value: \"[\\\\n]\", description: \"[\\\\n]\" },\n        peg$c108 = function(a) { return a;},\n        peg$c109 = function(e) { return eMsg(\"Found an expression but expected a statement: \" + e)},\n        peg$c110 = function(e) { return builder.emptyStatement(); },\n        peg$c111 = function(e) { return eMsg(\"`=` expected\")},\n        peg$c112 = /^[^\\n\\t\\r ]/,\n        peg$c113 = { type: \"class\", value: \"[^\\\\n\\\\t\\\\r ]\", description: \"[^\\\\n\\\\t\\\\r ]\" },\n        peg$c114 = function(e) { return eMsg(\"Parser error near `\" + e + \"`\"); },\n        peg$c115 = \"debugger\",\n        peg$c116 = { type: \"literal\", value: \"debugger\", description: \"\\\"debugger\\\"\" },\n        peg$c117 = function() { return {type: \"ExpressionStatement\", expression: {type: \"Identifier\", name:\"debugger; \"} } },\n        peg$c118 = function(start, b, end) { return eUntermIfEmpty(end, \"do\", \"end\", start); },\n        peg$c119 = function(start, b, end) { return b ? b[0] : {type: \"BlockStatement\", body: []}; },\n        peg$c120 = \",\",\n        peg$c121 = { type: \"literal\", value: \",\", description: \"\\\",\\\"\" },\n        peg$c122 = function(start, a, b, c, d, body, end) { return eUntermIfEmpty(end, \"for\", \"end\", start); },\n        peg$c123 = function(start, a, b, c, d, body, end) {\n                var amount = d == null ? {type: \"Literal\", value: 1 } : d[3];\n                \n\n                var start = bhelper.tempVar(b);\n                var updateBy = bhelper.tempVar(amount);\n                var testValue = bhelper.tempVar(c);\n                var idx = bhelper.tempVar();\n\n                var update = builder.assignmentExpression(\"=\", idx.id, bhelper.binaryExpression(\"+\", idx.id, updateBy.id));\n\n                var texp;\n                if ( false ) {\n                    texp = bhelper.binaryExpression(\"<=\", idx.id, testValue.id)\n                } else {\n                    texp = bhelper.luaOperator(\"forcomp\", updateBy.id, idx.id, testValue.id);\n                }\n\n                if ( !body ) body = {type: \"BlockStatement\", body: []};\n                else body = body[0];\n\n                body.body.unshift(builder.variableDeclaration(\"let\",[\n                    {\n                            type: \"VariableDeclarator\",\n                            id: a,\n                            init: idx.id,\n                            userCode: false\n                    }\n                ]));\n\n                var out = {\n                    type: \"ForStatement\",\n                    init: builder.variableDeclaration(\"let\", [\n                        {\n                            type: \"VariableDeclarator\",\n                            id: idx.id,\n                            init: start.id,\n                            userCode: false\n                        }\n                    ]),\n                    body: body,\n                    update: update,\n                    test: texp,\n                    loc: loc(),\n                    range: range()\n                };\n\n                return bhelper.encloseDecls([out], start, updateBy, testValue);\n            },\n        peg$c124 = \"in\",\n        peg$c125 = { type: \"literal\", value: \"in\", description: \"\\\"in\\\"\" },\n        peg$c126 = function(start, a, b, c, end) { return eUntermIfEmpty(end, \"for\", \"end\", start); },\n        peg$c127 = function(start, a, b, c, end) {\n                var statements = [];\n                var nil = {type: \"Literal\", value: null };\n                var uf = {type: \"Identifier\", name: 'undefined' };\n\n\n                var iterator = bhelper.tempName();\n                var context = bhelper.tempName();\n                var curent = bhelper.tempName();\n\n                var v1 = a[0];\n\n                var varlist = [];\n                for ( var idx in a ) {\n                    varlist.push({type: \"VariableDeclarator\", id: a[idx] });\n                }\n\n                var call = builder.callExpression(iterator,[context, curent]);\n                var assign;\n                //if ( a.length > 1 ) {\n                    assign = bhelper.bulkAssign(a, [call])\n                //} else {\n                //    assign = bhelper.assign(v1, call);\n                //}\n\n                var nullish = function(v) {\n                    return builder.binaryExpression(\"||\", builder.binaryExpression(\"===\", v1, nil), builder.binaryExpression(\"===\", v1, uf))\n                }\n\n                statements.push(builder.variableDeclaration(\"let\", varlist));\n                statements.push({\n                    type: \"WhileStatement\",\n                    test: {type: \"Literal\", value: true},\n                    body: bhelper.blockStatement([\n                    assign,\n                    { type: \"IfStatement\", test: nullish(v1), consequent: {type: \"BreakStatement\" } },\n                    bhelper.assign(curent, v1),\n                    c.body\n\n                    ])\n                });\n\n                return bhelper.encloseDeclsUnpack(statements, [iterator, context, curent], b);\n            },\n        peg$c128 = function(left, right) { \n                var result = builder.variableDeclaration(\"let\", []);\n\n                if ( !opt('decorateLuaObjects', false) || ( left.length < 2 && right.length < 2 )) { \n                    for ( var i = 0; i < left.length; ++i ) {\n                        result.declarations.push(            {\n                            type: \"VariableDeclarator\",\n                            id: left[i],\n                            init: right[i],\n                        });\n                    }\n\n                    return result;\n                } else {\n                    var assign = bhelper.bulkAssign(left, right)\n                    for ( var i = 0; i < left.length; ++i ) {\n                        result.declarations.push({\n                            type: \"VariableDeclarator\",\n                            id: left[i]\n                        });\n                    }\n                 \n                    return [result, assign];   \n                }\n            \n            },\n        peg$c129 = function(left) {\n                var result = builder.variableDeclaration(\"let\", []);\n                for ( var i = 0; i < left.length; ++i ) {\n                    result.declarations.push({\n                        type: \"VariableDeclarator\",\n                        id: left[i]\n                    });\n                }\n                return result;  \n            },\n        peg$c130 = function(left, right) { \n                // if ( left.length < 2 ) return bhelper.assign(left[0], right[0]).expression;\n                return bhelper.bulkAssign(left, right).expression;\n            },\n        peg$c131 = function() { return {\n                \"type\": \"BreakStatement\",\n                loc: loc(),\n                range: range()\n            } },\n        peg$c132 = function(e) { return {\n                type: \"ExpressionStatement\",\n                expression: e,\n                loc: loc(),\n                range: range()\n            } },\n        peg$c133 = function(test, then) { return wrapNode({test: test, then:then}); },\n        peg$c134 = function() { return eUnterminated(\"if\",\"then\"); },\n        peg$c135 = function(start, test, then, elzeifs, elze, end) { return eUntermIfEmpty(end, \"if\", \"end\", start); },\n        peg$c136 = function(start, test, then, elzeifs, elze, end) {\n                var result = { type: \"IfStatement\", test: test, consequent: then, loc: loc(), range: range()}\n                var last = result;\n\n                for ( var idx in elzeifs ) {\n                    var elif = elzeifs[idx][1];\n                    var nue = { type: \"IfStatement\", test: elif.test, consequent: elif.then, loc: elif.loc, range: elif.range }\n                    last.alternate = nue;\n                    last = nue;\n                }\n\n                if ( elze !== null ) last.alternate = elze[3];\n                return result;\n            },\n        peg$c137 = function(argument) { \n                var arg;\n\n\n                if ( argument == null ) { }\n                else if ( argument.length == 1 ) arg = argument[0];\n                else if ( argument.length > 1 ) {\n                    if ( opt('decorateLuaObjects', false) ) arg = bhelper.luaOperatorA(\"makeMultiReturn\", argument);\n                    else  arg = {\n                        type: \"ArrayExpression\",\n                        elements: argument\n                    };            \n                }\n                return {\n                    type: \"ReturnStatement\",\n                    argument: arg,\n                    loc: loc(),\n                    range: range()\n                }\n            },\n        peg$c138 = function() {\n                return {\n                    type: \"ReturnStatement\",\n                    loc: loc(),\n                }     \n            },\n        peg$c139 = function() { return eUnterminated(\"if\"); },\n        peg$c140 = function(test, body) { return {\n                type: \"WhileStatement\",\n                test: test,\n                body: body ? body[0] : {type: \"EmptyStatement\"},\n                loc: loc(),\n                range: range()\n\n            } },\n        peg$c141 = \"repeat\",\n        peg$c142 = { type: \"literal\", value: \"repeat\", description: \"\\\"repeat\\\"\" },\n        peg$c143 = function() { return eUnterminated(\"repeat\", \"until\"); },\n        peg$c144 = function() {return eMsg(\"repeat until needs terminations criteria\"); },\n        peg$c145 = function(body, test) { return {\n                type: \"DoWhileStatement\",\n                test: { \n                    type: \"UnaryExpression\",\n                    operator: \"!\",\n                    argument: test,\n                    prefix: true,\n                    loc: test.loc,\n                    range: test.range\n                },\n                body: body ? body[0] : {type: \"EmptyStatement\"},\n                loc: loc(),\n                range: range()\n            } },\n        peg$c146 = \"that\",\n        peg$c147 = { type: \"literal\", value: \"that\", description: \"\\\"that\\\"\" },\n        peg$c148 = function() { return { \"type\": \"ThisExpression\" }; },\n        peg$c149 = function(a, b) {\n                a = bhelper.translateExpressionIfNeeded(a);\n                if ( b === null ) return a;\n                var tokens = [];\n                for ( var idx in b ) {\n                    var v = b[idx];\n                    tokens.push(v[1]);\n                    tokens.push(bhelper.translateExpressionIfNeeded(v[3]));\n                }\n\n                return precedenceClimber(tokens, a, 1);\n            },\n        peg$c150 = \"-\",\n        peg$c151 = { type: \"literal\", value: \"-\", description: \"\\\"-\\\"\" },\n        peg$c152 = \"+\",\n        peg$c153 = { type: \"literal\", value: \"+\", description: \"\\\"+\\\"\" },\n        peg$c154 = \"==\",\n        peg$c155 = { type: \"literal\", value: \"==\", description: \"\\\"==\\\"\" },\n        peg$c156 = \">=\",\n        peg$c157 = { type: \"literal\", value: \">=\", description: \"\\\">=\\\"\" },\n        peg$c158 = \"<=\",\n        peg$c159 = { type: \"literal\", value: \"<=\", description: \"\\\"<=\\\"\" },\n        peg$c160 = \"~=\",\n        peg$c161 = { type: \"literal\", value: \"~=\", description: \"\\\"~=\\\"\" },\n        peg$c162 = \">\",\n        peg$c163 = { type: \"literal\", value: \">\", description: \"\\\">\\\"\" },\n        peg$c164 = \"<\",\n        peg$c165 = { type: \"literal\", value: \"<\", description: \"\\\"<\\\"\" },\n        peg$c166 = \"..\",\n        peg$c167 = { type: \"literal\", value: \"..\", description: \"\\\"..\\\"\" },\n        peg$c168 = \"and\",\n        peg$c169 = { type: \"literal\", value: \"and\", description: \"\\\"and\\\"\" },\n        peg$c170 = \"or\",\n        peg$c171 = { type: \"literal\", value: \"or\", description: \"\\\"or\\\"\" },\n        peg$c172 = \"*\",\n        peg$c173 = { type: \"literal\", value: \"*\", description: \"\\\"*\\\"\" },\n        peg$c174 = \"//\",\n        peg$c175 = { type: \"literal\", value: \"//\", description: \"\\\"//\\\"\" },\n        peg$c176 = \"/\",\n        peg$c177 = { type: \"literal\", value: \"/\", description: \"\\\"/\\\"\" },\n        peg$c178 = \"%\",\n        peg$c179 = { type: \"literal\", value: \"%\", description: \"\\\"%\\\"\" },\n        peg$c180 = \"^\",\n        peg$c181 = { type: \"literal\", value: \"^\", description: \"\\\"^\\\"\" },\n        peg$c182 = \"(\",\n        peg$c183 = { type: \"literal\", value: \"(\", description: \"\\\"(\\\"\" },\n        peg$c184 = \")\",\n        peg$c185 = { type: \"literal\", value: \")\", description: \"\\\")\\\"\" },\n        peg$c186 = function(e) { return e; },\n        peg$c187 = \":\",\n        peg$c188 = { type: \"literal\", value: \":\", description: \"\\\":\\\"\" },\n        peg$c189 = function(who, a) {\n                var left = who\n                for ( var idx = 0; idx < a.length; ++idx ) {\n                    var v = a[idx];\n                    if ( v[1] != null ) {\n                        left = builder.memberExpression(left, v[1][1], false);\n                        left.selfSuggar = true;\n                    }\n                    left = bhelper.callExpression(left,v[2]);\n                }\n                return left;\n            },\n        peg$c190 = function(b) { return [b]; },\n        peg$c191 = function(c) { return [{type: \"Literal\", value: c, loc: loc(), range: range()}]; },\n        peg$c192 = function(a) {\n\n            // Wraping a call in ()'s reduces it to a singel value\n            if ( a.type == \"CallExpression\" ) {\n                return bhelper.luaOperator(\"oneValue\", a);\n            } else if ( a.type == \"Identifier\" && a.name == \"__lua$rest\" ) {\n                return bhelper.luaOperator(\"oneValue\", a);\n            }\n            return a;\n        },\n        peg$c193 = \"...\",\n        peg$c194 = { type: \"literal\", value: \"...\", description: \"\\\"...\\\"\" },\n        peg$c195 = function() {\n                return wrapNode({type: \"Identifier\", name: \"__lua$rest\"});\n            },\n        peg$c196 = function(a, b) {\n                var selfSuggar = false;\n                if ( b.length == 0 ) return a;\n                var left = a;\n                for ( var i in b ) {\n                    left = builder.memberExpression(left, b[i].exp, b[i].computed);\n                    if ( b[i].suggar ) left.selfSuggar = true;\n                }\n\n                return left;\n            },\n        peg$c197 = /^[.:]/,\n        peg$c198 = { type: \"class\", value: \"[.:]\", description: \"[.:]\" },\n        peg$c199 = function(p, e) {\n                return {exp: e, suggar: p == ':', computed: false }\n            },\n        peg$c200 = function(e) {\n                return {exp: e, suggar: false, computed: true }\n            },\n        peg$c201 = function() { return eMsg(\"Malformed argument list.\"); },\n        peg$c202 = function(a, b) {\n                 return listHelper(a,b,3); \n            },\n        peg$c203 = function(a, b) {\n             return listHelper(a,b,3); \n        },\n        peg$c204 = function() {return eUnterminated(\")\", \"argument list\"); },\n        peg$c205 = function(a) {\n                 return a; \n            },\n        peg$c206 = function() {\n                return []\n            },\n        peg$c207 = function(a, b, c) { \n                var left = builder.memberExpression(a, b[0], b[1]);\n                for ( var idx in c ) {\n                    left = builder.memberExpression(left, c[idx][0], c[idx][1]);\n                }\n                return left;\n            },\n        peg$c208 = function(b) { return [b, true]; },\n        peg$c209 = function(b) { return [b,false]; },\n        peg$c210 = \"{\",\n        peg$c211 = { type: \"literal\", value: \"{\", description: \"\\\"{\\\"\" },\n        peg$c212 = \"}\",\n        peg$c213 = { type: \"literal\", value: \"}\", description: \"\\\"}\\\"\" },\n        peg$c214 = function(f, s) { \n                var result = {\n                    type: \"ObjectExpression\",\n                    properties: [],\n                    loc: loc(),\n                    range: range()\n                };\n\n                var props = listHelper(f,s,3);\n                var numeric = 0;\n                var longProps = [];\n                for ( var idx in props ) {\n                    var p = props[idx];\n\n                    if ( p.key === undefined ) p.key = {type: \"Literal\", value: ++numeric, arrayLike: true};\n                    p.kind = \"init\";\n                    result.properties.push(p);\n                }\n\n\n                if ( opt('decorateLuaObjects', false) ) {\n                    var last;\n                    var args = [];\n                    var pp = [];\n                    var last = true;\n                    for ( var idx in result.properties ) {\n                        var p = result.properties[idx];\n                        if ( p.key.arrayLike ) {\n                            args.push(p.value);\n                            last = true;\n                        } else {\n                            longProps.push({\n                                type: \"ArrayExpression\",\n                                elements: [p.key, p.value]\n                            });\n                            pp.push(p);\n                            last = false;\n                        }\n                    }\n                    result.properties = pp;\n\n                    result = {type: \"ArrayExpression\", elements: longProps };\n                    if (pp.length < 1 ) result = {type:\"Literal\", value: null};\n\n                    return bhelper.luaOperator.apply(bhelper, [\"makeTable\", result, {type: \"Literal\", value:last}].concat(args)); \n                }\n                else return result;\n            },\n        peg$c215 = function(n, v) {\n                if ( n.type == \"Identifier\" ) n = {type: \"Literal\", value: n.name};\n                return { key: n, value: v };\n            },\n        peg$c216 = function(v) {\n                return { value: v };\n            },\n        peg$c217 = function(k, v) {\n                return { key: k, value: v }; \n            },\n        peg$c218 = function(start, name, f, end) { return eUntermIfEmpty(end, \"function\", \"end\", start); },\n        peg$c219 = function(start, name, f, end) {\n\n\n\n                if ( name.type != \"MemberExpression\" && opt(\"allowRegularFunctions\", false) ) {\n                    //TODO: this would need to be decorated\n                    return builder.functionDeclaration(name, f.params, f.body);\n                }\n\n                //TODO: Translate member expression into call\n                var params = f.params.slice(0);\n                if ( name.selfSuggar ) params = [{type: \"Identifier\", name: \"self\"}].concat(f.params);\n\n                if ( f.rest ) {\n                    bhelper.injectRest(f.body.body, params.length);\n                }\n\n                var out = builder.functionExpression(null, params, f.body)\n                if ( opt('decorateLuaObjects', false) ) {\n                    out = bhelper.luaOperator(\"makeFunction\", out);\n                }\n\n                return bhelper.assign(name, out);\n            },\n        peg$c220 = function(start, name, f, end) {\n\n                if ( f.rest ) {\n                    bhelper.injectRest(f.body.body, f.params.length);\n                }\n\n                if ( opt(\"allowRegularFunctions\", false) )\n                    return builder.functionDeclaration(name, f.params, f.body);\n\n                var func = builder.functionExpression(name, f.params, f.body);\n                if ( opt('decorateLuaObjects', false) ) {\n                    func = bhelper.luaOperator(\"makeFunction\", func);\n                }\n\n                var decl = {type: \"VariableDeclarator\", id: name, init: func};\n                var out = builder.variableDeclaration(\"let\", [ decl ]);\n\n                return out;\n            },\n        peg$c221 = function(f) {\n                var result = {\n                    type: \"FunctionExpression\",\n                    body: f.body,\n                    params: f.params,\n                    loc:loc(),\n                    range:range()\n                }\n\n                if ( f.rest ) {\n                    bhelper.injectRest(f.body.body, f.params.length)\n                }\n\n                if ( opt('decorateLuaObjects', false) ) {\n                    return bhelper.luaOperator(\"makeFunction\", result);\n                } else {\n                    return result;\n                }\n\n            },\n        peg$c222 = function(start, b, end) { return eUntermIfEmpty(end, \"function\", \"end\", start); },\n        peg$c223 = function(start, b, end) { return b; },\n        peg$c224 = function(p, rest, body) {\n                return { params: p, body: body, rest: rest != null }\n            },\n        peg$c225 = function(body) {\n                return { params: [], body: body, rest: true }\n            },\n        peg$c226 = function(a, b) {\n                return listHelper(a,b); \n            },\n        peg$c227 = function() { \n                return [] \n            },\n        peg$c228 = function(o, e) { \n                var ops = {\"not\": \"!\", \"-\": \"-\", \"#\": \"#\" }\n                if ( o == \"#\" ) {\n                    e = bhelper.translateExpressionIfNeeded(e);\n                    return bhelper.luaOperator(\"count\", e);\n                }\n                return { \n                    type: \"UnaryExpression\",\n                    operator: ops[o],\n                    argument: bhelper.translateExpressionIfNeeded(e),\n                    prefix: true,\n                    loc: loc(),\n                    range: range()\n                }\n            },\n        peg$c229 = function(name) { return {\n                type: \"Identifier\",\n                name: name,\n                loc: loc(),\n                range: range()\n            } },\n        peg$c230 = function(a) {\n                var values = {\"nil\": null, \"false\": false, \"true\": true} \n                return { type: \"Literal\", value: values[a], loc: loc(), range: range() }\n\n            },\n        peg$c231 = /^[eE]/,\n        peg$c232 = { type: \"class\", value: \"[eE]\", description: \"[eE]\" },\n        peg$c233 = function(b, c) {\n                return { type: \"Literal\", value: parseFloat(b) * Math.pow(10, parseInt(c)), loc: loc(), range: range()  }\n\n            },\n        peg$c234 = \"0\",\n        peg$c235 = { type: \"literal\", value: \"0\", description: \"\\\"0\\\"\" },\n        peg$c236 = /^[Xx]/,\n        peg$c237 = { type: \"class\", value: \"[Xx]\", description: \"[Xx]\" },\n        peg$c238 = /^[0-9a-fA-F]/,\n        peg$c239 = { type: \"class\", value: \"[0-9a-fA-F]\", description: \"[0-9a-fA-F]\" },\n        peg$c240 = function(b) {\n                return { type: \"Literal\", value: parseInt(b), loc: loc(), range: range()  }\n\n            },\n        peg$c241 = function(b) {\n                return { type: \"Literal\", value: parseFloat(b), loc: loc(), range: range()  }\n\n            },\n        peg$c242 = function(s) {\n                return { type: \"Literal\", value: s, loc: loc(), range: range()  }\n\n            },\n\n        peg$currPos          = 0,\n        peg$reportedPos      = 0,\n        peg$cachedPos        = 0,\n        peg$cachedPosDetails = { line: 1, column: 1, seenCR: false },\n        peg$maxFailPos       = 0,\n        peg$maxFailExpected  = [],\n        peg$silentFails      = 0,\n\n        peg$result;\n\n    if (\"startRule\" in options) {\n      if (!(options.startRule in peg$startRuleFunctions)) {\n        throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n      }\n\n      peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n    }\n\n    function text() {\n      return input.substring(peg$reportedPos, peg$currPos);\n    }\n\n    function offset() {\n      return peg$reportedPos;\n    }\n\n    function line() {\n      return peg$computePosDetails(peg$reportedPos).line;\n    }\n\n    function column() {\n      return peg$computePosDetails(peg$reportedPos).column;\n    }\n\n    function expected(description) {\n      throw peg$buildException(\n        null,\n        [{ type: \"other\", description: description }],\n        peg$reportedPos\n      );\n    }\n\n    function error(message) {\n      throw peg$buildException(message, null, peg$reportedPos);\n    }\n\n    function peg$computePosDetails(pos) {\n      function advance(details, startPos, endPos) {\n        var p, ch;\n\n        for (p = startPos; p < endPos; p++) {\n          ch = input.charAt(p);\n          if (ch === \"\\n\") {\n            if (!details.seenCR) { details.line++; }\n            details.column = 1;\n            details.seenCR = false;\n          } else if (ch === \"\\r\" || ch === \"\\u2028\" || ch === \"\\u2029\") {\n            details.line++;\n            details.column = 1;\n            details.seenCR = true;\n          } else {\n            details.column++;\n            details.seenCR = false;\n          }\n        }\n      }\n\n      if (peg$cachedPos !== pos) {\n        if (peg$cachedPos > pos) {\n          peg$cachedPos = 0;\n          peg$cachedPosDetails = { line: 1, column: 1, seenCR: false };\n        }\n        advance(peg$cachedPosDetails, peg$cachedPos, pos);\n        peg$cachedPos = pos;\n      }\n\n      return peg$cachedPosDetails;\n    }\n\n    function peg$fail(expected) {\n      if (peg$currPos < peg$maxFailPos) { return; }\n\n      if (peg$currPos > peg$maxFailPos) {\n        peg$maxFailPos = peg$currPos;\n        peg$maxFailExpected = [];\n      }\n\n      peg$maxFailExpected.push(expected);\n    }\n\n    function peg$buildException(message, expected, pos) {\n      function cleanupExpected(expected) {\n        var i = 1;\n\n        expected.sort(function(a, b) {\n          if (a.description < b.description) {\n            return -1;\n          } else if (a.description > b.description) {\n            return 1;\n          } else {\n            return 0;\n          }\n        });\n\n        while (i < expected.length) {\n          if (expected[i - 1] === expected[i]) {\n            expected.splice(i, 1);\n          } else {\n            i++;\n          }\n        }\n      }\n\n      function buildMessage(expected, found) {\n        function stringEscape(s) {\n          function hex(ch) { return ch.charCodeAt(0).toString(16).toUpperCase(); }\n\n          return s\n            .replace(/\\\\/g,   '\\\\\\\\')\n            .replace(/\"/g,    '\\\\\"')\n            .replace(/\\x08/g, '\\\\b')\n            .replace(/\\t/g,   '\\\\t')\n            .replace(/\\n/g,   '\\\\n')\n            .replace(/\\f/g,   '\\\\f')\n            .replace(/\\r/g,   '\\\\r')\n            .replace(/[\\x00-\\x07\\x0B\\x0E\\x0F]/g, function(ch) { return '\\\\x0' + hex(ch); })\n            .replace(/[\\x10-\\x1F\\x80-\\xFF]/g,    function(ch) { return '\\\\x'  + hex(ch); })\n            .replace(/[\\u0180-\\u0FFF]/g,         function(ch) { return '\\\\u0' + hex(ch); })\n            .replace(/[\\u1080-\\uFFFF]/g,         function(ch) { return '\\\\u'  + hex(ch); });\n        }\n\n        var expectedDescs = new Array(expected.length),\n            expectedDesc, foundDesc, i;\n\n        for (i = 0; i < expected.length; i++) {\n          expectedDescs[i] = expected[i].description;\n        }\n\n        expectedDesc = expected.length > 1\n          ? expectedDescs.slice(0, -1).join(\", \")\n              + \" or \"\n              + expectedDescs[expected.length - 1]\n          : expectedDescs[0];\n\n        foundDesc = found ? \"\\\"\" + stringEscape(found) + \"\\\"\" : \"end of input\";\n\n        return \"Expected \" + expectedDesc + \" but \" + foundDesc + \" found.\";\n      }\n\n      var posDetails = peg$computePosDetails(pos),\n          found      = pos < input.length ? input.charAt(pos) : null;\n\n      if (expected !== null) {\n        cleanupExpected(expected);\n      }\n\n      return new SyntaxError(\n        message !== null ? message : buildMessage(expected, found),\n        expected,\n        found,\n        pos,\n        posDetails.line,\n        posDetails.column\n      );\n    }\n\n    function peg$parsestart() {\n      var s0, s1, s2, s3, s4, s5;\n\n      s0 = peg$currPos;\n      peg$reportedPos = peg$currPos;\n      s1 = peg$c1();\n      if (s1) {\n        s1 = peg$c2;\n      } else {\n        s1 = peg$c0;\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 35) {\n          s3 = peg$c4;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c5); }\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = [];\n          if (peg$c7.test(input.charAt(peg$currPos))) {\n            s5 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c8); }\n          }\n          while (s5 !== peg$FAILED) {\n            s4.push(s5);\n            if (peg$c7.test(input.charAt(peg$currPos))) {\n              s5 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c8); }\n            }\n          }\n          if (s4 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 10) {\n              s5 = peg$c9;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c10); }\n            }\n            if (s5 !== peg$FAILED) {\n              s3 = [s3, s4, s5];\n              s2 = s3;\n            } else {\n              peg$currPos = s2;\n              s2 = peg$c0;\n            }\n          } else {\n            peg$currPos = s2;\n            s2 = peg$c0;\n          }\n        } else {\n          peg$currPos = s2;\n          s2 = peg$c0;\n        }\n        if (s2 === peg$FAILED) {\n          s2 = peg$c3;\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parsews();\n          if (s3 === peg$FAILED) {\n            s3 = peg$c3;\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parseBlockStatement();\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parsews();\n              if (s5 === peg$FAILED) {\n                s5 = peg$c3;\n              }\n              if (s5 !== peg$FAILED) {\n                peg$reportedPos = s0;\n                s1 = peg$c11(s4);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c0;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n\n      return s0;\n    }\n\n    function peg$parsews() {\n      var s0, s1, s2, s3, s4, s5;\n\n      s0 = [];\n      if (peg$c12.test(input.charAt(peg$currPos))) {\n        s1 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c13); }\n      }\n      if (s1 === peg$FAILED) {\n        s1 = peg$currPos;\n        if (input.substr(peg$currPos, 3) === peg$c14) {\n          s2 = peg$c14;\n          peg$currPos += 3;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c15); }\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parsebalstringinsde();\n          if (s3 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 93) {\n              s4 = peg$c16;\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c17); }\n            }\n            if (s4 !== peg$FAILED) {\n              s2 = [s2, s3, s4];\n              s1 = s2;\n            } else {\n              peg$currPos = s1;\n              s1 = peg$c0;\n            }\n          } else {\n            peg$currPos = s1;\n            s1 = peg$c0;\n          }\n        } else {\n          peg$currPos = s1;\n          s1 = peg$c0;\n        }\n        if (s1 === peg$FAILED) {\n          s1 = peg$currPos;\n          if (input.substr(peg$currPos, 2) === peg$c18) {\n            s2 = peg$c18;\n            peg$currPos += 2;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c19); }\n          }\n          if (s2 !== peg$FAILED) {\n            s3 = peg$currPos;\n            s4 = [];\n            if (peg$c7.test(input.charAt(peg$currPos))) {\n              s5 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c8); }\n            }\n            while (s5 !== peg$FAILED) {\n              s4.push(s5);\n              if (peg$c7.test(input.charAt(peg$currPos))) {\n                s5 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s5 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c8); }\n              }\n            }\n            if (s4 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 10) {\n                s5 = peg$c9;\n                peg$currPos++;\n              } else {\n                s5 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c10); }\n              }\n              if (s5 !== peg$FAILED) {\n                s4 = [s4, s5];\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$c0;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$c0;\n            }\n            if (s3 === peg$FAILED) {\n              s3 = [];\n              if (input.length > peg$currPos) {\n                s4 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s4 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c20); }\n              }\n              while (s4 !== peg$FAILED) {\n                s3.push(s4);\n                if (input.length > peg$currPos) {\n                  s4 = input.charAt(peg$currPos);\n                  peg$currPos++;\n                } else {\n                  s4 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c20); }\n                }\n              }\n            }\n            if (s3 !== peg$FAILED) {\n              s2 = [s2, s3];\n              s1 = s2;\n            } else {\n              peg$currPos = s1;\n              s1 = peg$c0;\n            }\n          } else {\n            peg$currPos = s1;\n            s1 = peg$c0;\n          }\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        while (s1 !== peg$FAILED) {\n          s0.push(s1);\n          if (peg$c12.test(input.charAt(peg$currPos))) {\n            s1 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c13); }\n          }\n          if (s1 === peg$FAILED) {\n            s1 = peg$currPos;\n            if (input.substr(peg$currPos, 3) === peg$c14) {\n              s2 = peg$c14;\n              peg$currPos += 3;\n            } else {\n              s2 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c15); }\n            }\n            if (s2 !== peg$FAILED) {\n              s3 = peg$parsebalstringinsde();\n              if (s3 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 93) {\n                  s4 = peg$c16;\n                  peg$currPos++;\n                } else {\n                  s4 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c17); }\n                }\n                if (s4 !== peg$FAILED) {\n                  s2 = [s2, s3, s4];\n                  s1 = s2;\n                } else {\n                  peg$currPos = s1;\n                  s1 = peg$c0;\n                }\n              } else {\n                peg$currPos = s1;\n                s1 = peg$c0;\n              }\n            } else {\n              peg$currPos = s1;\n              s1 = peg$c0;\n            }\n            if (s1 === peg$FAILED) {\n              s1 = peg$currPos;\n              if (input.substr(peg$currPos, 2) === peg$c18) {\n                s2 = peg$c18;\n                peg$currPos += 2;\n              } else {\n                s2 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c19); }\n              }\n              if (s2 !== peg$FAILED) {\n                s3 = peg$currPos;\n                s4 = [];\n                if (peg$c7.test(input.charAt(peg$currPos))) {\n                  s5 = input.charAt(peg$currPos);\n                  peg$currPos++;\n                } else {\n                  s5 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c8); }\n                }\n                while (s5 !== peg$FAILED) {\n                  s4.push(s5);\n                  if (peg$c7.test(input.charAt(peg$currPos))) {\n                    s5 = input.charAt(peg$currPos);\n                    peg$currPos++;\n                  } else {\n                    s5 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c8); }\n                  }\n                }\n                if (s4 !== peg$FAILED) {\n                  if (input.charCodeAt(peg$currPos) === 10) {\n                    s5 = peg$c9;\n                    peg$currPos++;\n                  } else {\n                    s5 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c10); }\n                  }\n                  if (s5 !== peg$FAILED) {\n                    s4 = [s4, s5];\n                    s3 = s4;\n                  } else {\n                    peg$currPos = s3;\n                    s3 = peg$c0;\n                  }\n                } else {\n                  peg$currPos = s3;\n                  s3 = peg$c0;\n                }\n                if (s3 === peg$FAILED) {\n                  s3 = [];\n                  if (input.length > peg$currPos) {\n                    s4 = input.charAt(peg$currPos);\n                    peg$currPos++;\n                  } else {\n                    s4 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c20); }\n                  }\n                  while (s4 !== peg$FAILED) {\n                    s3.push(s4);\n                    if (input.length > peg$currPos) {\n                      s4 = input.charAt(peg$currPos);\n                      peg$currPos++;\n                    } else {\n                      s4 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c20); }\n                    }\n                  }\n                }\n                if (s3 !== peg$FAILED) {\n                  s2 = [s2, s3];\n                  s1 = s2;\n                } else {\n                  peg$currPos = s1;\n                  s1 = peg$c0;\n                }\n              } else {\n                peg$currPos = s1;\n                s1 = peg$c0;\n              }\n            }\n          }\n        }\n      } else {\n        s0 = peg$c0;\n      }\n\n      return s0;\n    }\n\n    function peg$parsescws() {\n      var s0, s1, s2, s3, s4;\n\n      s0 = [];\n      s1 = peg$currPos;\n      s2 = peg$parsews();\n      if (s2 === peg$FAILED) {\n        s2 = peg$c3;\n      }\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 59) {\n          s3 = peg$c21;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c22); }\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsews();\n          if (s4 === peg$FAILED) {\n            s4 = peg$c3;\n          }\n          if (s4 !== peg$FAILED) {\n            s2 = [s2, s3, s4];\n            s1 = s2;\n          } else {\n            peg$currPos = s1;\n            s1 = peg$c0;\n          }\n        } else {\n          peg$currPos = s1;\n          s1 = peg$c0;\n        }\n      } else {\n        peg$currPos = s1;\n        s1 = peg$c0;\n      }\n      if (s1 !== peg$FAILED) {\n        while (s1 !== peg$FAILED) {\n          s0.push(s1);\n          s1 = peg$currPos;\n          s2 = peg$parsews();\n          if (s2 === peg$FAILED) {\n            s2 = peg$c3;\n          }\n          if (s2 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 59) {\n              s3 = peg$c21;\n              peg$currPos++;\n            } else {\n              s3 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c22); }\n            }\n            if (s3 !== peg$FAILED) {\n              s4 = peg$parsews();\n              if (s4 === peg$FAILED) {\n                s4 = peg$c3;\n              }\n              if (s4 !== peg$FAILED) {\n                s2 = [s2, s3, s4];\n                s1 = s2;\n              } else {\n                peg$currPos = s1;\n                s1 = peg$c0;\n              }\n            } else {\n              peg$currPos = s1;\n              s1 = peg$c0;\n            }\n          } else {\n            peg$currPos = s1;\n            s1 = peg$c0;\n          }\n        }\n      } else {\n        s0 = peg$c0;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$parsews();\n      }\n\n      return s0;\n    }\n\n    function peg$parseBlockStatement() {\n      var s0, s1, s2, s3, s4;\n\n      s0 = peg$currPos;\n      s1 = peg$parseReturnStatement();\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c23(s1);\n      }\n      s0 = s1;\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parseStatementList();\n        if (s1 !== peg$FAILED) {\n          s2 = peg$currPos;\n          s3 = [];\n          s4 = peg$parsescws();\n          if (s4 !== peg$FAILED) {\n            while (s4 !== peg$FAILED) {\n              s3.push(s4);\n              s4 = peg$parsescws();\n            }\n          } else {\n            s3 = peg$c0;\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parseReturnStatement();\n            if (s4 !== peg$FAILED) {\n              s3 = [s3, s4];\n              s2 = s3;\n            } else {\n              peg$currPos = s2;\n              s2 = peg$c0;\n            }\n          } else {\n            peg$currPos = s2;\n            s2 = peg$c0;\n          }\n          if (s2 === peg$FAILED) {\n            s2 = peg$c3;\n          }\n          if (s2 !== peg$FAILED) {\n            peg$reportedPos = s0;\n            s1 = peg$c24(s1, s2);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parseStatementList() {\n      var s0, s1, s2, s3, s4, s5, s6;\n\n      s0 = peg$currPos;\n      s1 = peg$parseStatement();\n      if (s1 === peg$FAILED) {\n        s1 = peg$c3;\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$currPos;\n        s4 = [];\n        s5 = peg$parsescws();\n        if (s5 !== peg$FAILED) {\n          while (s5 !== peg$FAILED) {\n            s4.push(s5);\n            s5 = peg$parsescws();\n          }\n        } else {\n          s4 = peg$c0;\n        }\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parseStatement();\n          if (s5 !== peg$FAILED) {\n            s4 = [s4, s5];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$c0;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$c0;\n        }\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$currPos;\n          s4 = [];\n          s5 = peg$parsescws();\n          if (s5 !== peg$FAILED) {\n            while (s5 !== peg$FAILED) {\n              s4.push(s5);\n              s5 = peg$parsescws();\n            }\n          } else {\n            s4 = peg$c0;\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseStatement();\n            if (s5 !== peg$FAILED) {\n              s4 = [s4, s5];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$c0;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$c0;\n          }\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = [];\n          s4 = peg$currPos;\n          s5 = peg$parsews();\n          if (s5 === peg$FAILED) {\n            s5 = peg$c3;\n          }\n          if (s5 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 59) {\n              s6 = peg$c21;\n              peg$currPos++;\n            } else {\n              s6 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c22); }\n            }\n            if (s6 !== peg$FAILED) {\n              s5 = [s5, s6];\n              s4 = s5;\n            } else {\n              peg$currPos = s4;\n              s4 = peg$c0;\n            }\n          } else {\n            peg$currPos = s4;\n            s4 = peg$c0;\n          }\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            s4 = peg$currPos;\n            s5 = peg$parsews();\n            if (s5 === peg$FAILED) {\n              s5 = peg$c3;\n            }\n            if (s5 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 59) {\n                s6 = peg$c21;\n                peg$currPos++;\n              } else {\n                s6 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c22); }\n              }\n              if (s6 !== peg$FAILED) {\n                s5 = [s5, s6];\n                s4 = s5;\n              } else {\n                peg$currPos = s4;\n                s4 = peg$c0;\n              }\n            } else {\n              peg$currPos = s4;\n              s4 = peg$c0;\n            }\n          }\n          if (s3 !== peg$FAILED) {\n            peg$reportedPos = s0;\n            s1 = peg$c25(s1, s2);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n\n      return s0;\n    }\n\n    function peg$parseReservedWord() {\n      var s0, s1, s2;\n\n      if (input.substr(peg$currPos, 2) === peg$c26) {\n        s0 = peg$c26;\n        peg$currPos += 2;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c27); }\n      }\n      if (s0 === peg$FAILED) {\n        if (input.substr(peg$currPos, 4) === peg$c28) {\n          s0 = peg$c28;\n          peg$currPos += 4;\n        } else {\n          s0 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c29); }\n        }\n        if (s0 === peg$FAILED) {\n          if (input.substr(peg$currPos, 6) === peg$c30) {\n            s0 = peg$c30;\n            peg$currPos += 6;\n          } else {\n            s0 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c31); }\n          }\n          if (s0 === peg$FAILED) {\n            if (input.substr(peg$currPos, 4) === peg$c32) {\n              s0 = peg$c32;\n              peg$currPos += 4;\n            } else {\n              s0 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c33); }\n            }\n            if (s0 === peg$FAILED) {\n              if (input.substr(peg$currPos, 2) === peg$c34) {\n                s0 = peg$c34;\n                peg$currPos += 2;\n              } else {\n                s0 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c35); }\n              }\n              if (s0 === peg$FAILED) {\n                if (input.substr(peg$currPos, 3) === peg$c36) {\n                  s0 = peg$c36;\n                  peg$currPos += 3;\n                } else {\n                  s0 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c37); }\n                }\n                if (s0 === peg$FAILED) {\n                  if (input.substr(peg$currPos, 6) === peg$c38) {\n                    s0 = peg$c38;\n                    peg$currPos += 6;\n                  } else {\n                    s0 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c39); }\n                  }\n                  if (s0 === peg$FAILED) {\n                    if (input.substr(peg$currPos, 5) === peg$c40) {\n                      s0 = peg$c40;\n                      peg$currPos += 5;\n                    } else {\n                      s0 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c41); }\n                    }\n                    if (s0 === peg$FAILED) {\n                      if (input.substr(peg$currPos, 3) === peg$c42) {\n                        s0 = peg$c42;\n                        peg$currPos += 3;\n                      } else {\n                        s0 = peg$FAILED;\n                        if (peg$silentFails === 0) { peg$fail(peg$c43); }\n                      }\n                      if (s0 === peg$FAILED) {\n                        if (input.substr(peg$currPos, 4) === peg$c44) {\n                          s0 = peg$c44;\n                          peg$currPos += 4;\n                        } else {\n                          s0 = peg$FAILED;\n                          if (peg$silentFails === 0) { peg$fail(peg$c45); }\n                        }\n                        if (s0 === peg$FAILED) {\n                          s0 = peg$currPos;\n                          if (input.substr(peg$currPos, 5) === peg$c46) {\n                            s1 = peg$c46;\n                            peg$currPos += 5;\n                          } else {\n                            s1 = peg$FAILED;\n                            if (peg$silentFails === 0) { peg$fail(peg$c47); }\n                          }\n                          if (s1 !== peg$FAILED) {\n                            if (input.substr(peg$currPos, 8) === peg$c48) {\n                              s2 = peg$c48;\n                              peg$currPos += 8;\n                            } else {\n                              s2 = peg$FAILED;\n                              if (peg$silentFails === 0) { peg$fail(peg$c49); }\n                            }\n                            if (s2 !== peg$FAILED) {\n                              s1 = [s1, s2];\n                              s0 = s1;\n                            } else {\n                              peg$currPos = s0;\n                              s0 = peg$c0;\n                            }\n                          } else {\n                            peg$currPos = s0;\n                            s0 = peg$c0;\n                          }\n                          if (s0 === peg$FAILED) {\n                            if (input.substr(peg$currPos, 3) === peg$c50) {\n                              s0 = peg$c50;\n                              peg$currPos += 3;\n                            } else {\n                              s0 = peg$FAILED;\n                              if (peg$silentFails === 0) { peg$fail(peg$c51); }\n                            }\n                            if (s0 === peg$FAILED) {\n                              if (input.substr(peg$currPos, 5) === peg$c52) {\n                                s0 = peg$c52;\n                                peg$currPos += 5;\n                              } else {\n                                s0 = peg$FAILED;\n                                if (peg$silentFails === 0) { peg$fail(peg$c53); }\n                              }\n                              if (s0 === peg$FAILED) {\n                                if (input.substr(peg$currPos, 3) === peg$c54) {\n                                  s0 = peg$c54;\n                                  peg$currPos += 3;\n                                } else {\n                                  s0 = peg$FAILED;\n                                  if (peg$silentFails === 0) { peg$fail(peg$c55); }\n                                }\n                                if (s0 === peg$FAILED) {\n                                  if (input.substr(peg$currPos, 5) === peg$c56) {\n                                    s0 = peg$c56;\n                                    peg$currPos += 5;\n                                  } else {\n                                    s0 = peg$FAILED;\n                                    if (peg$silentFails === 0) { peg$fail(peg$c57); }\n                                  }\n                                  if (s0 === peg$FAILED) {\n                                    if (input.substr(peg$currPos, 8) === peg$c48) {\n                                      s0 = peg$c48;\n                                      peg$currPos += 8;\n                                    } else {\n                                      s0 = peg$FAILED;\n                                      if (peg$silentFails === 0) { peg$fail(peg$c49); }\n                                    }\n                                    if (s0 === peg$FAILED) {\n                                      if (input.substr(peg$currPos, 5) === peg$c58) {\n                                        s0 = peg$c58;\n                                        peg$currPos += 5;\n                                      } else {\n                                        s0 = peg$FAILED;\n                                        if (peg$silentFails === 0) { peg$fail(peg$c59); }\n                                      }\n                                      if (s0 === peg$FAILED) {\n                                        s0 = peg$parsebinop();\n                                        if (s0 === peg$FAILED) {\n                                          s0 = peg$parseunop();\n                                        }\n                                      }\n                                    }\n                                  }\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parseName() {\n      var s0, s1, s2, s3, s4, s5, s6;\n\n      s0 = peg$currPos;\n      s1 = peg$currPos;\n      peg$silentFails++;\n      s2 = peg$currPos;\n      s3 = peg$parseReservedWord();\n      if (s3 !== peg$FAILED) {\n        s4 = peg$parsews();\n        if (s4 === peg$FAILED) {\n          s4 = peg$currPos;\n          peg$silentFails++;\n          if (input.length > peg$currPos) {\n            s5 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c20); }\n          }\n          peg$silentFails--;\n          if (s5 === peg$FAILED) {\n            s4 = peg$c2;\n          } else {\n            peg$currPos = s4;\n            s4 = peg$c0;\n          }\n        }\n        if (s4 !== peg$FAILED) {\n          s3 = [s3, s4];\n          s2 = s3;\n        } else {\n          peg$currPos = s2;\n          s2 = peg$c0;\n        }\n      } else {\n        peg$currPos = s2;\n        s2 = peg$c0;\n      }\n      peg$silentFails--;\n      if (s2 === peg$FAILED) {\n        s1 = peg$c2;\n      } else {\n        peg$currPos = s1;\n        s1 = peg$c0;\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$currPos;\n        s3 = peg$currPos;\n        if (peg$c60.test(input.charAt(peg$currPos))) {\n          s4 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c61); }\n        }\n        if (s4 !== peg$FAILED) {\n          s5 = [];\n          if (peg$c62.test(input.charAt(peg$currPos))) {\n            s6 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s6 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c63); }\n          }\n          while (s6 !== peg$FAILED) {\n            s5.push(s6);\n            if (peg$c62.test(input.charAt(peg$currPos))) {\n              s6 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s6 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c63); }\n            }\n          }\n          if (s5 !== peg$FAILED) {\n            s4 = [s4, s5];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$c0;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$c0;\n        }\n        if (s3 !== peg$FAILED) {\n          s3 = input.substring(s2, peg$currPos);\n        }\n        s2 = s3;\n        if (s2 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c64(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n\n      return s0;\n    }\n\n    function peg$parseNumber() {\n      var s0, s1, s2, s3, s4, s5, s6;\n\n      s0 = peg$currPos;\n      s1 = peg$currPos;\n      s2 = [];\n      if (peg$c65.test(input.charAt(peg$currPos))) {\n        s3 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c66); }\n      }\n      if (s3 !== peg$FAILED) {\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          if (peg$c65.test(input.charAt(peg$currPos))) {\n            s3 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c66); }\n          }\n        }\n      } else {\n        s2 = peg$c0;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 46) {\n          s4 = peg$c67;\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c68); }\n        }\n        if (s4 !== peg$FAILED) {\n          s5 = [];\n          if (peg$c65.test(input.charAt(peg$currPos))) {\n            s6 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s6 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c66); }\n          }\n          if (s6 !== peg$FAILED) {\n            while (s6 !== peg$FAILED) {\n              s5.push(s6);\n              if (peg$c65.test(input.charAt(peg$currPos))) {\n                s6 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s6 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c66); }\n              }\n            }\n          } else {\n            s5 = peg$c0;\n          }\n          if (s5 !== peg$FAILED) {\n            s4 = [s4, s5];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$c0;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$c0;\n        }\n        if (s3 === peg$FAILED) {\n          s3 = peg$c3;\n        }\n        if (s3 !== peg$FAILED) {\n          s2 = [s2, s3];\n          s1 = s2;\n        } else {\n          peg$currPos = s1;\n          s1 = peg$c0;\n        }\n      } else {\n        peg$currPos = s1;\n        s1 = peg$c0;\n      }\n      if (s1 !== peg$FAILED) {\n        s1 = input.substring(s0, peg$currPos);\n      }\n      s0 = s1;\n\n      return s0;\n    }\n\n    function peg$parsestringchar() {\n      var s0, s1, s2, s3, s4, s5;\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 92) {\n        s1 = peg$c69;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c70); }\n      }\n      if (s1 !== peg$FAILED) {\n        if (peg$c71.test(input.charAt(peg$currPos))) {\n          s2 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c72); }\n        }\n        if (s2 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c73(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (input.substr(peg$currPos, 2) === peg$c74) {\n          s1 = peg$c74;\n          peg$currPos += 2;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c75); }\n        }\n        if (s1 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c76();\n        }\n        s0 = s1;\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          if (input.substr(peg$currPos, 2) === peg$c77) {\n            s1 = peg$c77;\n            peg$currPos += 2;\n          } else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c78); }\n          }\n          if (s1 !== peg$FAILED) {\n            s2 = peg$parsews();\n            if (s2 !== peg$FAILED) {\n              peg$reportedPos = s0;\n              s1 = peg$c79();\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n          if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            if (input.substr(peg$currPos, 2) === peg$c80) {\n              s1 = peg$c80;\n              peg$currPos += 2;\n            } else {\n              s1 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c81); }\n            }\n            if (s1 !== peg$FAILED) {\n              s2 = peg$currPos;\n              if (peg$c82.test(input.charAt(peg$currPos))) {\n                s3 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s3 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c83); }\n              }\n              if (s3 !== peg$FAILED) {\n                s3 = input.substring(s2, peg$currPos);\n              }\n              s2 = s3;\n              if (s2 !== peg$FAILED) {\n                s3 = peg$currPos;\n                if (peg$c82.test(input.charAt(peg$currPos))) {\n                  s4 = input.charAt(peg$currPos);\n                  peg$currPos++;\n                } else {\n                  s4 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c83); }\n                }\n                if (s4 !== peg$FAILED) {\n                  s4 = input.substring(s3, peg$currPos);\n                }\n                s3 = s4;\n                if (s3 !== peg$FAILED) {\n                  peg$reportedPos = s0;\n                  s1 = peg$c84(s2, s3);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$c0;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c0;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n            if (s0 === peg$FAILED) {\n              s0 = peg$currPos;\n              if (input.charCodeAt(peg$currPos) === 92) {\n                s1 = peg$c69;\n                peg$currPos++;\n              } else {\n                s1 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c70); }\n              }\n              if (s1 !== peg$FAILED) {\n                s2 = peg$currPos;\n                if (peg$c65.test(input.charAt(peg$currPos))) {\n                  s3 = input.charAt(peg$currPos);\n                  peg$currPos++;\n                } else {\n                  s3 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c66); }\n                }\n                if (s3 !== peg$FAILED) {\n                  s3 = input.substring(s2, peg$currPos);\n                }\n                s2 = s3;\n                if (s2 !== peg$FAILED) {\n                  s3 = peg$currPos;\n                  if (peg$c65.test(input.charAt(peg$currPos))) {\n                    s4 = input.charAt(peg$currPos);\n                    peg$currPos++;\n                  } else {\n                    s4 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c66); }\n                  }\n                  if (s4 === peg$FAILED) {\n                    s4 = peg$c3;\n                  }\n                  if (s4 !== peg$FAILED) {\n                    s4 = input.substring(s3, peg$currPos);\n                  }\n                  s3 = s4;\n                  if (s3 !== peg$FAILED) {\n                    s4 = peg$currPos;\n                    if (peg$c65.test(input.charAt(peg$currPos))) {\n                      s5 = input.charAt(peg$currPos);\n                      peg$currPos++;\n                    } else {\n                      s5 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c66); }\n                    }\n                    if (s5 === peg$FAILED) {\n                      s5 = peg$c3;\n                    }\n                    if (s5 !== peg$FAILED) {\n                      s5 = input.substring(s4, peg$currPos);\n                    }\n                    s4 = s5;\n                    if (s4 !== peg$FAILED) {\n                      peg$reportedPos = s0;\n                      s1 = peg$c85(s2, s3, s4);\n                      s0 = s1;\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$c0;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$c0;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$c0;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c0;\n              }\n              if (s0 === peg$FAILED) {\n                s0 = peg$currPos;\n                if (input.charCodeAt(peg$currPos) === 92) {\n                  s1 = peg$c69;\n                  peg$currPos++;\n                } else {\n                  s1 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c70); }\n                }\n                if (s1 !== peg$FAILED) {\n                  peg$reportedPos = s0;\n                  s1 = peg$c86();\n                }\n                s0 = s1;\n                if (s0 === peg$FAILED) {\n                  s0 = peg$currPos;\n                  if (peg$c87.test(input.charAt(peg$currPos))) {\n                    s1 = input.charAt(peg$currPos);\n                    peg$currPos++;\n                  } else {\n                    s1 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c88); }\n                  }\n                  if (s1 !== peg$FAILED) {\n                    s1 = input.substring(s0, peg$currPos);\n                  }\n                  s0 = s1;\n                }\n              }\n            }\n          }\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parsesinglequote() {\n      var s0, s1;\n\n      s0 = peg$currPos;\n      if (peg$c89.test(input.charAt(peg$currPos))) {\n        s1 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c90); }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c91();\n      }\n      s0 = s1;\n\n      return s0;\n    }\n\n    function peg$parsedoublequote() {\n      var s0, s1;\n\n      s0 = peg$currPos;\n      if (peg$c92.test(input.charAt(peg$currPos))) {\n        s1 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c93); }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c91();\n      }\n      s0 = s1;\n\n      return s0;\n    }\n\n    function peg$parseString() {\n      var s0, s1, s2, s3, s4;\n\n      s0 = peg$currPos;\n      s1 = peg$parsedoublequote();\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$parsestringchar();\n        if (s3 === peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 39) {\n            s3 = peg$c94;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c95); }\n          }\n        }\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parsestringchar();\n          if (s3 === peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 39) {\n              s3 = peg$c94;\n              peg$currPos++;\n            } else {\n              s3 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c95); }\n            }\n          }\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parsedoublequote();\n          if (s3 === peg$FAILED) {\n            s3 = [];\n          }\n          if (s3 !== peg$FAILED) {\n            peg$reportedPos = peg$currPos;\n            s4 = peg$c96(s1, s2, s3);\n            if (s4) {\n              s4 = peg$c2;\n            } else {\n              s4 = peg$c0;\n            }\n            if (s4 !== peg$FAILED) {\n              peg$reportedPos = s0;\n              s1 = peg$c97(s1, s2, s3);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parsesinglequote();\n        if (s1 !== peg$FAILED) {\n          s2 = [];\n          s3 = peg$parsestringchar();\n          if (s3 === peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 34) {\n              s3 = peg$c98;\n              peg$currPos++;\n            } else {\n              s3 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c99); }\n            }\n          }\n          while (s3 !== peg$FAILED) {\n            s2.push(s3);\n            s3 = peg$parsestringchar();\n            if (s3 === peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 34) {\n                s3 = peg$c98;\n                peg$currPos++;\n              } else {\n                s3 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c99); }\n              }\n            }\n          }\n          if (s2 !== peg$FAILED) {\n            s3 = peg$parsesinglequote();\n            if (s3 === peg$FAILED) {\n              s3 = [];\n            }\n            if (s3 !== peg$FAILED) {\n              peg$reportedPos = peg$currPos;\n              s4 = peg$c100(s1, s2, s3);\n              if (s4) {\n                s4 = peg$c2;\n              } else {\n                s4 = peg$c0;\n              }\n              if (s4 !== peg$FAILED) {\n                peg$reportedPos = s0;\n                s1 = peg$c97(s1, s2, s3);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c0;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          if (input.charCodeAt(peg$currPos) === 91) {\n            s1 = peg$c101;\n            peg$currPos++;\n          } else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c102); }\n          }\n          if (s1 !== peg$FAILED) {\n            s2 = peg$parsebalstringinsde();\n            if (s2 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 93) {\n                s3 = peg$c16;\n                peg$currPos++;\n              } else {\n                s3 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c17); }\n              }\n              if (s3 !== peg$FAILED) {\n                peg$reportedPos = s0;\n                s1 = peg$c103(s2);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c0;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parsebalstringinsde() {\n      var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10;\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 61) {\n        s1 = peg$c104;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c105); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsebalstringinsde();\n        if (s2 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 61) {\n            s3 = peg$c104;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c105); }\n          }\n          if (s3 !== peg$FAILED) {\n            peg$reportedPos = s0;\n            s1 = peg$c64(s2);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 91) {\n          s1 = peg$c101;\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c102); }\n        }\n        if (s1 !== peg$FAILED) {\n          if (peg$c106.test(input.charAt(peg$currPos))) {\n            s2 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c107); }\n          }\n          if (s2 === peg$FAILED) {\n            s2 = peg$c3;\n          }\n          if (s2 !== peg$FAILED) {\n            s3 = peg$currPos;\n            s4 = [];\n            s5 = peg$currPos;\n            s6 = peg$currPos;\n            peg$silentFails++;\n            s7 = peg$currPos;\n            if (input.charCodeAt(peg$currPos) === 93) {\n              s8 = peg$c16;\n              peg$currPos++;\n            } else {\n              s8 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c17); }\n            }\n            if (s8 !== peg$FAILED) {\n              s9 = [];\n              if (input.charCodeAt(peg$currPos) === 61) {\n                s10 = peg$c104;\n                peg$currPos++;\n              } else {\n                s10 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c105); }\n              }\n              while (s10 !== peg$FAILED) {\n                s9.push(s10);\n                if (input.charCodeAt(peg$currPos) === 61) {\n                  s10 = peg$c104;\n                  peg$currPos++;\n                } else {\n                  s10 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c105); }\n                }\n              }\n              if (s9 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 93) {\n                  s10 = peg$c16;\n                  peg$currPos++;\n                } else {\n                  s10 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c17); }\n                }\n                if (s10 !== peg$FAILED) {\n                  s8 = [s8, s9, s10];\n                  s7 = s8;\n                } else {\n                  peg$currPos = s7;\n                  s7 = peg$c0;\n                }\n              } else {\n                peg$currPos = s7;\n                s7 = peg$c0;\n              }\n            } else {\n              peg$currPos = s7;\n              s7 = peg$c0;\n            }\n            peg$silentFails--;\n            if (s7 === peg$FAILED) {\n              s6 = peg$c2;\n            } else {\n              peg$currPos = s6;\n              s6 = peg$c0;\n            }\n            if (s6 !== peg$FAILED) {\n              if (input.length > peg$currPos) {\n                s7 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s7 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c20); }\n              }\n              if (s7 !== peg$FAILED) {\n                s6 = [s6, s7];\n                s5 = s6;\n              } else {\n                peg$currPos = s5;\n                s5 = peg$c0;\n              }\n            } else {\n              peg$currPos = s5;\n              s5 = peg$c0;\n            }\n            while (s5 !== peg$FAILED) {\n              s4.push(s5);\n              s5 = peg$currPos;\n              s6 = peg$currPos;\n              peg$silentFails++;\n              s7 = peg$currPos;\n              if (input.charCodeAt(peg$currPos) === 93) {\n                s8 = peg$c16;\n                peg$currPos++;\n              } else {\n                s8 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c17); }\n              }\n              if (s8 !== peg$FAILED) {\n                s9 = [];\n                if (input.charCodeAt(peg$currPos) === 61) {\n                  s10 = peg$c104;\n                  peg$currPos++;\n                } else {\n                  s10 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c105); }\n                }\n                while (s10 !== peg$FAILED) {\n                  s9.push(s10);\n                  if (input.charCodeAt(peg$currPos) === 61) {\n                    s10 = peg$c104;\n                    peg$currPos++;\n                  } else {\n                    s10 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c105); }\n                  }\n                }\n                if (s9 !== peg$FAILED) {\n                  if (input.charCodeAt(peg$currPos) === 93) {\n                    s10 = peg$c16;\n                    peg$currPos++;\n                  } else {\n                    s10 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c17); }\n                  }\n                  if (s10 !== peg$FAILED) {\n                    s8 = [s8, s9, s10];\n                    s7 = s8;\n                  } else {\n                    peg$currPos = s7;\n                    s7 = peg$c0;\n                  }\n                } else {\n                  peg$currPos = s7;\n                  s7 = peg$c0;\n                }\n              } else {\n                peg$currPos = s7;\n                s7 = peg$c0;\n              }\n              peg$silentFails--;\n              if (s7 === peg$FAILED) {\n                s6 = peg$c2;\n              } else {\n                peg$currPos = s6;\n                s6 = peg$c0;\n              }\n              if (s6 !== peg$FAILED) {\n                if (input.length > peg$currPos) {\n                  s7 = input.charAt(peg$currPos);\n                  peg$currPos++;\n                } else {\n                  s7 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c20); }\n                }\n                if (s7 !== peg$FAILED) {\n                  s6 = [s6, s7];\n                  s5 = s6;\n                } else {\n                  peg$currPos = s5;\n                  s5 = peg$c0;\n                }\n              } else {\n                peg$currPos = s5;\n                s5 = peg$c0;\n              }\n            }\n            if (s4 !== peg$FAILED) {\n              s4 = input.substring(s3, peg$currPos);\n            }\n            s3 = s4;\n            if (s3 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 93) {\n                s4 = peg$c16;\n                peg$currPos++;\n              } else {\n                s4 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c17); }\n              }\n              if (s4 !== peg$FAILED) {\n                peg$reportedPos = s0;\n                s1 = peg$c108(s3);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c0;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parseStatement() {\n      var s0, s1, s2, s3, s4, s5;\n\n      s0 = peg$parseDebugger();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseBreakStatement();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parseNumericFor();\n          if (s0 === peg$FAILED) {\n            s0 = peg$parseForEach();\n            if (s0 === peg$FAILED) {\n              s0 = peg$parseRepeatUntil();\n              if (s0 === peg$FAILED) {\n                s0 = peg$parseWhileStatement();\n                if (s0 === peg$FAILED) {\n                  s0 = peg$parseIfStatement();\n                  if (s0 === peg$FAILED) {\n                    s0 = peg$parseExpressionStatement();\n                    if (s0 === peg$FAILED) {\n                      s0 = peg$parseDoEndGrouped();\n                      if (s0 === peg$FAILED) {\n                        s0 = peg$parseLocalAssingment();\n                        if (s0 === peg$FAILED) {\n                          s0 = peg$parseFunctionDeclaration();\n                          if (s0 === peg$FAILED) {\n                            s0 = peg$parseLocalFunction();\n                            if (s0 === peg$FAILED) {\n                              s0 = peg$currPos;\n                              s1 = peg$currPos;\n                              peg$silentFails++;\n                              s2 = peg$currPos;\n                              s3 = peg$parsews();\n                              if (s3 === peg$FAILED) {\n                                s3 = peg$c3;\n                              }\n                              if (s3 !== peg$FAILED) {\n                                s4 = peg$parseReservedWord();\n                                if (s4 !== peg$FAILED) {\n                                  s3 = [s3, s4];\n                                  s2 = s3;\n                                } else {\n                                  peg$currPos = s2;\n                                  s2 = peg$c0;\n                                }\n                              } else {\n                                peg$currPos = s2;\n                                s2 = peg$c0;\n                              }\n                              peg$silentFails--;\n                              if (s2 === peg$FAILED) {\n                                s1 = peg$c2;\n                              } else {\n                                peg$currPos = s1;\n                                s1 = peg$c0;\n                              }\n                              if (s1 !== peg$FAILED) {\n                                s2 = peg$currPos;\n                                s3 = peg$parseExpression();\n                                if (s3 !== peg$FAILED) {\n                                  s3 = input.substring(s2, peg$currPos);\n                                }\n                                s2 = s3;\n                                if (s2 !== peg$FAILED) {\n                                  peg$reportedPos = peg$currPos;\n                                  s3 = peg$c109(s2);\n                                  if (s3) {\n                                    s3 = peg$c2;\n                                  } else {\n                                    s3 = peg$c0;\n                                  }\n                                  if (s3 !== peg$FAILED) {\n                                    peg$reportedPos = s0;\n                                    s1 = peg$c110(s2);\n                                    s0 = s1;\n                                  } else {\n                                    peg$currPos = s0;\n                                    s0 = peg$c0;\n                                  }\n                                } else {\n                                  peg$currPos = s0;\n                                  s0 = peg$c0;\n                                }\n                              } else {\n                                peg$currPos = s0;\n                                s0 = peg$c0;\n                              }\n                              if (s0 === peg$FAILED) {\n                                s0 = peg$currPos;\n                                s1 = peg$currPos;\n                                peg$silentFails++;\n                                s2 = peg$currPos;\n                                s3 = peg$parsews();\n                                if (s3 === peg$FAILED) {\n                                  s3 = peg$c3;\n                                }\n                                if (s3 !== peg$FAILED) {\n                                  s4 = peg$parseReservedWord();\n                                  if (s4 !== peg$FAILED) {\n                                    s3 = [s3, s4];\n                                    s2 = s3;\n                                  } else {\n                                    peg$currPos = s2;\n                                    s2 = peg$c0;\n                                  }\n                                } else {\n                                  peg$currPos = s2;\n                                  s2 = peg$c0;\n                                }\n                                peg$silentFails--;\n                                if (s2 === peg$FAILED) {\n                                  s1 = peg$c2;\n                                } else {\n                                  peg$currPos = s1;\n                                  s1 = peg$c0;\n                                }\n                                if (s1 !== peg$FAILED) {\n                                  s2 = peg$currPos;\n                                  s3 = peg$parseIdentifier();\n                                  if (s3 !== peg$FAILED) {\n                                    s3 = input.substring(s2, peg$currPos);\n                                  }\n                                  s2 = s3;\n                                  if (s2 !== peg$FAILED) {\n                                    peg$reportedPos = peg$currPos;\n                                    s3 = peg$c111(s2);\n                                    if (s3) {\n                                      s3 = peg$c2;\n                                    } else {\n                                      s3 = peg$c0;\n                                    }\n                                    if (s3 !== peg$FAILED) {\n                                      peg$reportedPos = s0;\n                                      s1 = peg$c110(s2);\n                                      s0 = s1;\n                                    } else {\n                                      peg$currPos = s0;\n                                      s0 = peg$c0;\n                                    }\n                                  } else {\n                                    peg$currPos = s0;\n                                    s0 = peg$c0;\n                                  }\n                                } else {\n                                  peg$currPos = s0;\n                                  s0 = peg$c0;\n                                }\n                                if (s0 === peg$FAILED) {\n                                  s0 = peg$currPos;\n                                  s1 = peg$currPos;\n                                  peg$silentFails++;\n                                  s2 = peg$currPos;\n                                  s3 = peg$parsews();\n                                  if (s3 === peg$FAILED) {\n                                    s3 = peg$c3;\n                                  }\n                                  if (s3 !== peg$FAILED) {\n                                    s4 = peg$parseReservedWord();\n                                    if (s4 !== peg$FAILED) {\n                                      s3 = [s3, s4];\n                                      s2 = s3;\n                                    } else {\n                                      peg$currPos = s2;\n                                      s2 = peg$c0;\n                                    }\n                                  } else {\n                                    peg$currPos = s2;\n                                    s2 = peg$c0;\n                                  }\n                                  peg$silentFails--;\n                                  if (s2 === peg$FAILED) {\n                                    s1 = peg$c2;\n                                  } else {\n                                    peg$currPos = s1;\n                                    s1 = peg$c0;\n                                  }\n                                  if (s1 !== peg$FAILED) {\n                                    s2 = peg$currPos;\n                                    if (peg$c112.test(input.charAt(peg$currPos))) {\n                                      s3 = input.charAt(peg$currPos);\n                                      peg$currPos++;\n                                    } else {\n                                      s3 = peg$FAILED;\n                                      if (peg$silentFails === 0) { peg$fail(peg$c113); }\n                                    }\n                                    if (s3 !== peg$FAILED) {\n                                      s3 = input.substring(s2, peg$currPos);\n                                    }\n                                    s2 = s3;\n                                    if (s2 !== peg$FAILED) {\n                                      s3 = [];\n                                      if (peg$c7.test(input.charAt(peg$currPos))) {\n                                        s4 = input.charAt(peg$currPos);\n                                        peg$currPos++;\n                                      } else {\n                                        s4 = peg$FAILED;\n                                        if (peg$silentFails === 0) { peg$fail(peg$c8); }\n                                      }\n                                      while (s4 !== peg$FAILED) {\n                                        s3.push(s4);\n                                        if (peg$c7.test(input.charAt(peg$currPos))) {\n                                          s4 = input.charAt(peg$currPos);\n                                          peg$currPos++;\n                                        } else {\n                                          s4 = peg$FAILED;\n                                          if (peg$silentFails === 0) { peg$fail(peg$c8); }\n                                        }\n                                      }\n                                      if (s3 !== peg$FAILED) {\n                                        if (peg$c106.test(input.charAt(peg$currPos))) {\n                                          s4 = input.charAt(peg$currPos);\n                                          peg$currPos++;\n                                        } else {\n                                          s4 = peg$FAILED;\n                                          if (peg$silentFails === 0) { peg$fail(peg$c107); }\n                                        }\n                                        if (s4 === peg$FAILED) {\n                                          s4 = peg$currPos;\n                                          peg$silentFails++;\n                                          if (input.length > peg$currPos) {\n                                            s5 = input.charAt(peg$currPos);\n                                            peg$currPos++;\n                                          } else {\n                                            s5 = peg$FAILED;\n                                            if (peg$silentFails === 0) { peg$fail(peg$c20); }\n                                          }\n                                          peg$silentFails--;\n                                          if (s5 === peg$FAILED) {\n                                            s4 = peg$c2;\n                                          } else {\n                                            peg$currPos = s4;\n                                            s4 = peg$c0;\n                                          }\n                                        }\n                                        if (s4 !== peg$FAILED) {\n                                          peg$reportedPos = peg$currPos;\n                                          s5 = peg$c114(s2);\n                                          if (s5) {\n                                            s5 = peg$c2;\n                                          } else {\n                                            s5 = peg$c0;\n                                          }\n                                          if (s5 !== peg$FAILED) {\n                                            peg$reportedPos = s0;\n                                            s1 = peg$c110(s2);\n                                            s0 = s1;\n                                          } else {\n                                            peg$currPos = s0;\n                                            s0 = peg$c0;\n                                          }\n                                        } else {\n                                          peg$currPos = s0;\n                                          s0 = peg$c0;\n                                        }\n                                      } else {\n                                        peg$currPos = s0;\n                                        s0 = peg$c0;\n                                      }\n                                    } else {\n                                      peg$currPos = s0;\n                                      s0 = peg$c0;\n                                    }\n                                  } else {\n                                    peg$currPos = s0;\n                                    s0 = peg$c0;\n                                  }\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parseDebugger() {\n      var s0, s1;\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 8) === peg$c115) {\n        s1 = peg$c115;\n        peg$currPos += 8;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c116); }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c117();\n      }\n      s0 = s1;\n\n      return s0;\n    }\n\n    function peg$parseDoEndGrouped() {\n      var s0, s1, s2, s3, s4, s5;\n\n      s0 = peg$currPos;\n      s1 = peg$parsedo();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsews();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$currPos;\n          s4 = peg$parseBlockStatement();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parsews();\n            if (s5 !== peg$FAILED) {\n              s4 = [s4, s5];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$c0;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$c0;\n          }\n          if (s3 === peg$FAILED) {\n            s3 = peg$c3;\n          }\n          if (s3 !== peg$FAILED) {\n            if (input.substr(peg$currPos, 3) === peg$c36) {\n              s4 = peg$c36;\n              peg$currPos += 3;\n            } else {\n              s4 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c37); }\n            }\n            if (s4 === peg$FAILED) {\n              s4 = [];\n            }\n            if (s4 !== peg$FAILED) {\n              peg$reportedPos = peg$currPos;\n              s5 = peg$c118(s1, s3, s4);\n              if (s5) {\n                s5 = peg$c2;\n              } else {\n                s5 = peg$c0;\n              }\n              if (s5 !== peg$FAILED) {\n                peg$reportedPos = s0;\n                s1 = peg$c119(s1, s3, s4);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c0;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n\n      return s0;\n    }\n\n    function peg$parseif() {\n      var s0, s1;\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 2) === peg$c26) {\n        s1 = peg$c26;\n        peg$currPos += 2;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c27); }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c91();\n      }\n      s0 = s1;\n\n      return s0;\n    }\n\n    function peg$parsedo() {\n      var s0, s1;\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 2) === peg$c34) {\n        s1 = peg$c34;\n        peg$currPos += 2;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c35); }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c91();\n      }\n      s0 = s1;\n\n      return s0;\n    }\n\n    function peg$parsefor() {\n      var s0, s1;\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 3) === peg$c54) {\n        s1 = peg$c54;\n        peg$currPos += 3;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c55); }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c91();\n      }\n      s0 = s1;\n\n      return s0;\n    }\n\n    function peg$parsefunction() {\n      var s0, s1;\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 8) === peg$c48) {\n        s1 = peg$c48;\n        peg$currPos += 8;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c49); }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c91();\n      }\n      s0 = s1;\n\n      return s0;\n    }\n\n    function peg$parseNumericFor() {\n      var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16, s17, s18;\n\n      s0 = peg$currPos;\n      s1 = peg$parsefor();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsews();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseIdentifier();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parsews();\n            if (s4 === peg$FAILED) {\n              s4 = peg$c3;\n            }\n            if (s4 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 61) {\n                s5 = peg$c104;\n                peg$currPos++;\n              } else {\n                s5 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c105); }\n              }\n              if (s5 !== peg$FAILED) {\n                s6 = peg$parsews();\n                if (s6 === peg$FAILED) {\n                  s6 = peg$c3;\n                }\n                if (s6 !== peg$FAILED) {\n                  s7 = peg$parseExpression();\n                  if (s7 !== peg$FAILED) {\n                    s8 = peg$parsews();\n                    if (s8 === peg$FAILED) {\n                      s8 = peg$c3;\n                    }\n                    if (s8 !== peg$FAILED) {\n                      if (input.charCodeAt(peg$currPos) === 44) {\n                        s9 = peg$c120;\n                        peg$currPos++;\n                      } else {\n                        s9 = peg$FAILED;\n                        if (peg$silentFails === 0) { peg$fail(peg$c121); }\n                      }\n                      if (s9 !== peg$FAILED) {\n                        s10 = peg$parsews();\n                        if (s10 === peg$FAILED) {\n                          s10 = peg$c3;\n                        }\n                        if (s10 !== peg$FAILED) {\n                          s11 = peg$parseExpression();\n                          if (s11 !== peg$FAILED) {\n                            s12 = peg$currPos;\n                            s13 = peg$parsews();\n                            if (s13 === peg$FAILED) {\n                              s13 = peg$c3;\n                            }\n                            if (s13 !== peg$FAILED) {\n                              if (input.charCodeAt(peg$currPos) === 44) {\n                                s14 = peg$c120;\n                                peg$currPos++;\n                              } else {\n                                s14 = peg$FAILED;\n                                if (peg$silentFails === 0) { peg$fail(peg$c121); }\n                              }\n                              if (s14 !== peg$FAILED) {\n                                s15 = peg$parsews();\n                                if (s15 === peg$FAILED) {\n                                  s15 = peg$c3;\n                                }\n                                if (s15 !== peg$FAILED) {\n                                  s16 = peg$parseExpression();\n                                  if (s16 !== peg$FAILED) {\n                                    s13 = [s13, s14, s15, s16];\n                                    s12 = s13;\n                                  } else {\n                                    peg$currPos = s12;\n                                    s12 = peg$c0;\n                                  }\n                                } else {\n                                  peg$currPos = s12;\n                                  s12 = peg$c0;\n                                }\n                              } else {\n                                peg$currPos = s12;\n                                s12 = peg$c0;\n                              }\n                            } else {\n                              peg$currPos = s12;\n                              s12 = peg$c0;\n                            }\n                            if (s12 === peg$FAILED) {\n                              s12 = peg$c3;\n                            }\n                            if (s12 !== peg$FAILED) {\n                              s13 = peg$parsews();\n                              if (s13 !== peg$FAILED) {\n                                if (input.substr(peg$currPos, 2) === peg$c34) {\n                                  s14 = peg$c34;\n                                  peg$currPos += 2;\n                                } else {\n                                  s14 = peg$FAILED;\n                                  if (peg$silentFails === 0) { peg$fail(peg$c35); }\n                                }\n                                if (s14 !== peg$FAILED) {\n                                  s15 = peg$parsews();\n                                  if (s15 !== peg$FAILED) {\n                                    s16 = peg$currPos;\n                                    s17 = peg$parseBlockStatement();\n                                    if (s17 !== peg$FAILED) {\n                                      s18 = peg$parsews();\n                                      if (s18 !== peg$FAILED) {\n                                        s17 = [s17, s18];\n                                        s16 = s17;\n                                      } else {\n                                        peg$currPos = s16;\n                                        s16 = peg$c0;\n                                      }\n                                    } else {\n                                      peg$currPos = s16;\n                                      s16 = peg$c0;\n                                    }\n                                    if (s16 === peg$FAILED) {\n                                      s16 = peg$c3;\n                                    }\n                                    if (s16 !== peg$FAILED) {\n                                      if (input.substr(peg$currPos, 3) === peg$c36) {\n                                        s17 = peg$c36;\n                                        peg$currPos += 3;\n                                      } else {\n                                        s17 = peg$FAILED;\n                                        if (peg$silentFails === 0) { peg$fail(peg$c37); }\n                                      }\n                                      if (s17 === peg$FAILED) {\n                                        s17 = [];\n                                      }\n                                      if (s17 !== peg$FAILED) {\n                                        peg$reportedPos = peg$currPos;\n                                        s18 = peg$c122(s1, s3, s7, s11, s12, s16, s17);\n                                        if (s18) {\n                                          s18 = peg$c2;\n                                        } else {\n                                          s18 = peg$c0;\n                                        }\n                                        if (s18 !== peg$FAILED) {\n                                          peg$reportedPos = s0;\n                                          s1 = peg$c123(s1, s3, s7, s11, s12, s16, s17);\n                                          s0 = s1;\n                                        } else {\n                                          peg$currPos = s0;\n                                          s0 = peg$c0;\n                                        }\n                                      } else {\n                                        peg$currPos = s0;\n                                        s0 = peg$c0;\n                                      }\n                                    } else {\n                                      peg$currPos = s0;\n                                      s0 = peg$c0;\n                                    }\n                                  } else {\n                                    peg$currPos = s0;\n                                    s0 = peg$c0;\n                                  }\n                                } else {\n                                  peg$currPos = s0;\n                                  s0 = peg$c0;\n                                }\n                              } else {\n                                peg$currPos = s0;\n                                s0 = peg$c0;\n                              }\n                            } else {\n                              peg$currPos = s0;\n                              s0 = peg$c0;\n                            }\n                          } else {\n                            peg$currPos = s0;\n                            s0 = peg$c0;\n                          }\n                        } else {\n                          peg$currPos = s0;\n                          s0 = peg$c0;\n                        }\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$c0;\n                      }\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$c0;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$c0;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$c0;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c0;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n\n      return s0;\n    }\n\n    function peg$parseForEach() {\n      var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14;\n\n      s0 = peg$currPos;\n      s1 = peg$parsefor();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsews();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parsenamelist();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parsews();\n            if (s4 !== peg$FAILED) {\n              if (input.substr(peg$currPos, 2) === peg$c124) {\n                s5 = peg$c124;\n                peg$currPos += 2;\n              } else {\n                s5 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c125); }\n              }\n              if (s5 !== peg$FAILED) {\n                s6 = peg$parsews();\n                if (s6 !== peg$FAILED) {\n                  s7 = peg$parseexplist();\n                  if (s7 !== peg$FAILED) {\n                    s8 = peg$parsews();\n                    if (s8 !== peg$FAILED) {\n                      if (input.substr(peg$currPos, 2) === peg$c34) {\n                        s9 = peg$c34;\n                        peg$currPos += 2;\n                      } else {\n                        s9 = peg$FAILED;\n                        if (peg$silentFails === 0) { peg$fail(peg$c35); }\n                      }\n                      if (s9 !== peg$FAILED) {\n                        s10 = peg$parsews();\n                        if (s10 === peg$FAILED) {\n                          s10 = peg$c3;\n                        }\n                        if (s10 !== peg$FAILED) {\n                          s11 = peg$parseBlockStatement();\n                          if (s11 !== peg$FAILED) {\n                            s12 = peg$parsews();\n                            if (s12 === peg$FAILED) {\n                              s12 = peg$c3;\n                            }\n                            if (s12 !== peg$FAILED) {\n                              if (input.substr(peg$currPos, 3) === peg$c36) {\n                                s13 = peg$c36;\n                                peg$currPos += 3;\n                              } else {\n                                s13 = peg$FAILED;\n                                if (peg$silentFails === 0) { peg$fail(peg$c37); }\n                              }\n                              if (s13 === peg$FAILED) {\n                                s13 = [];\n                              }\n                              if (s13 !== peg$FAILED) {\n                                peg$reportedPos = peg$currPos;\n                                s14 = peg$c126(s1, s3, s7, s11, s13);\n                                if (s14) {\n                                  s14 = peg$c2;\n                                } else {\n                                  s14 = peg$c0;\n                                }\n                                if (s14 !== peg$FAILED) {\n                                  peg$reportedPos = s0;\n                                  s1 = peg$c127(s1, s3, s7, s11, s13);\n                                  s0 = s1;\n                                } else {\n                                  peg$currPos = s0;\n                                  s0 = peg$c0;\n                                }\n                              } else {\n                                peg$currPos = s0;\n                                s0 = peg$c0;\n                              }\n                            } else {\n                              peg$currPos = s0;\n                              s0 = peg$c0;\n                            }\n                          } else {\n                            peg$currPos = s0;\n                            s0 = peg$c0;\n                          }\n                        } else {\n                          peg$currPos = s0;\n                          s0 = peg$c0;\n                        }\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$c0;\n                      }\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$c0;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$c0;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$c0;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c0;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n\n      return s0;\n    }\n\n    function peg$parseLocalAssingment() {\n      var s0, s1, s2, s3, s4, s5, s6, s7;\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 5) === peg$c40) {\n        s1 = peg$c40;\n        peg$currPos += 5;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c41); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsews();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parsenamelist();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parsews();\n            if (s4 === peg$FAILED) {\n              s4 = peg$c3;\n            }\n            if (s4 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 61) {\n                s5 = peg$c104;\n                peg$currPos++;\n              } else {\n                s5 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c105); }\n              }\n              if (s5 !== peg$FAILED) {\n                s6 = peg$parsews();\n                if (s6 === peg$FAILED) {\n                  s6 = peg$c3;\n                }\n                if (s6 !== peg$FAILED) {\n                  s7 = peg$parseexplist();\n                  if (s7 !== peg$FAILED) {\n                    peg$reportedPos = s0;\n                    s1 = peg$c128(s3, s7);\n                    s0 = s1;\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$c0;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$c0;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c0;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (input.substr(peg$currPos, 5) === peg$c40) {\n          s1 = peg$c40;\n          peg$currPos += 5;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c41); }\n        }\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parsews();\n          if (s2 !== peg$FAILED) {\n            s3 = peg$parsenamelist();\n            if (s3 !== peg$FAILED) {\n              peg$reportedPos = s0;\n              s1 = peg$c129(s3);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parseAssignmentExpression() {\n      var s0, s1, s2, s3, s4, s5;\n\n      s0 = peg$currPos;\n      s1 = peg$parsevarlist();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsews();\n        if (s2 === peg$FAILED) {\n          s2 = peg$c3;\n        }\n        if (s2 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 61) {\n            s3 = peg$c104;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c105); }\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parsews();\n            if (s4 === peg$FAILED) {\n              s4 = peg$c3;\n            }\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parseexplist();\n              if (s5 !== peg$FAILED) {\n                peg$reportedPos = s0;\n                s1 = peg$c130(s1, s5);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c0;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n\n      return s0;\n    }\n\n    function peg$parseBreakStatement() {\n      var s0, s1;\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 5) === peg$c52) {\n        s1 = peg$c52;\n        peg$currPos += 5;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c53); }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c131();\n      }\n      s0 = s1;\n\n      return s0;\n    }\n\n    function peg$parseExpressionStatement() {\n      var s0, s1;\n\n      s0 = peg$currPos;\n      s1 = peg$parseAssignmentExpression();\n      if (s1 === peg$FAILED) {\n        s1 = peg$parseCallExpression();\n      }\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c132(s1);\n      }\n      s0 = s1;\n\n      return s0;\n    }\n\n    function peg$parseelseif() {\n      var s0, s1, s2, s3, s4, s5, s6, s7;\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 6) === peg$c30) {\n        s1 = peg$c30;\n        peg$currPos += 6;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c31); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsews();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseExpression();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parsews();\n            if (s4 !== peg$FAILED) {\n              if (input.substr(peg$currPos, 4) === peg$c28) {\n                s5 = peg$c28;\n                peg$currPos += 4;\n              } else {\n                s5 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c29); }\n              }\n              if (s5 !== peg$FAILED) {\n                s6 = peg$parsews();\n                if (s6 !== peg$FAILED) {\n                  s7 = peg$parseBlockStatement();\n                  if (s7 !== peg$FAILED) {\n                    peg$reportedPos = s0;\n                    s1 = peg$c133(s3, s7);\n                    s0 = s1;\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$c0;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$c0;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c0;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n\n      return s0;\n    }\n\n    function peg$parseIfStatement() {\n      var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13;\n\n      s0 = peg$currPos;\n      s1 = peg$parseif();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsews();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseExpression();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parsews();\n            if (s4 !== peg$FAILED) {\n              if (input.substr(peg$currPos, 4) === peg$c28) {\n                s5 = peg$c28;\n                peg$currPos += 4;\n              } else {\n                s5 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c29); }\n              }\n              if (s5 === peg$FAILED) {\n                peg$reportedPos = peg$currPos;\n                s5 = peg$c134();\n                if (s5) {\n                  s5 = peg$c2;\n                } else {\n                  s5 = peg$c0;\n                }\n              }\n              if (s5 !== peg$FAILED) {\n                s6 = peg$parsews();\n                if (s6 !== peg$FAILED) {\n                  s7 = peg$parseBlockStatement();\n                  if (s7 !== peg$FAILED) {\n                    s8 = [];\n                    s9 = peg$currPos;\n                    s10 = peg$parsews();\n                    if (s10 === peg$FAILED) {\n                      s10 = peg$c3;\n                    }\n                    if (s10 !== peg$FAILED) {\n                      s11 = peg$parseelseif();\n                      if (s11 !== peg$FAILED) {\n                        s10 = [s10, s11];\n                        s9 = s10;\n                      } else {\n                        peg$currPos = s9;\n                        s9 = peg$c0;\n                      }\n                    } else {\n                      peg$currPos = s9;\n                      s9 = peg$c0;\n                    }\n                    while (s9 !== peg$FAILED) {\n                      s8.push(s9);\n                      s9 = peg$currPos;\n                      s10 = peg$parsews();\n                      if (s10 === peg$FAILED) {\n                        s10 = peg$c3;\n                      }\n                      if (s10 !== peg$FAILED) {\n                        s11 = peg$parseelseif();\n                        if (s11 !== peg$FAILED) {\n                          s10 = [s10, s11];\n                          s9 = s10;\n                        } else {\n                          peg$currPos = s9;\n                          s9 = peg$c0;\n                        }\n                      } else {\n                        peg$currPos = s9;\n                        s9 = peg$c0;\n                      }\n                    }\n                    if (s8 !== peg$FAILED) {\n                      s9 = peg$currPos;\n                      s10 = peg$parsews();\n                      if (s10 === peg$FAILED) {\n                        s10 = peg$c3;\n                      }\n                      if (s10 !== peg$FAILED) {\n                        if (input.substr(peg$currPos, 4) === peg$c32) {\n                          s11 = peg$c32;\n                          peg$currPos += 4;\n                        } else {\n                          s11 = peg$FAILED;\n                          if (peg$silentFails === 0) { peg$fail(peg$c33); }\n                        }\n                        if (s11 !== peg$FAILED) {\n                          s12 = peg$parsews();\n                          if (s12 !== peg$FAILED) {\n                            s13 = peg$parseBlockStatement();\n                            if (s13 !== peg$FAILED) {\n                              s10 = [s10, s11, s12, s13];\n                              s9 = s10;\n                            } else {\n                              peg$currPos = s9;\n                              s9 = peg$c0;\n                            }\n                          } else {\n                            peg$currPos = s9;\n                            s9 = peg$c0;\n                          }\n                        } else {\n                          peg$currPos = s9;\n                          s9 = peg$c0;\n                        }\n                      } else {\n                        peg$currPos = s9;\n                        s9 = peg$c0;\n                      }\n                      if (s9 === peg$FAILED) {\n                        s9 = peg$c3;\n                      }\n                      if (s9 !== peg$FAILED) {\n                        s10 = peg$parsews();\n                        if (s10 === peg$FAILED) {\n                          s10 = peg$c3;\n                        }\n                        if (s10 !== peg$FAILED) {\n                          if (input.substr(peg$currPos, 3) === peg$c36) {\n                            s11 = peg$c36;\n                            peg$currPos += 3;\n                          } else {\n                            s11 = peg$FAILED;\n                            if (peg$silentFails === 0) { peg$fail(peg$c37); }\n                          }\n                          if (s11 === peg$FAILED) {\n                            s11 = [];\n                          }\n                          if (s11 !== peg$FAILED) {\n                            peg$reportedPos = peg$currPos;\n                            s12 = peg$c135(s1, s3, s7, s8, s9, s11);\n                            if (s12) {\n                              s12 = peg$c2;\n                            } else {\n                              s12 = peg$c0;\n                            }\n                            if (s12 !== peg$FAILED) {\n                              peg$reportedPos = s0;\n                              s1 = peg$c136(s1, s3, s7, s8, s9, s11);\n                              s0 = s1;\n                            } else {\n                              peg$currPos = s0;\n                              s0 = peg$c0;\n                            }\n                          } else {\n                            peg$currPos = s0;\n                            s0 = peg$c0;\n                          }\n                        } else {\n                          peg$currPos = s0;\n                          s0 = peg$c0;\n                        }\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$c0;\n                      }\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$c0;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$c0;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$c0;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c0;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n\n      return s0;\n    }\n\n    function peg$parseReturnStatement() {\n      var s0, s1, s2, s3;\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 6) === peg$c38) {\n        s1 = peg$c38;\n        peg$currPos += 6;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c39); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsews();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseexplist();\n          if (s3 !== peg$FAILED) {\n            peg$reportedPos = s0;\n            s1 = peg$c137(s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (input.substr(peg$currPos, 6) === peg$c38) {\n          s1 = peg$c38;\n          peg$currPos += 6;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c39); }\n        }\n        if (s1 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c138();\n        }\n        s0 = s1;\n      }\n\n      return s0;\n    }\n\n    function peg$parseWhileStatement() {\n      var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9;\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 5) === peg$c58) {\n        s1 = peg$c58;\n        peg$currPos += 5;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c59); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsews();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseExpression();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parsews();\n            if (s4 !== peg$FAILED) {\n              if (input.substr(peg$currPos, 2) === peg$c34) {\n                s5 = peg$c34;\n                peg$currPos += 2;\n              } else {\n                s5 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c35); }\n              }\n              if (s5 !== peg$FAILED) {\n                s6 = peg$parsews();\n                if (s6 !== peg$FAILED) {\n                  s7 = peg$currPos;\n                  s8 = peg$parseBlockStatement();\n                  if (s8 !== peg$FAILED) {\n                    s9 = peg$parsews();\n                    if (s9 !== peg$FAILED) {\n                      s8 = [s8, s9];\n                      s7 = s8;\n                    } else {\n                      peg$currPos = s7;\n                      s7 = peg$c0;\n                    }\n                  } else {\n                    peg$currPos = s7;\n                    s7 = peg$c0;\n                  }\n                  if (s7 === peg$FAILED) {\n                    s7 = peg$c3;\n                  }\n                  if (s7 !== peg$FAILED) {\n                    if (input.substr(peg$currPos, 3) === peg$c36) {\n                      s8 = peg$c36;\n                      peg$currPos += 3;\n                    } else {\n                      s8 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c37); }\n                    }\n                    if (s8 === peg$FAILED) {\n                      peg$reportedPos = peg$currPos;\n                      s8 = peg$c139();\n                      if (s8) {\n                        s8 = peg$c2;\n                      } else {\n                        s8 = peg$c0;\n                      }\n                    }\n                    if (s8 !== peg$FAILED) {\n                      peg$reportedPos = s0;\n                      s1 = peg$c140(s3, s7);\n                      s0 = s1;\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$c0;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$c0;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$c0;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c0;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n\n      return s0;\n    }\n\n    function peg$parseRepeatUntil() {\n      var s0, s1, s2, s3, s4, s5, s6, s7;\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 6) === peg$c141) {\n        s1 = peg$c141;\n        peg$currPos += 6;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c142); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsews();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$currPos;\n          s4 = peg$parseBlockStatement();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parsews();\n            if (s5 !== peg$FAILED) {\n              s4 = [s4, s5];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$c0;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$c0;\n          }\n          if (s3 === peg$FAILED) {\n            s3 = peg$c3;\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parsews();\n            if (s4 === peg$FAILED) {\n              s4 = peg$c3;\n            }\n            if (s4 !== peg$FAILED) {\n              if (input.substr(peg$currPos, 5) === peg$c56) {\n                s5 = peg$c56;\n                peg$currPos += 5;\n              } else {\n                s5 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c57); }\n              }\n              if (s5 === peg$FAILED) {\n                peg$reportedPos = peg$currPos;\n                s5 = peg$c143();\n                if (s5) {\n                  s5 = peg$c2;\n                } else {\n                  s5 = peg$c0;\n                }\n              }\n              if (s5 !== peg$FAILED) {\n                s6 = peg$parsews();\n                if (s6 !== peg$FAILED) {\n                  s7 = peg$parseExpression();\n                  if (s7 === peg$FAILED) {\n                    peg$reportedPos = peg$currPos;\n                    s7 = peg$c144();\n                    if (s7) {\n                      s7 = peg$c2;\n                    } else {\n                      s7 = peg$c0;\n                    }\n                  }\n                  if (s7 !== peg$FAILED) {\n                    peg$reportedPos = s0;\n                    s1 = peg$c145(s3, s7);\n                    s0 = s1;\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$c0;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$c0;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c0;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n\n      return s0;\n    }\n\n    function peg$parseThat() {\n      var s0, s1;\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 4) === peg$c146) {\n        s1 = peg$c146;\n        peg$currPos += 4;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c147); }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c148();\n      }\n      s0 = s1;\n\n      return s0;\n    }\n\n    function peg$parseSimpleExpression() {\n      var s0;\n\n      s0 = peg$parseLiteral();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseResetExpression();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parseFunctionExpression();\n          if (s0 === peg$FAILED) {\n            s0 = peg$parseCallExpression();\n            if (s0 === peg$FAILED) {\n              s0 = peg$parseThat();\n              if (s0 === peg$FAILED) {\n                s0 = peg$parseIdentifier();\n                if (s0 === peg$FAILED) {\n                  s0 = peg$parseObjectExpression();\n                  if (s0 === peg$FAILED) {\n                    s0 = peg$parseUnaryExpression();\n                    if (s0 === peg$FAILED) {\n                      s0 = peg$parseParenExpr();\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parseExpression() {\n      var s0;\n\n      s0 = peg$parseAssignmentExpression();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseBinSimpleExpression();\n      }\n\n      return s0;\n    }\n\n    function peg$parseBinSimpleExpression() {\n      var s0, s1, s2, s3, s4, s5, s6, s7;\n\n      s0 = peg$currPos;\n      s1 = peg$parseMemberExpression();\n      if (s1 === peg$FAILED) {\n        s1 = peg$parseSimpleExpression();\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$currPos;\n        s4 = peg$parsews();\n        if (s4 === peg$FAILED) {\n          s4 = peg$c3;\n        }\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parsebinop();\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parsews();\n            if (s6 === peg$FAILED) {\n              s6 = peg$c3;\n            }\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parseMemberExpression();\n              if (s7 === peg$FAILED) {\n                s7 = peg$parseSimpleExpression();\n              }\n              if (s7 !== peg$FAILED) {\n                s4 = [s4, s5, s6, s7];\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$c0;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$c0;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$c0;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$c0;\n        }\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$currPos;\n          s4 = peg$parsews();\n          if (s4 === peg$FAILED) {\n            s4 = peg$c3;\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parsebinop();\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parsews();\n              if (s6 === peg$FAILED) {\n                s6 = peg$c3;\n              }\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parseMemberExpression();\n                if (s7 === peg$FAILED) {\n                  s7 = peg$parseSimpleExpression();\n                }\n                if (s7 !== peg$FAILED) {\n                  s4 = [s4, s5, s6, s7];\n                  s3 = s4;\n                } else {\n                  peg$currPos = s3;\n                  s3 = peg$c0;\n                }\n              } else {\n                peg$currPos = s3;\n                s3 = peg$c0;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$c0;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$c0;\n          }\n        }\n        if (s2 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c149(s1, s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n\n      return s0;\n    }\n\n    function peg$parseunop() {\n      var s0, s1;\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 45) {\n        s1 = peg$c150;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c151); }\n      }\n      if (s1 === peg$FAILED) {\n        if (input.substr(peg$currPos, 3) === peg$c50) {\n          s1 = peg$c50;\n          peg$currPos += 3;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c51); }\n        }\n        if (s1 === peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 35) {\n            s1 = peg$c4;\n            peg$currPos++;\n          } else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c5); }\n          }\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        s1 = input.substring(s0, peg$currPos);\n      }\n      s0 = s1;\n\n      return s0;\n    }\n\n    function peg$parsebinop() {\n      var s0, s1;\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 43) {\n        s1 = peg$c152;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c153); }\n      }\n      if (s1 === peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 45) {\n          s1 = peg$c150;\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c151); }\n        }\n        if (s1 === peg$FAILED) {\n          if (input.substr(peg$currPos, 2) === peg$c154) {\n            s1 = peg$c154;\n            peg$currPos += 2;\n          } else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c155); }\n          }\n          if (s1 === peg$FAILED) {\n            if (input.substr(peg$currPos, 2) === peg$c156) {\n              s1 = peg$c156;\n              peg$currPos += 2;\n            } else {\n              s1 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c157); }\n            }\n            if (s1 === peg$FAILED) {\n              if (input.substr(peg$currPos, 2) === peg$c158) {\n                s1 = peg$c158;\n                peg$currPos += 2;\n              } else {\n                s1 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c159); }\n              }\n              if (s1 === peg$FAILED) {\n                if (input.substr(peg$currPos, 2) === peg$c160) {\n                  s1 = peg$c160;\n                  peg$currPos += 2;\n                } else {\n                  s1 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c161); }\n                }\n                if (s1 === peg$FAILED) {\n                  if (input.charCodeAt(peg$currPos) === 62) {\n                    s1 = peg$c162;\n                    peg$currPos++;\n                  } else {\n                    s1 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c163); }\n                  }\n                  if (s1 === peg$FAILED) {\n                    if (input.charCodeAt(peg$currPos) === 60) {\n                      s1 = peg$c164;\n                      peg$currPos++;\n                    } else {\n                      s1 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c165); }\n                    }\n                    if (s1 === peg$FAILED) {\n                      if (input.substr(peg$currPos, 2) === peg$c166) {\n                        s1 = peg$c166;\n                        peg$currPos += 2;\n                      } else {\n                        s1 = peg$FAILED;\n                        if (peg$silentFails === 0) { peg$fail(peg$c167); }\n                      }\n                      if (s1 === peg$FAILED) {\n                        if (input.substr(peg$currPos, 3) === peg$c168) {\n                          s1 = peg$c168;\n                          peg$currPos += 3;\n                        } else {\n                          s1 = peg$FAILED;\n                          if (peg$silentFails === 0) { peg$fail(peg$c169); }\n                        }\n                        if (s1 === peg$FAILED) {\n                          if (input.substr(peg$currPos, 2) === peg$c170) {\n                            s1 = peg$c170;\n                            peg$currPos += 2;\n                          } else {\n                            s1 = peg$FAILED;\n                            if (peg$silentFails === 0) { peg$fail(peg$c171); }\n                          }\n                          if (s1 === peg$FAILED) {\n                            if (input.charCodeAt(peg$currPos) === 42) {\n                              s1 = peg$c172;\n                              peg$currPos++;\n                            } else {\n                              s1 = peg$FAILED;\n                              if (peg$silentFails === 0) { peg$fail(peg$c173); }\n                            }\n                            if (s1 === peg$FAILED) {\n                              if (input.substr(peg$currPos, 2) === peg$c174) {\n                                s1 = peg$c174;\n                                peg$currPos += 2;\n                              } else {\n                                s1 = peg$FAILED;\n                                if (peg$silentFails === 0) { peg$fail(peg$c175); }\n                              }\n                              if (s1 === peg$FAILED) {\n                                if (input.charCodeAt(peg$currPos) === 47) {\n                                  s1 = peg$c176;\n                                  peg$currPos++;\n                                } else {\n                                  s1 = peg$FAILED;\n                                  if (peg$silentFails === 0) { peg$fail(peg$c177); }\n                                }\n                                if (s1 === peg$FAILED) {\n                                  if (input.charCodeAt(peg$currPos) === 37) {\n                                    s1 = peg$c178;\n                                    peg$currPos++;\n                                  } else {\n                                    s1 = peg$FAILED;\n                                    if (peg$silentFails === 0) { peg$fail(peg$c179); }\n                                  }\n                                  if (s1 === peg$FAILED) {\n                                    if (input.charCodeAt(peg$currPos) === 94) {\n                                      s1 = peg$c180;\n                                      peg$currPos++;\n                                    } else {\n                                      s1 = peg$FAILED;\n                                      if (peg$silentFails === 0) { peg$fail(peg$c181); }\n                                    }\n                                  }\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        s1 = input.substring(s0, peg$currPos);\n      }\n      s0 = s1;\n\n      return s0;\n    }\n\n    function peg$parseprefixexp() {\n      var s0, s1, s2, s3, s4, s5;\n\n      s0 = peg$parsefuncname();\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 40) {\n          s1 = peg$c182;\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c183); }\n        }\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parsews();\n          if (s2 === peg$FAILED) {\n            s2 = peg$c3;\n          }\n          if (s2 !== peg$FAILED) {\n            s3 = peg$parseExpression();\n            if (s3 !== peg$FAILED) {\n              s4 = peg$parsews();\n              if (s4 === peg$FAILED) {\n                s4 = peg$c3;\n              }\n              if (s4 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 41) {\n                  s5 = peg$c184;\n                  peg$currPos++;\n                } else {\n                  s5 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c185); }\n                }\n                if (s5 !== peg$FAILED) {\n                  peg$reportedPos = s0;\n                  s1 = peg$c186(s3);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$c0;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c0;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parseCallExpression() {\n      var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n\n      s0 = peg$currPos;\n      s1 = peg$currPos;\n      peg$silentFails++;\n      s2 = peg$currPos;\n      if (input.substr(peg$currPos, 8) === peg$c48) {\n        s3 = peg$c48;\n        peg$currPos += 8;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c49); }\n      }\n      if (s3 !== peg$FAILED) {\n        s4 = peg$parsews();\n        if (s4 === peg$FAILED) {\n          s4 = peg$c3;\n        }\n        if (s4 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 40) {\n            s5 = peg$c182;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c183); }\n          }\n          if (s5 !== peg$FAILED) {\n            s3 = [s3, s4, s5];\n            s2 = s3;\n          } else {\n            peg$currPos = s2;\n            s2 = peg$c0;\n          }\n        } else {\n          peg$currPos = s2;\n          s2 = peg$c0;\n        }\n      } else {\n        peg$currPos = s2;\n        s2 = peg$c0;\n      }\n      peg$silentFails--;\n      if (s2 === peg$FAILED) {\n        s1 = peg$c2;\n      } else {\n        peg$currPos = s1;\n        s1 = peg$c0;\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseprefixexp();\n        if (s2 !== peg$FAILED) {\n          s3 = [];\n          s4 = peg$currPos;\n          s5 = peg$parsews();\n          if (s5 === peg$FAILED) {\n            s5 = peg$c3;\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = peg$currPos;\n            if (input.charCodeAt(peg$currPos) === 58) {\n              s7 = peg$c187;\n              peg$currPos++;\n            } else {\n              s7 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c188); }\n            }\n            if (s7 !== peg$FAILED) {\n              s8 = peg$parseIdentifier();\n              if (s8 !== peg$FAILED) {\n                s7 = [s7, s8];\n                s6 = s7;\n              } else {\n                peg$currPos = s6;\n                s6 = peg$c0;\n              }\n            } else {\n              peg$currPos = s6;\n              s6 = peg$c0;\n            }\n            if (s6 === peg$FAILED) {\n              s6 = peg$c3;\n            }\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parsecallsuffix();\n              if (s7 !== peg$FAILED) {\n                s5 = [s5, s6, s7];\n                s4 = s5;\n              } else {\n                peg$currPos = s4;\n                s4 = peg$c0;\n              }\n            } else {\n              peg$currPos = s4;\n              s4 = peg$c0;\n            }\n          } else {\n            peg$currPos = s4;\n            s4 = peg$c0;\n          }\n          if (s4 !== peg$FAILED) {\n            while (s4 !== peg$FAILED) {\n              s3.push(s4);\n              s4 = peg$currPos;\n              s5 = peg$parsews();\n              if (s5 === peg$FAILED) {\n                s5 = peg$c3;\n              }\n              if (s5 !== peg$FAILED) {\n                s6 = peg$currPos;\n                if (input.charCodeAt(peg$currPos) === 58) {\n                  s7 = peg$c187;\n                  peg$currPos++;\n                } else {\n                  s7 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c188); }\n                }\n                if (s7 !== peg$FAILED) {\n                  s8 = peg$parseIdentifier();\n                  if (s8 !== peg$FAILED) {\n                    s7 = [s7, s8];\n                    s6 = s7;\n                  } else {\n                    peg$currPos = s6;\n                    s6 = peg$c0;\n                  }\n                } else {\n                  peg$currPos = s6;\n                  s6 = peg$c0;\n                }\n                if (s6 === peg$FAILED) {\n                  s6 = peg$c3;\n                }\n                if (s6 !== peg$FAILED) {\n                  s7 = peg$parsecallsuffix();\n                  if (s7 !== peg$FAILED) {\n                    s5 = [s5, s6, s7];\n                    s4 = s5;\n                  } else {\n                    peg$currPos = s4;\n                    s4 = peg$c0;\n                  }\n                } else {\n                  peg$currPos = s4;\n                  s4 = peg$c0;\n                }\n              } else {\n                peg$currPos = s4;\n                s4 = peg$c0;\n              }\n            }\n          } else {\n            s3 = peg$c0;\n          }\n          if (s3 !== peg$FAILED) {\n            peg$reportedPos = s0;\n            s1 = peg$c189(s2, s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n\n      return s0;\n    }\n\n    function peg$parsecallsuffix() {\n      var s0, s1;\n\n      s0 = peg$currPos;\n      s1 = peg$parseargs();\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c64(s1);\n      }\n      s0 = s1;\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parseObjectExpression();\n        if (s1 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c190(s1);\n        }\n        s0 = s1;\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          s1 = peg$parseString();\n          if (s1 !== peg$FAILED) {\n            peg$reportedPos = s0;\n            s1 = peg$c191(s1);\n          }\n          s0 = s1;\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parseParenExpr() {\n      var s0, s1, s2, s3, s4, s5;\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 40) {\n        s1 = peg$c182;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c183); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsews();\n        if (s2 === peg$FAILED) {\n          s2 = peg$c3;\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseExpression();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parsews();\n            if (s4 === peg$FAILED) {\n              s4 = peg$c3;\n            }\n            if (s4 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 41) {\n                s5 = peg$c184;\n                peg$currPos++;\n              } else {\n                s5 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c185); }\n              }\n              if (s5 !== peg$FAILED) {\n                peg$reportedPos = s0;\n                s1 = peg$c192(s3);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c0;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n\n      return s0;\n    }\n\n    function peg$parseResetExpression() {\n      var s0, s1;\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 3) === peg$c193) {\n        s1 = peg$c193;\n        peg$currPos += 3;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c194); }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c195();\n      }\n      s0 = s1;\n\n      return s0;\n    }\n\n    function peg$parsefuncname() {\n      var s0, s1, s2, s3;\n\n      s0 = peg$currPos;\n      s1 = peg$parseThat();\n      if (s1 === peg$FAILED) {\n        s1 = peg$parseIdentifier();\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$parsefuncnamesuffix();\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parsefuncnamesuffix();\n        }\n        if (s2 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c196(s1, s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n\n      return s0;\n    }\n\n    function peg$parsefuncnamesuffix() {\n      var s0, s1, s2, s3, s4, s5, s6;\n\n      s0 = peg$currPos;\n      s1 = peg$parsews();\n      if (s1 === peg$FAILED) {\n        s1 = peg$c3;\n      }\n      if (s1 !== peg$FAILED) {\n        if (peg$c197.test(input.charAt(peg$currPos))) {\n          s2 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c198); }\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parsews();\n          if (s3 === peg$FAILED) {\n            s3 = peg$c3;\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parseIdentifier();\n            if (s4 !== peg$FAILED) {\n              peg$reportedPos = s0;\n              s1 = peg$c199(s2, s4);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parsews();\n        if (s1 === peg$FAILED) {\n          s1 = peg$c3;\n        }\n        if (s1 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 91) {\n            s2 = peg$c101;\n            peg$currPos++;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c102); }\n          }\n          if (s2 !== peg$FAILED) {\n            s3 = peg$parsews();\n            if (s3 === peg$FAILED) {\n              s3 = peg$c3;\n            }\n            if (s3 !== peg$FAILED) {\n              s4 = peg$parseExpression();\n              if (s4 !== peg$FAILED) {\n                s5 = peg$parsews();\n                if (s5 === peg$FAILED) {\n                  s5 = peg$c3;\n                }\n                if (s5 !== peg$FAILED) {\n                  if (input.charCodeAt(peg$currPos) === 93) {\n                    s6 = peg$c16;\n                    peg$currPos++;\n                  } else {\n                    s6 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c17); }\n                  }\n                  if (s6 !== peg$FAILED) {\n                    peg$reportedPos = s0;\n                    s1 = peg$c200(s4);\n                    s0 = s1;\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$c0;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$c0;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c0;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parseexplist() {\n      var s0, s1, s2, s3, s4, s5, s6, s7;\n\n      s0 = peg$currPos;\n      s1 = peg$parseExpression();\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$currPos;\n        s4 = peg$parsews();\n        if (s4 === peg$FAILED) {\n          s4 = peg$c3;\n        }\n        if (s4 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 44) {\n            s5 = peg$c120;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c121); }\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parsews();\n            if (s6 === peg$FAILED) {\n              s6 = peg$c3;\n            }\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parseExpression();\n              if (s7 === peg$FAILED) {\n                peg$reportedPos = peg$currPos;\n                s7 = peg$c201();\n                if (s7) {\n                  s7 = peg$c2;\n                } else {\n                  s7 = peg$c0;\n                }\n              }\n              if (s7 !== peg$FAILED) {\n                s4 = [s4, s5, s6, s7];\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$c0;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$c0;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$c0;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$c0;\n        }\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$currPos;\n          s4 = peg$parsews();\n          if (s4 === peg$FAILED) {\n            s4 = peg$c3;\n          }\n          if (s4 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 44) {\n              s5 = peg$c120;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c121); }\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parsews();\n              if (s6 === peg$FAILED) {\n                s6 = peg$c3;\n              }\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parseExpression();\n                if (s7 === peg$FAILED) {\n                  peg$reportedPos = peg$currPos;\n                  s7 = peg$c201();\n                  if (s7) {\n                    s7 = peg$c2;\n                  } else {\n                    s7 = peg$c0;\n                  }\n                }\n                if (s7 !== peg$FAILED) {\n                  s4 = [s4, s5, s6, s7];\n                  s3 = s4;\n                } else {\n                  peg$currPos = s3;\n                  s3 = peg$c0;\n                }\n              } else {\n                peg$currPos = s3;\n                s3 = peg$c0;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$c0;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$c0;\n          }\n        }\n        if (s2 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c202(s1, s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n\n      return s0;\n    }\n\n    function peg$parsevarlist() {\n      var s0, s1, s2, s3, s4, s5, s6, s7;\n\n      s0 = peg$currPos;\n      s1 = peg$parsevar();\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$currPos;\n        s4 = peg$parsews();\n        if (s4 === peg$FAILED) {\n          s4 = peg$c3;\n        }\n        if (s4 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 44) {\n            s5 = peg$c120;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c121); }\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parsews();\n            if (s6 === peg$FAILED) {\n              s6 = peg$c3;\n            }\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parsevar();\n              if (s7 !== peg$FAILED) {\n                s4 = [s4, s5, s6, s7];\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$c0;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$c0;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$c0;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$c0;\n        }\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$currPos;\n          s4 = peg$parsews();\n          if (s4 === peg$FAILED) {\n            s4 = peg$c3;\n          }\n          if (s4 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 44) {\n              s5 = peg$c120;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c121); }\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parsews();\n              if (s6 === peg$FAILED) {\n                s6 = peg$c3;\n              }\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parsevar();\n                if (s7 !== peg$FAILED) {\n                  s4 = [s4, s5, s6, s7];\n                  s3 = s4;\n                } else {\n                  peg$currPos = s3;\n                  s3 = peg$c0;\n                }\n              } else {\n                peg$currPos = s3;\n                s3 = peg$c0;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$c0;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$c0;\n          }\n        }\n        if (s2 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c203(s1, s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n\n      return s0;\n    }\n\n    function peg$parsenamelist() {\n      var s0, s1, s2, s3, s4, s5, s6, s7;\n\n      s0 = peg$currPos;\n      s1 = peg$parseIdentifier();\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$currPos;\n        s4 = peg$parsews();\n        if (s4 === peg$FAILED) {\n          s4 = peg$c3;\n        }\n        if (s4 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 44) {\n            s5 = peg$c120;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c121); }\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parsews();\n            if (s6 === peg$FAILED) {\n              s6 = peg$c3;\n            }\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parseIdentifier();\n              if (s7 !== peg$FAILED) {\n                s4 = [s4, s5, s6, s7];\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$c0;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$c0;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$c0;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$c0;\n        }\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$currPos;\n          s4 = peg$parsews();\n          if (s4 === peg$FAILED) {\n            s4 = peg$c3;\n          }\n          if (s4 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 44) {\n              s5 = peg$c120;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c121); }\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parsews();\n              if (s6 === peg$FAILED) {\n                s6 = peg$c3;\n              }\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parseIdentifier();\n                if (s7 !== peg$FAILED) {\n                  s4 = [s4, s5, s6, s7];\n                  s3 = s4;\n                } else {\n                  peg$currPos = s3;\n                  s3 = peg$c0;\n                }\n              } else {\n                peg$currPos = s3;\n                s3 = peg$c0;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$c0;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$c0;\n          }\n        }\n        if (s2 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c202(s1, s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n\n      return s0;\n    }\n\n    function peg$parseargs() {\n      var s0, s1, s2, s3, s4, s5;\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 40) {\n        s1 = peg$c182;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c183); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsews();\n        if (s2 === peg$FAILED) {\n          s2 = peg$c3;\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseexplist();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parsews();\n            if (s4 === peg$FAILED) {\n              s4 = peg$c3;\n            }\n            if (s4 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 41) {\n                s5 = peg$c184;\n                peg$currPos++;\n              } else {\n                s5 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c185); }\n              }\n              if (s5 === peg$FAILED) {\n                peg$reportedPos = peg$currPos;\n                s5 = peg$c204();\n                if (s5) {\n                  s5 = peg$c2;\n                } else {\n                  s5 = peg$c0;\n                }\n              }\n              if (s5 !== peg$FAILED) {\n                peg$reportedPos = s0;\n                s1 = peg$c205(s3);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c0;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 40) {\n          s1 = peg$c182;\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c183); }\n        }\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parsews();\n          if (s2 === peg$FAILED) {\n            s2 = peg$c3;\n          }\n          if (s2 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 41) {\n              s3 = peg$c184;\n              peg$currPos++;\n            } else {\n              s3 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c185); }\n            }\n            if (s3 === peg$FAILED) {\n              peg$reportedPos = peg$currPos;\n              s3 = peg$c204();\n              if (s3) {\n                s3 = peg$c2;\n              } else {\n                s3 = peg$c0;\n              }\n            }\n            if (s3 !== peg$FAILED) {\n              peg$reportedPos = s0;\n              s1 = peg$c206();\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parsevar() {\n      var s0;\n\n      s0 = peg$parseMemberExpression();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseIdentifier();\n      }\n\n      return s0;\n    }\n\n    function peg$parseMemberExpression() {\n      var s0, s1, s2, s3, s4;\n\n      s0 = peg$currPos;\n      s1 = peg$parseCallExpression();\n      if (s1 === peg$FAILED) {\n        s1 = peg$parseSimpleExpression();\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseindexer();\n        if (s2 !== peg$FAILED) {\n          s3 = [];\n          s4 = peg$parseindexer();\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            s4 = peg$parseindexer();\n          }\n          if (s3 !== peg$FAILED) {\n            peg$reportedPos = s0;\n            s1 = peg$c207(s1, s2, s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n\n      return s0;\n    }\n\n    function peg$parseindexer() {\n      var s0, s1, s2, s3, s4, s5;\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 91) {\n        s1 = peg$c101;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c102); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsews();\n        if (s2 === peg$FAILED) {\n          s2 = peg$c3;\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseExpression();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parsews();\n            if (s4 === peg$FAILED) {\n              s4 = peg$c3;\n            }\n            if (s4 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 93) {\n                s5 = peg$c16;\n                peg$currPos++;\n              } else {\n                s5 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c17); }\n              }\n              if (s5 !== peg$FAILED) {\n                peg$reportedPos = s0;\n                s1 = peg$c208(s3);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c0;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 46) {\n          s1 = peg$c67;\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c68); }\n        }\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parseSimpleExpression();\n          if (s2 !== peg$FAILED) {\n            peg$reportedPos = s0;\n            s1 = peg$c209(s2);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parseObjectExpression() {\n      var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9;\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 123) {\n        s1 = peg$c210;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c211); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsews();\n        if (s2 === peg$FAILED) {\n          s2 = peg$c3;\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parsefield();\n          if (s3 === peg$FAILED) {\n            s3 = peg$c3;\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = [];\n            s5 = peg$currPos;\n            s6 = peg$parsews();\n            if (s6 === peg$FAILED) {\n              s6 = peg$c3;\n            }\n            if (s6 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 44) {\n                s7 = peg$c120;\n                peg$currPos++;\n              } else {\n                s7 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c121); }\n              }\n              if (s7 === peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 59) {\n                  s7 = peg$c21;\n                  peg$currPos++;\n                } else {\n                  s7 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c22); }\n                }\n              }\n              if (s7 !== peg$FAILED) {\n                s8 = peg$parsews();\n                if (s8 === peg$FAILED) {\n                  s8 = peg$c3;\n                }\n                if (s8 !== peg$FAILED) {\n                  s9 = peg$parsefield();\n                  if (s9 !== peg$FAILED) {\n                    s6 = [s6, s7, s8, s9];\n                    s5 = s6;\n                  } else {\n                    peg$currPos = s5;\n                    s5 = peg$c0;\n                  }\n                } else {\n                  peg$currPos = s5;\n                  s5 = peg$c0;\n                }\n              } else {\n                peg$currPos = s5;\n                s5 = peg$c0;\n              }\n            } else {\n              peg$currPos = s5;\n              s5 = peg$c0;\n            }\n            while (s5 !== peg$FAILED) {\n              s4.push(s5);\n              s5 = peg$currPos;\n              s6 = peg$parsews();\n              if (s6 === peg$FAILED) {\n                s6 = peg$c3;\n              }\n              if (s6 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 44) {\n                  s7 = peg$c120;\n                  peg$currPos++;\n                } else {\n                  s7 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c121); }\n                }\n                if (s7 === peg$FAILED) {\n                  if (input.charCodeAt(peg$currPos) === 59) {\n                    s7 = peg$c21;\n                    peg$currPos++;\n                  } else {\n                    s7 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c22); }\n                  }\n                }\n                if (s7 !== peg$FAILED) {\n                  s8 = peg$parsews();\n                  if (s8 === peg$FAILED) {\n                    s8 = peg$c3;\n                  }\n                  if (s8 !== peg$FAILED) {\n                    s9 = peg$parsefield();\n                    if (s9 !== peg$FAILED) {\n                      s6 = [s6, s7, s8, s9];\n                      s5 = s6;\n                    } else {\n                      peg$currPos = s5;\n                      s5 = peg$c0;\n                    }\n                  } else {\n                    peg$currPos = s5;\n                    s5 = peg$c0;\n                  }\n                } else {\n                  peg$currPos = s5;\n                  s5 = peg$c0;\n                }\n              } else {\n                peg$currPos = s5;\n                s5 = peg$c0;\n              }\n            }\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parsews();\n              if (s5 === peg$FAILED) {\n                s5 = peg$c3;\n              }\n              if (s5 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 125) {\n                  s6 = peg$c212;\n                  peg$currPos++;\n                } else {\n                  s6 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c213); }\n                }\n                if (s6 !== peg$FAILED) {\n                  peg$reportedPos = s0;\n                  s1 = peg$c214(s3, s4);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$c0;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c0;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n\n      return s0;\n    }\n\n    function peg$parsefield() {\n      var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10;\n\n      s0 = peg$currPos;\n      s1 = peg$parseLiteral();\n      if (s1 === peg$FAILED) {\n        s1 = peg$parseIdentifier();\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsews();\n        if (s2 === peg$FAILED) {\n          s2 = peg$c3;\n        }\n        if (s2 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 61) {\n            s3 = peg$c104;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c105); }\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parsews();\n            if (s4 === peg$FAILED) {\n              s4 = peg$c3;\n            }\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parseBinSimpleExpression();\n              if (s5 !== peg$FAILED) {\n                peg$reportedPos = s0;\n                s1 = peg$c215(s1, s5);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c0;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parseBinSimpleExpression();\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parsews();\n          if (s2 === peg$FAILED) {\n            s2 = peg$c3;\n          }\n          if (s2 !== peg$FAILED) {\n            peg$reportedPos = s0;\n            s1 = peg$c216(s1);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          s1 = peg$parsews();\n          if (s1 === peg$FAILED) {\n            s1 = peg$c3;\n          }\n          if (s1 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 91) {\n              s2 = peg$c101;\n              peg$currPos++;\n            } else {\n              s2 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c102); }\n            }\n            if (s2 !== peg$FAILED) {\n              s3 = peg$parsews();\n              if (s3 === peg$FAILED) {\n                s3 = peg$c3;\n              }\n              if (s3 !== peg$FAILED) {\n                s4 = peg$parseExpression();\n                if (s4 !== peg$FAILED) {\n                  s5 = peg$parsews();\n                  if (s5 === peg$FAILED) {\n                    s5 = peg$c3;\n                  }\n                  if (s5 !== peg$FAILED) {\n                    if (input.charCodeAt(peg$currPos) === 93) {\n                      s6 = peg$c16;\n                      peg$currPos++;\n                    } else {\n                      s6 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c17); }\n                    }\n                    if (s6 !== peg$FAILED) {\n                      s7 = peg$parsews();\n                      if (s7 === peg$FAILED) {\n                        s7 = peg$c3;\n                      }\n                      if (s7 !== peg$FAILED) {\n                        if (input.charCodeAt(peg$currPos) === 61) {\n                          s8 = peg$c104;\n                          peg$currPos++;\n                        } else {\n                          s8 = peg$FAILED;\n                          if (peg$silentFails === 0) { peg$fail(peg$c105); }\n                        }\n                        if (s8 !== peg$FAILED) {\n                          s9 = peg$parsews();\n                          if (s9 === peg$FAILED) {\n                            s9 = peg$c3;\n                          }\n                          if (s9 !== peg$FAILED) {\n                            s10 = peg$parseBinSimpleExpression();\n                            if (s10 !== peg$FAILED) {\n                              peg$reportedPos = s0;\n                              s1 = peg$c217(s4, s10);\n                              s0 = s1;\n                            } else {\n                              peg$currPos = s0;\n                              s0 = peg$c0;\n                            }\n                          } else {\n                            peg$currPos = s0;\n                            s0 = peg$c0;\n                          }\n                        } else {\n                          peg$currPos = s0;\n                          s0 = peg$c0;\n                        }\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$c0;\n                      }\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$c0;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$c0;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$c0;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c0;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parseFunctionDeclaration() {\n      var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n\n      s0 = peg$currPos;\n      s1 = peg$parsefunction();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsews();\n        if (s2 === peg$FAILED) {\n          s2 = peg$c3;\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parsefuncname();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parsews();\n            if (s4 === peg$FAILED) {\n              s4 = peg$c3;\n            }\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parsefuncbody();\n              if (s5 !== peg$FAILED) {\n                s6 = peg$parsews();\n                if (s6 !== peg$FAILED) {\n                  if (input.substr(peg$currPos, 3) === peg$c36) {\n                    s7 = peg$c36;\n                    peg$currPos += 3;\n                  } else {\n                    s7 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c37); }\n                  }\n                  if (s7 === peg$FAILED) {\n                    s7 = [];\n                  }\n                  if (s7 !== peg$FAILED) {\n                    peg$reportedPos = peg$currPos;\n                    s8 = peg$c218(s1, s3, s5, s7);\n                    if (s8) {\n                      s8 = peg$c2;\n                    } else {\n                      s8 = peg$c0;\n                    }\n                    if (s8 !== peg$FAILED) {\n                      peg$reportedPos = s0;\n                      s1 = peg$c219(s1, s3, s5, s7);\n                      s0 = s1;\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$c0;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$c0;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$c0;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c0;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n\n      return s0;\n    }\n\n    function peg$parseLocalFunction() {\n      var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10;\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 5) === peg$c40) {\n        s1 = peg$c40;\n        peg$currPos += 5;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c41); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsews();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parsefunction();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parsews();\n            if (s4 === peg$FAILED) {\n              s4 = peg$c3;\n            }\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parsefuncname();\n              if (s5 !== peg$FAILED) {\n                s6 = peg$parsews();\n                if (s6 === peg$FAILED) {\n                  s6 = peg$c3;\n                }\n                if (s6 !== peg$FAILED) {\n                  s7 = peg$parsefuncbody();\n                  if (s7 !== peg$FAILED) {\n                    s8 = peg$parsews();\n                    if (s8 === peg$FAILED) {\n                      s8 = peg$c3;\n                    }\n                    if (s8 !== peg$FAILED) {\n                      if (input.substr(peg$currPos, 3) === peg$c36) {\n                        s9 = peg$c36;\n                        peg$currPos += 3;\n                      } else {\n                        s9 = peg$FAILED;\n                        if (peg$silentFails === 0) { peg$fail(peg$c37); }\n                      }\n                      if (s9 === peg$FAILED) {\n                        s9 = [];\n                      }\n                      if (s9 !== peg$FAILED) {\n                        peg$reportedPos = peg$currPos;\n                        s10 = peg$c218(s3, s5, s7, s9);\n                        if (s10) {\n                          s10 = peg$c2;\n                        } else {\n                          s10 = peg$c0;\n                        }\n                        if (s10 !== peg$FAILED) {\n                          peg$reportedPos = s0;\n                          s1 = peg$c220(s3, s5, s7, s9);\n                          s0 = s1;\n                        } else {\n                          peg$currPos = s0;\n                          s0 = peg$c0;\n                        }\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$c0;\n                      }\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$c0;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$c0;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$c0;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c0;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n\n      return s0;\n    }\n\n    function peg$parseFunctionExpression() {\n      var s0, s1;\n\n      s0 = peg$currPos;\n      s1 = peg$parsefuncdef();\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c221(s1);\n      }\n      s0 = s1;\n\n      return s0;\n    }\n\n    function peg$parsefuncdef() {\n      var s0, s1, s2, s3, s4, s5, s6;\n\n      s0 = peg$currPos;\n      s1 = peg$parsefunction();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsews();\n        if (s2 === peg$FAILED) {\n          s2 = peg$c3;\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parsefuncbody();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parsews();\n            if (s4 !== peg$FAILED) {\n              if (input.substr(peg$currPos, 3) === peg$c36) {\n                s5 = peg$c36;\n                peg$currPos += 3;\n              } else {\n                s5 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c37); }\n              }\n              if (s5 === peg$FAILED) {\n                s5 = [];\n              }\n              if (s5 !== peg$FAILED) {\n                peg$reportedPos = peg$currPos;\n                s6 = peg$c222(s1, s3, s5);\n                if (s6) {\n                  s6 = peg$c2;\n                } else {\n                  s6 = peg$c0;\n                }\n                if (s6 !== peg$FAILED) {\n                  peg$reportedPos = s0;\n                  s1 = peg$c223(s1, s3, s5);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$c0;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c0;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n\n      return s0;\n    }\n\n    function peg$parsefuncbody() {\n      var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9;\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 40) {\n        s1 = peg$c182;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c183); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsews();\n        if (s2 === peg$FAILED) {\n          s2 = peg$c3;\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseparamlist();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parsews();\n            if (s4 === peg$FAILED) {\n              s4 = peg$c3;\n            }\n            if (s4 !== peg$FAILED) {\n              s5 = peg$currPos;\n              if (input.charCodeAt(peg$currPos) === 44) {\n                s6 = peg$c120;\n                peg$currPos++;\n              } else {\n                s6 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c121); }\n              }\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parsews();\n                if (s7 === peg$FAILED) {\n                  s7 = peg$c3;\n                }\n                if (s7 !== peg$FAILED) {\n                  if (input.substr(peg$currPos, 3) === peg$c193) {\n                    s8 = peg$c193;\n                    peg$currPos += 3;\n                  } else {\n                    s8 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c194); }\n                  }\n                  if (s8 !== peg$FAILED) {\n                    s9 = peg$parsews();\n                    if (s9 === peg$FAILED) {\n                      s9 = peg$c3;\n                    }\n                    if (s9 !== peg$FAILED) {\n                      s6 = [s6, s7, s8, s9];\n                      s5 = s6;\n                    } else {\n                      peg$currPos = s5;\n                      s5 = peg$c0;\n                    }\n                  } else {\n                    peg$currPos = s5;\n                    s5 = peg$c0;\n                  }\n                } else {\n                  peg$currPos = s5;\n                  s5 = peg$c0;\n                }\n              } else {\n                peg$currPos = s5;\n                s5 = peg$c0;\n              }\n              if (s5 === peg$FAILED) {\n                s5 = peg$c3;\n              }\n              if (s5 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 41) {\n                  s6 = peg$c184;\n                  peg$currPos++;\n                } else {\n                  s6 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c185); }\n                }\n                if (s6 !== peg$FAILED) {\n                  s7 = peg$parsews();\n                  if (s7 !== peg$FAILED) {\n                    s8 = peg$parseBlockStatement();\n                    if (s8 !== peg$FAILED) {\n                      peg$reportedPos = s0;\n                      s1 = peg$c224(s3, s5, s8);\n                      s0 = s1;\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$c0;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$c0;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$c0;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c0;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 40) {\n          s1 = peg$c182;\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c183); }\n        }\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parsews();\n          if (s2 === peg$FAILED) {\n            s2 = peg$c3;\n          }\n          if (s2 !== peg$FAILED) {\n            if (input.substr(peg$currPos, 3) === peg$c193) {\n              s3 = peg$c193;\n              peg$currPos += 3;\n            } else {\n              s3 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c194); }\n            }\n            if (s3 !== peg$FAILED) {\n              s4 = peg$parsews();\n              if (s4 === peg$FAILED) {\n                s4 = peg$c3;\n              }\n              if (s4 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 41) {\n                  s5 = peg$c184;\n                  peg$currPos++;\n                } else {\n                  s5 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c185); }\n                }\n                if (s5 !== peg$FAILED) {\n                  s6 = peg$parsews();\n                  if (s6 === peg$FAILED) {\n                    s6 = peg$c3;\n                  }\n                  if (s6 !== peg$FAILED) {\n                    s7 = peg$parseBlockStatement();\n                    if (s7 !== peg$FAILED) {\n                      peg$reportedPos = s0;\n                      s1 = peg$c225(s7);\n                      s0 = s1;\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$c0;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$c0;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$c0;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c0;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parseparamlist() {\n      var s0, s1, s2, s3, s4, s5, s6, s7;\n\n      s0 = peg$currPos;\n      s1 = peg$parseIdentifier();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsews();\n        if (s2 === peg$FAILED) {\n          s2 = peg$c3;\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = [];\n          s4 = peg$currPos;\n          if (input.charCodeAt(peg$currPos) === 44) {\n            s5 = peg$c120;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c121); }\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parsews();\n            if (s6 === peg$FAILED) {\n              s6 = peg$c3;\n            }\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parseIdentifier();\n              if (s7 !== peg$FAILED) {\n                s5 = [s5, s6, s7];\n                s4 = s5;\n              } else {\n                peg$currPos = s4;\n                s4 = peg$c0;\n              }\n            } else {\n              peg$currPos = s4;\n              s4 = peg$c0;\n            }\n          } else {\n            peg$currPos = s4;\n            s4 = peg$c0;\n          }\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            s4 = peg$currPos;\n            if (input.charCodeAt(peg$currPos) === 44) {\n              s5 = peg$c120;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c121); }\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parsews();\n              if (s6 === peg$FAILED) {\n                s6 = peg$c3;\n              }\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parseIdentifier();\n                if (s7 !== peg$FAILED) {\n                  s5 = [s5, s6, s7];\n                  s4 = s5;\n                } else {\n                  peg$currPos = s4;\n                  s4 = peg$c0;\n                }\n              } else {\n                peg$currPos = s4;\n                s4 = peg$c0;\n              }\n            } else {\n              peg$currPos = s4;\n              s4 = peg$c0;\n            }\n          }\n          if (s3 !== peg$FAILED) {\n            peg$reportedPos = s0;\n            s1 = peg$c226(s1, s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parsews();\n        if (s1 === peg$FAILED) {\n          s1 = peg$c3;\n        }\n        if (s1 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c227();\n        }\n        s0 = s1;\n      }\n\n      return s0;\n    }\n\n    function peg$parseUnaryExpression() {\n      var s0, s1, s2, s3;\n\n      s0 = peg$currPos;\n      s1 = peg$parseunop();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsews();\n        if (s2 === peg$FAILED) {\n          s2 = peg$c3;\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseMemberExpression();\n          if (s3 === peg$FAILED) {\n            s3 = peg$parseSimpleExpression();\n            if (s3 === peg$FAILED) {\n              s3 = peg$parseExpression();\n            }\n          }\n          if (s3 !== peg$FAILED) {\n            peg$reportedPos = s0;\n            s1 = peg$c228(s1, s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n\n      return s0;\n    }\n\n    function peg$parseIdentifier() {\n      var s0, s1;\n\n      s0 = peg$currPos;\n      s1 = peg$parseName();\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c229(s1);\n      }\n      s0 = s1;\n\n      return s0;\n    }\n\n    function peg$parseLiteral() {\n      var s0, s1, s2, s3, s4, s5, s6, s7;\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 3) === peg$c42) {\n        s1 = peg$c42;\n        peg$currPos += 3;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c43); }\n      }\n      if (s1 === peg$FAILED) {\n        if (input.substr(peg$currPos, 5) === peg$c46) {\n          s1 = peg$c46;\n          peg$currPos += 5;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c47); }\n        }\n        if (s1 === peg$FAILED) {\n          if (input.substr(peg$currPos, 4) === peg$c44) {\n            s1 = peg$c44;\n            peg$currPos += 4;\n          } else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c45); }\n          }\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c230(s1);\n      }\n      s0 = s1;\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parseNumber();\n        if (s1 !== peg$FAILED) {\n          if (peg$c231.test(input.charAt(peg$currPos))) {\n            s2 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c232); }\n          }\n          if (s2 !== peg$FAILED) {\n            s3 = peg$currPos;\n            s4 = peg$currPos;\n            if (input.charCodeAt(peg$currPos) === 45) {\n              s5 = peg$c150;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c151); }\n            }\n            if (s5 === peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 43) {\n                s5 = peg$c152;\n                peg$currPos++;\n              } else {\n                s5 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c153); }\n              }\n            }\n            if (s5 === peg$FAILED) {\n              s5 = peg$c3;\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = [];\n              if (peg$c65.test(input.charAt(peg$currPos))) {\n                s7 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s7 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c66); }\n              }\n              if (s7 !== peg$FAILED) {\n                while (s7 !== peg$FAILED) {\n                  s6.push(s7);\n                  if (peg$c65.test(input.charAt(peg$currPos))) {\n                    s7 = input.charAt(peg$currPos);\n                    peg$currPos++;\n                  } else {\n                    s7 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c66); }\n                  }\n                }\n              } else {\n                s6 = peg$c0;\n              }\n              if (s6 !== peg$FAILED) {\n                s5 = [s5, s6];\n                s4 = s5;\n              } else {\n                peg$currPos = s4;\n                s4 = peg$c0;\n              }\n            } else {\n              peg$currPos = s4;\n              s4 = peg$c0;\n            }\n            if (s4 !== peg$FAILED) {\n              s4 = input.substring(s3, peg$currPos);\n            }\n            s3 = s4;\n            if (s3 !== peg$FAILED) {\n              peg$reportedPos = s0;\n              s1 = peg$c233(s1, s3);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          if (input.charCodeAt(peg$currPos) === 48) {\n            s1 = peg$c234;\n            peg$currPos++;\n          } else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c235); }\n          }\n          if (s1 !== peg$FAILED) {\n            if (peg$c236.test(input.charAt(peg$currPos))) {\n              s2 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s2 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c237); }\n            }\n            if (s2 !== peg$FAILED) {\n              s3 = peg$currPos;\n              s4 = [];\n              if (peg$c238.test(input.charAt(peg$currPos))) {\n                s5 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s5 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c239); }\n              }\n              if (s5 !== peg$FAILED) {\n                while (s5 !== peg$FAILED) {\n                  s4.push(s5);\n                  if (peg$c238.test(input.charAt(peg$currPos))) {\n                    s5 = input.charAt(peg$currPos);\n                    peg$currPos++;\n                  } else {\n                    s5 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c239); }\n                  }\n                }\n              } else {\n                s4 = peg$c0;\n              }\n              if (s4 !== peg$FAILED) {\n                s4 = input.substring(s3, peg$currPos);\n              }\n              s3 = s4;\n              if (s3 !== peg$FAILED) {\n                peg$reportedPos = s0;\n                s1 = peg$c240(s3);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c0;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n          if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            s1 = peg$parseNumber();\n            if (s1 !== peg$FAILED) {\n              peg$reportedPos = s0;\n              s1 = peg$c241(s1);\n            }\n            s0 = s1;\n            if (s0 === peg$FAILED) {\n              s0 = peg$currPos;\n              s1 = peg$parseString();\n              if (s1 !== peg$FAILED) {\n                peg$reportedPos = s0;\n                s1 = peg$c242(s1);\n              }\n              s0 = s1;\n            }\n          }\n        }\n      }\n\n      return s0;\n    }\n\n\n      function loc() { return {start: { line: line(), column: column() } } }\n      function range() { return [offset(), offset() + text().length]; }\n      function listHelper(a,b,c) { return a == null ? [] : [a].concat(b.map(function(b) { return b[c || 2]; })); }\n      function opt(name, def) { return name in options ? options[name] : def }\n\n      function expandMultiStatements(list) {\n        var out = [];\n        for ( var i = 0; i < list.length; ++i ) {\n            var value = list[i];\n            if (value instanceof Array) out = out.concat(value);\n            else out.push(value);\n        }\n        return out;\n      }\n\n      function wrapNode(obj, hasScope) {\n        hasScope = !!hasScope \n        obj.loc = loc();\n        obj.range = range();\n        obj.hasScope = hasScope;\n        obj.text = text();\n        return obj;\n      }\n\n      function eUntermIfEmpty(what, type, end, start) {\n        if ( what.length == 0 ) return eUnterminated(type, end, start);\n        return true;\n      }\n\n      function eUnterminated(type, end, start) {\n        var xline = start !== undefined ? start.loc.start.line : (line());\n        var xcol = start !== undefined ? start.loc.start.column : (column());\n\n        eMsg(\"`\" + (end || \"end\") + \"` expected (to close \" + type + \" at \" + xline + \":\" + xcol + \") at \" + line() +  \":\" + column() );\n        return true;\n      }\n\n      function eMsg(why) {\n        if ( !opt(\"loose\", false) ) error(why);\n        errors.push({msg: why, loc: loc(), range: range()});\n        return true;\n      }\n\n      var opPrecedence = {\n        \"^\": 10,\n        \"not\": 9,\n        \"*\": 8, \"/\": 8, \"%\": 8, \"//\": 8,\n        \"+\": 7, \"-\": 7,\n        \"..\": 6,\n        \"<\": 5, \">\": 5, \">=\": 5, \"<=\": 5, \"==\": 5, \"~=\": 5,\n        \"and\": 4,\n        \"or\": 3\n      }\n\n      function precedenceClimber(tokens, lhs, min) {\n        while ( true ) { \n            if ( tokens.length == 0 ) return lhs;\n            var op = tokens[0];\n            var prec = opPrecedence[op];\n            if ( prec < min ) return lhs;\n            tokens.shift();\n\n            var rhs = tokens.shift();\n            while ( true ) {\n                var peek = tokens[0];\n                if ( peek == null || opPrecedence[peek] <= prec ) break;\n                rhs = precedenceClimber(tokens, rhs, opPrecedence[peek]);\n            }\n\n            lhs = bhelper.binaryExpression(op, lhs, rhs);\n        }\n\n      }\n\n      var errors;\n\n      function init() {\n        errors = [];\n      }\n\n      var builder = {\n        assignmentExpression: function(op, left, right) { return wrapNode({type: \"AssignmentExpression\", operator: op, left: left, right: right }); },\n        binaryExpression: function(op, left, right) { return wrapNode({type: (op == '||' || op == '&&') ? \"LogicalExpression\" : \"BinaryExpression\", operator: op, left: left, right: right }); },\n        blockStatement: function(body) { return wrapNode({ type: \"BlockStatement\", body: body}); },\n        callExpression: function(callee, args) { return wrapNode({ type: \"CallExpression\", callee: callee, arguments: args}); },\n        emptyStatement: function() { return wrapNode({ type: \"EmptyStatement\" }); },\n        functionDeclaration: function(name, args, body, isGenerator, isExpression) {\n            return wrapNode({type: \"FunctionDeclaration\", id: name, params: args, body: body, generator: isGenerator, expression: isExpression });\n        },\n        memberExpression: function(obj, prop, isComputed) { return wrapNode({ type:\"MemberExpression\", object: obj, property: prop, computed: isComputed }); },\n        variableDeclaration: function(kind, decls) { return { type: \"VariableDeclaration\", declarations: decls, kind: opt(\"forceVar\", true) ? \"var\" : kind } },\n        functionExpression: function(name, args, body) { return { type: \"FunctionExpression\", name: name, body: body, params: args } },\n        returnStatement: function(arg) { return wrapNode({type: \"ReturnStatement\", argument: arg}); },\n        generatedReturnStatement: function(arg) { return wrapNode({type: \"ReturnStatement\", argument: arg, userCode: false}); }\n      };\n\n      var i = function(n) { return { type: \"Identifier\", name: n}; }\n      var id = i;\n      var tmpVarCtr = 0;\n\n      function clone(obj) {\n        return JSON.parse(JSON.stringify(obj));\n      }\n\n\n\n      function finalize(ast) {\n        if ( opt(\"loose\", false) ) ast.errors = errors;\n        \n        if ( opt(\"useStrict\", false) ) {\n            ast.body.unshift({\n                type: \"ExpressionStatement\",\n                expression: { type: \"Literal\", value: \"use strict\" }\n            });\n        }\n\n        if ( opt(\"noSharedObjects\", true) ) return clone(ast);\n        return ast;\n      }\n\n      var bhelper = {\n        blockStatement: function(body) {\n            return builder.blockStatement(expandMultiStatements(body));\n        },\n        tempName: function() {\n            return i(\"__lua$tmpvar$\" + (++tmpVarCtr));\n        },\n        tempVar: function(exp) {\n            return { type: \"VariableDeclarator\", id: bhelper.tempName(), init: exp };\n        },\n        assign: function(target, exp) {\n            var out = builder.assignmentExpression(\"=\", target, exp);\n            if ( target.type == \"MemberExpression\" && opt(\"luaOperators\", false) ) {\n                var prop = target.property;\n                if ( !target.computed ) prop = {\"type\": \"Literal\", \"value\": prop.name, loc: prop.loc, range: prop.range };\n                \n                var helper;\n                var nue = bhelper.translateExpressionIfNeeded(target.object);\n\n                if ( target.object.type == \"Identifier\" ) helper = target.object.name;\n\n                if ( helper === undefined ) {\n                    nue = bhelper.luaOperator(\"indexAssign\", nue, prop, exp);\n                } else {\n                    nue = bhelper.luaOperator(\"indexAssign\", nue, prop, exp, {type:\"Literal\", value: helper});\n                }\n\n                nue = {type: \"ConditionalExpression\",test: nue, consequent: exp, alternate: out};\n\n                out = nue;\n            }\n                \n            return {\n                type: \"ExpressionStatement\",\n                expression: out\n            };\n        },\n        encloseDecls: function(body /*, decls...*/) {\n            var decls = Array.prototype.slice.call(arguments, 1);\n            return bhelper.encloseDeclsEx.apply(this, [body, opt(\"encloseWithFunctions\", true) ].concat(decls));\n        },\n        encloseDeclsEx: function(body, enclose /*, decls...*/) {\n            var decls = Array.prototype.slice.call(arguments, 2);\n            var vals = [];\n            var names = [];\n            for ( var k in decls ) {\n                var v = decls[k];\n                vals.push(v.init);\n                names.push(v.id);\n            }\n\n            if ( enclose ) {\n                return {\n                    expression: builder.callExpression(\n                        builder.functionExpression(null, names, bhelper.blockStatement(body)),\n                        vals\n                    ),\n                    type: \"ExpressionStatement\"\n                }\n            } else {\n                if ( decls.length < 1 ) return body;\n                return bhelper.blockStatement([ builder.variableDeclaration(\"let\", decls) ].concat(body));\n            }\n        },\n        encloseDeclsUnpack: function(body, names, explist, force) {\n\n            if ( force || opt(\"encloseWithFunctions\", true) ) {\n                return {\n                    expression: builder.callExpression(\n                        builder.memberExpression(\n                            builder.functionExpression(null, names, builder.blockStatement(body)),\n                            i(\"apply\")\n                        ),\n                        [{type: \"Literal\", value: null}, bhelper.luaOperatorA(\"expandReturnValues\", explist)]\n                    ),\n                    type: \"ExpressionStatement\"\n                }\n            } else {\n                var decls = [];\n                for ( var idx in names ) {\n                    decls.push({\n                        type: \"VariableDeclarator\",\n                        id: names[idx],\n                        init: idx.id\n                    });\n                }\n                return bhelper.blockStatement([ \n                    builder.variableDeclaration(\"let\", decls),\n                    bhelper.bulkAssign(names, explist)\n                    ].concat(body));\n            }\n        },\n        bulkAssign: function(names, explist) {\n            var temps = [];\n            var body = [];\n            for ( var i = 0; i < names.length; ++i ) {\n                temps[i] = bhelper.tempName();\n            }\n\n            // If we are refrencing a previously set value in a bulk assign as a property\n            // we want to use the old value to look up the index, so we will pull that from\n            // the temp var passed in\n            var extra = 0;\n            for ( var i = 0; i < names.length; ++i ) {\n                var exp = names[i];\n                if ( exp.type == \"MemberExpression\" && exp.property.type == \"Identifier\" ) {\n                    for ( var j = 0; j < i; ++j) {\n                        if ( names[j].name == exp.property.name ) {\n                            var holding = bhelper.tempName();\n                            temps.unshift(holding);\n                            explist.unshift(exp.property);\n                            exp.property = holding;\n                            ++extra;\n                        }\n                    }\n                }\n            }\n\n            for ( var i = 0; i < names.length; ++i ) {\n                body[i] = bhelper.assign(names[i], temps[i+extra]);\n            }\n\n            if ( names.length > 1 ) {\n                return bhelper.encloseDeclsUnpack(body, temps, explist, true);\n            } else {\n                var value = explist[0];\n                if ( value.type == \"CallExpression\" ) value = bhelper.luaOperator(\"oneValue\", value);\n                return bhelper.assign(names[0], value);\n            }\n            \n        },\n        luaOperator: function(op /*, args */) {\n            if ( op == \"oneValue\" && opt(\"noMutliReturnSquish\", false) ) return arguments[1];\n            var o = builder.callExpression(\n                builder.memberExpression(i(\"__lua\"), i(op)), \n                Array.prototype.slice.call(arguments, 1)\n            );\n            o.internal = true;\n            return o;\n        },\n        luaOperatorA: function(op, args) {\n            var o = builder.callExpression(\n                builder.memberExpression(i(\"__lua\"), i(op)), \n                args\n            );\n            o.internal = true;\n            return o;\n        },\n        binaryExpression: function(op, a, b) {\n            if ( opt(\"luaOperators\", false) && op != \"and\" && op != \"or\" ) {\n                var map = {\"+\": \"add\", \"-\": \"sub\", \"*\": \"mul\", \"/\": \"div\", \"//\": \"intdiv\", \"^\": \"pow\", \"%\":\"mod\",\n                    \"..\": \"concat\", \"==\": \"eq\", \"<\": \"lt\", \"<=\": \"lte\", \">\": \"gt\", \">=\": \"gte\", \"~=\": \"ne\",\n                    \"and\": \"and\", \"or\": \"or\"\n                };\n                \n                return bhelper.luaOperator(map[op], a, b);\n            } else {\n\n                if ( op == \"~=\" ) xop = \"!=\";\n                else if ( op == \"..\" ) op = \"+\";\n                else if ( op == \"or\" ) op = \"||\";\n                else if ( op == \"and\" ) op = \"&&\";\n                else if ( op == \"//\" ) op = \"/\";\n\n                a = bhelper.luaOperator(\"oneValue\", a);\n                b = bhelper.luaOperator(\"oneValue\", b);\n\n                return builder.binaryExpression(op, a, b);\n            }\n        },\n        callExpression: function(callee, args) {\n            if ( opt(\"luaCalls\", false) ) {\n                var that = {\"type\": \"ThisExpression\" };\n                if ( callee.type == \"MemberExpression\" ) that = {\"type\":\"Literal\", \"value\": null};\n                var flags = 0;\n                if ( callee.selfSuggar ) {\n                    flags = flags | 1;\n                }\n\n                if ( opt('decorateLuaObjects', false) ) {\n                    flags = flags | 2;\n                }\n\n                var flagso = {\"type\": \"Literal\", \"value\": flags};\n                var helper = null;\n                \n                if ( callee.type == \"Identifier\" ) helper = callee.name;\n                else if ( callee.type == \"MemberExpression\" && !callee.computed ) helper = callee.property.name;\n\n                helper = {\"type\": \"Literal\", \"value\": helper};\n\n                if ( callee.selfSuggar ) {\n                    if ( callee.object.type == \"Identifier\" ) {\n                        //Dont bother making a function if we are just an identifer.\n                        var rcallee = bhelper.translateExpressionIfNeeded(callee)\n                        return bhelper.luaOperator.apply(bhelper, [\"call\", flagso , rcallee, callee.object, helper].concat(args));\n\n                    } else {\n                        var tmp = bhelper.tempVar(bhelper.translateExpressionIfNeeded(callee.object));\n                        \n                        var rexpr = builder.memberExpression(tmp.id, callee.property, callee.computed);\n                        var rcallee = bhelper.translateExpressionIfNeeded(rexpr);\n                        var expr = bhelper.luaOperator.apply(bhelper, [\"call\", flagso, rcallee, tmp.id, helper].concat(args));\n                        return result = bhelper.encloseDeclsEx([\n                            builder.returnStatement(\n                                expr\n                            )\n                        ], true, tmp).expression;\n\n                    }\n                } else {\n                    var rcallee = bhelper.translateExpressionIfNeeded(callee)\n                    if ( rcallee.type == \"Identifier\" && rcallee.name == \"assert\" ) {\n                        args.push({type: \"Literal\", value: args[0].text || \"?\"})\n                    }\n                    return bhelper.luaOperator.apply(bhelper, [\"call\", flagso , rcallee, that, helper].concat(args));\n                }\n            } else {\n                return builder.callExpression(callee, args);\n            }\n        },\n        memberExpression: function(obj, prop, isComputed) {\n            if ( opt(\"luaOperators\", false) && !isComputed ) {\n                var helper;\n                if ( obj.type == \"Identifier\") helper = obj.name;\n\n                if ( helper == undefined ) {\n                    return bhelper.luaOperator(\"index\", obj, prop);\n                } else {\n                    return bhelper.luaOperator(\"index\", obj, prop, {type:\"Literal\", value: helper});\n                }\n            }\n            return builder.memberExpression(obj, prop, isComputed);\n        },\n        translateExpressionIfNeeded: function(exp) {\n            if ( !opt(\"luaOperators\", false) ) return exp;\n            if ( exp.type == \"MemberExpression\" ) {\n                var prop = exp.property;\n                if ( !exp.computed ) prop = {\"type\": \"Literal\", value: prop.name };\n                var nu = bhelper.memberExpression(bhelper.translateExpressionIfNeeded(exp.object), prop, false);\n                nu.origional = exp;\n                nu.range = exp.range;\n                nu.loc = exp.loc;\n                return nu;\n            }\n\n            return exp;\n        },\n        injectRest: function(block, count) {\n            block.unshift(builder.variableDeclaration(\"let\", [\n                    {\n                        type: \"VariableDeclarator\", \n                        id: {type: \"Identifier\", name:\"__lua$rest\"},\n                        userCode: false,\n                        init: bhelper.luaOperator(\"rest\", \n                            {type: \"Identifier\", name:\"arguments\"},\n                            {type: \"Literal\", value:count}\n                        )\n                    }\n                 ]));\n        },\n        valueProvdier: function(statement) {\n            return builder.functionExpression(null, [], bhelper.blockStatement([\n                builder.generatedReturnStatement(statement)\n            ]));\n        }\n      }\n\n\n\n    peg$result = peg$startRuleFunction();\n\n    if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n      return peg$result;\n    } else {\n      if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n        peg$fail({ type: \"end\", description: \"end of input\" });\n      }\n\n      throw peg$buildException(null, peg$maxFailExpected, peg$maxFailPos);\n    }\n  }\n\n  return {\n    SyntaxError: SyntaxError,\n    parse:       parse\n  };\n})();\n\n},{}],3:[function(require,module,exports){\nvar env = {};\nvar __lua = (function() {\n\n\t// Yoinked from underscore.\n\tvar isJSArray = Array.isArray || function(obj) { return toString.call(obj) === '[object Array]'; };\n\n\tfunction type(what) {\n\t\tif ( what === null || what === undefined ) return \"nil\";\n\t\tif ( isNaN(what) ) return \"number\";\n\t\tvar t = typeof what;\n\t\tif ( t == \"object\" ) return \"table\";\n\t\treturn t;\n\t}\n\n\tfunction numberForArith(n) {\n\t\tif ( type(n) == \"number\" ) return n;\n\t\telse if ( typeof n == \"string\" ) {\n\t\t\tn = parseInt(n);\n\t\t\tif ( !isNaN(n) ) return n;\n\n\t\t}\n\n\t\tthrow \"attempt to perform arithmetic on a \" +  type(n) + \" value: \" + n;\n\t}\n\n\tfunction makeString(a) { \n\t\ta = oneValue(a);\n\n\t\tvar mtf = lookupMetaTable(a, \"__tostring\");\n\t\tif ( mtf !== null ) return mtf(a);\n\n\t\tif ( a === undefined || a === null ) return \"nil\";\n\t\tif ( a instanceof LuaTable ) {\n\t\t\treturn \"table: 0x\" + a.id;\n\t\t} else if ( typeof a == \"number\" ) {\n\t\t\tif ( ~~a == a ) return a.toString();\n\t\t\tvar rep = a.toPrecision();\n\t\t\tif ( rep.length > 14 ) return a.toPrecision(14);\n\t\t\treturn rep;\n\t\t}\n\t\treturn \"\" + a;\n\t}\n\n\tfunction add(a,b) {\n\t\ta = oneValue(a); b = oneValue(b);\n\n\t\tvar mtf = lookupMetaTableBin(a, b, \"__add\");\n\t\tif ( mtf !== null ) return mtf(a,b);\n\n\t\treturn numberForArith(a) + numberForArith(b); \n\t}\n\n\tfunction sub(a,b) { \n\t\ta = oneValue(a); b = oneValue(b);\n\n\t\tvar mtf = lookupMetaTableBin(a, b, \"__sub\");\n\t\tif ( mtf !== null ) return mtf(a,b);\n\n\t\treturn numberForArith(a) - numberForArith(b);\n\t}\n\n\tfunction mul(a,b) { \n\t\ta = oneValue(a); b = oneValue(b);\n\n\t\tvar mtf = lookupMetaTableBin(a, b, \"__mul\");\n\t\tif ( mtf !== null ) return mtf(a,b);\n\n\t\treturn numberForArith(a) * numberForArith(b);\n\t}\n\n\tfunction div(a,b) { \n\t\ta = oneValue(a); b = oneValue(b);\n\n\t\tvar mtf = lookupMetaTableBin(a, b, \"__div\");\n\t\tif ( mtf !== null ) return mtf(a,b);\n\n\t\treturn numberForArith(a) / numberForArith(b);\n\t}\n\n\tfunction intdiv(a,b) { \n\t\ta = oneValue(a); b = oneValue(b);\n\n\t\tvar mtf = lookupMetaTableBin(a, b, \"__idiv\");\n\t\tif ( mtf !== null ) return mtf(a,b);\n\n\t\treturn ~~(numberForArith(a) / numberForArith(b));\n\t}\n\n\tfunction mod(a,b) { \n\t\ta = oneValue(a); b = oneValue(b);\n\n\t\tvar mtf = lookupMetaTableBin(a, b, \"__mod\");\n\t\tif ( mtf !== null ) return mtf(a,b);\n\n\t\treturn numberForArith(a) % numberForArith(b);\n\t}\n\n\tfunction pow(a,b) { \n\t\ta = oneValue(a); b = oneValue(b);\n\n\t\tvar mtf = lookupMetaTableBin(a, b, \"__pow\");\n\t\tif ( mtf !== null ) return mtf(a,b);\n\n\t\treturn Math.pow(numberForArith(a),numberForArith(b)); \n\t}\n\n\tfunction concat(a,b) { \n\t\ta = oneValue(a); b = oneValue(b);\n\n\t\tvar mtf = lookupMetaTableBin(a, b, \"__concat\");\n\t\tif ( mtf !== null ) return mtf(a,b);\n\t\tif ( a === null || a === undefined || b === null || b === undefined ) throw \"attempt to concatenate a nil value\";\n\n\t\treturn  makeString(a) + makeString(b); \n\t}\n\n\tfunction lte(a,b) {\n\t\ta = oneValue(a); b = oneValue(b);\n\n\t\tvar mtf = lookupMetaTableBin(a, b, \"__le\");\n\t\tif ( mtf !== null ) return mtf(a,b);\n\n\t\treturn a <= b; \n\t}\n\n\tfunction lt(a,b) {\n\t\ta = oneValue(a); b = oneValue(b);\n\n\t\tvar mtf = lookupMetaTableBin(a, b, \"__lt\");\n\t\tif ( mtf !== null ) return mtf(a,b);\n\n\t\treturn a < b; \n\t}\n\n\tfunction gte(a,b) { return lte(b,a); }\n\tfunction gt(a,b) { return lt(b,a); }\n\n\n\tfunction forcomp(d,a,b) { \n\t\tif ( d > 0 ) return a <= b; \n\t\telse if ( d < 0 ) return b <= a;\n\t\telse return false;\n\t}\n\n\t\n\tfunction eq(a,b) { \n\t\ta = oneValue(a); b = oneValue(b);\n\n\t\tvar mtf = lookupMetaTableBin(a, b, \"__eq\");\n\t\tif ( mtf !== null ) return mtf(a,b);\n\n\n\t\tif ( a === null || a === undefined ) {\n\t\t\treturn ( b === null || b === undefined );\n\t\t}\n\t\tif ( a === b ) return true;\n\t\treturn false;\n\t}\n\t\n\tfunction ne(a,b) { return !eq(a,b); }\n\n\tfunction count(a) { \n\t\tif ( a instanceof LuaTable ) {\n\t\t\tvar cnt = 0;\n\t\t\twhile ( a.numeric[cnt] !== undefined ) ++cnt;\n\t\t\treturn cnt;\n\t\t}\n\t\treturn a.length;\n\t}\n\n\tfunction and(a,b) { return a && b; }\n\tfunction or(a,b) { return a || b; }\n\n\tfunction call(flags, what, that, helper /*, args... */ ) {\n\t\tvar injectSelf = !!(flags & 1); \n\t\tvar detectLua = !!(flags & 2); \n\n\t\tif ( what === null || what === undefined ) {\n\t\t\tif ( helper === undefined ) throw \"attempt to call a \" + type(what) + \" value\";\n\t\t\telse throw \"attempt to call '\" + helper + \"' (a \" + type(what) + \" value)\"; \n\t\t}\n\n\t\tvar args = expand(Array.prototype.slice.call(arguments, 4), true);\n\n\t\tvar doInject = true;\n\n\t\tif ( detectLua ) {\n\t\t\tdoInject = what.__luaType == \"function\";\n\t\t}\n\n\t\tif ( injectSelf && doInject ) {\n\t\t\targs.unshift(that);\n\t\t}\n\n\t\tif ( detectLua && what.__luaType != \"function\" ) {\n\t\t\tvar args2 = [];\n\t\t\tfor ( var i = 0; i < args.length; ++i ) {\n\t\t\t\tvar a = args[i];\n\t\t\t\tif ( a instanceof LuaTable ) {\n\t\t\t\t\tif ( a.numeric.length == 0 ) args2[i] = a.hash;\n\t\t\t\t\telse if ( Object.keys(a.hash).length == 0 ) args2[i] = a.numeric;\n\t\t\t\t\telse args2[i] = a;\n\t\t\t\t} else {\n\t\t\t\t\targs2[i] = a;\n\t\t\t\t}\n\t\t\t}\n\t\t\targs = args2;\n\t\t}\n\n\t\treturn what.apply(that, args);\n\t}\n\n\tfunction rest(args, cnt) {\n\t\tvar out = Object.create(LuaReturnValues.prototype, {});\n\t\tout.values = Array.prototype.slice.call(args, cnt);\n\t\treturn out;\n\t}\n\n\tvar id = 0;\n\tfunction LuaTable() {\n\t\tthis.id = ++id;\n\t\tthis.numeric = [];\n\t\tthis.hash = {};\n\t}\n\n\tObject.defineProperty(LuaTable.prototype, \"__luaType\",  {value: \"table\",  enumerable: false});\n\tObject.defineProperty(LuaTable.prototype, \"toString\",  {value: function() {\n\t\treturn makeString(this);\n\t},  enumerable: false});\n\n\tfunction makeTable(t, allowExpand /*, numeric ... */) {\n\t\tvar out = new LuaTable();\n\n\t\tout.numeric = expand(Array.prototype.slice.call(arguments, 2), allowExpand);\n\t\tif ( !t ) return out;\n\n\t\tif ( isJSArray(t) ) {\n\t\t\tfor ( var i = 0; i < t.length; ++i ) {\n\t\t\t\tvar pair = t[i];\n\t\t\t\tvar key = pair[0];\n\t\t\t\tvar val = pair[1];\n\t\t\t\tif ( typeof key == \"number\" ) {\n\t\t\t\t\tout.numeric[key - 1] = val;\n\t\t\t\t} else {\n\t\t\t\t\tout.hash[key] = val;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tfor ( var k in t ) {\n\t\t\t\tout.hash[k] = t[k];\n\t\t\t}\n\t\t}\n\n\t\treturn out;\n\t}\n\n\tfunction makeFunction(f) {\n\t\tf.__luaType = \"function\";\n\t\treturn f;\n\t}\n\n\tfunction LuaReturnValues(v) {\n\t\tthis.values = v;\n\t}\n\n\tObject.defineProperty(LuaReturnValues.prototype, \"__luaType\",  {value: \"returnValues\",  enumerable: false});\n\n\tfunction lookupMetaTable(table, entry) {\n\t\tif ( table instanceof LuaTable ) {\n\t\t\tif ( table.__metatable === undefined ) return null;\n\n\t\t\tvar idx = table.__metatable.hash[entry];\n\t\t\tif ( idx === null || idx === undefined ) return null;\n\n\t\t\treturn idx;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tfunction lookupMetaTableBin(a, b, entry) {\n\t\tvar mt = lookupMetaTable(a, entry);\n\t\tif ( mt == null ) return lookupMetaTable(b, entry);\n\t\treturn mt;\n\t}\n\n\tfunction index(table, prop, helper) {\n\t\tif ( table === null || table === undefined || typeof table == \"number\" ) {\n\t\t\tif ( helper == undefined ) {\n\t\t\t\tthrow \"attempt to index a \" + type(table) + \" value\";\n\t\t\t} else {\n\t\t\t\tthrow \"attempt to index '\" + helper + \"' (a \" + type(table) + \" value)\";\n\t\t\t}\n\t\t} else if ( table instanceof LuaTable ) {\n\t\t\tvar val;\n\t\t\tif ( typeof prop == \"number\") val = table.numeric[prop-1];\n\t\t\telse val = table.hash[prop];\n\n\t\t\tif ( val !== null & val !== undefined ) return val;\n\n\t\t\tvar idxfx = lookupMetaTable(table, \"__index\");\n\t\t\tif ( idxfx == null ) return null;\n\n\t\t\tif ( typeof idxfx == \"function\" ) return oneValue(idxfx(table, prop));\n\t\t\treturn index(idxfx, prop);\n\t\t} else if ( isJSArray(table) ) {\n\t\t\treturn table[prop - 1];\n\t\t} else if ( typeof table == \"string\" ) {\n\t\t\tvar sidx = tonumber(prop);\n\t\t\tif ( sidx < 0 ) sidx += (table.length + 1);\n\t\t\treturn table[sidx-1];\n\t\t} else {\n\t\t\treturn table[prop];\n\t\t}\n\t}\n\n\tfunction indexAssign(table, prop, value, helper) {\n\n\t\tif ( table === null || table === undefined || typeof table == \"number\" ) {\n\t\t\tif ( helper == undefined ) {\n\t\t\t\tthrow \"attempt to index a \" + type(table) + \" value\";\n\t\t\t} else {\n\t\t\t\tthrow \"attempt to index '\" + helper + \"' (a \" + type(table) + \" value)\";\n\t\t\t}\n\t\t}\n\n\t\tif ( table instanceof LuaTable ) {\n\t\t\tvar val;\n\n\t\t\tif ( prop === undefined || prop === null ) throw \"table index is nil\";\n\n\t\t\tif ( typeof prop == \"number\" ) val = table.numeric[prop-1];\n\t\t\telse val = table.hash[prop];\n\n\t\t\tif ( val !== null & val !== undefined ) {\n\t\t\t\tif ( typeof prop == \"number\") table.numeric[prop-1] = value;\n\t\t\t\telse table.hash[prop] = value;\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tif ( table.__metatable === undefined ) {\n\t\t\t\tif ( typeof prop == \"number\") table.numeric[prop-1] = value;\n\t\t\t\telse table.hash[prop] = value;\n\t\t\t\treturn true;\n\t\t\t}\n\n\n\n\t\t\tvar idx = table.__metatable.__newindex;\n\t\t\tif ( idx === null || idx === undefined ) {\n\t\t\t\tif ( typeof pop == \"number\") table.numeric[prop] = value;\n\t\t\t\telse table.hash[prop] = value;\n\t\t\t\treturn true;\t\n\t\t\t}\n\n\t\t\tif ( typeof idx == \"function\" ) idx(table, prop, value);\n\t\t\telse indexAssign(idx, prop, value);\n\n\t\t\treturn true;\n\n\n\t\t} else if ( typeof table == \"string\" ) { \n\t\t\tthrow \"attempt to index string value\";\n\t\t} else if ( isJSArray(table) ) {\n\t\t\ttable[prop-1] = value;\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tfunction oneValue(v) {\n\t\tif ( v instanceof LuaReturnValues ) return v.values[0];\n\t\treturn v;\n\t}\n\n\tfunction makeMultiReturn() {\n\t\treturn new LuaReturnValues(expand(arguments, true));\n\t}\n\n\tfunction expand(what, allowExpand) {\n\t\tif ( allowExpand === undefined ) allowExpand = false;\n\n\t\tvar out = [];\n\t\tfor ( var idx in what ) {\n\t\t\tvar v = what[idx];\n\t\t\tif ( v instanceof LuaReturnValues ) {\n\t\t\t\tfor ( var i in v.values ) {\n\t\t\t\t\tout.push(v.values[i]);\n\t\t\t\t\tif ( idx < what.length - 1 || !allowExpand) break;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tout.push(v);\n\t\t\t}\n\t\t}\n\t\treturn out;\n\t}\n\n\tfunction expandReturnValues() {\n\t\treturn expand(arguments, true);\n\t}\n\n\tfunction pcall(what /*, args... */ ) {\n\t\ttry {\n\t\t\tvar result = expand([what.apply(this, Array.prototype.slice.call(arguments, 1))], true);\n\t\t\tresult.unshift(true);\n\t\t\treturn makeMultiReturn.apply(__lua, result);\n\t\t} catch ( e ) {\n\t\t\treturn makeMultiReturn(false, e);\n\t\t}\n\t}\n\n\tfunction isTable(a) { return a instanceof LuaTable; }\n\n\tfunction mark(o) {\n\t\tvar seen = [];\n\t\tfunction domark(o) {\n\t\t\tif ( o in seen ) return;\n\t\t\tseen.push(o);\n\t\t\tif ( typeof o == \"object\" ) for ( var idx in o ) domark(o[idx]);\n\t\t\telse if ( typeof o == \"function\" ) o.__luaType = \"function\";\n\t\t\t\n\t\t}\n\t\tdomark(o);\n\t}\n\n\treturn {\n\t\tadd: add,\n\t\tsub: sub,\n\t\tmul: mul,\n\t\tdiv: div,\n\t\tintdiv: intdiv,\n\t\tmod: mod,\n\t\tcall: call,\n\t\tlte: lte,\n\t\tlt: lt,\n\t\tne: ne,\n\t\tgt: gt,\n\t\tgte: gte,\n\t\teq: eq,\n\t\tindex: index,\n\t\tindexAssign: indexAssign,\n\t\tconcat: concat,\n\t\tmakeTable: makeTable,\n\t\tmakeFunction: makeFunction,\n\t\texpandReturnValues: expandReturnValues,\n\t\tmakeMultiReturn: makeMultiReturn,\n\t\tcount: count,\n\t\tand: and,\n\t\tor: or,\n\t\texpand: expand,\n\t\trest: rest,\n\t\tpcall: pcall,\n\t\ttype: type,\n\t\tpow: pow,\n\t\tisTable: isTable,\n\t\tmark: mark,\n\t\tforcomp: forcomp,\n\t\tmakeString: makeString,\n\t\toneValue: oneValue,\n\t\tlookupMetaTable: lookupMetaTable,\n\t\tisJSArray: isJSArray\n\t};\n\n})();\n\n\nthis.__lua = __lua;\n\nenv.string = {\n\tbyte: function byte(s,i,j) {\n\t\tvar chars = env.string.sub(s,i,j);\n\t\tvar out = [];\n\t\tfor ( var i = 0; i < chars.length; ++i ) out[i] = chars.charCodeAt(i);\n\t\treturn __lua.makeMultiReturn.apply(__lua, out);\n\t},\n\tchar: function char(/* arguments */) {\n\t\tvar out = \"\";\n\t\tfor ( var i = 0; i < arguments.length; ++i ) {\n\t\t\tout += String.fromCharCode(arguments[i]|0); \n\t\t}\n\t\treturn out;\n\n\t},\n\tdump: null,\n\tfind: null,\n\tgmatch: null,\n\tgsub: null,\n\tlen: function len(s) { return (\"\" + s).length; },\n\tlower: function lower(s) { return (\"\" + s).toLowerCase(); },\n\tmatch: null,\n\treverse: function(s) {\n\t\treturn (\"\" + s).split(\"\").reverse().join(\"\");\n\t},\n\tsub: function(s, i, j) {\n\t\tif ( i === undefined || i === null ) i = 1;\n\t\tif ( j === undefined || j === null ) j = s.length;\n\t\tif ( i < 0 ) i += (s.length+1);\n\t\tif ( j < 0 ) j += (s.length+1);\n\n\t\treturn __lua.makeString(s).substring(i-1,j);\n\n\t},\n\tupper: function lower(s) { return (\"\" + s).toUpperCase(); },\n\tformat: function format(format, etc) {\n\t\tvar arg = arguments;\n\t\tvar i = 1;\n\t\treturn format.replace(/%([0-9.]+)?([%sfdgi])/g, function (m, w, t) {\n\t\t\tvar r = null;\n\t\t\tif ( t == \"%\" ) return \"%\";\n\t\t\telse if ( t == \"s\") r = arg[i++];\n\t\t\telse if ( t == \"d\") r = parseInt(arg[i++]);\n\t\t\telse if ( t == \"i\") r = parseInt(arg[i++]);\n\t\t\telse if ( t == \"f\" ) r = arg[i++].toFixed(parseFloat(m[1]) || 6);\n\t\t\telse r = arg[i++]; \n\t\t\tr = \"\" + r;\n\t\t\tif ( parseInt(w) ) {\n\t\t\t\tvar extra = parseInt(w) - r.length;\n\t\t\t\tif ( extra > 0 ) r = new Array(extra).join(\" \") + r;\n\t\t\t}\n\t\t\treturn r;\n\t\t});\n\t}\n\n};\n\nenv.table = {\n\tconcat: null,\n\tinsert: null,\n\tpack: function(/* arguments */) {\n\t\tvar obj = {}\n\t\tfor ( var i = 0; i < arguments.length; ++i) {\n\t\t\tobj[(\"\" + (i + 1))] = arguments[i];\n\t\t}\n\t\treturn __lua.makeTable(obj);\n\t},\n\tremove: null,\n\tsort: function sort(table) { return table; },\n\tunpack: function(table,i,j) {\n\t\tif ( i === undefined || i === null ) i = 1;\n\t\tif ( j === undefined || j === null ) j = __lua.count(table);\n\n\t\tvar arr = [];\n\t\tif ( __lua.isTable(table) ) {\n\t\t\tfor ( var a = i; a <= j; ++a ) {\n\t\t\t\tarr.push(table.numeric[a]);\n\t\t\t}\n\t\t} else {\n\t\t\tfor ( var a = i; a <= j; ++a ) {\n\t\t\t\tarr.push(table[a]);\n\t\t\t}\t\t\t\n\t\t}\n\n\t\treturn __lua.makeMultiReturn.apply(__lua, arr);\n\n\n\t}\n\n};\n\nenv.unpack = env.table.unpack;\n\nenv.tonumber = function(n) {\n\treturn parseInt(n);\n};\n\nenv.tostring = function(n) {\n\treturn __lua.makeString(n);\n};\n\nenv.os = {\n\tclock: null,\n\tdate: null,\n\tdifftime: function difftime(t1,t2) { return t2 - t1; },\n\texecute: null,\n\texit: null,\n\ttime: function time(table) {\n\t\tif ( table == null ) return new Date().getTime();\n\t\tthrow \"Time given a table not implemented yet.\";\n\t}\n};\n\nenv.io = {\n\twrite: function() { env.print(arguments); }\n};\n\nenv.error = function error(s) { throw s; };\n\nenv.assert = function assert(what, msg, code) {\n\tif ( code === undefined ) {\n\t\tcode = msg;\n\t\tmsg = undefined;\n\t}\n\n\tif ( !!what ) return what;\n\n\tthrow(\"Assert Failed!! \" + code);\n};\n\nenv.type = function type(what) {\n\treturn __lua.type(what);\n};\n\n\nenv.pairs = function pairs(table) {\n\n\tvar mtf = __lua.lookupMetaTable(table, \"__pairs\");\n\tif ( mtf !== null ) return mtf(table);\n\n\tvar list = [];\n\tif ( __lua.isTable(table) ) {\n\t\tfor ( var i = 0; i < table.numeric.length; ++i ) list.push([i + 1, i, table.numeric]);\n\t\tfor ( var idx in table.hash ) list.push([idx, idx, table.hash]);\n\t} else if ( __lua.isJSArray(table) ) {\n\t\tfor ( var i = 0; i < table.length; ++i ) list.push([i + 1, i, table]);\n\t} else {\n\t\tvar keys = Object.keys(table);\n\t\tfor ( var idx in keys ) list.push([keys[idx], keys[idx], table]);\n\t}\n\n\treturn __lua.makeMultiReturn(function(handle, cur) {\n\t\tif ( handle.length < 1 ) return null;\n\t\tvar nfo = handle.shift();\n\t\tvar k = nfo[0];\n\t\tvar v = nfo[2][nfo[1]];\n\t\treturn __lua.makeMultiReturn(k,v);\n\t}, list, null);\n};\n\nenv.ipairs = function ipairs(table) {\n\n\tvar mtf = __lua.lookupMetaTable(table, \"__ipairs\");\n\tif ( mtf !== null ) return mtf(table);\n\n\treturn __lua.makeMultiReturn(function ipairsitr(table, cur) {\n\t\tcur = cur + 1;\n\t\tif ( __lua.isJSArray(table) ) {\n\t\t\tif ( table.length < cur ) return null;\n\t\t\treturn __lua.makeMultiReturn(cur, table[cur-1]);\n\t\t} else if ( __lua.isTable(table) ) {\n\t\t\tif ( table.numeric[cur-1] === null || table.numeric[cur-1] === undefined ) return null;\n\t\t\treturn __lua.makeMultiReturn(cur, table.numeric[cur-1]);\n\t\t} else {\n\t\t\treturn table[cur-1];\n\t\t}\n\t}, table, 0);\n};\n\nenv.next = function next(table, cur) {\n\tif ( __lua.isTable(table) ) {\n\t\tvar list = [];\n\t\tfor ( var i = 0; i < table.numeric.length; ++i ) list.push([i + 1, table.numeric[i]]);\n\t\tfor ( var tidx in table.hash ) list.push([tidx, table.hash[tidx]]);\n\t\tvar trigger = false;\n\t\tfor ( var i = 0; i < list.length; ++i ) {\n\t\t\tvar itm = list[i];\n\t\t\tif ( cur === null || cur === undefined || trigger ) {\n\t\t\t\tif ( itm[1] !== undefined && itm[1] !== null )\n\t\t\t\t\treturn __lua.makeMultiReturn(itm[0], itm[1]);\n\t\t\t}\n\t\t\tif ( cur === itm[0] ) trigger = true;\n\t\t}\n\n\t\treturn null;\n\t} else {\n\t\tvar listk = Object.keys(table);\n\t\tvar trigger = false;\n\t\tfor ( var i = 0; i < listk.length; ++i ) {\n\t\t\tvar idx = listk[i];\n\t\t\tvar sidx = idx;\n\t\t\tif ( typeof sidx == \"number\" ) sidx = sidx = 1;\n\t\t\tif ( cur === null || cur === undefined || trigger ) return __lua.makeMultiReturn(idx, table[sidx]);\n\t\t\tif ( cur === idx ) trigger = true;\n\t\t}\n\t\treturn null;\n\t}\n};\n\nenv.print = function print() { console.log.apply(console, arguments); };\nenv.pcall = this.__lua.pcall;\n\nenv.rawequals = function rawequals(a,b) { return a == b; };\nenv.rawget = function rawget(table, prop) { \n\tif ( table instanceof LuaTable ) {\n\t\tif ( typeof prop == \"number\" ) return table.numeric[prop - 1];\n\t\telse return table.hash[prop];\n\t}\n\treturn table[prop]; \n};\nenv.rawset = function rawset(table, prop, val) { \n\tif ( table instanceof LuaTable ) {\n\t\tif ( typeof prop == \"number\" ) return table.numeric[prop - 1] = val;\n\t\telse return table.hash[prop] = val;\n\t}\n\treturn table[prop] = val; \n};\n\nenv.something = function something(table) {\n\tvar array = [];\n\tvar idx = 1;\n\twhile ( table[idx] !== undefined ) {\n\t\tarray.push(table[idx]);\n\t\t++idx;\n\t}\n\treturn __lua.makeMultiReturn.apply(__lua, array);\n};\nenv.math = Math;\n\nenv.setmetatable = function setmetatable(target, meta) {\n\n\tObject.defineProperty(target, \"__metatable\", {value: meta, enumerable: false, configurable: true });\n\treturn target;\n};\n\nenv.getmetatable = function getmetatable(taget, meta) {\n\treturn taget.__metatable;\n};\n\nvar reduce = function reduce(arr, op) {\n\tif ( arr.length < 1 ) return undefined;\n\tvar val = arr[0];\n\tfor ( var i = 1; i < arr.length; ++i ) {\n\t\tval = op(val, arr[i]);\n\t}\n\treturn val;\n};\n\nenv.bit32 = {\n\tband: function band() { return reduce(arguments, function(a,b) { return a & b; }); },\n\tbor: function bor() { return reduce(arguments, function(a,b) { return a | b; }); },\n\tbxor: function bxor() { return reduce(arguments, function(a,b) { return a | b; }); },\n\n\trshift: function rshift(b, disp) { return b >> disp; }\n};\n\nenv.require = function require(what) {\n\tif ( what == \"bit\" ) return env.bit32;\n\tif ( what == \"bit32\" ) return env.bit32;\n\tthrow \"Module \" + waht + \" not found\";\n};\n\n__lua.mark(env);\n__lua.env = env;\nfor ( var idx in env ) this[idx] = env[idx];\n\n\n},{}],4:[function(require,module,exports){\nwindow.aetherLua2JS = require('lua2js');\n\n},{\"lua2js\":1}]},{},[4]);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///782\n");

/***/ })

});